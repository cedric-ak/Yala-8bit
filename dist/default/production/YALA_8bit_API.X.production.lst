

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 24 18:34:48 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  008F                     	;# 
   525  0090                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  0105                     	;# 
   544  0107                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0185                     	;# 
   553  0187                     	;# 
   554  0188                     	;# 
   555  0189                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0088                     	;# 
   598  0089                     	;# 
   599  008C                     	;# 
   600  008D                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0093                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  009F                     	;# 
   621  0105                     	;# 
   622  0107                     	;# 
   623  0108                     	;# 
   624  0109                     	;# 
   625  010C                     	;# 
   626  010C                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0185                     	;# 
   631  0187                     	;# 
   632  0188                     	;# 
   633  0189                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0000                     	;# 
   637  0001                     	;# 
   638  0002                     	;# 
   639  0003                     	;# 
   640  0004                     	;# 
   641  0005                     	;# 
   642  0006                     	;# 
   643  0007                     	;# 
   644  0008                     	;# 
   645  0009                     	;# 
   646  000A                     	;# 
   647  000B                     	;# 
   648  000C                     	;# 
   649  000D                     	;# 
   650  000E                     	;# 
   651  000E                     	;# 
   652  000F                     	;# 
   653  0010                     	;# 
   654  0011                     	;# 
   655  0012                     	;# 
   656  0013                     	;# 
   657  0014                     	;# 
   658  0015                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0017                     	;# 
   662  0018                     	;# 
   663  0019                     	;# 
   664  001A                     	;# 
   665  001B                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  001D                     	;# 
   669  001E                     	;# 
   670  001F                     	;# 
   671  0081                     	;# 
   672  0085                     	;# 
   673  0086                     	;# 
   674  0087                     	;# 
   675  0088                     	;# 
   676  0089                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  008F                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0092                     	;# 
   684  0093                     	;# 
   685  0093                     	;# 
   686  0093                     	;# 
   687  0094                     	;# 
   688  0095                     	;# 
   689  0096                     	;# 
   690  0097                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009C                     	;# 
   696  009D                     	;# 
   697  009E                     	;# 
   698  009F                     	;# 
   699  0105                     	;# 
   700  0107                     	;# 
   701  0108                     	;# 
   702  0109                     	;# 
   703  010C                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0185                     	;# 
   709  0187                     	;# 
   710  0188                     	;# 
   711  0189                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  0000                     	;# 
   715  0001                     	;# 
   716  0002                     	;# 
   717  0003                     	;# 
   718  0004                     	;# 
   719  0005                     	;# 
   720  0006                     	;# 
   721  0007                     	;# 
   722  0008                     	;# 
   723  0009                     	;# 
   724  000A                     	;# 
   725  000B                     	;# 
   726  000C                     	;# 
   727  000D                     	;# 
   728  000E                     	;# 
   729  000E                     	;# 
   730  000F                     	;# 
   731  0010                     	;# 
   732  0011                     	;# 
   733  0012                     	;# 
   734  0013                     	;# 
   735  0014                     	;# 
   736  0015                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0017                     	;# 
   740  0018                     	;# 
   741  0019                     	;# 
   742  001A                     	;# 
   743  001B                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  001D                     	;# 
   747  001E                     	;# 
   748  001F                     	;# 
   749  0081                     	;# 
   750  0085                     	;# 
   751  0086                     	;# 
   752  0087                     	;# 
   753  0088                     	;# 
   754  0089                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  008E                     	;# 
   758  008F                     	;# 
   759  0090                     	;# 
   760  0091                     	;# 
   761  0092                     	;# 
   762  0093                     	;# 
   763  0093                     	;# 
   764  0093                     	;# 
   765  0094                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009C                     	;# 
   774  009D                     	;# 
   775  009E                     	;# 
   776  009F                     	;# 
   777  0105                     	;# 
   778  0107                     	;# 
   779  0108                     	;# 
   780  0109                     	;# 
   781  010C                     	;# 
   782  010C                     	;# 
   783  010D                     	;# 
   784  010E                     	;# 
   785  010F                     	;# 
   786  0185                     	;# 
   787  0187                     	;# 
   788  0188                     	;# 
   789  0189                     	;# 
   790  018C                     	;# 
   791  018D                     	;# 
   792  0000                     	;# 
   793  0001                     	;# 
   794  0002                     	;# 
   795  0003                     	;# 
   796  0004                     	;# 
   797  0005                     	;# 
   798  0006                     	;# 
   799  0007                     	;# 
   800  0008                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  000E                     	;# 
   808  000F                     	;# 
   809  0010                     	;# 
   810  0011                     	;# 
   811  0012                     	;# 
   812  0013                     	;# 
   813  0014                     	;# 
   814  0015                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001D                     	;# 
   825  001E                     	;# 
   826  001F                     	;# 
   827  0081                     	;# 
   828  0085                     	;# 
   829  0086                     	;# 
   830  0087                     	;# 
   831  0088                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0094                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  0105                     	;# 
   856  0107                     	;# 
   857  0108                     	;# 
   858  0109                     	;# 
   859  010C                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0185                     	;# 
   865  0187                     	;# 
   866  0188                     	;# 
   867  0189                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0088                     	;# 
   910  0089                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  008E                     	;# 
   914  008F                     	;# 
   915  0090                     	;# 
   916  0091                     	;# 
   917  0092                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0093                     	;# 
   921  0094                     	;# 
   922  0095                     	;# 
   923  0096                     	;# 
   924  0097                     	;# 
   925  0098                     	;# 
   926  0099                     	;# 
   927  009A                     	;# 
   928  009B                     	;# 
   929  009C                     	;# 
   930  009D                     	;# 
   931  009E                     	;# 
   932  009F                     	;# 
   933  0105                     	;# 
   934  0107                     	;# 
   935  0108                     	;# 
   936  0109                     	;# 
   937  010C                     	;# 
   938  010C                     	;# 
   939  010D                     	;# 
   940  010E                     	;# 
   941  010F                     	;# 
   942  0185                     	;# 
   943  0187                     	;# 
   944  0188                     	;# 
   945  0189                     	;# 
   946  018C                     	;# 
   947  018D                     	;# 
   948  0000                     	;# 
   949  0001                     	;# 
   950  0002                     	;# 
   951  0003                     	;# 
   952  0004                     	;# 
   953  0005                     	;# 
   954  0006                     	;# 
   955  0007                     	;# 
   956  0008                     	;# 
   957  0009                     	;# 
   958  000A                     	;# 
   959  000B                     	;# 
   960  000C                     	;# 
   961  000D                     	;# 
   962  000E                     	;# 
   963  000E                     	;# 
   964  000F                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0014                     	;# 
   970  0015                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0017                     	;# 
   974  0018                     	;# 
   975  0019                     	;# 
   976  001A                     	;# 
   977  001B                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  001D                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  0081                     	;# 
   984  0085                     	;# 
   985  0086                     	;# 
   986  0087                     	;# 
   987  0088                     	;# 
   988  0089                     	;# 
   989  008C                     	;# 
   990  008D                     	;# 
   991  008E                     	;# 
   992  008F                     	;# 
   993  0090                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0093                     	;# 
   997  0093                     	;# 
   998  0093                     	;# 
   999  0094                     	;# 
  1000  0095                     	;# 
  1001  0096                     	;# 
  1002  0097                     	;# 
  1003  0098                     	;# 
  1004  0099                     	;# 
  1005  009A                     	;# 
  1006  009B                     	;# 
  1007  009C                     	;# 
  1008  009D                     	;# 
  1009  009E                     	;# 
  1010  009F                     	;# 
  1011  0105                     	;# 
  1012  0107                     	;# 
  1013  0108                     	;# 
  1014  0109                     	;# 
  1015  010C                     	;# 
  1016  010C                     	;# 
  1017  010D                     	;# 
  1018  010E                     	;# 
  1019  010F                     	;# 
  1020  0185                     	;# 
  1021  0187                     	;# 
  1022  0188                     	;# 
  1023  0189                     	;# 
  1024  018C                     	;# 
  1025  018D                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  000E                     	;# 
  1042  000F                     	;# 
  1043  0010                     	;# 
  1044  0011                     	;# 
  1045  0012                     	;# 
  1046  0013                     	;# 
  1047  0014                     	;# 
  1048  0015                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0017                     	;# 
  1052  0018                     	;# 
  1053  0019                     	;# 
  1054  001A                     	;# 
  1055  001B                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001D                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  0081                     	;# 
  1062  0085                     	;# 
  1063  0086                     	;# 
  1064  0087                     	;# 
  1065  0088                     	;# 
  1066  0089                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  008E                     	;# 
  1070  008F                     	;# 
  1071  0090                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0093                     	;# 
  1075  0093                     	;# 
  1076  0093                     	;# 
  1077  0094                     	;# 
  1078  0095                     	;# 
  1079  0096                     	;# 
  1080  0097                     	;# 
  1081  0098                     	;# 
  1082  0099                     	;# 
  1083  009A                     	;# 
  1084  009B                     	;# 
  1085  009C                     	;# 
  1086  009D                     	;# 
  1087  009E                     	;# 
  1088  009F                     	;# 
  1089  0105                     	;# 
  1090  0107                     	;# 
  1091  0108                     	;# 
  1092  0109                     	;# 
  1093  010C                     	;# 
  1094  010C                     	;# 
  1095  010D                     	;# 
  1096  010E                     	;# 
  1097  010F                     	;# 
  1098  0185                     	;# 
  1099  0187                     	;# 
  1100  0188                     	;# 
  1101  0189                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000D                     	;# 
  1118  000E                     	;# 
  1119  000E                     	;# 
  1120  000F                     	;# 
  1121  0010                     	;# 
  1122  0011                     	;# 
  1123  0012                     	;# 
  1124  0013                     	;# 
  1125  0014                     	;# 
  1126  0015                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  001A                     	;# 
  1133  001B                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001E                     	;# 
  1138  001F                     	;# 
  1139  0081                     	;# 
  1140  0085                     	;# 
  1141  0086                     	;# 
  1142  0087                     	;# 
  1143  0088                     	;# 
  1144  0089                     	;# 
  1145  008C                     	;# 
  1146  008D                     	;# 
  1147  008E                     	;# 
  1148  008F                     	;# 
  1149  0090                     	;# 
  1150  0091                     	;# 
  1151  0092                     	;# 
  1152  0093                     	;# 
  1153  0093                     	;# 
  1154  0093                     	;# 
  1155  0094                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  009F                     	;# 
  1167  0105                     	;# 
  1168  0107                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010E                     	;# 
  1175  010F                     	;# 
  1176  0185                     	;# 
  1177  0187                     	;# 
  1178  0188                     	;# 
  1179  0189                     	;# 
  1180  018C                     	;# 
  1181  018D                     	;# 
  1182                           
  1183                           	psect	idataBANK1
  1184  0CFA                     __pidataBANK1:	
  1185                           
  1186                           ;initializer for _student_Number
  1187  0CFA  3432               	retlw	50
  1188  0CFB  3430               	retlw	48
  1189  0CFC  3431               	retlw	49
  1190  0CFD  3431               	retlw	49
  1191  0CFE  3434               	retlw	52
  1192  0CFF  3478               	retlw	120
  1193  0D00  3478               	retlw	120
  1194  0D01  3478               	retlw	120
  1195  0D02  3478               	retlw	120
  1196  0D03  3400               	retlw	0
  1197                           
  1198                           ;initializer for _segment_Array
  1199  0D04  343F               	retlw	63
  1200  0D05  3406               	retlw	6
  1201  0D06  345B               	retlw	91
  1202  0D07  344F               	retlw	79
  1203  0D08  3466               	retlw	102
  1204  0D09  346D               	retlw	109
  1205  0D0A  347D               	retlw	125
  1206  0D0B  3407               	retlw	7
  1207  0D0C  347F               	retlw	127
  1208  0D0D  346F               	retlw	111
  1209                           
  1210                           ;initializer for _Admin_UserName
  1211  0D0E  3459               	retlw	89
  1212  0D0F  3461               	retlw	97
  1213  0D10  346C               	retlw	108
  1214  0D11  3461               	retlw	97
  1215  0D12  3454               	retlw	84
  1216  0D13  3465               	retlw	101
  1217  0D14  3463               	retlw	99
  1218  0D15  3468               	retlw	104
  1219  0D16  3400               	retlw	0
  1220                           
  1221                           ;initializer for _student_Name
  1222  0D17  3459               	retlw	89
  1223  0D18  3461               	retlw	97
  1224  0D19  346C               	retlw	108
  1225  0D1A  3461               	retlw	97
  1226  0D1B  3454               	retlw	84
  1227  0D1C  3465               	retlw	101
  1228  0D1D  3463               	retlw	99
  1229  0D1E  3468               	retlw	104
  1230  0D1F  3400               	retlw	0
  1231                           
  1232                           ;initializer for _Admin_PassWord
  1233  0D20  3430               	retlw	48
  1234  0D21  3431               	retlw	49
  1235  0D22  3432               	retlw	50
  1236  0D23  3433               	retlw	51
  1237  0D24  3434               	retlw	52
  1238  0D25  3435               	retlw	53
  1239  0D26  3400               	retlw	0
  1240                           
  1241                           	psect	strings
  1242  0800                     __pstrings:	
  1243  0800                     stringtab:	
  1244  0800                     __stringtab:	
  1245                           
  1246                           ;	String table - string pointers are 1 byte each
  1247  0800  1BFF               	btfsc	btemp+1,7
  1248  0801  280A               	ljmp	stringcode
  1249  0802  1383               	bcf	3,7
  1250  0803  187F               	btfsc	btemp+1,0
  1251  0804  1783               	bsf	3,7
  1252  0805  0800               	movf	0,w
  1253  0806  0A84               	incf	4,f
  1254  0807  1903               	skipnz
  1255  0808  0AFF               	incf	btemp+1,f
  1256  0809  0008               	return
  1257  080A                     stringcode:	
  1258  080A                     stringdir:	
  1259  080A  3008               	movlw	high stringdir
  1260  080B  008A               	movwf	10
  1261  080C  0804               	movf	4,w
  1262  080D  0A84               	incf	4,f
  1263  080E  0782               	addwf	2,f
  1264  080F                     __stringbase:	
  1265  080F  3400               	retlw	0
  1266  0810                     __end_of__stringtab:	
  1267  0810                     _dpowers:	
  1268  0810  3401               	retlw	1
  1269  0811  3400               	retlw	0
  1270  0812  340A               	retlw	10
  1271  0813  3400               	retlw	0
  1272  0814  3464               	retlw	100
  1273  0815  3400               	retlw	0
  1274  0816  34E8               	retlw	232
  1275  0817  3403               	retlw	3
  1276  0818  3410               	retlw	16
  1277  0819  3427               	retlw	39
  1278  081A                     __end_of_dpowers:	
  1279  0001                     _TMR0	set	1
  1280  001A                     _RCREG	set	26
  1281  0019                     _TXREG	set	25
  1282  0018                     _RCSTAbits	set	24
  1283  0014                     _SSPCONbits	set	20
  1284  0005                     _PORTAbits	set	5
  1285  0012                     _T2CONbits	set	18
  1286  0015                     _CCPR1L	set	21
  1287  0017                     _CCP1CONbits	set	23
  1288  000B                     _INTCONbits	set	11
  1289  001E                     _ADRESH	set	30
  1290  001F                     _ADCON0bits	set	31
  1291  0009                     _PORTE	set	9
  1292  0008                     _PORTD	set	8
  1293  0007                     _PORTC	set	7
  1294  0006                     _PORTB	set	6
  1295  0005                     _PORTA	set	5
  1296  0006                     _PORTBbits	set	6
  1297  000C                     _PIR1bits	set	12
  1298  0013                     _SSPBUF	set	19
  1299  00F9                     _GO_DONE	set	249
  1300  0081                     _OPTION_REGbits	set	129
  1301  0099                     _SPBRG	set	153
  1302  0092                     _PR2	set	146
  1303  008C                     _PIE1bits	set	140
  1304  009E                     _ADRESL	set	158
  1305  009F                     _ADCON1bits	set	159
  1306  0090                     _OSCTUNE	set	144
  1307  008F                     _OSCCON	set	143
  1308  0085                     _TRISAbits	set	133
  1309  0087                     _TRISCbits	set	135
  1310  0086                     _TRISBbits	set	134
  1311  0086                     _TRISB	set	134
  1312  0088                     _TRISD	set	136
  1313  0098                     _TXSTAbits	set	152
  1314  010C                     _EEDATA	set	268
  1315  010D                     _EEADR	set	269
  1316  018D                     _EECON2	set	397
  1317  018C                     _EECON1bits	set	396
  1318  0187                     _BAUDCTLbits	set	391
  1319  0188                     _ANSELbits	set	392
  1320  0189                     _ANSELH	set	393
  1321  081A                     STR_1:	
  1322  081A  3454               	retlw	84	;'T'
  1323  081B  3465               	retlw	101	;'e'
  1324  081C  346D               	retlw	109	;'m'
  1325  081D  3470               	retlw	112	;'p'
  1326  081E  3465               	retlw	101	;'e'
  1327  081F  3472               	retlw	114	;'r'
  1328  0820  3461               	retlw	97	;'a'
  1329  0821  3474               	retlw	116	;'t'
  1330  0822  3475               	retlw	117	;'u'
  1331  0823  3472               	retlw	114	;'r'
  1332  0824  3465               	retlw	101	;'e'
  1333  0825  343A               	retlw	58	;':'
  1334  0826  3400               	retlw	0
  1335  0827                     STR_2:	
  1336  0827  3425               	retlw	37	;'%'
  1337  0828  3433               	retlw	51	;'3'
  1338  0829  3464               	retlw	100	;'d'
  1339  082A  3400               	retlw	0
  1340                           
  1341                           ; #config settings
  1342  0000                     
  1343                           	psect	cinit
  1344  0015                     start_initialization:	
  1345  0015                     __initialization:	
  1346                           
  1347                           ; Initialize objects allocated to BANK1
  1348  0015  1383               	bcf	3,7	;select IRP bank0
  1349  0016  30CD               	movlw	low (__pdataBANK1+45)
  1350  0017  00FD               	movwf	btemp+-1
  1351  0018  300C               	movlw	high __pidataBANK1
  1352  0019  00FE               	movwf	btemp
  1353  001A  30FA               	movlw	low __pidataBANK1
  1354  001B  00FF               	movwf	btemp+1
  1355  001C  30A0               	movlw	low __pdataBANK1
  1356  001D  0084               	movwf	4
  1357  001E  120A  158A  23FE   	fcall	init_ram0
  1358                           
  1359                           ; Clear objects allocated to BANK1
  1360  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1361  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1362  0023  01DC               	clrf	__pbssBANK1& (0+127)
  1363  0024  01DD               	clrf	(__pbssBANK1+1)& (0+127)
  1364  0025  01DE               	clrf	(__pbssBANK1+2)& (0+127)
  1365  0026  01DF               	clrf	(__pbssBANK1+3)& (0+127)
  1366  0027  01E0               	clrf	(__pbssBANK1+4)& (0+127)
  1367  0028  01E1               	clrf	(__pbssBANK1+5)& (0+127)
  1368  0029  01E2               	clrf	(__pbssBANK1+6)& (0+127)
  1369  002A  01E3               	clrf	(__pbssBANK1+7)& (0+127)
  1370                           
  1371                           ; Clear objects allocated to BANK0
  1372  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  002D  01EF               	clrf	__pbssBANK0& (0+127)
  1375                           
  1376                           ; Clear objects allocated to COMMON
  1377  002E  01F7               	clrf	__pbssCOMMON& (0+127)
  1378  002F  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1379  0030  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1380  0031                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0031                     __end_of__initialization:	
  1384  0031  0183               	clrf	3
  1385  0032  120A  158A  2CCF   	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0077                     __pbssCOMMON:	
  1389  0077                     _temperature:	
  1390  0077                     	ds	1
  1391  0078                     _data_TransferComplete:	
  1392  0078                     	ds	1
  1393  0079                     _g_state:	
  1394  0079                     	ds	1
  1395                           
  1396                           	psect	bssBANK0
  1397  006F                     __pbssBANK0:	
  1398  006F                     _dataBuffer:	
  1399  006F                     	ds	1
  1400                           
  1401                           	psect	bssBANK1
  1402  00DC                     __pbssBANK1:	
  1403  00DC                     _rawData:	
  1404  00DC                     	ds	2
  1405  00DE                     _segment_Variable:	
  1406  00DE                     	ds	2
  1407  00E0                     _adc:	
  1408  00E0                     	ds	2
  1409  00E2                     _sTemperature:	
  1410  00E2                     	ds	2
  1411                           
  1412                           	psect	dataBANK1
  1413  00A0                     __pdataBANK1:	
  1414  00A0                     _student_Number:	
  1415  00A0                     	ds	10
  1416  00AA                     _segment_Array:	
  1417  00AA                     	ds	10
  1418  00B4                     _Admin_UserName:	
  1419  00B4                     	ds	9
  1420  00BD                     _student_Name:	
  1421  00BD                     	ds	9
  1422  00C6                     _Admin_PassWord:	
  1423  00C6                     	ds	7
  1424                           
  1425                           	psect	inittext
  1426  0BFA                     init_fetch0:	
  1427                           ;	Called with low address in FSR and high address in W
  1428                           
  1429  0BFA  087E               	movf	126,w
  1430  0BFB  008A               	movwf	10
  1431  0BFC  087F               	movf	127,w
  1432  0BFD  0082               	movwf	2
  1433  0BFE                     init_ram0:	
  1434                           ;Called with:
  1435                           ;	high address of idata address in btemp 
  1436                           ;	low address of idata address in btemp+1 
  1437                           ;	low address of data in FSR
  1438                           ;	high address + 1 of data in btemp-1
  1439                           
  1440  0BFE  23FA  120A  158A   	fcall	init_fetch0
  1441  0C01  0080               	movwf	0
  1442  0C02  0A84               	incf	4,f
  1443  0C03  0804               	movf	4,w
  1444  0C04  067D               	xorwf	125,w
  1445  0C05  1903               	btfsc	3,2
  1446  0C06  3400               	retlw	0
  1447  0C07  0AFF               	incf	127,f
  1448  0C08  1903               	btfsc	3,2
  1449  0C09  0AFE               	incf	126,f
  1450  0C0A  2BFE               	goto	init_ram0
  1451                           
  1452                           	psect	cstackBANK1
  1453  00CD                     __pcstackBANK1:	
  1454  00CD                     ??_sprintf:	
  1455                           
  1456                           ; 1 bytes @ 0x0
  1457  00CD                     	ds	3
  1458  00D0                     sprintf@ap:	
  1459                           
  1460                           ; 1 bytes @ 0x3
  1461  00D0                     	ds	1
  1462  00D1                     sprintf@prec:	
  1463                           
  1464                           ; 1 bytes @ 0x4
  1465  00D1                     	ds	1
  1466  00D2                     sprintf@flag:	
  1467                           
  1468                           ; 1 bytes @ 0x5
  1469  00D2                     	ds	1
  1470  00D3                     sprintf@val:	
  1471                           
  1472                           ; 2 bytes @ 0x6
  1473  00D3                     	ds	2
  1474  00D5                     sprintf@sp:	
  1475                           
  1476                           ; 1 bytes @ 0x8
  1477  00D5                     	ds	1
  1478  00D6                     sprintf@width:	
  1479                           
  1480                           ; 2 bytes @ 0x9
  1481  00D6                     	ds	2
  1482  00D8                     sprintf@c:	
  1483                           
  1484                           ; 1 bytes @ 0xB
  1485  00D8                     	ds	1
  1486  00D9                     ??_temp_Display:	
  1487                           
  1488                           ; 1 bytes @ 0xC
  1489  00D9                     	ds	3
  1490                           
  1491                           	psect	cstackCOMMON
  1492  0070                     __pcstackCOMMON:	
  1493  0070                     ?_isdigit:	
  1494  0070                     ?_system_Initialize:	
  1495                           ; 1 bit 
  1496                           
  1497  0070                     ?_temp_Display:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_Oscillator_Init:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_Interrupt_Init:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_Lcd_Init:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_ADC_Init:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_TMR0_Init:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_SPI_Init:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_ASS_1:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_Ass_2:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_pinManager:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_Lcd_Port:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_Lcd_Cmd:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_Lcd_Write_Char:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_temp_Measurement:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_ISR:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ??_ISR:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_main:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548                           
  1549                           ; 2 bytes @ 0x0
  1550  0070                     	ds	4
  1551  0074                     ??_Oscillator_Init:	
  1552  0074                     ??_Interrupt_Init:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0074                     ??_ADC_Init:	
  1556                           ; 1 bytes @ 0x4
  1557                           
  1558  0074                     ??_TMR0_Init:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561  0074                     ??_SPI_Init:	
  1562                           ; 1 bytes @ 0x4
  1563                           
  1564  0074                     ??_isdigit:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567  0074                     ??___ftpack:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570  0074                     ??_Ass_2:	
  1571                           ; 1 bytes @ 0x4
  1572                           
  1573  0074                     ??_pinManager:	
  1574                           ; 1 bytes @ 0x4
  1575                           
  1576  0074                     ??_Lcd_Port:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579  0074                     ?_UART_Write_char:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0074                     ??___wmul:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585  0074                     ??___lmul:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0074                     ??___lwdiv:	
  1589                           ; 1 bytes @ 0x4
  1590                           
  1591  0074                     ?_UART_Read:	
  1592                           ; 1 bytes @ 0x4
  1593                           
  1594  0074                     Lcd_Port@a:	
  1595                           ; 2 bytes @ 0x4
  1596                           
  1597  0074                     _isdigit$1444:	
  1598                           ; 1 bytes @ 0x4
  1599                           
  1600  0074                     UART_Write_char@iData:	
  1601                           ; 1 bytes @ 0x4
  1602                           
  1603  0074                     ___wmul@product:	
  1604                           ; 2 bytes @ 0x4
  1605                           
  1606                           
  1607                           ; 2 bytes @ 0x4
  1608  0074                     	ds	1
  1609  0075                     ??_Lcd_Cmd:	
  1610  0075                     ??_Lcd_Write_Char:	
  1611                           ; 1 bytes @ 0x5
  1612                           
  1613  0075                     ??___lldiv:	
  1614                           ; 1 bytes @ 0x5
  1615                           
  1616  0075                     ??___lwmod:	
  1617                           ; 1 bytes @ 0x5
  1618                           
  1619  0075                     isdigit@c:	
  1620                           ; 1 bytes @ 0x5
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x5
  1624  0075                     	ds	1
  1625  0076                     ??_UART_Write_char:	
  1626  0076                     ___lwmod@counter:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x6
  1631  0076                     	ds	1
  1632  0077                     ??_system_Initialize:	
  1633  0077                     ??_main:	
  1634                           ; 1 bytes @ 0x7
  1635                           
  1636                           
  1637                           	psect	cstackBANK0
  1638  0020                     __pcstackBANK0:	
  1639                           ; 1 bytes @ 0x7
  1640                           
  1641  0020                     ??_UART_Read:	
  1642  0020                     ?_UART_Write_String:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0020                     ?___wmul:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     ?___lwdiv:	
  1649                           ; 2 bytes @ 0x0
  1650                           
  1651  0020                     ?___ftpack:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654  0020                     ?___lmul:	
  1655                           ; 3 bytes @ 0x0
  1656                           
  1657  0020                     Lcd_Cmd@a:	
  1658                           ; 4 bytes @ 0x0
  1659                           
  1660  0020                     Lcd_Write_Char@temp:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     UART_Write_String@cText:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     ___wmul@multiplier:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     ___lwdiv@divisor:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0020                     ___ftpack@arg:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     ___lmul@multiplier:	
  1676                           ; 3 bytes @ 0x0
  1677                           
  1678                           
  1679                           ; 4 bytes @ 0x0
  1680  0020                     	ds	1
  1681  0021                     ??_Lcd_Init:	
  1682  0021                     ?_Lcd_Set_Cursor:	
  1683                           ; 1 bytes @ 0x1
  1684                           
  1685  0021                     Lcd_Set_Cursor@column:	
  1686                           ; 1 bytes @ 0x1
  1687                           
  1688  0021                     Lcd_Write_Char@y:	
  1689                           ; 1 bytes @ 0x1
  1690                           
  1691                           
  1692                           ; 1 bytes @ 0x1
  1693  0021                     	ds	1
  1694  0022                     ??_UART_Write_String:	
  1695  0022                     ??_Lcd_Set_Cursor:	
  1696                           ; 1 bytes @ 0x2
  1697                           
  1698  0022                     Lcd_Write_Char@a:	
  1699                           ; 1 bytes @ 0x2
  1700                           
  1701  0022                     ___wmul@multiplicand:	
  1702                           ; 1 bytes @ 0x2
  1703                           
  1704  0022                     ___lwdiv@dividend:	
  1705                           ; 2 bytes @ 0x2
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x2
  1709  0022                     	ds	1
  1710  0023                     ?_Lcd_write:	
  1711  0023                     ___ftpack@exp:	
  1712                           ; 1 bytes @ 0x3
  1713                           
  1714  0023                     Lcd_write@string:	
  1715                           ; 1 bytes @ 0x3
  1716                           
  1717                           
  1718                           ; 2 bytes @ 0x3
  1719  0023                     	ds	1
  1720  0024                     Lcd_Set_Cursor@raw:	
  1721  0024                     ___ftpack@sign:	
  1722                           ; 1 bytes @ 0x4
  1723                           
  1724  0024                     ___lwdiv@counter:	
  1725                           ; 1 bytes @ 0x4
  1726                           
  1727  0024                     ___lmul@multiplicand:	
  1728                           ; 1 bytes @ 0x4
  1729                           
  1730                           
  1731                           ; 4 bytes @ 0x4
  1732  0024                     	ds	1
  1733  0025                     ??_Lcd_write:	
  1734  0025                     ?___lwtoft:	
  1735                           ; 1 bytes @ 0x5
  1736                           
  1737  0025                     Lcd_Set_Cursor@z:	
  1738                           ; 3 bytes @ 0x5
  1739                           
  1740  0025                     ___lwdiv@quotient:	
  1741                           ; 1 bytes @ 0x5
  1742                           
  1743  0025                     ___lwtoft@c:	
  1744                           ; 2 bytes @ 0x5
  1745                           
  1746                           
  1747                           ; 2 bytes @ 0x5
  1748  0025                     	ds	1
  1749  0026                     Lcd_Set_Cursor@y:	
  1750  0026                     UART_Write_String@iSize:	
  1751                           ; 1 bytes @ 0x6
  1752                           
  1753                           
  1754                           ; 2 bytes @ 0x6
  1755  0026                     	ds	1
  1756  0027                     ?___lwmod:	
  1757  0027                     Lcd_Set_Cursor@temp:	
  1758                           ; 2 bytes @ 0x7
  1759                           
  1760  0027                     ___lwmod@divisor:	
  1761                           ; 1 bytes @ 0x7
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0x7
  1765  0027                     	ds	1
  1766  0028                     ??_ASS_1:	
  1767  0028                     ??___lwtoft:	
  1768                           ; 1 bytes @ 0x8
  1769                           
  1770  0028                     Lcd_write@i:	
  1771                           ; 1 bytes @ 0x8
  1772                           
  1773  0028                     ___lmul@product:	
  1774                           ; 2 bytes @ 0x8
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x8
  1778  0028                     	ds	1
  1779  0029                     ?___ftmul:	
  1780  0029                     ___lwmod@dividend:	
  1781                           ; 3 bytes @ 0x9
  1782                           
  1783  0029                     ___ftmul@f1:	
  1784                           ; 2 bytes @ 0x9
  1785                           
  1786                           
  1787                           ; 3 bytes @ 0x9
  1788  0029                     	ds	3
  1789  002C                     ?___lldiv:	
  1790  002C                     ___ftmul@f2:	
  1791                           ; 4 bytes @ 0xC
  1792                           
  1793  002C                     ___lldiv@divisor:	
  1794                           ; 3 bytes @ 0xC
  1795                           
  1796                           
  1797                           ; 4 bytes @ 0xC
  1798  002C                     	ds	2
  1799  002E                     ASS_1@bSize:	
  1800                           
  1801                           ; 2 bytes @ 0xE
  1802  002E                     	ds	1
  1803  002F                     ??___ftmul:	
  1804                           
  1805                           ; 1 bytes @ 0xF
  1806  002F                     	ds	1
  1807  0030                     ASS_1@bSize_143:	
  1808  0030                     ___lldiv@dividend:	
  1809                           ; 2 bytes @ 0x10
  1810                           
  1811                           
  1812                           ; 4 bytes @ 0x10
  1813  0030                     	ds	3
  1814  0033                     ___ftmul@exp:	
  1815                           
  1816                           ; 1 bytes @ 0x13
  1817  0033                     	ds	1
  1818  0034                     ___ftmul@f3_as_product:	
  1819  0034                     ___lldiv@quotient:	
  1820                           ; 3 bytes @ 0x14
  1821                           
  1822                           
  1823                           ; 4 bytes @ 0x14
  1824  0034                     	ds	3
  1825  0037                     ___ftmul@cntr:	
  1826                           
  1827                           ; 1 bytes @ 0x17
  1828  0037                     	ds	1
  1829  0038                     ___ftmul@sign:	
  1830  0038                     ___lldiv@counter:	
  1831                           ; 1 bytes @ 0x18
  1832                           
  1833                           
  1834                           ; 1 bytes @ 0x18
  1835  0038                     	ds	1
  1836  0039                     ?_PWM_Init:	
  1837  0039                     ?_PWM_DutyCycle:	
  1838                           ; 1 bytes @ 0x19
  1839                           
  1840  0039                     ?_UART_Init:	
  1841                           ; 1 bytes @ 0x19
  1842                           
  1843  0039                     ?___ftdiv:	
  1844                           ; 1 bytes @ 0x19
  1845                           
  1846  0039                     UART_Init@baudRate:	
  1847                           ; 3 bytes @ 0x19
  1848                           
  1849  0039                     ___ftdiv@f2:	
  1850                           ; 2 bytes @ 0x19
  1851                           
  1852  0039                     PWM_Init@iFrequency:	
  1853                           ; 3 bytes @ 0x19
  1854                           
  1855  0039                     PWM_DutyCycle@iDutyCycle:	
  1856                           ; 4 bytes @ 0x19
  1857                           
  1858                           
  1859                           ; 4 bytes @ 0x19
  1860  0039                     	ds	2
  1861  003B                     ??_UART_Init:	
  1862                           
  1863                           ; 1 bytes @ 0x1B
  1864  003B                     	ds	1
  1865  003C                     ___ftdiv@f1:	
  1866                           
  1867                           ; 3 bytes @ 0x1C
  1868  003C                     	ds	1
  1869  003D                     ??_PWM_Init:	
  1870  003D                     ??_PWM_DutyCycle:	
  1871                           ; 1 bytes @ 0x1D
  1872                           
  1873                           
  1874                           ; 1 bytes @ 0x1D
  1875  003D                     	ds	2
  1876  003F                     ??___ftdiv:	
  1877                           
  1878                           ; 1 bytes @ 0x1F
  1879  003F                     	ds	4
  1880  0043                     ___ftdiv@cntr:	
  1881                           
  1882                           ; 1 bytes @ 0x23
  1883  0043                     	ds	1
  1884  0044                     ___ftdiv@f3:	
  1885                           
  1886                           ; 3 bytes @ 0x24
  1887  0044                     	ds	3
  1888  0047                     ___ftdiv@exp:	
  1889                           
  1890                           ; 1 bytes @ 0x27
  1891  0047                     	ds	1
  1892  0048                     ___ftdiv@sign:	
  1893                           
  1894                           ; 1 bytes @ 0x28
  1895  0048                     	ds	1
  1896  0049                     ?___ftadd:	
  1897  0049                     ___ftadd@f1:	
  1898                           ; 3 bytes @ 0x29
  1899                           
  1900                           
  1901                           ; 3 bytes @ 0x29
  1902  0049                     	ds	3
  1903  004C                     ___ftadd@f2:	
  1904                           
  1905                           ; 3 bytes @ 0x2C
  1906  004C                     	ds	3
  1907  004F                     ??___ftadd:	
  1908                           
  1909                           ; 1 bytes @ 0x2F
  1910  004F                     	ds	4
  1911  0053                     ___ftadd@sign:	
  1912                           
  1913                           ; 1 bytes @ 0x33
  1914  0053                     	ds	1
  1915  0054                     ___ftadd@exp2:	
  1916                           
  1917                           ; 1 bytes @ 0x34
  1918  0054                     	ds	1
  1919  0055                     ___ftadd@exp1:	
  1920                           
  1921                           ; 1 bytes @ 0x35
  1922  0055                     	ds	1
  1923  0056                     ?___fttol:	
  1924  0056                     ___fttol@f1:	
  1925                           ; 4 bytes @ 0x36
  1926                           
  1927                           
  1928                           ; 3 bytes @ 0x36
  1929  0056                     	ds	4
  1930  005A                     ??___fttol:	
  1931                           
  1932                           ; 1 bytes @ 0x3A
  1933  005A                     	ds	4
  1934  005E                     ___fttol@sign1:	
  1935                           
  1936                           ; 1 bytes @ 0x3E
  1937  005E                     	ds	1
  1938  005F                     ___fttol@lval:	
  1939                           
  1940                           ; 4 bytes @ 0x3F
  1941  005F                     	ds	4
  1942  0063                     ___fttol@exp1:	
  1943                           
  1944                           ; 1 bytes @ 0x43
  1945  0063                     	ds	1
  1946  0064                     ??_temp_Measurement:	
  1947                           
  1948                           ; 1 bytes @ 0x44
  1949  0064                     	ds	2
  1950  0066                     _temp_Measurement$1694:	
  1951                           
  1952                           ; 3 bytes @ 0x46
  1953  0066                     	ds	3
  1954  0069                     temp_Measurement@sample:	
  1955                           
  1956                           ; 2 bytes @ 0x49
  1957  0069                     	ds	2
  1958  006B                     ?_sprintf:	
  1959  006B                     sprintf@f:	
  1960                           ; 2 bytes @ 0x4B
  1961                           
  1962                           
  1963                           ; 1 bytes @ 0x4B
  1964  006B                     	ds	3
  1965  006E                     temp_Display@TEMP:	
  1966                           
  1967                           ; 1 bytes @ 0x4E
  1968  006E                     	ds	1
  1969                           
  1970                           	psect	maintext
  1971  0CCF                     __pmaintext:	
  1972 ;;
  1973 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1974 ;;
  1975 ;; *************** function _main *****************
  1976 ;; Defined at:
  1977 ;;		line 11 in file "main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2   74[None  ] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : B00/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels required when called:    5
  1997 ;; This function calls:
  1998 ;;		_ASS_1
  1999 ;;		_Ass_2
  2000 ;;		_system_Initialize
  2001 ;;		_temp_Display
  2002 ;; This function is called by:
  2003 ;;		Startup code after reset
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function _main
  2009  0CCF                     _main:	
  2010                           
  2011                           ;main.c: 13: system_Initialize();
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2015  0CCF  120A  158A  270D  120A  158A  	fcall	_system_Initialize
  2016                           
  2017                           ;main.c: 18: switch(g_state){
  2018  0CD4  2CE0               	goto	l3023
  2019  0CD5                     l3025:	
  2020                           ;main.c: 19: case ASSIGNMENT_1:
  2021                           
  2022                           
  2023                           ;main.c: 20: ASS_1();
  2024  0CD5  120A  118A  26BC  120A  158A  	fcall	_ASS_1
  2025                           
  2026                           ;main.c: 21: break;
  2027  0CDA  2CE0               	goto	l3023
  2028  0CDB                     l3027:	
  2029                           ;main.c: 23: case ASSIGNMENT_2:
  2030                           
  2031                           
  2032                           ;main.c: 24: Ass_2();
  2033  0CDB  120A  118A  2003  120A  158A  	fcall	_Ass_2
  2034  0CE0                     l3023:	
  2035                           ;main.c: 15: while (1) {
  2036                           
  2037                           ;main.c: 42: }
  2038                           
  2039                           ;main.c: 40: break;
  2040                           
  2041                           ;main.c: 38: case ASSIGNMENT_7:
  2042                           
  2043                           ;main.c: 36: break;
  2044                           
  2045                           ;main.c: 34: case ASSIGNMENT_6:
  2046                           
  2047                           ;main.c: 32: break;
  2048                           
  2049                           ;main.c: 30: case ASSIGNMENT_5:
  2050                           
  2051                           ;main.c: 29: break;
  2052                           
  2053                           ;main.c: 27: case ASSIGNMENT_3:
  2054                           
  2055                           ;main.c: 25: break;
  2056                           
  2057                           
  2058                           ;main.c: 16: temp_Display();
  2059  0CE0  120A  158A  27AA  120A  158A  	fcall	_temp_Display
  2060  0CE5  0879               	movf	_g_state,w
  2061                           
  2062                           ; Switch size 1, requested type "space"
  2063                           ; Number of cases is 6, Range of values is 0 to 6
  2064                           ; switch strategies available:
  2065                           ; Name         Instructions Cycles
  2066                           ; simple_byte           19    10 (average)
  2067                           ; direct_byte           29     8 (fixed)
  2068                           ; jumptable            260     6 (fixed)
  2069                           ;	Chosen strategy is simple_byte
  2070  0CE6  3A00               	xorlw	0	; case 0
  2071  0CE7  1903               	skipnz
  2072  0CE8  2CD5               	goto	l3025
  2073  0CE9  3A01               	xorlw	1	; case 1
  2074  0CEA  1903               	skipnz
  2075  0CEB  2CDB               	goto	l3027
  2076  0CEC  3A03               	xorlw	3	; case 2
  2077  0CED  1903               	skipnz
  2078  0CEE  2CE0               	goto	l3023
  2079  0CEF  3A06               	xorlw	6	; case 4
  2080  0CF0  1903               	skipnz
  2081  0CF1  2CE0               	goto	l3023
  2082  0CF2  3A01               	xorlw	1	; case 5
  2083  0CF3  1903               	skipnz
  2084  0CF4  2CE0               	goto	l3023
  2085  0CF5  3A03               	xorlw	3	; case 6
  2086  0CF6  1903               	skipnz
  2087  0CF7  2CE0               	goto	l3023
  2088  0CF8  2CE0               	goto	l3023
  2089  0CF9  2CE0               	goto	l3023
  2090  0CFA                     __end_of_main:	
  2091                           ;main.c: 43: }
  2092                           ;main.c: 44: return;
  2093                           
  2094                           
  2095                           	psect	text1
  2096  0FAA                     __ptext1:	
  2097 ;; *************** function _temp_Display *****************
  2098 ;; Defined at:
  2099 ;;		line 40 in file "adc_Init.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  TEMP            1   78[BANK0 ] PTR unsigned char 
  2104 ;;		 -> STR_1(13), 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         0       1       0       0       0
  2116 ;;      Temps:          0       0       3       0       0
  2117 ;;      Totals:         0       1       3       0       0
  2118 ;;Total ram usage:        4 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    4
  2121 ;; This function calls:
  2122 ;;		_Lcd_Set_Cursor
  2123 ;;		_Lcd_write
  2124 ;;		_sprintf
  2125 ;;		_temp_Measurement
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _temp_Display
  2133  0FAA                     _temp_Display:	
  2134                           
  2135                           ;adc_Init.c: 41: char *TEMP = "Temperature:";
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2139  0FAA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2140  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  2142  0FAD  00D9               	movwf	??_temp_Display^(0+128)
  2143  0FAE  0859               	movf	??_temp_Display^(0+128),w
  2144  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0FB1  00EE               	movwf	temp_Display@TEMP
  2147                           
  2148                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  2149  0FB2  01A1               	clrf	Lcd_Set_Cursor@column
  2150  0FB3  0AA1               	incf	Lcd_Set_Cursor@column,f
  2151  0FB4  3001               	movlw	1
  2152  0FB5  120A  158A  2758  120A  158A  	fcall	_Lcd_Set_Cursor
  2153                           
  2154                           ;adc_Init.c: 43: Lcd_write(TEMP);
  2155  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0FBC  086E               	movf	temp_Display@TEMP,w
  2158  0FBD  00A3               	movwf	Lcd_write@string
  2159  0FBE  3000               	movlw	0
  2160  0FBF  1D03               	btfss	3,2
  2161  0FC0  3080               	movlw	128
  2162  0FC1  00A4               	movwf	Lcd_write@string+1
  2163  0FC2  120A  158A  2687  120A  158A  	fcall	_Lcd_write
  2164                           
  2165                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  2166  0FC7  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2167  0FC8  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0FC9  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0FCA  00D9               	movwf	??_temp_Display^(0+128)
  2170  0FCB  0859               	movf	??_temp_Display^(0+128),w
  2171  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0FCE  00EB               	movwf	sprintf@f
  2174  0FCF  120A  118A  22DE  120A  158A  	fcall	_temp_Measurement
  2175  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0FD6  00DA               	movwf	(??_temp_Display+1)^(0+128)
  2178  0FD7  01DB               	clrf	((??_temp_Display+1)^(0+128)+1)
  2179  0FD8  085A               	movf	(??_temp_Display+1)^(0+128),w
  2180  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0FDB  00EC               	movwf	?_sprintf+1
  2183  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0FDE  085B               	movf	(??_temp_Display+2)^(0+128),w
  2186  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0FE1  00ED               	movwf	?_sprintf+2
  2189  0FE2  30E2               	movlw	(low (_sTemperature| 0))& (0+255)
  2190  0FE3  120A  118A  2035  120A  158A  	fcall	_sprintf
  2191                           
  2192                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof("Temperature:"));
  2193  0FE8  300D               	movlw	13
  2194  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0FEB  00D9               	movwf	??_temp_Display^(0+128)
  2197  0FEC  0859               	movf	??_temp_Display^(0+128),w
  2198  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0FEF  00A1               	movwf	Lcd_Set_Cursor@column
  2201  0FF0  3001               	movlw	1
  2202  0FF1  120A  158A  2758  120A  158A  	fcall	_Lcd_Set_Cursor
  2203                           
  2204                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  2205  0FF6  30E2               	movlw	(low (_sTemperature| 0))& (0+255)
  2206  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0FF9  00A3               	movwf	Lcd_write@string
  2209  0FFA  3000               	movlw	0
  2210  0FFB  00A4               	movwf	Lcd_write@string+1
  2211  0FFC  120A  158A  2687   	fcall	_Lcd_write
  2212  0FFF  0008               	return
  2213  1000                     __end_of_temp_Display:	
  2214                           
  2215                           	psect	text2
  2216  02DE                     __ptext2:	
  2217 ;; *************** function _temp_Measurement *****************
  2218 ;; Defined at:
  2219 ;;		line 24 in file "adc_Init.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  sample          2   73[BANK0 ] int 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      unsigned char 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       0       0       0       0
  2234 ;;      Locals:         0       5       0       0       0
  2235 ;;      Temps:          0       2       0       0       0
  2236 ;;      Totals:         0       7       0       0       0
  2237 ;;Total ram usage:        7 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    3
  2240 ;; This function calls:
  2241 ;;		___ftadd
  2242 ;;		___ftdiv
  2243 ;;		___ftmul
  2244 ;;		___fttol
  2245 ;;		___lwdiv
  2246 ;;		___lwtoft
  2247 ;; This function is called by:
  2248 ;;		_temp_Display
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _temp_Measurement
  2254  02DE                     _temp_Measurement:	
  2255                           
  2256                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2260  02DE  3007               	movlw	7
  2261  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2262  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2263  02E1  00E5               	movwf	??_temp_Measurement+1
  2264  02E2  307C               	movlw	124
  2265  02E3  00E4               	movwf	??_temp_Measurement
  2266  02E4                     u4277:	
  2267  02E4  0BE4               	decfsz	??_temp_Measurement,f
  2268  02E5  2AE4               	goto	u4277
  2269  02E6  0BE5               	decfsz	??_temp_Measurement+1,f
  2270  02E7  2AE4               	goto	u4277
  2271  02E8  0000               	nop
  2272                           
  2273                           ;adc_Init.c: 26: GO_DONE = 1;
  2274  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2275  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2276  02EB  149F               	bsf	31,1	;volatile
  2277  02EC                     l252:	
  2278                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  2279                           
  2280  02EC  1F0C               	btfss	12,6	;volatile
  2281  02ED  2AEC               	goto	l252
  2282                           
  2283                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  2284  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2285  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2286  02F0  081E               	movf	30,w	;volatile
  2287  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2288  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2289  02F3  00E4               	movwf	??_temp_Measurement
  2290  02F4  0864               	movf	??_temp_Measurement,w
  2291  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2292  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2293  02F7  00E0               	movwf	_adc^(0+128)
  2294                           
  2295                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  2296  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2297  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2298  02FA  081E               	movf	30,w	;volatile
  2299  02FB  00E4               	movwf	??_temp_Measurement
  2300  02FC  0864               	movf	??_temp_Measurement,w
  2301  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2302  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2303  02FF  00E1               	movwf	(_adc^(0+128)+1)
  2304                           
  2305                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  2306  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0302  01E9               	clrf	temp_Measurement@sample
  2309  0303  01EA               	clrf	temp_Measurement@sample+1
  2310  0304  086A               	movf	temp_Measurement@sample+1,w
  2311  0305  3A80               	xorlw	128
  2312  0306  00FF               	movwf	127
  2313  0307  3080               	movlw	128
  2314  0308  027F               	subwf	127,w
  2315  0309  1D03               	skipz
  2316  030A  2B0D               	goto	u4025
  2317  030B  300A               	movlw	10
  2318  030C  0269               	subwf	temp_Measurement@sample,w
  2319  030D                     u4025:	
  2320  030D  1803               	btfsc	3,0
  2321  030E  2BC4               	goto	l2875
  2322  030F                     l2865:	
  2323                           
  2324                           ;adc_Init.c: 31: rawData += adc.result;
  2325  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2327  0311  0860               	movf	_adc^(0+128),w
  2328  0312  07DC               	addwf	_rawData^(0+128),f
  2329  0313  1803               	skipnc
  2330  0314  0ADD               	incf	(_rawData+1)^(0+128),f
  2331  0315  0861               	movf	(_adc+1)^(0+128),w
  2332  0316  07DD               	addwf	(_rawData+1)^(0+128),f
  2333                           
  2334                           ;adc_Init.c: 32: if (sample == 9) {
  2335  0317  3009               	movlw	9
  2336  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2338  031A  0669               	xorwf	temp_Measurement@sample,w
  2339  031B  046A               	iorwf	temp_Measurement@sample+1,w
  2340  031C  1D03               	btfss	3,2
  2341  031D  2BB3               	goto	l2871
  2342                           
  2343                           ;adc_Init.c: 33: rawData = rawData / 11;
  2344  031E  300B               	movlw	11
  2345  031F  00A0               	movwf	___lwdiv@divisor
  2346  0320  3000               	movlw	0
  2347  0321  00A1               	movwf	___lwdiv@divisor+1
  2348  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0324  085D               	movf	(_rawData+1)^(0+128),w
  2351  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0327  00A3               	movwf	___lwdiv@dividend+1
  2354  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2356  032A  085C               	movf	_rawData^(0+128),w
  2357  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2358  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2359  032D  00A2               	movwf	___lwdiv@dividend
  2360  032E  120A  158A  25C8  120A  118A  	fcall	___lwdiv
  2361  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0335  0821               	movf	?___lwdiv+1,w
  2364  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0338  00DD               	movwf	(_rawData+1)^(0+128)
  2367  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2368  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2369  033B  0820               	movf	?___lwdiv,w
  2370  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2371  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2372  033E  00DC               	movwf	_rawData^(0+128)
  2373                           
  2374                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2375  033F  085D               	movf	(_rawData+1)^(0+128),w
  2376  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0342  00A6               	movwf	___lwtoft@c+1
  2379  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0345  085C               	movf	_rawData^(0+128),w
  2382  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0348  00A5               	movwf	___lwtoft@c
  2385  0349  120A  158A  240B  120A  118A  	fcall	___lwtoft
  2386  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2387  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0350  0825               	movf	?___lwtoft,w
  2389  0351  00AC               	movwf	___ftmul@f2
  2390  0352  0826               	movf	?___lwtoft+1,w
  2391  0353  00AD               	movwf	___ftmul@f2+1
  2392  0354  0827               	movf	?___lwtoft+2,w
  2393  0355  00AE               	movwf	___ftmul@f2+2
  2394  0356  3040               	movlw	64
  2395  0357  00A9               	movwf	___ftmul@f1
  2396  0358  309C               	movlw	156
  2397  0359  00AA               	movwf	___ftmul@f1+1
  2398  035A  3045               	movlw	69
  2399  035B  00AB               	movwf	___ftmul@f1+2
  2400  035C  120A  118A  23C6  120A  118A  	fcall	___ftmul
  2401  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0363  0829               	movf	?___ftmul,w
  2404  0364  00BC               	movwf	___ftdiv@f1
  2405  0365  082A               	movf	?___ftmul+1,w
  2406  0366  00BD               	movwf	___ftdiv@f1+1
  2407  0367  082B               	movf	?___ftmul+2,w
  2408  0368  00BE               	movwf	___ftdiv@f1+2
  2409  0369  30C0               	movlw	192
  2410  036A  00B9               	movwf	___ftdiv@f2
  2411  036B  307F               	movlw	127
  2412  036C  00BA               	movwf	___ftdiv@f2+1
  2413  036D  3044               	movlw	68
  2414  036E  00BB               	movwf	___ftdiv@f2+2
  2415  036F  120A  118A  2499  120A  118A  	fcall	___ftdiv
  2416  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0376  0839               	movf	?___ftdiv,w
  2419  0377  00CC               	movwf	___ftadd@f2
  2420  0378  083A               	movf	?___ftdiv+1,w
  2421  0379  00CD               	movwf	___ftadd@f2+1
  2422  037A  083B               	movf	?___ftdiv+2,w
  2423  037B  00CE               	movwf	___ftadd@f2+2
  2424  037C  3000               	movlw	0
  2425  037D  00C9               	movwf	___ftadd@f1
  2426  037E  30FA               	movlw	250
  2427  037F  00CA               	movwf	___ftadd@f1+1
  2428  0380  30C3               	movlw	195
  2429  0381  00CB               	movwf	___ftadd@f1+2
  2430  0382  120A  118A  21D5  120A  118A  	fcall	___ftadd
  2431  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0389  0849               	movf	?___ftadd,w
  2434  038A  00E6               	movwf	_temp_Measurement$1694
  2435  038B  084A               	movf	?___ftadd+1,w
  2436  038C  00E7               	movwf	_temp_Measurement$1694+1
  2437  038D  084B               	movf	?___ftadd+2,w
  2438  038E  00E8               	movwf	_temp_Measurement$1694+2
  2439                           
  2440                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2441  038F  0866               	movf	_temp_Measurement$1694,w
  2442  0390  00BC               	movwf	___ftdiv@f1
  2443  0391  0867               	movf	_temp_Measurement$1694+1,w
  2444  0392  00BD               	movwf	___ftdiv@f1+1
  2445  0393  0868               	movf	_temp_Measurement$1694+2,w
  2446  0394  00BE               	movwf	___ftdiv@f1+2
  2447  0395  3000               	movlw	0
  2448  0396  00B9               	movwf	___ftdiv@f2
  2449  0397  3020               	movlw	32
  2450  0398  00BA               	movwf	___ftdiv@f2+1
  2451  0399  3041               	movlw	65
  2452  039A  00BB               	movwf	___ftdiv@f2+2
  2453  039B  120A  118A  2499  120A  118A  	fcall	___ftdiv
  2454  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2455  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2456  03A2  0839               	movf	?___ftdiv,w
  2457  03A3  00D6               	movwf	___fttol@f1
  2458  03A4  083A               	movf	?___ftdiv+1,w
  2459  03A5  00D7               	movwf	___fttol@f1+1
  2460  03A6  083B               	movf	?___ftdiv+2,w
  2461  03A7  00D8               	movwf	___fttol@f1+2
  2462  03A8  120A  118A  2551  120A  118A  	fcall	___fttol
  2463  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2464  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2465  03AF  0856               	movf	?___fttol,w
  2466  03B0  00E4               	movwf	??_temp_Measurement
  2467  03B1  0864               	movf	??_temp_Measurement,w
  2468  03B2  00F7               	movwf	_temperature
  2469  03B3                     l2871:	
  2470  03B3  3001               	movlw	1
  2471  03B4  07E9               	addwf	temp_Measurement@sample,f
  2472  03B5  1803               	skipnc
  2473  03B6  0AEA               	incf	temp_Measurement@sample+1,f
  2474  03B7  3000               	movlw	0
  2475  03B8  07EA               	addwf	temp_Measurement@sample+1,f
  2476  03B9  086A               	movf	temp_Measurement@sample+1,w
  2477  03BA  3A80               	xorlw	128
  2478  03BB  00FF               	movwf	127
  2479  03BC  3080               	movlw	128
  2480  03BD  027F               	subwf	127,w
  2481  03BE  1D03               	skipz
  2482  03BF  2BC2               	goto	u4045
  2483  03C0  300A               	movlw	10
  2484  03C1  0269               	subwf	temp_Measurement@sample,w
  2485  03C2                     u4045:	
  2486  03C2  1C03               	skipc
  2487  03C3  2B0F               	goto	l2865
  2488  03C4                     l2875:	
  2489                           
  2490                           ;adc_Init.c: 35: }
  2491                           ;adc_Init.c: 36: }
  2492                           ;adc_Init.c: 37: return temperature;
  2493  03C4  0877               	movf	_temperature,w
  2494  03C5  0008               	return
  2495  03C6                     __end_of_temp_Measurement:	
  2496                           
  2497                           	psect	text3
  2498  0C0B                     __ptext3:	
  2499 ;; *************** function ___lwtoft *****************
  2500 ;; Defined at:
  2501 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  c               2    5[BANK0 ] unsigned int 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  3    5[BANK0 ] float 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       3       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       1       0       0       0
  2518 ;;      Totals:         0       4       0       0       0
  2519 ;;Total ram usage:        4 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    2
  2522 ;; This function calls:
  2523 ;;		___ftpack
  2524 ;; This function is called by:
  2525 ;;		_temp_Measurement
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function ___lwtoft
  2531  0C0B                     ___lwtoft:	
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2535  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0C0D  0825               	movf	___lwtoft@c,w
  2538  0C0E  00A0               	movwf	___ftpack@arg
  2539  0C0F  0826               	movf	___lwtoft@c+1,w
  2540  0C10  00A1               	movwf	___ftpack@arg+1
  2541  0C11  01A2               	clrf	___ftpack@arg+2
  2542  0C12  308E               	movlw	142
  2543  0C13  00A8               	movwf	??___lwtoft
  2544  0C14  0828               	movf	??___lwtoft,w
  2545  0C15  00A3               	movwf	___ftpack@exp
  2546  0C16  01A4               	clrf	___ftpack@sign
  2547  0C17  120A  118A  264E   	fcall	___ftpack
  2548  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0C1C  0820               	movf	?___ftpack,w
  2551  0C1D  00A5               	movwf	?___lwtoft
  2552  0C1E  0821               	movf	?___ftpack+1,w
  2553  0C1F  00A6               	movwf	?___lwtoft+1
  2554  0C20  0822               	movf	?___ftpack+2,w
  2555  0C21  00A7               	movwf	?___lwtoft+2
  2556  0C22  0008               	return
  2557  0C23                     __end_of___lwtoft:	
  2558                           
  2559                           	psect	text4
  2560  0551                     __ptext4:	
  2561 ;; *************** function ___fttol *****************
  2562 ;; Defined at:
  2563 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  f1              3   54[BANK0 ] float 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  lval            4   63[BANK0 ] unsigned long 
  2568 ;;  exp1            1   67[BANK0 ] unsigned char 
  2569 ;;  sign1           1   62[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  4   54[BANK0 ] long 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       4       0       0       0
  2580 ;;      Locals:         0       6       0       0       0
  2581 ;;      Temps:          0       4       0       0       0
  2582 ;;      Totals:         0      14       0       0       0
  2583 ;;Total ram usage:       14 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_temp_Measurement
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function ___fttol
  2595  0551                     ___fttol:	
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2599  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0553  0856               	movf	___fttol@f1,w
  2602  0554  00DA               	movwf	??___fttol
  2603  0555  0857               	movf	___fttol@f1+1,w
  2604  0556  00DB               	movwf	??___fttol+1
  2605  0557  0858               	movf	___fttol@f1+2,w
  2606  0558  00DC               	movwf	??___fttol+2
  2607  0559  1003               	clrc
  2608  055A  0D5B               	rlf	??___fttol+1,w
  2609  055B  0D5C               	rlf	??___fttol+2,w
  2610  055C  00DD               	movwf	??___fttol+3
  2611  055D  085D               	movf	??___fttol+3,w
  2612  055E  00E3               	movwf	___fttol@exp1
  2613  055F  0863               	movf	___fttol@exp1,w
  2614  0560  1D03               	btfss	3,2
  2615  0561  2D6B               	goto	l2095
  2616  0562  3000               	movlw	0
  2617  0563  00D9               	movwf	?___fttol+3
  2618  0564  3000               	movlw	0
  2619  0565  00D8               	movwf	?___fttol+2
  2620  0566  3000               	movlw	0
  2621  0567  00D7               	movwf	?___fttol+1
  2622  0568  3000               	movlw	0
  2623  0569  00D6               	movwf	?___fttol
  2624  056A  0008               	return
  2625  056B                     l2095:	
  2626  056B  0856               	movf	___fttol@f1,w
  2627  056C  00DA               	movwf	??___fttol
  2628  056D  0857               	movf	___fttol@f1+1,w
  2629  056E  00DB               	movwf	??___fttol+1
  2630  056F  0858               	movf	___fttol@f1+2,w
  2631  0570  00DC               	movwf	??___fttol+2
  2632  0571  3017               	movlw	23
  2633  0572                     u2365:	
  2634  0572  1003               	clrc
  2635  0573  0CDC               	rrf	??___fttol+2,f
  2636  0574  0CDB               	rrf	??___fttol+1,f
  2637  0575  0CDA               	rrf	??___fttol,f
  2638  0576  3EFF               	addlw	-1
  2639  0577  1D03               	skipz
  2640  0578  2D72               	goto	u2365
  2641  0579  085A               	movf	??___fttol,w
  2642  057A  00DD               	movwf	??___fttol+3
  2643  057B  085D               	movf	??___fttol+3,w
  2644  057C  00DE               	movwf	___fttol@sign1
  2645  057D  17D7               	bsf	___fttol@f1+1,7
  2646  057E  30FF               	movlw	255
  2647  057F  05D6               	andwf	___fttol@f1,f
  2648  0580  30FF               	movlw	255
  2649  0581  05D7               	andwf	___fttol@f1+1,f
  2650  0582  3000               	movlw	0
  2651  0583  05D8               	andwf	___fttol@f1+2,f
  2652  0584  0856               	movf	___fttol@f1,w
  2653  0585  00DF               	movwf	___fttol@lval
  2654  0586  0857               	movf	___fttol@f1+1,w
  2655  0587  00E0               	movwf	___fttol@lval+1
  2656  0588  0858               	movf	___fttol@f1+2,w
  2657  0589  00E1               	movwf	___fttol@lval+2
  2658  058A  01E2               	clrf	___fttol@lval+3
  2659  058B  308E               	movlw	142
  2660  058C  02E3               	subwf	___fttol@exp1,f
  2661  058D  1FE3               	btfss	___fttol@exp1,7
  2662  058E  2DAD               	goto	l2115
  2663  058F  0863               	movf	___fttol@exp1,w
  2664  0590  3A80               	xorlw	128
  2665  0591  3E8F               	addlw	143
  2666  0592  1803               	skipnc
  2667  0593  2D9D               	goto	l2113
  2668  0594  3000               	movlw	0
  2669  0595  00D9               	movwf	?___fttol+3
  2670  0596  3000               	movlw	0
  2671  0597  00D8               	movwf	?___fttol+2
  2672  0598  3000               	movlw	0
  2673  0599  00D7               	movwf	?___fttol+1
  2674  059A  3000               	movlw	0
  2675  059B  00D6               	movwf	?___fttol
  2676  059C  0008               	return
  2677  059D                     l2113:	
  2678  059D  3001               	movlw	1
  2679  059E                     u2395:	
  2680  059E  1003               	clrc
  2681  059F  0CE2               	rrf	___fttol@lval+3,f
  2682  05A0  0CE1               	rrf	___fttol@lval+2,f
  2683  05A1  0CE0               	rrf	___fttol@lval+1,f
  2684  05A2  0CDF               	rrf	___fttol@lval,f
  2685  05A3  3EFF               	addlw	-1
  2686  05A4  1D03               	skipz
  2687  05A5  2D9E               	goto	u2395
  2688  05A6  3001               	movlw	1
  2689  05A7  00DA               	movwf	??___fttol
  2690  05A8  085A               	movf	??___fttol,w
  2691  05A9  07E3               	addwf	___fttol@exp1,f
  2692  05AA  1903               	btfsc	3,2
  2693  05AB  2DC8               	goto	l2123
  2694  05AC  2D9D               	goto	l2113
  2695  05AD                     l2115:	
  2696  05AD  3018               	movlw	24
  2697  05AE  0263               	subwf	___fttol@exp1,w
  2698  05AF  1C03               	skipc
  2699  05B0  2DC5               	goto	l840
  2700  05B1  3000               	movlw	0
  2701  05B2  00D9               	movwf	?___fttol+3
  2702  05B3  3000               	movlw	0
  2703  05B4  00D8               	movwf	?___fttol+2
  2704  05B5  3000               	movlw	0
  2705  05B6  00D7               	movwf	?___fttol+1
  2706  05B7  3000               	movlw	0
  2707  05B8  00D6               	movwf	?___fttol
  2708  05B9  0008               	return
  2709  05BA                     l2121:	
  2710  05BA  3001               	movlw	1
  2711  05BB  00DA               	movwf	??___fttol
  2712  05BC                     u2425:	
  2713  05BC  1003               	clrc
  2714  05BD  0DDF               	rlf	___fttol@lval,f
  2715  05BE  0DE0               	rlf	___fttol@lval+1,f
  2716  05BF  0DE1               	rlf	___fttol@lval+2,f
  2717  05C0  0DE2               	rlf	___fttol@lval+3,f
  2718  05C1  0BDA               	decfsz	??___fttol,f
  2719  05C2  2DBC               	goto	u2425
  2720  05C3  3001               	movlw	1
  2721  05C4  02E3               	subwf	___fttol@exp1,f
  2722  05C5                     l840:	
  2723  05C5  0863               	movf	___fttol@exp1,w
  2724  05C6  1D03               	btfss	3,2
  2725  05C7  2DBA               	goto	l2121
  2726  05C8                     l2123:	
  2727  05C8  085E               	movf	___fttol@sign1,w
  2728  05C9  1903               	btfsc	3,2
  2729  05CA  2DD6               	goto	l2127
  2730  05CB  09DF               	comf	___fttol@lval,f
  2731  05CC  09E0               	comf	___fttol@lval+1,f
  2732  05CD  09E1               	comf	___fttol@lval+2,f
  2733  05CE  09E2               	comf	___fttol@lval+3,f
  2734  05CF  0ADF               	incf	___fttol@lval,f
  2735  05D0  1903               	skipnz
  2736  05D1  0AE0               	incf	___fttol@lval+1,f
  2737  05D2  1903               	skipnz
  2738  05D3  0AE1               	incf	___fttol@lval+2,f
  2739  05D4  1903               	skipnz
  2740  05D5  0AE2               	incf	___fttol@lval+3,f
  2741  05D6                     l2127:	
  2742  05D6  0862               	movf	___fttol@lval+3,w
  2743  05D7  00D9               	movwf	?___fttol+3
  2744  05D8  0861               	movf	___fttol@lval+2,w
  2745  05D9  00D8               	movwf	?___fttol+2
  2746  05DA  0860               	movf	___fttol@lval+1,w
  2747  05DB  00D7               	movwf	?___fttol+1
  2748  05DC  085F               	movf	___fttol@lval,w
  2749  05DD  00D6               	movwf	?___fttol
  2750  05DE  0008               	return
  2751  05DF                     __end_of___fttol:	
  2752                           
  2753                           	psect	text5
  2754  03C6                     __ptext5:	
  2755 ;; *************** function ___ftmul *****************
  2756 ;; Defined at:
  2757 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  f1              3    9[BANK0 ] float 
  2760 ;;  f2              3   12[BANK0 ] float 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  2763 ;;  sign            1   24[BANK0 ] unsigned char 
  2764 ;;  cntr            1   23[BANK0 ] unsigned char 
  2765 ;;  exp             1   19[BANK0 ] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  3    9[BANK0 ] float 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       6       0       0       0
  2776 ;;      Locals:         0       6       0       0       0
  2777 ;;      Temps:          0       4       0       0       0
  2778 ;;      Totals:         0      16       0       0       0
  2779 ;;Total ram usage:       16 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    2
  2782 ;; This function calls:
  2783 ;;		___ftpack
  2784 ;; This function is called by:
  2785 ;;		_temp_Measurement
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function ___ftmul
  2791  03C6                     ___ftmul:	
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2795  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2796  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2797  03C8  0829               	movf	___ftmul@f1,w
  2798  03C9  00AF               	movwf	??___ftmul
  2799  03CA  082A               	movf	___ftmul@f1+1,w
  2800  03CB  00B0               	movwf	??___ftmul+1
  2801  03CC  082B               	movf	___ftmul@f1+2,w
  2802  03CD  00B1               	movwf	??___ftmul+2
  2803  03CE  1003               	clrc
  2804  03CF  0D30               	rlf	??___ftmul+1,w
  2805  03D0  0D31               	rlf	??___ftmul+2,w
  2806  03D1  00B2               	movwf	??___ftmul+3
  2807  03D2  0832               	movf	??___ftmul+3,w
  2808  03D3  00B3               	movwf	___ftmul@exp
  2809  03D4  0833               	movf	___ftmul@exp,w
  2810  03D5  1D03               	btfss	3,2
  2811  03D6  2BDE               	goto	l2699
  2812  03D7  3000               	movlw	0
  2813  03D8  00A9               	movwf	?___ftmul
  2814  03D9  3000               	movlw	0
  2815  03DA  00AA               	movwf	?___ftmul+1
  2816  03DB  3000               	movlw	0
  2817  03DC  00AB               	movwf	?___ftmul+2
  2818  03DD  0008               	return
  2819  03DE                     l2699:	
  2820  03DE  082C               	movf	___ftmul@f2,w
  2821  03DF  00AF               	movwf	??___ftmul
  2822  03E0  082D               	movf	___ftmul@f2+1,w
  2823  03E1  00B0               	movwf	??___ftmul+1
  2824  03E2  082E               	movf	___ftmul@f2+2,w
  2825  03E3  00B1               	movwf	??___ftmul+2
  2826  03E4  1003               	clrc
  2827  03E5  0D30               	rlf	??___ftmul+1,w
  2828  03E6  0D31               	rlf	??___ftmul+2,w
  2829  03E7  00B2               	movwf	??___ftmul+3
  2830  03E8  0832               	movf	??___ftmul+3,w
  2831  03E9  00B8               	movwf	___ftmul@sign
  2832  03EA  0838               	movf	___ftmul@sign,w
  2833  03EB  1D03               	btfss	3,2
  2834  03EC  2BF4               	goto	l2705
  2835  03ED  3000               	movlw	0
  2836  03EE  00A9               	movwf	?___ftmul
  2837  03EF  3000               	movlw	0
  2838  03F0  00AA               	movwf	?___ftmul+1
  2839  03F1  3000               	movlw	0
  2840  03F2  00AB               	movwf	?___ftmul+2
  2841  03F3  0008               	return
  2842  03F4                     l2705:	
  2843  03F4  0838               	movf	___ftmul@sign,w
  2844  03F5  3E7B               	addlw	123
  2845  03F6  00AF               	movwf	??___ftmul
  2846  03F7  082F               	movf	??___ftmul,w
  2847  03F8  07B3               	addwf	___ftmul@exp,f
  2848  03F9  0829               	movf	___ftmul@f1,w
  2849  03FA  00AF               	movwf	??___ftmul
  2850  03FB  082A               	movf	___ftmul@f1+1,w
  2851  03FC  00B0               	movwf	??___ftmul+1
  2852  03FD  082B               	movf	___ftmul@f1+2,w
  2853  03FE  00B1               	movwf	??___ftmul+2
  2854  03FF  3010               	movlw	16
  2855  0400                     u3655:	
  2856  0400  1003               	clrc
  2857  0401  0CB1               	rrf	??___ftmul+2,f
  2858  0402  0CB0               	rrf	??___ftmul+1,f
  2859  0403  0CAF               	rrf	??___ftmul,f
  2860  0404  3EFF               	addlw	-1
  2861  0405  1D03               	skipz
  2862  0406  2C00               	goto	u3655
  2863  0407  082F               	movf	??___ftmul,w
  2864  0408  00B2               	movwf	??___ftmul+3
  2865  0409  0832               	movf	??___ftmul+3,w
  2866  040A  00B8               	movwf	___ftmul@sign
  2867  040B  082C               	movf	___ftmul@f2,w
  2868  040C  00AF               	movwf	??___ftmul
  2869  040D  082D               	movf	___ftmul@f2+1,w
  2870  040E  00B0               	movwf	??___ftmul+1
  2871  040F  082E               	movf	___ftmul@f2+2,w
  2872  0410  00B1               	movwf	??___ftmul+2
  2873  0411  3010               	movlw	16
  2874  0412                     u3665:	
  2875  0412  1003               	clrc
  2876  0413  0CB1               	rrf	??___ftmul+2,f
  2877  0414  0CB0               	rrf	??___ftmul+1,f
  2878  0415  0CAF               	rrf	??___ftmul,f
  2879  0416  3EFF               	addlw	-1
  2880  0417  1D03               	skipz
  2881  0418  2C12               	goto	u3665
  2882  0419  082F               	movf	??___ftmul,w
  2883  041A  00B2               	movwf	??___ftmul+3
  2884  041B  0832               	movf	??___ftmul+3,w
  2885  041C  06B8               	xorwf	___ftmul@sign,f
  2886  041D  3080               	movlw	128
  2887  041E  00AF               	movwf	??___ftmul
  2888  041F  082F               	movf	??___ftmul,w
  2889  0420  05B8               	andwf	___ftmul@sign,f
  2890  0421  17AA               	bsf	___ftmul@f1+1,7
  2891  0422  17AD               	bsf	___ftmul@f2+1,7
  2892  0423  30FF               	movlw	255
  2893  0424  05AC               	andwf	___ftmul@f2,f
  2894  0425  30FF               	movlw	255
  2895  0426  05AD               	andwf	___ftmul@f2+1,f
  2896  0427  3000               	movlw	0
  2897  0428  05AE               	andwf	___ftmul@f2+2,f
  2898  0429  3000               	movlw	0
  2899  042A  00B4               	movwf	___ftmul@f3_as_product
  2900  042B  3000               	movlw	0
  2901  042C  00B5               	movwf	___ftmul@f3_as_product+1
  2902  042D  3000               	movlw	0
  2903  042E  00B6               	movwf	___ftmul@f3_as_product+2
  2904  042F  3007               	movlw	7
  2905  0430  00AF               	movwf	??___ftmul
  2906  0431  082F               	movf	??___ftmul,w
  2907  0432  00B7               	movwf	___ftmul@cntr
  2908  0433                     l2717:	
  2909  0433  1C29               	btfss	___ftmul@f1,0
  2910  0434  2C43               	goto	l2721
  2911  0435  082C               	movf	___ftmul@f2,w
  2912  0436  07B4               	addwf	___ftmul@f3_as_product,f
  2913  0437  082D               	movf	___ftmul@f2+1,w
  2914  0438  1103               	clrz
  2915  0439  1803               	skipnc
  2916  043A  0A2D               	incf	___ftmul@f2+1,w
  2917  043B  1D03               	btfss	3,2
  2918  043C  07B5               	addwf	___ftmul@f3_as_product+1,f
  2919  043D  082E               	movf	___ftmul@f2+2,w
  2920  043E  1103               	clrz
  2921  043F  1803               	skipnc
  2922  0440  0A2E               	incf	___ftmul@f2+2,w
  2923  0441  1D03               	btfss	3,2
  2924  0442  07B6               	addwf	___ftmul@f3_as_product+2,f
  2925  0443                     l2721:	
  2926  0443  3001               	movlw	1
  2927  0444                     u3695:	
  2928  0444  1003               	clrc
  2929  0445  0CAB               	rrf	___ftmul@f1+2,f
  2930  0446  0CAA               	rrf	___ftmul@f1+1,f
  2931  0447  0CA9               	rrf	___ftmul@f1,f
  2932  0448  3EFF               	addlw	-1
  2933  0449  1D03               	skipz
  2934  044A  2C44               	goto	u3695
  2935  044B  3001               	movlw	1
  2936  044C                     u3705:	
  2937  044C  1003               	clrc
  2938  044D  0DAC               	rlf	___ftmul@f2,f
  2939  044E  0DAD               	rlf	___ftmul@f2+1,f
  2940  044F  0DAE               	rlf	___ftmul@f2+2,f
  2941  0450  3EFF               	addlw	-1
  2942  0451  1D03               	skipz
  2943  0452  2C4C               	goto	u3705
  2944  0453  3001               	movlw	1
  2945  0454  02B7               	subwf	___ftmul@cntr,f
  2946  0455  1D03               	btfss	3,2
  2947  0456  2C33               	goto	l2717
  2948  0457  3009               	movlw	9
  2949  0458  00AF               	movwf	??___ftmul
  2950  0459  082F               	movf	??___ftmul,w
  2951  045A  00B7               	movwf	___ftmul@cntr
  2952  045B                     l2729:	
  2953  045B  1C29               	btfss	___ftmul@f1,0
  2954  045C  2C6B               	goto	l2733
  2955  045D  082C               	movf	___ftmul@f2,w
  2956  045E  07B4               	addwf	___ftmul@f3_as_product,f
  2957  045F  082D               	movf	___ftmul@f2+1,w
  2958  0460  1103               	clrz
  2959  0461  1803               	skipnc
  2960  0462  0A2D               	incf	___ftmul@f2+1,w
  2961  0463  1D03               	btfss	3,2
  2962  0464  07B5               	addwf	___ftmul@f3_as_product+1,f
  2963  0465  082E               	movf	___ftmul@f2+2,w
  2964  0466  1103               	clrz
  2965  0467  1803               	skipnc
  2966  0468  0A2E               	incf	___ftmul@f2+2,w
  2967  0469  1D03               	btfss	3,2
  2968  046A  07B6               	addwf	___ftmul@f3_as_product+2,f
  2969  046B                     l2733:	
  2970  046B  3001               	movlw	1
  2971  046C                     u3745:	
  2972  046C  1003               	clrc
  2973  046D  0CAB               	rrf	___ftmul@f1+2,f
  2974  046E  0CAA               	rrf	___ftmul@f1+1,f
  2975  046F  0CA9               	rrf	___ftmul@f1,f
  2976  0470  3EFF               	addlw	-1
  2977  0471  1D03               	skipz
  2978  0472  2C6C               	goto	u3745
  2979  0473  3001               	movlw	1
  2980  0474                     u3755:	
  2981  0474  1003               	clrc
  2982  0475  0CB6               	rrf	___ftmul@f3_as_product+2,f
  2983  0476  0CB5               	rrf	___ftmul@f3_as_product+1,f
  2984  0477  0CB4               	rrf	___ftmul@f3_as_product,f
  2985  0478  3EFF               	addlw	-1
  2986  0479  1D03               	skipz
  2987  047A  2C74               	goto	u3755
  2988  047B  3001               	movlw	1
  2989  047C  02B7               	subwf	___ftmul@cntr,f
  2990  047D  1D03               	btfss	3,2
  2991  047E  2C5B               	goto	l2729
  2992  047F  0834               	movf	___ftmul@f3_as_product,w
  2993  0480  00A0               	movwf	___ftpack@arg
  2994  0481  0835               	movf	___ftmul@f3_as_product+1,w
  2995  0482  00A1               	movwf	___ftpack@arg+1
  2996  0483  0836               	movf	___ftmul@f3_as_product+2,w
  2997  0484  00A2               	movwf	___ftpack@arg+2
  2998  0485  0833               	movf	___ftmul@exp,w
  2999  0486  00AF               	movwf	??___ftmul
  3000  0487  082F               	movf	??___ftmul,w
  3001  0488  00A3               	movwf	___ftpack@exp
  3002  0489  0838               	movf	___ftmul@sign,w
  3003  048A  00B0               	movwf	??___ftmul+1
  3004  048B  0830               	movf	??___ftmul+1,w
  3005  048C  00A4               	movwf	___ftpack@sign
  3006  048D  120A  118A  264E   	fcall	___ftpack
  3007  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0492  0820               	movf	?___ftpack,w
  3010  0493  00A9               	movwf	?___ftmul
  3011  0494  0821               	movf	?___ftpack+1,w
  3012  0495  00AA               	movwf	?___ftmul+1
  3013  0496  0822               	movf	?___ftpack+2,w
  3014  0497  00AB               	movwf	?___ftmul+2
  3015  0498  0008               	return
  3016  0499                     __end_of___ftmul:	
  3017                           
  3018                           	psect	text6
  3019  0499                     __ptext6:	
  3020 ;; *************** function ___ftdiv *****************
  3021 ;; Defined at:
  3022 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  f2              3   25[BANK0 ] float 
  3025 ;;  f1              3   28[BANK0 ] float 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  f3              3   36[BANK0 ] float 
  3028 ;;  sign            1   40[BANK0 ] unsigned char 
  3029 ;;  exp             1   39[BANK0 ] unsigned char 
  3030 ;;  cntr            1   35[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  3   25[BANK0 ] float 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       6       0       0       0
  3041 ;;      Locals:         0       6       0       0       0
  3042 ;;      Temps:          0       4       0       0       0
  3043 ;;      Totals:         0      16       0       0       0
  3044 ;;Total ram usage:       16 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    2
  3047 ;; This function calls:
  3048 ;;		___ftpack
  3049 ;; This function is called by:
  3050 ;;		_temp_Measurement
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function ___ftdiv
  3056  0499                     ___ftdiv:	
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3060  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3061  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3062  049B  083C               	movf	___ftdiv@f1,w
  3063  049C  00BF               	movwf	??___ftdiv
  3064  049D  083D               	movf	___ftdiv@f1+1,w
  3065  049E  00C0               	movwf	??___ftdiv+1
  3066  049F  083E               	movf	___ftdiv@f1+2,w
  3067  04A0  00C1               	movwf	??___ftdiv+2
  3068  04A1  1003               	clrc
  3069  04A2  0D40               	rlf	??___ftdiv+1,w
  3070  04A3  0D41               	rlf	??___ftdiv+2,w
  3071  04A4  00C2               	movwf	??___ftdiv+3
  3072  04A5  0842               	movf	??___ftdiv+3,w
  3073  04A6  00C7               	movwf	___ftdiv@exp
  3074  04A7  0847               	movf	___ftdiv@exp,w
  3075  04A8  1D03               	btfss	3,2
  3076  04A9  2CB1               	goto	l2657
  3077  04AA  3000               	movlw	0
  3078  04AB  00B9               	movwf	?___ftdiv
  3079  04AC  3000               	movlw	0
  3080  04AD  00BA               	movwf	?___ftdiv+1
  3081  04AE  3000               	movlw	0
  3082  04AF  00BB               	movwf	?___ftdiv+2
  3083  04B0  0008               	return
  3084  04B1                     l2657:	
  3085  04B1  0839               	movf	___ftdiv@f2,w
  3086  04B2  00BF               	movwf	??___ftdiv
  3087  04B3  083A               	movf	___ftdiv@f2+1,w
  3088  04B4  00C0               	movwf	??___ftdiv+1
  3089  04B5  083B               	movf	___ftdiv@f2+2,w
  3090  04B6  00C1               	movwf	??___ftdiv+2
  3091  04B7  1003               	clrc
  3092  04B8  0D40               	rlf	??___ftdiv+1,w
  3093  04B9  0D41               	rlf	??___ftdiv+2,w
  3094  04BA  00C2               	movwf	??___ftdiv+3
  3095  04BB  0842               	movf	??___ftdiv+3,w
  3096  04BC  00C8               	movwf	___ftdiv@sign
  3097  04BD  0848               	movf	___ftdiv@sign,w
  3098  04BE  1D03               	btfss	3,2
  3099  04BF  2CC7               	goto	l2663
  3100  04C0  3000               	movlw	0
  3101  04C1  00B9               	movwf	?___ftdiv
  3102  04C2  3000               	movlw	0
  3103  04C3  00BA               	movwf	?___ftdiv+1
  3104  04C4  3000               	movlw	0
  3105  04C5  00BB               	movwf	?___ftdiv+2
  3106  04C6  0008               	return
  3107  04C7                     l2663:	
  3108  04C7  3000               	movlw	0
  3109  04C8  00C4               	movwf	___ftdiv@f3
  3110  04C9  3000               	movlw	0
  3111  04CA  00C5               	movwf	___ftdiv@f3+1
  3112  04CB  3000               	movlw	0
  3113  04CC  00C6               	movwf	___ftdiv@f3+2
  3114  04CD  3089               	movlw	137
  3115  04CE  0748               	addwf	___ftdiv@sign,w
  3116  04CF  00BF               	movwf	??___ftdiv
  3117  04D0  083F               	movf	??___ftdiv,w
  3118  04D1  02C7               	subwf	___ftdiv@exp,f
  3119  04D2  083C               	movf	___ftdiv@f1,w
  3120  04D3  00BF               	movwf	??___ftdiv
  3121  04D4  083D               	movf	___ftdiv@f1+1,w
  3122  04D5  00C0               	movwf	??___ftdiv+1
  3123  04D6  083E               	movf	___ftdiv@f1+2,w
  3124  04D7  00C1               	movwf	??___ftdiv+2
  3125  04D8  3010               	movlw	16
  3126  04D9                     u3575:	
  3127  04D9  1003               	clrc
  3128  04DA  0CC1               	rrf	??___ftdiv+2,f
  3129  04DB  0CC0               	rrf	??___ftdiv+1,f
  3130  04DC  0CBF               	rrf	??___ftdiv,f
  3131  04DD  3EFF               	addlw	-1
  3132  04DE  1D03               	skipz
  3133  04DF  2CD9               	goto	u3575
  3134  04E0  083F               	movf	??___ftdiv,w
  3135  04E1  00C2               	movwf	??___ftdiv+3
  3136  04E2  0842               	movf	??___ftdiv+3,w
  3137  04E3  00C8               	movwf	___ftdiv@sign
  3138  04E4  0839               	movf	___ftdiv@f2,w
  3139  04E5  00BF               	movwf	??___ftdiv
  3140  04E6  083A               	movf	___ftdiv@f2+1,w
  3141  04E7  00C0               	movwf	??___ftdiv+1
  3142  04E8  083B               	movf	___ftdiv@f2+2,w
  3143  04E9  00C1               	movwf	??___ftdiv+2
  3144  04EA  3010               	movlw	16
  3145  04EB                     u3585:	
  3146  04EB  1003               	clrc
  3147  04EC  0CC1               	rrf	??___ftdiv+2,f
  3148  04ED  0CC0               	rrf	??___ftdiv+1,f
  3149  04EE  0CBF               	rrf	??___ftdiv,f
  3150  04EF  3EFF               	addlw	-1
  3151  04F0  1D03               	skipz
  3152  04F1  2CEB               	goto	u3585
  3153  04F2  083F               	movf	??___ftdiv,w
  3154  04F3  00C2               	movwf	??___ftdiv+3
  3155  04F4  0842               	movf	??___ftdiv+3,w
  3156  04F5  06C8               	xorwf	___ftdiv@sign,f
  3157  04F6  3080               	movlw	128
  3158  04F7  00BF               	movwf	??___ftdiv
  3159  04F8  083F               	movf	??___ftdiv,w
  3160  04F9  05C8               	andwf	___ftdiv@sign,f
  3161  04FA  17BD               	bsf	___ftdiv@f1+1,7
  3162  04FB  30FF               	movlw	255
  3163  04FC  05BC               	andwf	___ftdiv@f1,f
  3164  04FD  30FF               	movlw	255
  3165  04FE  05BD               	andwf	___ftdiv@f1+1,f
  3166  04FF  3000               	movlw	0
  3167  0500  05BE               	andwf	___ftdiv@f1+2,f
  3168  0501  17BA               	bsf	___ftdiv@f2+1,7
  3169  0502  30FF               	movlw	255
  3170  0503  05B9               	andwf	___ftdiv@f2,f
  3171  0504  30FF               	movlw	255
  3172  0505  05BA               	andwf	___ftdiv@f2+1,f
  3173  0506  3000               	movlw	0
  3174  0507  05BB               	andwf	___ftdiv@f2+2,f
  3175  0508  3018               	movlw	24
  3176  0509  00BF               	movwf	??___ftdiv
  3177  050A  083F               	movf	??___ftdiv,w
  3178  050B  00C3               	movwf	___ftdiv@cntr
  3179  050C                     l2677:	
  3180  050C  3001               	movlw	1
  3181  050D                     u3595:	
  3182  050D  1003               	clrc
  3183  050E  0DC4               	rlf	___ftdiv@f3,f
  3184  050F  0DC5               	rlf	___ftdiv@f3+1,f
  3185  0510  0DC6               	rlf	___ftdiv@f3+2,f
  3186  0511  3EFF               	addlw	-1
  3187  0512  1D03               	skipz
  3188  0513  2D0D               	goto	u3595
  3189  0514  083B               	movf	___ftdiv@f2+2,w
  3190  0515  023E               	subwf	___ftdiv@f1+2,w
  3191  0516  1D03               	skipz
  3192  0517  2D1E               	goto	u3605
  3193  0518  083A               	movf	___ftdiv@f2+1,w
  3194  0519  023D               	subwf	___ftdiv@f1+1,w
  3195  051A  1D03               	skipz
  3196  051B  2D1E               	goto	u3605
  3197  051C  0839               	movf	___ftdiv@f2,w
  3198  051D  023C               	subwf	___ftdiv@f1,w
  3199  051E                     u3605:	
  3200  051E  1C03               	skipc
  3201  051F  2D2B               	goto	l2685
  3202  0520  0839               	movf	___ftdiv@f2,w
  3203  0521  02BC               	subwf	___ftdiv@f1,f
  3204  0522  083A               	movf	___ftdiv@f2+1,w
  3205  0523  1C03               	skipc
  3206  0524  0F3A               	incfsz	___ftdiv@f2+1,w
  3207  0525  02BD               	subwf	___ftdiv@f1+1,f
  3208  0526  083B               	movf	___ftdiv@f2+2,w
  3209  0527  1C03               	skipc
  3210  0528  0A3B               	incf	___ftdiv@f2+2,w
  3211  0529  02BE               	subwf	___ftdiv@f1+2,f
  3212  052A  1444               	bsf	___ftdiv@f3,0
  3213  052B                     l2685:	
  3214  052B  3001               	movlw	1
  3215  052C                     u3615:	
  3216  052C  1003               	clrc
  3217  052D  0DBC               	rlf	___ftdiv@f1,f
  3218  052E  0DBD               	rlf	___ftdiv@f1+1,f
  3219  052F  0DBE               	rlf	___ftdiv@f1+2,f
  3220  0530  3EFF               	addlw	-1
  3221  0531  1D03               	skipz
  3222  0532  2D2C               	goto	u3615
  3223  0533  3001               	movlw	1
  3224  0534  02C3               	subwf	___ftdiv@cntr,f
  3225  0535  1D03               	btfss	3,2
  3226  0536  2D0C               	goto	l2677
  3227  0537  0844               	movf	___ftdiv@f3,w
  3228  0538  00A0               	movwf	___ftpack@arg
  3229  0539  0845               	movf	___ftdiv@f3+1,w
  3230  053A  00A1               	movwf	___ftpack@arg+1
  3231  053B  0846               	movf	___ftdiv@f3+2,w
  3232  053C  00A2               	movwf	___ftpack@arg+2
  3233  053D  0847               	movf	___ftdiv@exp,w
  3234  053E  00BF               	movwf	??___ftdiv
  3235  053F  083F               	movf	??___ftdiv,w
  3236  0540  00A3               	movwf	___ftpack@exp
  3237  0541  0848               	movf	___ftdiv@sign,w
  3238  0542  00C0               	movwf	??___ftdiv+1
  3239  0543  0840               	movf	??___ftdiv+1,w
  3240  0544  00A4               	movwf	___ftpack@sign
  3241  0545  120A  118A  264E   	fcall	___ftpack
  3242  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3244  054A  0820               	movf	?___ftpack,w
  3245  054B  00B9               	movwf	?___ftdiv
  3246  054C  0821               	movf	?___ftpack+1,w
  3247  054D  00BA               	movwf	?___ftdiv+1
  3248  054E  0822               	movf	?___ftpack+2,w
  3249  054F  00BB               	movwf	?___ftdiv+2
  3250  0550  0008               	return
  3251  0551                     __end_of___ftdiv:	
  3252                           
  3253                           	psect	text7
  3254  01D5                     __ptext7:	
  3255 ;; *************** function ___ftadd *****************
  3256 ;; Defined at:
  3257 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  f1              3   41[BANK0 ] float 
  3260 ;;  f2              3   44[BANK0 ] float 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  exp1            1   53[BANK0 ] unsigned char 
  3263 ;;  exp2            1   52[BANK0 ] unsigned char 
  3264 ;;  sign            1   51[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  3   41[BANK0 ] float 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       6       0       0       0
  3275 ;;      Locals:         0       3       0       0       0
  3276 ;;      Temps:          0       4       0       0       0
  3277 ;;      Totals:         0      13       0       0       0
  3278 ;;Total ram usage:       13 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    2
  3281 ;; This function calls:
  3282 ;;		___ftpack
  3283 ;; This function is called by:
  3284 ;;		_temp_Measurement
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function ___ftadd
  3290  01D5                     ___ftadd:	
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3294  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3295  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3296  01D7  0849               	movf	___ftadd@f1,w
  3297  01D8  00CF               	movwf	??___ftadd
  3298  01D9  084A               	movf	___ftadd@f1+1,w
  3299  01DA  00D0               	movwf	??___ftadd+1
  3300  01DB  084B               	movf	___ftadd@f1+2,w
  3301  01DC  00D1               	movwf	??___ftadd+2
  3302  01DD  1003               	clrc
  3303  01DE  0D50               	rlf	??___ftadd+1,w
  3304  01DF  0D51               	rlf	??___ftadd+2,w
  3305  01E0  00D2               	movwf	??___ftadd+3
  3306  01E1  0852               	movf	??___ftadd+3,w
  3307  01E2  00D5               	movwf	___ftadd@exp1
  3308  01E3  084C               	movf	___ftadd@f2,w
  3309  01E4  00CF               	movwf	??___ftadd
  3310  01E5  084D               	movf	___ftadd@f2+1,w
  3311  01E6  00D0               	movwf	??___ftadd+1
  3312  01E7  084E               	movf	___ftadd@f2+2,w
  3313  01E8  00D1               	movwf	??___ftadd+2
  3314  01E9  1003               	clrc
  3315  01EA  0D50               	rlf	??___ftadd+1,w
  3316  01EB  0D51               	rlf	??___ftadd+2,w
  3317  01EC  00D2               	movwf	??___ftadd+3
  3318  01ED  0852               	movf	??___ftadd+3,w
  3319  01EE  00D4               	movwf	___ftadd@exp2
  3320  01EF  0855               	movf	___ftadd@exp1,w
  3321  01F0  1903               	btfsc	3,2
  3322  01F1  29FE               	goto	l2587
  3323  01F2  0854               	movf	___ftadd@exp2,w
  3324  01F3  0255               	subwf	___ftadd@exp1,w
  3325  01F4  1803               	skipnc
  3326  01F5  2A05               	goto	l2591
  3327  01F6  0355               	decf	___ftadd@exp1,w
  3328  01F7  3AFF               	xorlw	255
  3329  01F8  0754               	addwf	___ftadd@exp2,w
  3330  01F9  00CF               	movwf	??___ftadd
  3331  01FA  3019               	movlw	25
  3332  01FB  024F               	subwf	??___ftadd,w
  3333  01FC  1C03               	skipc
  3334  01FD  2A05               	goto	l2591
  3335  01FE                     l2587:	
  3336  01FE  084C               	movf	___ftadd@f2,w
  3337  01FF  00C9               	movwf	?___ftadd
  3338  0200  084D               	movf	___ftadd@f2+1,w
  3339  0201  00CA               	movwf	?___ftadd+1
  3340  0202  084E               	movf	___ftadd@f2+2,w
  3341  0203  00CB               	movwf	?___ftadd+2
  3342  0204  0008               	return
  3343  0205                     l2591:	
  3344  0205  0854               	movf	___ftadd@exp2,w
  3345  0206  1903               	btfsc	3,2
  3346  0207  0008               	return
  3347  0208  0855               	movf	___ftadd@exp1,w
  3348  0209  0254               	subwf	___ftadd@exp2,w
  3349  020A  1803               	skipnc
  3350  020B  2A14               	goto	l2597
  3351  020C  0354               	decf	___ftadd@exp2,w
  3352  020D  3AFF               	xorlw	255
  3353  020E  0755               	addwf	___ftadd@exp1,w
  3354  020F  00CF               	movwf	??___ftadd
  3355  0210  3019               	movlw	25
  3356  0211  024F               	subwf	??___ftadd,w
  3357  0212  1803               	btfsc	3,0
  3358  0213  0008               	return
  3359  0214                     l2597:	
  3360  0214  3006               	movlw	6
  3361  0215  00CF               	movwf	??___ftadd
  3362  0216  084F               	movf	??___ftadd,w
  3363  0217  00D3               	movwf	___ftadd@sign
  3364  0218  1BCB               	btfsc	___ftadd@f1+2,7
  3365  0219  17D3               	bsf	___ftadd@sign,7
  3366  021A  1BCE               	btfsc	___ftadd@f2+2,7
  3367  021B  1753               	bsf	___ftadd@sign,6
  3368  021C  17CA               	bsf	___ftadd@f1+1,7
  3369  021D  30FF               	movlw	255
  3370  021E  05C9               	andwf	___ftadd@f1,f
  3371  021F  30FF               	movlw	255
  3372  0220  05CA               	andwf	___ftadd@f1+1,f
  3373  0221  3000               	movlw	0
  3374  0222  05CB               	andwf	___ftadd@f1+2,f
  3375  0223  17CD               	bsf	___ftadd@f2+1,7
  3376  0224  30FF               	movlw	255
  3377  0225  05CC               	andwf	___ftadd@f2,f
  3378  0226  30FF               	movlw	255
  3379  0227  05CD               	andwf	___ftadd@f2+1,f
  3380  0228  3000               	movlw	0
  3381  0229  05CE               	andwf	___ftadd@f2+2,f
  3382  022A  0854               	movf	___ftadd@exp2,w
  3383  022B  0255               	subwf	___ftadd@exp1,w
  3384  022C  1803               	skipnc
  3385  022D  2A54               	goto	l2619
  3386  022E                     l2609:	
  3387  022E  3001               	movlw	1
  3388  022F                     u3405:	
  3389  022F  1003               	clrc
  3390  0230  0DCC               	rlf	___ftadd@f2,f
  3391  0231  0DCD               	rlf	___ftadd@f2+1,f
  3392  0232  0DCE               	rlf	___ftadd@f2+2,f
  3393  0233  3EFF               	addlw	-1
  3394  0234  1D03               	skipz
  3395  0235  2A2F               	goto	u3405
  3396  0236  3001               	movlw	1
  3397  0237  02D4               	subwf	___ftadd@exp2,f
  3398  0238  0854               	movf	___ftadd@exp2,w
  3399  0239  0655               	xorwf	___ftadd@exp1,w
  3400  023A  1903               	skipnz
  3401  023B  2A4F               	goto	l2617
  3402  023C  3001               	movlw	1
  3403  023D  02D3               	subwf	___ftadd@sign,f
  3404  023E  0853               	movf	___ftadd@sign,w
  3405  023F  3907               	andlw	7
  3406  0240  1903               	btfsc	3,2
  3407  0241  2A4F               	goto	l2617
  3408  0242  2A2E               	goto	l2609
  3409  0243                     l2615:	
  3410  0243  3001               	movlw	1
  3411  0244                     u3435:	
  3412  0244  1003               	clrc
  3413  0245  0CCB               	rrf	___ftadd@f1+2,f
  3414  0246  0CCA               	rrf	___ftadd@f1+1,f
  3415  0247  0CC9               	rrf	___ftadd@f1,f
  3416  0248  3EFF               	addlw	-1
  3417  0249  1D03               	skipz
  3418  024A  2A44               	goto	u3435
  3419  024B  3001               	movlw	1
  3420  024C  00CF               	movwf	??___ftadd
  3421  024D  084F               	movf	??___ftadd,w
  3422  024E  07D5               	addwf	___ftadd@exp1,f
  3423  024F                     l2617:	
  3424  024F  0855               	movf	___ftadd@exp1,w
  3425  0250  0654               	xorwf	___ftadd@exp2,w
  3426  0251  1903               	btfsc	3,2
  3427  0252  2A7D               	goto	l780
  3428  0253  2A43               	goto	l2615
  3429  0254                     l2619:	
  3430  0254  0855               	movf	___ftadd@exp1,w
  3431  0255  0254               	subwf	___ftadd@exp2,w
  3432  0256  1803               	skipnc
  3433  0257  2A7D               	goto	l780
  3434  0258                     l2621:	
  3435  0258  3001               	movlw	1
  3436  0259                     u3465:	
  3437  0259  1003               	clrc
  3438  025A  0DC9               	rlf	___ftadd@f1,f
  3439  025B  0DCA               	rlf	___ftadd@f1+1,f
  3440  025C  0DCB               	rlf	___ftadd@f1+2,f
  3441  025D  3EFF               	addlw	-1
  3442  025E  1D03               	skipz
  3443  025F  2A59               	goto	u3465
  3444  0260  3001               	movlw	1
  3445  0261  02D5               	subwf	___ftadd@exp1,f
  3446  0262  0854               	movf	___ftadd@exp2,w
  3447  0263  0655               	xorwf	___ftadd@exp1,w
  3448  0264  1903               	skipnz
  3449  0265  2A79               	goto	l2629
  3450  0266  3001               	movlw	1
  3451  0267  02D3               	subwf	___ftadd@sign,f
  3452  0268  0853               	movf	___ftadd@sign,w
  3453  0269  3907               	andlw	7
  3454  026A  1903               	btfsc	3,2
  3455  026B  2A79               	goto	l2629
  3456  026C  2A58               	goto	l2621
  3457  026D                     l2627:	
  3458  026D  3001               	movlw	1
  3459  026E                     u3495:	
  3460  026E  1003               	clrc
  3461  026F  0CCE               	rrf	___ftadd@f2+2,f
  3462  0270  0CCD               	rrf	___ftadd@f2+1,f
  3463  0271  0CCC               	rrf	___ftadd@f2,f
  3464  0272  3EFF               	addlw	-1
  3465  0273  1D03               	skipz
  3466  0274  2A6E               	goto	u3495
  3467  0275  3001               	movlw	1
  3468  0276  00CF               	movwf	??___ftadd
  3469  0277  084F               	movf	??___ftadd,w
  3470  0278  07D4               	addwf	___ftadd@exp2,f
  3471  0279                     l2629:	
  3472  0279  0855               	movf	___ftadd@exp1,w
  3473  027A  0654               	xorwf	___ftadd@exp2,w
  3474  027B  1D03               	skipz
  3475  027C  2A6D               	goto	l2627
  3476  027D                     l780:	
  3477  027D  1FD3               	btfss	___ftadd@sign,7
  3478  027E  2A8F               	goto	l2633
  3479  027F  30FF               	movlw	255
  3480  0280  06C9               	xorwf	___ftadd@f1,f
  3481  0281  30FF               	movlw	255
  3482  0282  06CA               	xorwf	___ftadd@f1+1,f
  3483  0283  30FF               	movlw	255
  3484  0284  06CB               	xorwf	___ftadd@f1+2,f
  3485  0285  3001               	movlw	1
  3486  0286  07C9               	addwf	___ftadd@f1,f
  3487  0287  3000               	movlw	0
  3488  0288  1803               	skipnc
  3489  0289  3001               	movlw	1
  3490  028A  07CA               	addwf	___ftadd@f1+1,f
  3491  028B  3000               	movlw	0
  3492  028C  1803               	skipnc
  3493  028D  3001               	movlw	1
  3494  028E  07CB               	addwf	___ftadd@f1+2,f
  3495  028F                     l2633:	
  3496  028F  1F53               	btfss	___ftadd@sign,6
  3497  0290  2AA1               	goto	l2637
  3498  0291  30FF               	movlw	255
  3499  0292  06CC               	xorwf	___ftadd@f2,f
  3500  0293  30FF               	movlw	255
  3501  0294  06CD               	xorwf	___ftadd@f2+1,f
  3502  0295  30FF               	movlw	255
  3503  0296  06CE               	xorwf	___ftadd@f2+2,f
  3504  0297  3001               	movlw	1
  3505  0298  07CC               	addwf	___ftadd@f2,f
  3506  0299  3000               	movlw	0
  3507  029A  1803               	skipnc
  3508  029B  3001               	movlw	1
  3509  029C  07CD               	addwf	___ftadd@f2+1,f
  3510  029D  3000               	movlw	0
  3511  029E  1803               	skipnc
  3512  029F  3001               	movlw	1
  3513  02A0  07CE               	addwf	___ftadd@f2+2,f
  3514  02A1                     l2637:	
  3515  02A1  01D3               	clrf	___ftadd@sign
  3516  02A2  0849               	movf	___ftadd@f1,w
  3517  02A3  07CC               	addwf	___ftadd@f2,f
  3518  02A4  084A               	movf	___ftadd@f1+1,w
  3519  02A5  1103               	clrz
  3520  02A6  1803               	skipnc
  3521  02A7  0A4A               	incf	___ftadd@f1+1,w
  3522  02A8  1D03               	btfss	3,2
  3523  02A9  07CD               	addwf	___ftadd@f2+1,f
  3524  02AA  084B               	movf	___ftadd@f1+2,w
  3525  02AB  1103               	clrz
  3526  02AC  1803               	skipnc
  3527  02AD  0A4B               	incf	___ftadd@f1+2,w
  3528  02AE  1D03               	btfss	3,2
  3529  02AF  07CE               	addwf	___ftadd@f2+2,f
  3530  02B0  1FCE               	btfss	___ftadd@f2+2,7
  3531  02B1  2AC4               	goto	l2647
  3532  02B2  30FF               	movlw	255
  3533  02B3  06CC               	xorwf	___ftadd@f2,f
  3534  02B4  30FF               	movlw	255
  3535  02B5  06CD               	xorwf	___ftadd@f2+1,f
  3536  02B6  30FF               	movlw	255
  3537  02B7  06CE               	xorwf	___ftadd@f2+2,f
  3538  02B8  3001               	movlw	1
  3539  02B9  07CC               	addwf	___ftadd@f2,f
  3540  02BA  3000               	movlw	0
  3541  02BB  1803               	skipnc
  3542  02BC  3001               	movlw	1
  3543  02BD  07CD               	addwf	___ftadd@f2+1,f
  3544  02BE  3000               	movlw	0
  3545  02BF  1803               	skipnc
  3546  02C0  3001               	movlw	1
  3547  02C1  07CE               	addwf	___ftadd@f2+2,f
  3548  02C2  01D3               	clrf	___ftadd@sign
  3549  02C3  0AD3               	incf	___ftadd@sign,f
  3550  02C4                     l2647:	
  3551  02C4  084C               	movf	___ftadd@f2,w
  3552  02C5  00A0               	movwf	___ftpack@arg
  3553  02C6  084D               	movf	___ftadd@f2+1,w
  3554  02C7  00A1               	movwf	___ftpack@arg+1
  3555  02C8  084E               	movf	___ftadd@f2+2,w
  3556  02C9  00A2               	movwf	___ftpack@arg+2
  3557  02CA  0855               	movf	___ftadd@exp1,w
  3558  02CB  00CF               	movwf	??___ftadd
  3559  02CC  084F               	movf	??___ftadd,w
  3560  02CD  00A3               	movwf	___ftpack@exp
  3561  02CE  0853               	movf	___ftadd@sign,w
  3562  02CF  00D0               	movwf	??___ftadd+1
  3563  02D0  0850               	movf	??___ftadd+1,w
  3564  02D1  00A4               	movwf	___ftpack@sign
  3565  02D2  120A  118A  264E   	fcall	___ftpack
  3566  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3567  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3568  02D7  0820               	movf	?___ftpack,w
  3569  02D8  00C9               	movwf	?___ftadd
  3570  02D9  0821               	movf	?___ftpack+1,w
  3571  02DA  00CA               	movwf	?___ftadd+1
  3572  02DB  0822               	movf	?___ftpack+2,w
  3573  02DC  00CB               	movwf	?___ftadd+2
  3574  02DD  0008               	return
  3575  02DE                     __end_of___ftadd:	
  3576                           
  3577                           	psect	text8
  3578  064E                     __ptext8:	
  3579 ;; *************** function ___ftpack *****************
  3580 ;; Defined at:
  3581 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  arg             3    0[BANK0 ] unsigned um
  3584 ;;  exp             1    3[BANK0 ] unsigned char 
  3585 ;;  sign            1    4[BANK0 ] unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  3    0[BANK0 ] float 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       5       0       0       0
  3598 ;;      Locals:         0       0       0       0       0
  3599 ;;      Temps:          3       0       0       0       0
  3600 ;;      Totals:         3       5       0       0       0
  3601 ;;Total ram usage:        8 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		___ftadd
  3608 ;;		___ftdiv
  3609 ;;		___ftmul
  3610 ;;		___lwtoft
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function ___ftpack
  3616  064E                     ___ftpack:	
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3620  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3621  064F  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0650  0823               	movf	___ftpack@exp,w
  3623  0651  1903               	btfsc	3,2
  3624  0652  2E58               	goto	l2491
  3625  0653  0822               	movf	___ftpack@arg+2,w
  3626  0654  0421               	iorwf	___ftpack@arg+1,w
  3627  0655  0420               	iorwf	___ftpack@arg,w
  3628  0656  1D03               	skipz
  3629  0657  2E6B               	goto	l2497
  3630  0658                     l2491:	
  3631  0658  3000               	movlw	0
  3632  0659  00A0               	movwf	?___ftpack
  3633  065A  3000               	movlw	0
  3634  065B  00A1               	movwf	?___ftpack+1
  3635  065C  3000               	movlw	0
  3636  065D  00A2               	movwf	?___ftpack+2
  3637  065E  0008               	return
  3638  065F                     l2495:	
  3639  065F  3001               	movlw	1
  3640  0660  00F4               	movwf	??___ftpack
  3641  0661  0874               	movf	??___ftpack,w
  3642  0662  07A3               	addwf	___ftpack@exp,f
  3643  0663  3001               	movlw	1
  3644  0664                     u3105:	
  3645  0664  1003               	clrc
  3646  0665  0CA2               	rrf	___ftpack@arg+2,f
  3647  0666  0CA1               	rrf	___ftpack@arg+1,f
  3648  0667  0CA0               	rrf	___ftpack@arg,f
  3649  0668  3EFF               	addlw	-1
  3650  0669  1D03               	skipz
  3651  066A  2E64               	goto	u3105
  3652  066B                     l2497:	
  3653  066B  30FE               	movlw	254
  3654  066C  0522               	andwf	___ftpack@arg+2,w
  3655  066D  1903               	btfsc	3,2
  3656  066E  2E86               	goto	l749
  3657  066F  2E5F               	goto	l2495
  3658  0670                     l2499:	
  3659  0670  3001               	movlw	1
  3660  0671  00F4               	movwf	??___ftpack
  3661  0672  0874               	movf	??___ftpack,w
  3662  0673  07A3               	addwf	___ftpack@exp,f
  3663  0674  3001               	movlw	1
  3664  0675  07A0               	addwf	___ftpack@arg,f
  3665  0676  3000               	movlw	0
  3666  0677  1803               	skipnc
  3667  0678  3001               	movlw	1
  3668  0679  07A1               	addwf	___ftpack@arg+1,f
  3669  067A  3000               	movlw	0
  3670  067B  1803               	skipnc
  3671  067C  3001               	movlw	1
  3672  067D  07A2               	addwf	___ftpack@arg+2,f
  3673  067E  3001               	movlw	1
  3674  067F                     u3125:	
  3675  067F  1003               	clrc
  3676  0680  0CA2               	rrf	___ftpack@arg+2,f
  3677  0681  0CA1               	rrf	___ftpack@arg+1,f
  3678  0682  0CA0               	rrf	___ftpack@arg,f
  3679  0683  3EFF               	addlw	-1
  3680  0684  1D03               	skipz
  3681  0685  2E7F               	goto	u3125
  3682  0686                     l749:	
  3683  0686  30FF               	movlw	255
  3684  0687  0522               	andwf	___ftpack@arg+2,w
  3685  0688  1903               	btfsc	3,2
  3686  0689  2E95               	goto	l2507
  3687  068A  2E70               	goto	l2499
  3688  068B                     l2505:	
  3689  068B  3001               	movlw	1
  3690  068C  02A3               	subwf	___ftpack@exp,f
  3691  068D  3001               	movlw	1
  3692  068E                     u3145:	
  3693  068E  1003               	clrc
  3694  068F  0DA0               	rlf	___ftpack@arg,f
  3695  0690  0DA1               	rlf	___ftpack@arg+1,f
  3696  0691  0DA2               	rlf	___ftpack@arg+2,f
  3697  0692  3EFF               	addlw	-1
  3698  0693  1D03               	skipz
  3699  0694  2E8E               	goto	u3145
  3700  0695                     l2507:	
  3701  0695  1BA1               	btfsc	___ftpack@arg+1,7
  3702  0696  2E9B               	goto	l756
  3703  0697  3002               	movlw	2
  3704  0698  0223               	subwf	___ftpack@exp,w
  3705  0699  1803               	skipnc
  3706  069A  2E8B               	goto	l2505
  3707  069B                     l756:	
  3708  069B  1823               	btfsc	___ftpack@exp,0
  3709  069C  2EA3               	goto	l757
  3710  069D  30FF               	movlw	255
  3711  069E  05A0               	andwf	___ftpack@arg,f
  3712  069F  307F               	movlw	127
  3713  06A0  05A1               	andwf	___ftpack@arg+1,f
  3714  06A1  30FF               	movlw	255
  3715  06A2  05A2               	andwf	___ftpack@arg+2,f
  3716  06A3                     l757:	
  3717  06A3  1003               	clrc
  3718  06A4  0CA3               	rrf	___ftpack@exp,f
  3719  06A5  0823               	movf	___ftpack@exp,w
  3720  06A6  00F4               	movwf	??___ftpack
  3721  06A7  01F5               	clrf	??___ftpack+1
  3722  06A8  01F6               	clrf	??___ftpack+2
  3723  06A9  3010               	movlw	16
  3724  06AA                     u3185:	
  3725  06AA  1003               	clrc
  3726  06AB  0DF4               	rlf	??___ftpack,f
  3727  06AC  0DF5               	rlf	??___ftpack+1,f
  3728  06AD  0DF6               	rlf	??___ftpack+2,f
  3729  06AE  3EFF               	addlw	-1
  3730  06AF  1D03               	skipz
  3731  06B0  2EAA               	goto	u3185
  3732  06B1  0874               	movf	??___ftpack,w
  3733  06B2  04A0               	iorwf	___ftpack@arg,f
  3734  06B3  0875               	movf	??___ftpack+1,w
  3735  06B4  04A1               	iorwf	___ftpack@arg+1,f
  3736  06B5  0876               	movf	??___ftpack+2,w
  3737  06B6  04A2               	iorwf	___ftpack@arg+2,f
  3738  06B7  0824               	movf	___ftpack@sign,w
  3739  06B8  1903               	btfsc	3,2
  3740  06B9  0008               	return
  3741  06BA  17A2               	bsf	___ftpack@arg+2,7
  3742  06BB  0008               	return
  3743  06BC                     __end_of___ftpack:	
  3744                           
  3745                           	psect	text9
  3746  0035                     __ptext9:	
  3747 ;; *************** function _sprintf *****************
  3748 ;; Defined at:
  3749 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  sp              1    wreg     PTR unsigned char 
  3752 ;;		 -> sTemperature(2), 
  3753 ;;  f               1   75[BANK0 ] PTR const unsigned char 
  3754 ;;		 -> STR_2(4), 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  sp              1    8[BANK1 ] PTR unsigned char 
  3757 ;;		 -> sTemperature(2), 
  3758 ;;  tmpval          4    0        struct .
  3759 ;;  width           2    9[BANK1 ] int 
  3760 ;;  val             2    6[BANK1 ] unsigned int 
  3761 ;;  cp              2    0        PTR const unsigned char 
  3762 ;;  len             2    0        unsigned int 
  3763 ;;  c               1   11[BANK1 ] char 
  3764 ;;  flag            1    5[BANK1 ] unsigned char 
  3765 ;;  prec            1    4[BANK1 ] char 
  3766 ;;  ap              1    3[BANK1 ] PTR void [1]
  3767 ;;		 -> ?_sprintf(2), 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2   75[BANK0 ] int 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       3       0       0       0
  3778 ;;      Locals:         0       0       9       0       0
  3779 ;;      Temps:          0       0       3       0       0
  3780 ;;      Totals:         0       3      12       0       0
  3781 ;;Total ram usage:       15 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		___lwdiv
  3786 ;;		___lwmod
  3787 ;;		___wmul
  3788 ;;		_isdigit
  3789 ;; This function is called by:
  3790 ;;		_temp_Display
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function _sprintf
  3796  0035                     _sprintf:	
  3797                           
  3798                           ;incstack = 0
  3799                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3800                           ;sprintf@sp stored from wreg
  3801  0035  1683               	bsf	3,5	;RP0=1, select bank1
  3802  0036  1303               	bcf	3,6	;RP1=0, select bank1
  3803  0037  00D5               	movwf	sprintf@sp^(0+128)
  3804                           
  3805                           ;doprnt.c: 494: va_list ap;
  3806                           ;doprnt.c: 499: signed char c;
  3807                           ;doprnt.c: 501: int width;
  3808                           ;doprnt.c: 506: signed char prec;
  3809                           ;doprnt.c: 508: unsigned char flag;
  3810                           ;doprnt.c: 523: union {
  3811                           ;doprnt.c: 524: unsigned long vd;
  3812                           ;doprnt.c: 525: double integ;
  3813                           ;doprnt.c: 526: } tmpval;
  3814                           ;doprnt.c: 528: unsigned int val;
  3815                           ;doprnt.c: 529: unsigned len;
  3816                           ;doprnt.c: 530: const char * cp;
  3817                           ;doprnt.c: 533: *ap = __va_start();
  3818  0038  306C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3819  0039  00CD               	movwf	??_sprintf^(0+128)
  3820  003A  084D               	movf	??_sprintf^(0+128),w
  3821  003B  00D0               	movwf	sprintf@ap^(0+128)
  3822  003C                     l2961:	
  3823                           ;doprnt.c: 536: while(c = *f++) {
  3824                           
  3825  003C  3001               	movlw	1
  3826  003D  1283               	bcf	3,5	;RP0=0, select bank0
  3827  003E  1303               	bcf	3,6	;RP1=0, select bank0
  3828  003F  07EB               	addwf	sprintf@f,f
  3829  0040  30FF               	movlw	-1
  3830  0041  076B               	addwf	sprintf@f,w
  3831  0042  0084               	movwf	4
  3832  0043  120A  158A  200A  120A  118A  	fcall	stringdir
  3833  0048  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0049  1303               	bcf	3,6	;RP1=0, select bank1
  3835  004A  00CD               	movwf	??_sprintf^(0+128)
  3836  004B  084D               	movf	??_sprintf^(0+128),w
  3837  004C  00D8               	movwf	sprintf@c^(0+128)
  3838  004D  0858               	movf	sprintf@c^(0+128),w
  3839  004E  1903               	btfsc	3,2
  3840  004F  29CE               	goto	l2963
  3841                           
  3842                           ;doprnt.c: 538: if(c != '%')
  3843  0050  3025               	movlw	37
  3844  0051  0658               	xorwf	sprintf@c^(0+128),w
  3845  0052  1903               	btfsc	3,2
  3846  0053  2860               	goto	l2887
  3847                           
  3848                           ;doprnt.c: 540: {
  3849                           ;doprnt.c: 541: ((*sp++ = (c)));
  3850  0054  0858               	movf	sprintf@c^(0+128),w
  3851  0055  00CD               	movwf	??_sprintf^(0+128)
  3852  0056  0855               	movf	sprintf@sp^(0+128),w
  3853  0057  0084               	movwf	4
  3854  0058  084D               	movf	??_sprintf^(0+128),w
  3855  0059  1383               	bcf	3,7	;select IRP bank0
  3856  005A  0080               	movwf	0
  3857  005B  3001               	movlw	1
  3858  005C  00CD               	movwf	??_sprintf^(0+128)
  3859  005D  084D               	movf	??_sprintf^(0+128),w
  3860  005E  07D5               	addwf	sprintf@sp^(0+128),f
  3861                           
  3862                           ;doprnt.c: 542: continue;
  3863  005F  283C               	goto	l2961
  3864  0060                     l2887:	
  3865                           
  3866                           ;doprnt.c: 543: }
  3867                           ;doprnt.c: 546: width = 0;
  3868  0060  01D6               	clrf	sprintf@width^(0+128)
  3869  0061  01D7               	clrf	(sprintf@width+1)^(0+128)
  3870                           
  3871                           ;doprnt.c: 548: flag = 0;
  3872  0062  01D2               	clrf	sprintf@flag^(0+128)
  3873                           
  3874                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3875  0063  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0064  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0065  086B               	movf	sprintf@f,w
  3878  0066  0084               	movwf	4
  3879  0067  120A  158A  200A  120A  118A  	fcall	stringdir
  3880  006C  120A  158A  23CE  120A  118A  	fcall	_isdigit
  3881  0071  1C03               	btfss	3,0
  3882  0072  28C5               	goto	l2903
  3883                           
  3884                           ;doprnt.c: 598: width = 0;
  3885  0073  1683               	bsf	3,5	;RP0=1, select bank1
  3886  0074  1303               	bcf	3,6	;RP1=0, select bank1
  3887  0075  01D6               	clrf	sprintf@width^(0+128)
  3888  0076  01D7               	clrf	(sprintf@width+1)^(0+128)
  3889  0077                     l2893:	
  3890                           ;doprnt.c: 599: do {
  3891                           
  3892                           
  3893                           ;doprnt.c: 600: width *= 10;
  3894  0077  300A               	movlw	10
  3895  0078  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0079  1303               	bcf	3,6	;RP1=0, select bank0
  3897  007A  00A0               	movwf	___wmul@multiplier
  3898  007B  3000               	movlw	0
  3899  007C  00A1               	movwf	___wmul@multiplier+1
  3900  007D  1683               	bsf	3,5	;RP0=1, select bank1
  3901  007E  1303               	bcf	3,6	;RP1=0, select bank1
  3902  007F  0857               	movf	(sprintf@width+1)^(0+128),w
  3903  0080  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0081  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0082  00A3               	movwf	___wmul@multiplicand+1
  3906  0083  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0084  1303               	bcf	3,6	;RP1=0, select bank1
  3908  0085  0856               	movf	sprintf@width^(0+128),w
  3909  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3911  0088  00A2               	movwf	___wmul@multiplicand
  3912  0089  120A  158A  2456  120A  118A  	fcall	___wmul
  3913  008E  1283               	bcf	3,5	;RP0=0, select bank0
  3914  008F  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0090  0821               	movf	?___wmul+1,w
  3916  0091  1683               	bsf	3,5	;RP0=1, select bank1
  3917  0092  1303               	bcf	3,6	;RP1=0, select bank1
  3918  0093  00D7               	movwf	(sprintf@width+1)^(0+128)
  3919  0094  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0095  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0096  0820               	movf	?___wmul,w
  3922  0097  1683               	bsf	3,5	;RP0=1, select bank1
  3923  0098  1303               	bcf	3,6	;RP1=0, select bank1
  3924  0099  00D6               	movwf	sprintf@width^(0+128)
  3925                           
  3926                           ;doprnt.c: 601: width += *f++ - '0';
  3927  009A  1283               	bcf	3,5	;RP0=0, select bank0
  3928  009B  1303               	bcf	3,6	;RP1=0, select bank0
  3929  009C  086B               	movf	sprintf@f,w
  3930  009D  0084               	movwf	4
  3931  009E  120A  158A  200A  120A  118A  	fcall	stringdir
  3932  00A3  3ED0               	addlw	208
  3933  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  3934  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  3935  00A6  00CD               	movwf	??_sprintf^(0+128)
  3936  00A7  30FF               	movlw	255
  3937  00A8  1803               	skipnc
  3938  00A9  3000               	movlw	0
  3939  00AA  00CE               	movwf	(??_sprintf^(0+128)+1)
  3940  00AB  084D               	movf	??_sprintf^(0+128),w
  3941  00AC  07D6               	addwf	sprintf@width^(0+128),f
  3942  00AD  1803               	skipnc
  3943  00AE  0AD7               	incf	(sprintf@width+1)^(0+128),f
  3944  00AF  084E               	movf	(??_sprintf+1)^(0+128),w
  3945  00B0  07D7               	addwf	(sprintf@width+1)^(0+128),f
  3946  00B1  3001               	movlw	1
  3947  00B2  00CD               	movwf	??_sprintf^(0+128)
  3948  00B3  084D               	movf	??_sprintf^(0+128),w
  3949  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  3950  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  3951  00B6  07EB               	addwf	sprintf@f,f
  3952                           
  3953                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3954  00B7  086B               	movf	sprintf@f,w
  3955  00B8  0084               	movwf	4
  3956  00B9  120A  158A  200A  120A  118A  	fcall	stringdir
  3957  00BE  120A  158A  23CE  120A  118A  	fcall	_isdigit
  3958  00C3  1803               	btfsc	3,0
  3959  00C4  2877               	goto	l2893
  3960  00C5                     l2903:	
  3961                           ;doprnt.c: 822: }
  3962                           
  3963                           ;doprnt.c: 813: continue;
  3964                           
  3965                           ;doprnt.c: 802: default:
  3966                           
  3967                           ;doprnt.c: 698: case 'i':
  3968                           ;doprnt.c: 699: break;
  3969                           
  3970                           ;doprnt.c: 697: case 'd':
  3971                           
  3972                           ;doprnt.c: 638: goto alldone;
  3973                           
  3974                           ;doprnt.c: 637: case 0:
  3975                           
  3976                           ;doprnt.c: 608: }
  3977                           ;doprnt.c: 635: switch(c = *f++) {
  3978                           
  3979  00C5  3001               	movlw	1
  3980  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  3981  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  3982  00C8  07EB               	addwf	sprintf@f,f
  3983  00C9  30FF               	movlw	-1
  3984  00CA  076B               	addwf	sprintf@f,w
  3985  00CB  0084               	movwf	4
  3986  00CC  120A  158A  200A  120A  118A  	fcall	stringdir
  3987  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  3988  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  3989  00D3  00D8               	movwf	sprintf@c^(0+128)
  3990                           
  3991                           ; Switch size 1, requested type "space"
  3992                           ; Number of cases is 3, Range of values is 0 to 105
  3993                           ; switch strategies available:
  3994                           ; Name         Instructions Cycles
  3995                           ; simple_byte           10     6 (average)
  3996                           ; jumptable            260     6 (fixed)
  3997                           ;	Chosen strategy is simple_byte
  3998  00D4  3A00               	xorlw	0	; case 0
  3999  00D5  1903               	skipnz
  4000  00D6  29CE               	goto	l2963
  4001  00D7  3A64               	xorlw	100	; case 100
  4002  00D8  1903               	skipnz
  4003  00D9  28DE               	goto	l2905
  4004  00DA  3A0D               	xorlw	13	; case 105
  4005  00DB  1903               	skipnz
  4006  00DC  28DE               	goto	l2905
  4007  00DD  283C               	goto	l2961
  4008  00DE                     l2905:	
  4009                           
  4010                           ;doprnt.c: 1253: {
  4011                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4012  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  4013  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  4014  00E0  0850               	movf	sprintf@ap^(0+128),w
  4015  00E1  0084               	movwf	4
  4016  00E2  1383               	bcf	3,7	;select IRP bank0
  4017  00E3  0800               	movf	0,w
  4018  00E4  00D3               	movwf	sprintf@val^(0+128)
  4019  00E5  0A84               	incf	4,f
  4020  00E6  0800               	movf	0,w
  4021  00E7  00D4               	movwf	(sprintf@val+1)^(0+128)
  4022  00E8  3002               	movlw	2
  4023  00E9  00CD               	movwf	??_sprintf^(0+128)
  4024  00EA  084D               	movf	??_sprintf^(0+128),w
  4025  00EB  07D0               	addwf	sprintf@ap^(0+128),f
  4026                           
  4027                           ;doprnt.c: 1261: if((int)val < 0) {
  4028  00EC  1FD4               	btfss	(sprintf@val+1)^(0+128),7
  4029  00ED  28F7               	goto	l2915
  4030                           
  4031                           ;doprnt.c: 1262: flag |= 0x03;
  4032  00EE  3003               	movlw	3
  4033  00EF  00CD               	movwf	??_sprintf^(0+128)
  4034  00F0  084D               	movf	??_sprintf^(0+128),w
  4035  00F1  04D2               	iorwf	sprintf@flag^(0+128),f
  4036                           
  4037                           ;doprnt.c: 1263: val = -val;
  4038  00F2  09D3               	comf	sprintf@val^(0+128),f
  4039  00F3  09D4               	comf	(sprintf@val+1)^(0+128),f
  4040  00F4  0AD3               	incf	sprintf@val^(0+128),f
  4041  00F5  1903               	skipnz
  4042  00F6  0AD4               	incf	(sprintf@val+1)^(0+128),f
  4043  00F7                     l2915:	
  4044                           
  4045                           ;doprnt.c: 1264: }
  4046                           ;doprnt.c: 1266: }
  4047                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4048  00F7  01D8               	clrf	sprintf@c^(0+128)
  4049  00F8  0AD8               	incf	sprintf@c^(0+128),f
  4050  00F9  3005               	movlw	5
  4051  00FA  0658               	xorwf	sprintf@c^(0+128),w
  4052  00FB  1903               	btfsc	3,2
  4053  00FC  291E               	goto	l2927
  4054  00FD                     l2921:	
  4055                           
  4056                           ;doprnt.c: 1306: if(val < dpowers[c])
  4057  00FD  0858               	movf	sprintf@c^(0+128),w
  4058  00FE  00CD               	movwf	??_sprintf^(0+128)
  4059  00FF  074D               	addwf	??_sprintf^(0+128),w
  4060  0100  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4061  0101  0084               	movwf	4
  4062  0102  120A  158A  200A  120A  118A  	fcall	stringdir
  4063  0107  00CE               	movwf	(??_sprintf+1)^(0+128)
  4064  0108  120A  158A  200A  120A  118A  	fcall	stringdir
  4065  010D  00CF               	movwf	((??_sprintf+1)^(0+128)+1)
  4066  010E  084F               	movf	(??_sprintf+2)^(0+128),w
  4067  010F  0254               	subwf	(sprintf@val+1)^(0+128),w
  4068  0110  1D03               	skipz
  4069  0111  2914               	goto	u4105
  4070  0112  084E               	movf	(??_sprintf+1)^(0+128),w
  4071  0113  0253               	subwf	sprintf@val^(0+128),w
  4072  0114                     u4105:	
  4073  0114  1C03               	btfss	3,0
  4074  0115  291E               	goto	l2927
  4075                           
  4076                           ;doprnt.c: 1307: break;
  4077  0116  3001               	movlw	1
  4078  0117  00CD               	movwf	??_sprintf^(0+128)
  4079  0118  084D               	movf	??_sprintf^(0+128),w
  4080  0119  07D8               	addwf	sprintf@c^(0+128),f
  4081  011A  3005               	movlw	5
  4082  011B  0658               	xorwf	sprintf@c^(0+128),w
  4083  011C  1D03               	btfss	3,2
  4084  011D  28FD               	goto	l2921
  4085  011E                     l2927:	
  4086                           
  4087                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4088  011E  0856               	movf	sprintf@width^(0+128),w
  4089  011F  0457               	iorwf	(sprintf@width+1)^(0+128),w
  4090  0120  1903               	btfsc	3,2
  4091  0121  292C               	goto	l493
  4092  0122  0852               	movf	sprintf@flag^(0+128),w
  4093  0123  3903               	andlw	3
  4094  0124  1903               	btfsc	3,2
  4095  0125  292C               	goto	l493
  4096                           
  4097                           ;doprnt.c: 1346: width--;
  4098  0126  30FF               	movlw	255
  4099  0127  07D6               	addwf	sprintf@width^(0+128),f
  4100  0128  1803               	skipnc
  4101  0129  0AD7               	incf	(sprintf@width+1)^(0+128),f
  4102  012A  30FF               	movlw	255
  4103  012B  07D7               	addwf	(sprintf@width+1)^(0+128),f
  4104  012C                     l493:	
  4105                           
  4106                           ;doprnt.c: 1381: if(width > c)
  4107  012C  0858               	movf	sprintf@c^(0+128),w
  4108  012D  00CD               	movwf	??_sprintf^(0+128)
  4109  012E  01CE               	clrf	(??_sprintf^(0+128)+1)
  4110  012F  1BCD               	btfsc	??_sprintf^(0+128),7
  4111  0130  03CE               	decf	(??_sprintf^(0+128)+1),f
  4112  0131  084E               	movf	(??_sprintf+1)^(0+128),w
  4113  0132  3A80               	xorlw	128
  4114  0133  00CF               	movwf	(??_sprintf+2)^(0+128)
  4115  0134  0857               	movf	(sprintf@width+1)^(0+128),w
  4116  0135  3A80               	xorlw	128
  4117  0136  024F               	subwf	(??_sprintf+2)^(0+128),w
  4118  0137  1D03               	skipz
  4119  0138  293B               	goto	u4145
  4120  0139  0856               	movf	sprintf@width^(0+128),w
  4121  013A  024D               	subwf	??_sprintf^(0+128),w
  4122  013B                     u4145:	
  4123  013B  1803               	skipnc
  4124  013C  294B               	goto	l2935
  4125                           
  4126                           ;doprnt.c: 1382: width -= c;
  4127  013D  1683               	bsf	3,5	;RP0=1, select bank1
  4128  013E  1303               	bcf	3,6	;RP1=0, select bank1
  4129  013F  0858               	movf	sprintf@c^(0+128),w
  4130  0140  00CD               	movwf	??_sprintf^(0+128)
  4131  0141  01CE               	clrf	(??_sprintf^(0+128)+1)
  4132  0142  1BCD               	btfsc	??_sprintf^(0+128),7
  4133  0143  03CE               	decf	(??_sprintf^(0+128)+1),f
  4134  0144  084D               	movf	??_sprintf^(0+128),w
  4135  0145  02D6               	subwf	sprintf@width^(0+128),f
  4136  0146  084E               	movf	(??_sprintf+1)^(0+128),w
  4137  0147  1C03               	skipc
  4138  0148  03D7               	decf	(sprintf@width+1)^(0+128),f
  4139  0149  02D7               	subwf	(sprintf@width+1)^(0+128),f
  4140  014A  294F               	goto	l2937
  4141  014B                     l2935:	
  4142                           
  4143                           ;doprnt.c: 1383: else
  4144                           ;doprnt.c: 1384: width = 0;
  4145  014B  1683               	bsf	3,5	;RP0=1, select bank1
  4146  014C  1303               	bcf	3,6	;RP1=0, select bank1
  4147  014D  01D6               	clrf	sprintf@width^(0+128)
  4148  014E  01D7               	clrf	(sprintf@width+1)^(0+128)
  4149  014F                     l2937:	
  4150                           
  4151                           ;doprnt.c: 1422: {
  4152                           ;doprnt.c: 1424: if(width
  4153                           ;doprnt.c: 1428: )
  4154  014F  0856               	movf	sprintf@width^(0+128),w
  4155  0150  0457               	iorwf	(sprintf@width+1)^(0+128),w
  4156  0151  1903               	btfsc	3,2
  4157  0152  2968               	goto	l2945
  4158  0153                     l2939:	
  4159                           ;doprnt.c: 1429: do
  4160                           
  4161                           
  4162                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4163  0153  3020               	movlw	32
  4164  0154  00CD               	movwf	??_sprintf^(0+128)
  4165  0155  0855               	movf	sprintf@sp^(0+128),w
  4166  0156  0084               	movwf	4
  4167  0157  084D               	movf	??_sprintf^(0+128),w
  4168  0158  1383               	bcf	3,7	;select IRP bank0
  4169  0159  0080               	movwf	0
  4170  015A  3001               	movlw	1
  4171  015B  00CD               	movwf	??_sprintf^(0+128)
  4172  015C  084D               	movf	??_sprintf^(0+128),w
  4173  015D  07D5               	addwf	sprintf@sp^(0+128),f
  4174                           
  4175                           ;doprnt.c: 1431: while(--width);
  4176  015E  30FF               	movlw	255
  4177  015F  07D6               	addwf	sprintf@width^(0+128),f
  4178  0160  1803               	skipnc
  4179  0161  0AD7               	incf	(sprintf@width+1)^(0+128),f
  4180  0162  30FF               	movlw	255
  4181  0163  07D7               	addwf	(sprintf@width+1)^(0+128),f
  4182  0164  0856               	movf	sprintf@width^(0+128),w
  4183  0165  0457               	iorwf	(sprintf@width+1)^(0+128),w
  4184  0166  1D03               	btfss	3,2
  4185  0167  2953               	goto	l2939
  4186  0168                     l2945:	
  4187                           
  4188                           ;doprnt.c: 1438: if(flag & 0x03)
  4189  0168  0852               	movf	sprintf@flag^(0+128),w
  4190  0169  3903               	andlw	3
  4191  016A  1903               	btfsc	3,2
  4192  016B  2977               	goto	l2951
  4193                           
  4194                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4195  016C  302D               	movlw	45
  4196  016D  00CD               	movwf	??_sprintf^(0+128)
  4197  016E  0855               	movf	sprintf@sp^(0+128),w
  4198  016F  0084               	movwf	4
  4199  0170  084D               	movf	??_sprintf^(0+128),w
  4200  0171  1383               	bcf	3,7	;select IRP bank0
  4201  0172  0080               	movwf	0
  4202  0173  3001               	movlw	1
  4203  0174  00CD               	movwf	??_sprintf^(0+128)
  4204  0175  084D               	movf	??_sprintf^(0+128),w
  4205  0176  07D5               	addwf	sprintf@sp^(0+128),f
  4206  0177                     l2951:	
  4207                           
  4208                           ;doprnt.c: 1469: }
  4209                           ;doprnt.c: 1472: prec = c;
  4210  0177  0858               	movf	sprintf@c^(0+128),w
  4211  0178  00CD               	movwf	??_sprintf^(0+128)
  4212  0179  084D               	movf	??_sprintf^(0+128),w
  4213  017A  00D1               	movwf	sprintf@prec^(0+128)
  4214  017B                     l2959:	
  4215                           ;doprnt.c: 1474: while(prec--) {
  4216                           
  4217  017B  30FF               	movlw	255
  4218  017C  00CD               	movwf	??_sprintf^(0+128)
  4219  017D  084D               	movf	??_sprintf^(0+128),w
  4220  017E  07D1               	addwf	sprintf@prec^(0+128),f
  4221  017F  0A51               	incf	sprintf@prec^(0+128),w
  4222  0180  1903               	btfsc	3,2
  4223  0181  283C               	goto	l2961
  4224                           
  4225                           ;doprnt.c: 1478: {
  4226                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4227  0182  300A               	movlw	10
  4228  0183  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0184  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0185  00A7               	movwf	___lwmod@divisor
  4231  0186  3000               	movlw	0
  4232  0187  00A8               	movwf	___lwmod@divisor+1
  4233  0188  1683               	bsf	3,5	;RP0=1, select bank1
  4234  0189  1303               	bcf	3,6	;RP1=0, select bank1
  4235  018A  0851               	movf	sprintf@prec^(0+128),w
  4236  018B  00CD               	movwf	??_sprintf^(0+128)
  4237  018C  074D               	addwf	??_sprintf^(0+128),w
  4238  018D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4239  018E  0084               	movwf	4
  4240  018F  120A  158A  200A  120A  118A  	fcall	stringdir
  4241  0194  1283               	bcf	3,5	;RP0=0, select bank0
  4242  0195  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0196  00A0               	movwf	___lwdiv@divisor
  4244  0197  120A  158A  200A  120A  118A  	fcall	stringdir
  4245  019C  00A1               	movwf	___lwdiv@divisor+1
  4246  019D  1683               	bsf	3,5	;RP0=1, select bank1
  4247  019E  1303               	bcf	3,6	;RP1=0, select bank1
  4248  019F  0854               	movf	(sprintf@val+1)^(0+128),w
  4249  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4250  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4251  01A2  00A3               	movwf	___lwdiv@dividend+1
  4252  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  4253  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  4254  01A5  0853               	movf	sprintf@val^(0+128),w
  4255  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  4256  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  4257  01A8  00A2               	movwf	___lwdiv@dividend
  4258  01A9  120A  158A  25C8  120A  118A  	fcall	___lwdiv
  4259  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  4260  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  4261  01B0  0821               	movf	?___lwdiv+1,w
  4262  01B1  00AA               	movwf	___lwmod@dividend+1
  4263  01B2  0820               	movf	?___lwdiv,w
  4264  01B3  00A9               	movwf	___lwmod@dividend
  4265  01B4  120A  158A  2527  120A  118A  	fcall	___lwmod
  4266  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4267  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4268  01BB  0827               	movf	?___lwmod,w
  4269  01BC  3E30               	addlw	48
  4270  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  4271  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  4272  01BF  00CE               	movwf	(??_sprintf+1)^(0+128)
  4273  01C0  084E               	movf	(??_sprintf+1)^(0+128),w
  4274  01C1  00D8               	movwf	sprintf@c^(0+128)
  4275                           
  4276                           ;doprnt.c: 1523: }
  4277                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4278  01C2  0858               	movf	sprintf@c^(0+128),w
  4279  01C3  00CD               	movwf	??_sprintf^(0+128)
  4280  01C4  0855               	movf	sprintf@sp^(0+128),w
  4281  01C5  0084               	movwf	4
  4282  01C6  084D               	movf	??_sprintf^(0+128),w
  4283  01C7  1383               	bcf	3,7	;select IRP bank0
  4284  01C8  0080               	movwf	0
  4285  01C9  3001               	movlw	1
  4286  01CA  00CD               	movwf	??_sprintf^(0+128)
  4287  01CB  084D               	movf	??_sprintf^(0+128),w
  4288  01CC  07D5               	addwf	sprintf@sp^(0+128),f
  4289  01CD  297B               	goto	l2959
  4290  01CE                     l2963:	
  4291                           ;doprnt.c: 1525: }
  4292                           ;doprnt.c: 1533: }
  4293                           ;doprnt.c: 1535: alldone:
  4294                           
  4295                           
  4296                           ;doprnt.c: 1538: *sp = 0;
  4297  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  4298  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  4299  01D0  0855               	movf	sprintf@sp^(0+128),w
  4300  01D1  0084               	movwf	4
  4301  01D2  1383               	bcf	3,7	;select IRP bank0
  4302  01D3  0180               	clrf	0
  4303  01D4  0008               	return
  4304  01D5                     __end_of_sprintf:	
  4305                           ;doprnt.c: 1540: return 0;
  4306                           ;	Return value of _sprintf is never used
  4307                           
  4308                           
  4309                           	psect	text10
  4310  0BCE                     __ptext10:	
  4311 ;; *************** function _isdigit *****************
  4312 ;; Defined at:
  4313 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  c               1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  c               1    5[COMMON] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;		None               void
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         2       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0
  4330 ;;      Totals:         2       0       0       0       0
  4331 ;;Total ram usage:        2 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_sprintf
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _isdigit
  4343  0BCE                     _isdigit:	
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4347                           ;isdigit@c stored from wreg
  4348  0BCE  00F5               	movwf	isdigit@c
  4349  0BCF  01F4               	clrf	_isdigit$1444
  4350  0BD0  303A               	movlw	58
  4351  0BD1  0275               	subwf	isdigit@c,w
  4352  0BD2  1803               	skipnc
  4353  0BD3  2BDA               	goto	l1895
  4354  0BD4  3030               	movlw	48
  4355  0BD5  0275               	subwf	isdigit@c,w
  4356  0BD6  1C03               	skipc
  4357  0BD7  2BDA               	goto	l1895
  4358  0BD8  01F4               	clrf	_isdigit$1444
  4359  0BD9  0AF4               	incf	_isdigit$1444,f
  4360  0BDA                     l1895:	
  4361  0BDA  0C74               	rrf	_isdigit$1444,w
  4362  0BDB  0008               	return
  4363  0BDC                     __end_of_isdigit:	
  4364                           
  4365                           	psect	text11
  4366  0C56                     __ptext11:	
  4367 ;; *************** function ___wmul *****************
  4368 ;; Defined at:
  4369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4372 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  product         2    4[COMMON] unsigned int 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2    0[BANK0 ] unsigned int 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         0       4       0       0       0
  4385 ;;      Locals:         2       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0
  4387 ;;      Totals:         2       4       0       0       0
  4388 ;;Total ram usage:        6 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_sprintf
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           
  4399                           ;psect for function ___wmul
  4400  0C56                     ___wmul:	
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4404  0C56  01F4               	clrf	___wmul@product
  4405  0C57  01F5               	clrf	___wmul@product+1
  4406  0C58                     l2555:	
  4407  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0C5A  1C20               	btfss	___wmul@multiplier,0
  4410  0C5B  2C62               	goto	l588
  4411  0C5C  0822               	movf	___wmul@multiplicand,w
  4412  0C5D  07F4               	addwf	___wmul@product,f
  4413  0C5E  1803               	skipnc
  4414  0C5F  0AF5               	incf	___wmul@product+1,f
  4415  0C60  0823               	movf	___wmul@multiplicand+1,w
  4416  0C61  07F5               	addwf	___wmul@product+1,f
  4417  0C62                     l588:	
  4418  0C62  3001               	movlw	1
  4419  0C63                     u3235:	
  4420  0C63  1003               	clrc
  4421  0C64  0DA2               	rlf	___wmul@multiplicand,f
  4422  0C65  0DA3               	rlf	___wmul@multiplicand+1,f
  4423  0C66  3EFF               	addlw	-1
  4424  0C67  1D03               	skipz
  4425  0C68  2C63               	goto	u3235
  4426  0C69  3001               	movlw	1
  4427  0C6A                     u3245:	
  4428  0C6A  1003               	clrc
  4429  0C6B  0CA1               	rrf	___wmul@multiplier+1,f
  4430  0C6C  0CA0               	rrf	___wmul@multiplier,f
  4431  0C6D  3EFF               	addlw	-1
  4432  0C6E  1D03               	skipz
  4433  0C6F  2C6A               	goto	u3245
  4434  0C70  0820               	movf	___wmul@multiplier,w
  4435  0C71  0421               	iorwf	___wmul@multiplier+1,w
  4436  0C72  1D03               	btfss	3,2
  4437  0C73  2C58               	goto	l2555
  4438  0C74  0875               	movf	___wmul@product+1,w
  4439  0C75  00A1               	movwf	?___wmul+1
  4440  0C76  0874               	movf	___wmul@product,w
  4441  0C77  00A0               	movwf	?___wmul
  4442  0C78  0008               	return
  4443  0C79                     __end_of___wmul:	
  4444                           
  4445                           	psect	text12
  4446  0D27                     __ptext12:	
  4447 ;; *************** function ___lwmod *****************
  4448 ;; Defined at:
  4449 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  divisor         2    7[BANK0 ] unsigned int 
  4452 ;;  dividend        2    9[BANK0 ] unsigned int 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  counter         1    6[COMMON] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2    7[BANK0 ] unsigned int 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         0       4       0       0       0
  4465 ;;      Locals:         1       0       0       0       0
  4466 ;;      Temps:          1       0       0       0       0
  4467 ;;      Totals:         2       4       0       0       0
  4468 ;;Total ram usage:        6 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_sprintf
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function ___lwmod
  4480  0D27                     ___lwmod:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4484  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  4485  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  4486  0D29  0827               	movf	___lwmod@divisor,w
  4487  0D2A  0428               	iorwf	___lwmod@divisor+1,w
  4488  0D2B  1903               	btfsc	3,2
  4489  0D2C  2D56               	goto	l2787
  4490  0D2D  01F6               	clrf	___lwmod@counter
  4491  0D2E  0AF6               	incf	___lwmod@counter,f
  4492  0D2F                     l2777:	
  4493  0D2F  1BA8               	btfsc	___lwmod@divisor+1,7
  4494  0D30  2D3D               	goto	l2779
  4495  0D31  3001               	movlw	1
  4496  0D32                     u3855:	
  4497  0D32  1003               	clrc
  4498  0D33  0DA7               	rlf	___lwmod@divisor,f
  4499  0D34  0DA8               	rlf	___lwmod@divisor+1,f
  4500  0D35  3EFF               	addlw	-1
  4501  0D36  1D03               	skipz
  4502  0D37  2D32               	goto	u3855
  4503  0D38  3001               	movlw	1
  4504  0D39  00F5               	movwf	??___lwmod
  4505  0D3A  0875               	movf	??___lwmod,w
  4506  0D3B  07F6               	addwf	___lwmod@counter,f
  4507  0D3C  2D2F               	goto	l2777
  4508  0D3D                     l2779:	
  4509  0D3D  0828               	movf	___lwmod@divisor+1,w
  4510  0D3E  022A               	subwf	___lwmod@dividend+1,w
  4511  0D3F  1D03               	skipz
  4512  0D40  2D43               	goto	u3875
  4513  0D41  0827               	movf	___lwmod@divisor,w
  4514  0D42  0229               	subwf	___lwmod@dividend,w
  4515  0D43                     u3875:	
  4516  0D43  1C03               	skipc
  4517  0D44  2D4B               	goto	l2783
  4518  0D45  0827               	movf	___lwmod@divisor,w
  4519  0D46  02A9               	subwf	___lwmod@dividend,f
  4520  0D47  0828               	movf	___lwmod@divisor+1,w
  4521  0D48  1C03               	skipc
  4522  0D49  03AA               	decf	___lwmod@dividend+1,f
  4523  0D4A  02AA               	subwf	___lwmod@dividend+1,f
  4524  0D4B                     l2783:	
  4525  0D4B  3001               	movlw	1
  4526  0D4C                     u3885:	
  4527  0D4C  1003               	clrc
  4528  0D4D  0CA8               	rrf	___lwmod@divisor+1,f
  4529  0D4E  0CA7               	rrf	___lwmod@divisor,f
  4530  0D4F  3EFF               	addlw	-1
  4531  0D50  1D03               	skipz
  4532  0D51  2D4C               	goto	u3885
  4533  0D52  3001               	movlw	1
  4534  0D53  02F6               	subwf	___lwmod@counter,f
  4535  0D54  1D03               	btfss	3,2
  4536  0D55  2D3D               	goto	l2779
  4537  0D56                     l2787:	
  4538  0D56  082A               	movf	___lwmod@dividend+1,w
  4539  0D57  00A8               	movwf	?___lwmod+1
  4540  0D58  0829               	movf	___lwmod@dividend,w
  4541  0D59  00A7               	movwf	?___lwmod
  4542  0D5A  0008               	return
  4543  0D5B                     __end_of___lwmod:	
  4544                           
  4545                           	psect	text13
  4546  0DC8                     __ptext13:	
  4547 ;; *************** function ___lwdiv *****************
  4548 ;; Defined at:
  4549 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  divisor         2    0[BANK0 ] unsigned int 
  4552 ;;  dividend        2    2[BANK0 ] unsigned int 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  quotient        2    5[BANK0 ] unsigned int 
  4555 ;;  counter         1    4[BANK0 ] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    0[BANK0 ] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       4       0       0       0
  4566 ;;      Locals:         0       3       0       0       0
  4567 ;;      Temps:          1       0       0       0       0
  4568 ;;      Totals:         1       7       0       0       0
  4569 ;;Total ram usage:        8 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_temp_Measurement
  4576 ;;		_sprintf
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function ___lwdiv
  4582  0DC8                     ___lwdiv:	
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4586  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0DCA  01A5               	clrf	___lwdiv@quotient
  4589  0DCB  01A6               	clrf	___lwdiv@quotient+1
  4590  0DCC  0820               	movf	___lwdiv@divisor,w
  4591  0DCD  0421               	iorwf	___lwdiv@divisor+1,w
  4592  0DCE  1903               	btfsc	3,2
  4593  0DCF  2E01               	goto	l2765
  4594  0DD0  01A4               	clrf	___lwdiv@counter
  4595  0DD1  0AA4               	incf	___lwdiv@counter,f
  4596  0DD2                     l2753:	
  4597  0DD2  1BA1               	btfsc	___lwdiv@divisor+1,7
  4598  0DD3  2DE0               	goto	l2755
  4599  0DD4  3001               	movlw	1
  4600  0DD5                     u3785:	
  4601  0DD5  1003               	clrc
  4602  0DD6  0DA0               	rlf	___lwdiv@divisor,f
  4603  0DD7  0DA1               	rlf	___lwdiv@divisor+1,f
  4604  0DD8  3EFF               	addlw	-1
  4605  0DD9  1D03               	skipz
  4606  0DDA  2DD5               	goto	u3785
  4607  0DDB  3001               	movlw	1
  4608  0DDC  00F4               	movwf	??___lwdiv
  4609  0DDD  0874               	movf	??___lwdiv,w
  4610  0DDE  07A4               	addwf	___lwdiv@counter,f
  4611  0DDF  2DD2               	goto	l2753
  4612  0DE0                     l2755:	
  4613  0DE0  3001               	movlw	1
  4614  0DE1                     u3805:	
  4615  0DE1  1003               	clrc
  4616  0DE2  0DA5               	rlf	___lwdiv@quotient,f
  4617  0DE3  0DA6               	rlf	___lwdiv@quotient+1,f
  4618  0DE4  3EFF               	addlw	-1
  4619  0DE5  1D03               	skipz
  4620  0DE6  2DE1               	goto	u3805
  4621  0DE7  0821               	movf	___lwdiv@divisor+1,w
  4622  0DE8  0223               	subwf	___lwdiv@dividend+1,w
  4623  0DE9  1D03               	skipz
  4624  0DEA  2DED               	goto	u3815
  4625  0DEB  0820               	movf	___lwdiv@divisor,w
  4626  0DEC  0222               	subwf	___lwdiv@dividend,w
  4627  0DED                     u3815:	
  4628  0DED  1C03               	skipc
  4629  0DEE  2DF6               	goto	l2761
  4630  0DEF  0820               	movf	___lwdiv@divisor,w
  4631  0DF0  02A2               	subwf	___lwdiv@dividend,f
  4632  0DF1  0821               	movf	___lwdiv@divisor+1,w
  4633  0DF2  1C03               	skipc
  4634  0DF3  03A3               	decf	___lwdiv@dividend+1,f
  4635  0DF4  02A3               	subwf	___lwdiv@dividend+1,f
  4636  0DF5  1425               	bsf	___lwdiv@quotient,0
  4637  0DF6                     l2761:	
  4638  0DF6  3001               	movlw	1
  4639  0DF7                     u3825:	
  4640  0DF7  1003               	clrc
  4641  0DF8  0CA1               	rrf	___lwdiv@divisor+1,f
  4642  0DF9  0CA0               	rrf	___lwdiv@divisor,f
  4643  0DFA  3EFF               	addlw	-1
  4644  0DFB  1D03               	skipz
  4645  0DFC  2DF7               	goto	u3825
  4646  0DFD  3001               	movlw	1
  4647  0DFE  02A4               	subwf	___lwdiv@counter,f
  4648  0DFF  1D03               	btfss	3,2
  4649  0E00  2DE0               	goto	l2755
  4650  0E01                     l2765:	
  4651  0E01  0826               	movf	___lwdiv@quotient+1,w
  4652  0E02  00A1               	movwf	?___lwdiv+1
  4653  0E03  0825               	movf	___lwdiv@quotient,w
  4654  0E04  00A0               	movwf	?___lwdiv
  4655  0E05  0008               	return
  4656  0E06                     __end_of___lwdiv:	
  4657                           
  4658                           	psect	text14
  4659  0E87                     __ptext14:	
  4660 ;; *************** function _Lcd_write *****************
  4661 ;; Defined at:
  4662 ;;		line 95 in file "lcd_Config.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  string          2    3[BANK0 ] PTR unsigned char 
  4665 ;;		 -> sTemperature(2), STR_1(13), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  i               2    8[BANK0 ] int 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4677 ;;      Params:         0       2       0       0       0
  4678 ;;      Locals:         0       2       0       0       0
  4679 ;;      Temps:          0       3       0       0       0
  4680 ;;      Totals:         0       7       0       0       0
  4681 ;;Total ram usage:        7 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    3
  4684 ;; This function calls:
  4685 ;;		_Lcd_Write_Char
  4686 ;; This function is called by:
  4687 ;;		_temp_Display
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           
  4692                           ;psect for function _Lcd_write
  4693  0E87                     _Lcd_write:	
  4694                           
  4695                           ;lcd_Config.c: 96: int i;
  4696                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4700  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  4701  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  4702  0E89  01A8               	clrf	Lcd_write@i
  4703  0E8A  01A9               	clrf	Lcd_write@i+1
  4704  0E8B                     l2851:	
  4705  0E8B  0828               	movf	Lcd_write@i,w
  4706  0E8C  0723               	addwf	Lcd_write@string,w
  4707  0E8D  00A6               	movwf	??_Lcd_write+1
  4708  0E8E  0824               	movf	Lcd_write@string+1,w
  4709  0E8F  00A5               	movwf	??_Lcd_write
  4710  0E90  1803               	skipnc
  4711  0E91  0AA5               	incf	??_Lcd_write,f
  4712  0E92  1BA8               	btfsc	Lcd_write@i,7
  4713  0E93  03A5               	decf	??_Lcd_write,f
  4714  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0E96  0825               	movf	??_Lcd_write,w
  4717  0E97  00A7               	movwf	??_Lcd_write+2
  4718  0E98  0827               	movf	??_Lcd_write+2,w
  4719  0E99  00FF               	movwf	127
  4720  0E9A  0826               	movf	??_Lcd_write+1,w
  4721  0E9B  0084               	movwf	4
  4722  0E9C  120A  158A  2000  120A  158A  	fcall	stringtab
  4723  0EA1  3A00               	xorlw	0
  4724  0EA2  1903               	btfsc	3,2
  4725  0EA3  0008               	return
  4726                           
  4727                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4728  0EA4  0828               	movf	Lcd_write@i,w
  4729  0EA5  0723               	addwf	Lcd_write@string,w
  4730  0EA6  00A6               	movwf	??_Lcd_write+1
  4731  0EA7  0824               	movf	Lcd_write@string+1,w
  4732  0EA8  00A5               	movwf	??_Lcd_write
  4733  0EA9  1803               	skipnc
  4734  0EAA  0AA5               	incf	??_Lcd_write,f
  4735  0EAB  1BA8               	btfsc	Lcd_write@i,7
  4736  0EAC  03A5               	decf	??_Lcd_write,f
  4737  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0EAF  0825               	movf	??_Lcd_write,w
  4740  0EB0  00A7               	movwf	??_Lcd_write+2
  4741  0EB1  0827               	movf	??_Lcd_write+2,w
  4742  0EB2  00FF               	movwf	127
  4743  0EB3  0826               	movf	??_Lcd_write+1,w
  4744  0EB4  0084               	movwf	4
  4745  0EB5  120A  158A  2000  120A  158A  	fcall	stringtab
  4746  0EBA  120A  158A  2591  120A  158A  	fcall	_Lcd_Write_Char
  4747  0EBF  3001               	movlw	1
  4748  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0EC2  07A8               	addwf	Lcd_write@i,f
  4751  0EC3  1803               	skipnc
  4752  0EC4  0AA9               	incf	Lcd_write@i+1,f
  4753  0EC5  3000               	movlw	0
  4754  0EC6  07A9               	addwf	Lcd_write@i+1,f
  4755  0EC7  2E8B               	goto	l2851
  4756  0EC8                     __end_of_Lcd_write:	
  4757                           
  4758                           	psect	text15
  4759  0D91                     __ptext15:	
  4760 ;; *************** function _Lcd_Write_Char *****************
  4761 ;; Defined at:
  4762 ;;		line 80 in file "lcd_Config.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  a               1    wreg     unsigned char 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  a               1    2[BANK0 ] unsigned char 
  4767 ;;  y               1    1[BANK0 ] unsigned char 
  4768 ;;  temp            1    0[BANK0 ] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         0       0       0       0       0
  4779 ;;      Locals:         0       3       0       0       0
  4780 ;;      Temps:          1       0       0       0       0
  4781 ;;      Totals:         1       3       0       0       0
  4782 ;;Total ram usage:        4 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		_Lcd_Port
  4787 ;; This function is called by:
  4788 ;;		_Lcd_write
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _Lcd_Write_Char
  4794  0D91                     _Lcd_Write_Char:	
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4798                           ;Lcd_Write_Char@a stored from wreg
  4799  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0D93  00A2               	movwf	Lcd_Write_Char@a
  4802                           
  4803                           ;lcd_Config.c: 81: char temp, y;
  4804                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4805  0D94  0822               	movf	Lcd_Write_Char@a,w
  4806  0D95  390F               	andlw	15
  4807  0D96  00F5               	movwf	??_Lcd_Write_Char
  4808  0D97  0875               	movf	??_Lcd_Write_Char,w
  4809  0D98  00A0               	movwf	Lcd_Write_Char@temp
  4810                           
  4811                           ;lcd_Config.c: 83: y = a & 0xF0;
  4812  0D99  0822               	movf	Lcd_Write_Char@a,w
  4813  0D9A  39F0               	andlw	240
  4814  0D9B  00F5               	movwf	??_Lcd_Write_Char
  4815  0D9C  0875               	movf	??_Lcd_Write_Char,w
  4816  0D9D  00A1               	movwf	Lcd_Write_Char@y
  4817                           
  4818                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4819  0D9E  1686               	bsf	6,5	;volatile
  4820                           
  4821                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4822  0D9F  0821               	movf	Lcd_Write_Char@y,w
  4823  0DA0  00F5               	movwf	??_Lcd_Write_Char
  4824  0DA1  3004               	movlw	4
  4825  0DA2                     u3205:	
  4826  0DA2  1003               	clrc
  4827  0DA3  0CF5               	rrf	??_Lcd_Write_Char,f
  4828  0DA4  3EFF               	addlw	-1
  4829  0DA5  1D03               	skipz
  4830  0DA6  2DA2               	goto	u3205
  4831  0DA7  0875               	movf	??_Lcd_Write_Char,w
  4832  0DA8  120A  158A  243C  120A  158A  	fcall	_Lcd_Port
  4833                           
  4834                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4835  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0DAF  1606               	bsf	6,4	;volatile
  4838                           
  4839                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4840  0DB0  300D               	movlw	13
  4841  0DB1  00F5               	movwf	??_Lcd_Write_Char
  4842  0DB2                     u4287:	
  4843  0DB2  0BF5               	decfsz	??_Lcd_Write_Char,f
  4844  0DB3  2DB2               	goto	u4287
  4845                           
  4846                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4847  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0DB6  1206               	bcf	6,4	;volatile
  4850                           
  4851                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4852  0DB7  0820               	movf	Lcd_Write_Char@temp,w
  4853  0DB8  120A  158A  243C  120A  158A  	fcall	_Lcd_Port
  4854                           
  4855                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4856  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0DBF  1606               	bsf	6,4	;volatile
  4859                           
  4860                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4861  0DC0  300D               	movlw	13
  4862  0DC1  00F5               	movwf	??_Lcd_Write_Char
  4863  0DC2                     u4297:	
  4864  0DC2  0BF5               	decfsz	??_Lcd_Write_Char,f
  4865  0DC3  2DC2               	goto	u4297
  4866                           
  4867                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4868  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0DC6  1206               	bcf	6,4	;volatile
  4871  0DC7  0008               	return
  4872  0DC8                     __end_of_Lcd_Write_Char:	
  4873                           
  4874                           	psect	text16
  4875  0F58                     __ptext16:	
  4876 ;; *************** function _Lcd_Set_Cursor *****************
  4877 ;; Defined at:
  4878 ;;		line 45 in file "lcd_Config.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  raw             1    wreg     unsigned char 
  4881 ;;  column          1    1[BANK0 ] unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  raw             1    4[BANK0 ] unsigned char 
  4884 ;;  temp            1    7[BANK0 ] unsigned char 
  4885 ;;  y               1    6[BANK0 ] unsigned char 
  4886 ;;  z               1    5[BANK0 ] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         0       1       0       0       0
  4897 ;;      Locals:         0       4       0       0       0
  4898 ;;      Temps:          0       2       0       0       0
  4899 ;;      Totals:         0       7       0       0       0
  4900 ;;Total ram usage:        7 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    3
  4903 ;; This function calls:
  4904 ;;		_Lcd_Cmd
  4905 ;; This function is called by:
  4906 ;;		_temp_Display
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _Lcd_Set_Cursor
  4912  0F58                     _Lcd_Set_Cursor:	
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4916                           ;Lcd_Set_Cursor@raw stored from wreg
  4917  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  4918  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0F5A  00A4               	movwf	Lcd_Set_Cursor@raw
  4920                           
  4921                           ;lcd_Config.c: 46: char temp, z, y;
  4922                           ;lcd_Config.c: 47: if (raw == 1) {
  4923  0F5B  0324               	decf	Lcd_Set_Cursor@raw,w
  4924  0F5C  1D03               	btfss	3,2
  4925  0F5D  2F81               	goto	l2835
  4926                           
  4927                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4928  0F5E  0821               	movf	Lcd_Set_Cursor@column,w
  4929  0F5F  3E7F               	addlw	127
  4930  0F60  00A2               	movwf	??_Lcd_Set_Cursor
  4931  0F61  0822               	movf	??_Lcd_Set_Cursor,w
  4932  0F62  00A7               	movwf	Lcd_Set_Cursor@temp
  4933                           
  4934                           ;lcd_Config.c: 49: z = temp >> 4;
  4935  0F63  0827               	movf	Lcd_Set_Cursor@temp,w
  4936  0F64  00A2               	movwf	??_Lcd_Set_Cursor
  4937  0F65  3004               	movlw	4
  4938  0F66                     u3955:	
  4939  0F66  1003               	clrc
  4940  0F67  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4941  0F68  3EFF               	addlw	-1
  4942  0F69  1D03               	skipz
  4943  0F6A  2F66               	goto	u3955
  4944  0F6B  0822               	movf	??_Lcd_Set_Cursor,w
  4945  0F6C  00A3               	movwf	??_Lcd_Set_Cursor+1
  4946  0F6D  0823               	movf	??_Lcd_Set_Cursor+1,w
  4947  0F6E  00A5               	movwf	Lcd_Set_Cursor@z
  4948                           
  4949                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4950  0F6F  0827               	movf	Lcd_Set_Cursor@temp,w
  4951  0F70  390F               	andlw	15
  4952  0F71  00A2               	movwf	??_Lcd_Set_Cursor
  4953  0F72  0822               	movf	??_Lcd_Set_Cursor,w
  4954  0F73  00A6               	movwf	Lcd_Set_Cursor@y
  4955                           
  4956                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4957  0F74  0825               	movf	Lcd_Set_Cursor@z,w
  4958  0F75  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  4959                           
  4960                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4961  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0F7C  0826               	movf	Lcd_Set_Cursor@y,w
  4964  0F7D  120A  118A  27E6   	fcall	_Lcd_Cmd
  4965                           
  4966                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4967  0F80  0008               	return
  4968  0F81                     l2835:	
  4969  0F81  3002               	movlw	2
  4970  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0F84  0624               	xorwf	Lcd_Set_Cursor@raw,w
  4973  0F85  1D03               	btfss	3,2
  4974  0F86  0008               	return
  4975                           
  4976                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4977  0F87  0821               	movf	Lcd_Set_Cursor@column,w
  4978  0F88  3EBF               	addlw	191
  4979  0F89  00A2               	movwf	??_Lcd_Set_Cursor
  4980  0F8A  0822               	movf	??_Lcd_Set_Cursor,w
  4981  0F8B  00A7               	movwf	Lcd_Set_Cursor@temp
  4982                           
  4983                           ;lcd_Config.c: 55: z = temp >> 4;
  4984  0F8C  0827               	movf	Lcd_Set_Cursor@temp,w
  4985  0F8D  00A2               	movwf	??_Lcd_Set_Cursor
  4986  0F8E  3004               	movlw	4
  4987  0F8F                     u3975:	
  4988  0F8F  1003               	clrc
  4989  0F90  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4990  0F91  3EFF               	addlw	-1
  4991  0F92  1D03               	skipz
  4992  0F93  2F8F               	goto	u3975
  4993  0F94  0822               	movf	??_Lcd_Set_Cursor,w
  4994  0F95  00A3               	movwf	??_Lcd_Set_Cursor+1
  4995  0F96  0823               	movf	??_Lcd_Set_Cursor+1,w
  4996  0F97  00A5               	movwf	Lcd_Set_Cursor@z
  4997                           
  4998                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4999  0F98  0827               	movf	Lcd_Set_Cursor@temp,w
  5000  0F99  390F               	andlw	15
  5001  0F9A  00A2               	movwf	??_Lcd_Set_Cursor
  5002  0F9B  0822               	movf	??_Lcd_Set_Cursor,w
  5003  0F9C  00A6               	movwf	Lcd_Set_Cursor@y
  5004                           
  5005                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  5006  0F9D  0825               	movf	Lcd_Set_Cursor@z,w
  5007  0F9E  120A  118A  27E6  120A  158A  	fcall	_Lcd_Cmd
  5008                           
  5009                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  5010  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0FA5  0826               	movf	Lcd_Set_Cursor@y,w
  5013  0FA6  120A  118A  27E6   	fcall	_Lcd_Cmd
  5014  0FA9  0008               	return
  5015  0FAA                     __end_of_Lcd_Set_Cursor:	
  5016                           
  5017                           	psect	text17
  5018  0F0D                     __ptext17:	
  5019 ;; *************** function _system_Initialize *****************
  5020 ;; Defined at:
  5021 ;;		line 10 in file "SYST_Init.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5035 ;;      Params:         0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    4
  5042 ;; This function calls:
  5043 ;;		_ADC_Init
  5044 ;;		_Interrupt_Init
  5045 ;;		_Lcd_Init
  5046 ;;		_Oscillator_Init
  5047 ;;		_PWM_DutyCycle
  5048 ;;		_PWM_Init
  5049 ;;		_SPI_Init
  5050 ;;		_TMR0_Init
  5051 ;;		_UART_Init
  5052 ;;		_pinManager
  5053 ;; This function is called by:
  5054 ;;		_main
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function _system_Initialize
  5060  0F0D                     _system_Initialize:	
  5061                           
  5062                           ;SYST_Init.c: 11: Oscillator_Init();
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5066  0F0D  120A  158A  23A5  120A  158A  	fcall	_Oscillator_Init
  5067                           
  5068                           ;SYST_Init.c: 12: Interrupt_Init();
  5069  0F12  120A  158A  23DC  120A  158A  	fcall	_Interrupt_Init
  5070                           
  5071                           ;SYST_Init.c: 13: pinManager();
  5072  0F17  120A  158A  24A4  120A  158A  	fcall	_pinManager
  5073                           
  5074                           ;SYST_Init.c: 14: Lcd_Init();
  5075  0F1C  120A  118A  2725  120A  158A  	fcall	_Lcd_Init
  5076                           
  5077                           ;SYST_Init.c: 15: ADC_Init();
  5078  0F21  120A  158A  2423  120A  158A  	fcall	_ADC_Init
  5079                           
  5080                           ;SYST_Init.c: 16: TMR0_Init();
  5081  0F26  120A  158A  23EB  120A  158A  	fcall	_TMR0_Init
  5082                           
  5083                           ;SYST_Init.c: 17: PWM_Init(10000);
  5084  0F2B  3000               	movlw	0
  5085  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0F2E  00BC               	movwf	PWM_Init@iFrequency+3
  5088  0F2F  3000               	movlw	0
  5089  0F30  00BB               	movwf	PWM_Init@iFrequency+2
  5090  0F31  3027               	movlw	39
  5091  0F32  00BA               	movwf	PWM_Init@iFrequency+1
  5092  0F33  3010               	movlw	16
  5093  0F34  00B9               	movwf	PWM_Init@iFrequency
  5094  0F35  120A  158A  26C8  120A  158A  	fcall	_PWM_Init
  5095                           
  5096                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  5097  0F3A  3000               	movlw	0
  5098  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0F3D  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5101  0F3E  3000               	movlw	0
  5102  0F3F  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5103  0F40  3000               	movlw	0
  5104  0F41  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5105  0F42  3046               	movlw	70
  5106  0F43  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5107  0F44  120A  118A  25DF  120A  158A  	fcall	_PWM_DutyCycle
  5108                           
  5109                           ;SYST_Init.c: 19: SPI_Init();
  5110  0F49  120A  158A  23B3  120A  158A  	fcall	_SPI_Init
  5111                           
  5112                           ;SYST_Init.c: 20: UART_Init(9600);
  5113  0F4E  3080               	movlw	128
  5114  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0F51  00B9               	movwf	UART_Init@baudRate
  5117  0F52  3025               	movlw	37
  5118  0F53  00BA               	movwf	UART_Init@baudRate+1
  5119  0F54  120A  158A  2606   	fcall	_UART_Init
  5120  0F57  0008               	return
  5121  0F58                     __end_of_system_Initialize:	
  5122                           
  5123                           	psect	text18
  5124  0CA4                     __ptext18:	
  5125 ;; *************** function _pinManager *****************
  5126 ;; Defined at:
  5127 ;;		line 19 in file "pin_Manager.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		status,2
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_system_Initialize
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function _pinManager
  5157  0CA4                     _pinManager:	
  5158                           
  5159                           ;pin_Manager.c: 21: TRISD = 0;
  5160                           
  5161                           ;incstack = 0
  5162                           ; Regs used in _pinManager: [status,2]
  5163  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  5164  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  5165  0CA6  0188               	clrf	8	;volatile
  5166                           
  5167                           ;pin_Manager.c: 23: ANSELH = 0;
  5168  0CA7  1683               	bsf	3,5	;RP0=1, select bank3
  5169  0CA8  1703               	bsf	3,6	;RP1=1, select bank3
  5170  0CA9  0189               	clrf	9	;volatile
  5171                           
  5172                           ;pin_Manager.c: 24: TRISB = 0;
  5173  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0CAC  0186               	clrf	6	;volatile
  5176                           
  5177                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  5178  0CAD  1706               	bsf	6,6	;volatile
  5179                           
  5180                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  5181  0CAE  1786               	bsf	6,7	;volatile
  5182                           
  5183                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  5184  0CAF  1107               	bcf	7,2	;volatile
  5185                           
  5186                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  5187  0CB0  1683               	bsf	3,5	;RP0=1, select bank3
  5188  0CB1  1703               	bsf	3,6	;RP1=1, select bank3
  5189  0CB2  1088               	bcf	8,1	;volatile
  5190                           
  5191                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  5192  0CB3  1108               	bcf	8,2	;volatile
  5193                           
  5194                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  5195  0CB4  1188               	bcf	8,3	;volatile
  5196                           
  5197                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  5198  0CB5  1208               	bcf	8,4	;volatile
  5199                           
  5200                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  5201  0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  5202  0CB7  1303               	bcf	3,6	;RP1=0, select bank1
  5203  0CB8  1085               	bcf	5,1	;volatile
  5204                           
  5205                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  5206  0CB9  1105               	bcf	5,2	;volatile
  5207                           
  5208                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  5209  0CBA  1185               	bcf	5,3	;volatile
  5210                           
  5211                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  5212  0CBB  1205               	bcf	5,4	;volatile
  5213                           
  5214                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  5215  0CBC  1683               	bsf	3,5	;RP0=1, select bank3
  5216  0CBD  1703               	bsf	3,6	;RP1=1, select bank3
  5217  0CBE  1408               	bsf	8,0	;volatile
  5218                           
  5219                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  5220  0CBF  1288               	bcf	8,5	;volatile
  5221                           
  5222                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  5223  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  5224  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  5225  0CC2  1405               	bsf	5,0	;volatile
  5226                           
  5227                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  5228  0CC3  1287               	bcf	7,5	;volatile
  5229                           
  5230                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  5231  0CC4  1607               	bsf	7,4	;volatile
  5232                           
  5233                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  5234  0CC5  1285               	bcf	5,5	;volatile
  5235                           
  5236                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  5237  0CC6  1187               	bcf	7,3	;volatile
  5238                           
  5239                           ;pin_Manager.c: 51: PORTA = 0;
  5240  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5241  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5242  0CC9  0185               	clrf	5	;volatile
  5243                           
  5244                           ;pin_Manager.c: 52: PORTB = 0;
  5245  0CCA  0186               	clrf	6	;volatile
  5246                           
  5247                           ;pin_Manager.c: 53: PORTC = 0;
  5248  0CCB  0187               	clrf	7	;volatile
  5249                           
  5250                           ;pin_Manager.c: 54: PORTD = 0;
  5251  0CCC  0188               	clrf	8	;volatile
  5252                           
  5253                           ;pin_Manager.c: 55: PORTE = 0;
  5254  0CCD  0189               	clrf	9	;volatile
  5255  0CCE  0008               	return
  5256  0CCF                     __end_of_pinManager:	
  5257                           
  5258                           	psect	text19
  5259  0E06                     __ptext19:	
  5260 ;; *************** function _UART_Init *****************
  5261 ;; Defined at:
  5262 ;;		line 10 in file "uart_Init.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  baudRate        2   25[BANK0 ] unsigned int 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, pclath, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       2       0       0       0
  5277 ;;      Locals:         0       0       0       0       0
  5278 ;;      Temps:          0       4       0       0       0
  5279 ;;      Totals:         0       6       0       0       0
  5280 ;;Total ram usage:        6 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    2
  5283 ;; This function calls:
  5284 ;;		___lldiv
  5285 ;; This function is called by:
  5286 ;;		_system_Initialize
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _UART_Init
  5292  0E06                     _UART_Init:	
  5293                           
  5294                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  5298  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  5299  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  5300  0E08  1707               	bsf	7,6	;volatile
  5301                           
  5302                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  5303  0E09  1787               	bsf	7,7	;volatile
  5304                           
  5305                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  5306  0E0A  1698               	bsf	24,5	;volatile
  5307                           
  5308                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  5309  0E0B  1218               	bcf	24,4	;volatile
  5310                           
  5311                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  5312  0E0C  1318               	bcf	24,6	;volatile
  5313                           
  5314                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  5315  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0E0F  1798               	bsf	24,7	;volatile
  5318                           
  5319                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  5320  0E10  1618               	bsf	24,4	;volatile
  5321                           
  5322                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  5323  0E11  1318               	bcf	24,6	;volatile
  5324                           
  5325                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  5326  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  5327  0E13  1303               	bcf	3,6	;RP1=0, select bank1
  5328  0E14  1518               	bsf	24,2	;volatile
  5329                           
  5330                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  5331  0E15  1683               	bsf	3,5	;RP0=1, select bank3
  5332  0E16  1703               	bsf	3,6	;RP1=1, select bank3
  5333  0E17  1187               	bcf	7,3	;volatile
  5334                           
  5335                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  5336  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  5337  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  5338  0E1A  0839               	movf	UART_Init@baudRate,w
  5339  0E1B  00AC               	movwf	___lldiv@divisor
  5340  0E1C  083A               	movf	UART_Init@baudRate+1,w
  5341  0E1D  00AD               	movwf	___lldiv@divisor+1
  5342  0E1E  01AE               	clrf	___lldiv@divisor+2
  5343  0E1F  01AF               	clrf	___lldiv@divisor+3
  5344  0E20  3000               	movlw	0
  5345  0E21  00B3               	movwf	___lldiv@dividend+3
  5346  0E22  303D               	movlw	61
  5347  0E23  00B2               	movwf	___lldiv@dividend+2
  5348  0E24  3009               	movlw	9
  5349  0E25  00B1               	movwf	___lldiv@dividend+1
  5350  0E26  3000               	movlw	0
  5351  0E27  00B0               	movwf	___lldiv@dividend
  5352  0E28  120A  118A  2786  120A  158A  	fcall	___lldiv
  5353  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  5354  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0E2F  082C               	movf	?___lldiv,w
  5356  0E30  00BB               	movwf	??_UART_Init
  5357  0E31  082D               	movf	?___lldiv+1,w
  5358  0E32  00BC               	movwf	??_UART_Init+1
  5359  0E33  082E               	movf	?___lldiv+2,w
  5360  0E34  00BD               	movwf	??_UART_Init+2
  5361  0E35  082F               	movf	?___lldiv+3,w
  5362  0E36  00BE               	movwf	??_UART_Init+3
  5363  0E37  3004               	movlw	4
  5364  0E38                     u2705:	
  5365  0E38  1003               	clrc
  5366  0E39  0CBE               	rrf	??_UART_Init+3,f
  5367  0E3A  0CBD               	rrf	??_UART_Init+2,f
  5368  0E3B  0CBC               	rrf	??_UART_Init+1,f
  5369  0E3C  0CBB               	rrf	??_UART_Init,f
  5370  0E3D  3EFF               	addlw	-1
  5371  0E3E  1D03               	skipz
  5372  0E3F  2E38               	goto	u2705
  5373  0E40  083B               	movf	??_UART_Init,w
  5374  0E41  3EFF               	addlw	255
  5375  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  5376  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  5377  0E44  0099               	movwf	25	;volatile
  5378  0E45  0008               	return
  5379  0E46                     __end_of_UART_Init:	
  5380                           
  5381                           	psect	text20
  5382  0BEB                     __ptext20:	
  5383 ;; *************** function _TMR0_Init *****************
  5384 ;; Defined at:
  5385 ;;		line 19 in file "timer_Init.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5399 ;;      Params:         0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    1
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_system_Initialize
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           
  5414                           ;psect for function _TMR0_Init
  5415  0BEB                     _TMR0_Init:	
  5416                           
  5417                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  5421  0BEB  168B               	bsf	11,5	;volatile
  5422                           
  5423                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  5424  0BEC  110B               	bcf	11,2	;volatile
  5425                           
  5426                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  5427  0BED  1683               	bsf	3,5	;RP0=1, select bank1
  5428  0BEE  1303               	bcf	3,6	;RP1=0, select bank1
  5429  0BEF  1281               	bcf	1,5	;volatile
  5430                           
  5431                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  5432  0BF0  1181               	bcf	1,3	;volatile
  5433                           
  5434                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  5435  0BF1  0801               	movf	1,w	;volatile
  5436  0BF2  39F8               	andlw	-8
  5437  0BF3  3805               	iorlw	5
  5438  0BF4  0081               	movwf	1	;volatile
  5439                           
  5440                           ;timer_Init.c: 26: TMR0 = 100;
  5441  0BF5  3064               	movlw	100
  5442  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0BF8  0081               	movwf	1	;volatile
  5445  0BF9  0008               	return
  5446  0BFA                     __end_of_TMR0_Init:	
  5447                           
  5448                           	psect	text21
  5449  0BB3                     __ptext21:	
  5450 ;; *************** function _SPI_Init *****************
  5451 ;; Defined at:
  5452 ;;		line 10 in file "spi_Init.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5466 ;;      Params:         0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_system_Initialize
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _SPI_Init
  5482  0BB3                     _SPI_Init:	
  5483                           
  5484                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5488  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  5489  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  5490  0BB5  1694               	bsf	20,5	;volatile
  5491                           
  5492                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5493  0BB6  30F0               	movlw	-16
  5494  0BB7  0594               	andwf	20,f	;volatile
  5495                           
  5496                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5497  0BB8  1394               	bcf	20,7	;volatile
  5498                           
  5499                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5500  0BB9  1683               	bsf	3,5	;RP0=1, select bank1
  5501  0BBA  1303               	bcf	3,6	;RP1=0, select bank1
  5502  0BBB  158C               	bsf	12,3	;volatile
  5503                           
  5504                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5505  0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0BBE  118C               	bcf	12,3	;volatile
  5508  0BBF  0008               	return
  5509  0BC0                     __end_of_SPI_Init:	
  5510                           
  5511                           	psect	text22
  5512  0EC8                     __ptext22:	
  5513 ;; *************** function _PWM_Init *****************
  5514 ;; Defined at:
  5515 ;;		line 14 in file "pwm_Init.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5529 ;;      Params:         0       4       0       0       0
  5530 ;;      Locals:         0       0       0       0       0
  5531 ;;      Temps:          0       4       0       0       0
  5532 ;;      Totals:         0       8       0       0       0
  5533 ;;Total ram usage:        8 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    2
  5536 ;; This function calls:
  5537 ;;		___lldiv
  5538 ;; This function is called by:
  5539 ;;		_system_Initialize
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _PWM_Init
  5545  0EC8                     _PWM_Init:	
  5546                           
  5547                           ;pwm_Init.c: 15: TRISCbits.TRISC2 = 1;
  5548                           
  5549                           ;incstack = 0
  5550                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5551  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  5552  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  5553  0ECA  1507               	bsf	7,2	;volatile
  5554                           
  5555                           ;pwm_Init.c: 17: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5556  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  5557  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  5558  0ECD  0839               	movf	PWM_Init@iFrequency,w
  5559  0ECE  00BD               	movwf	??_PWM_Init
  5560  0ECF  083A               	movf	PWM_Init@iFrequency+1,w
  5561  0ED0  00BE               	movwf	??_PWM_Init+1
  5562  0ED1  083B               	movf	PWM_Init@iFrequency+2,w
  5563  0ED2  00BF               	movwf	??_PWM_Init+2
  5564  0ED3  083C               	movf	PWM_Init@iFrequency+3,w
  5565  0ED4  00C0               	movwf	??_PWM_Init+3
  5566  0ED5  3002               	movlw	2
  5567  0ED6                     u2675:	
  5568  0ED6  1003               	clrc
  5569  0ED7  0DBD               	rlf	??_PWM_Init,f
  5570  0ED8  0DBE               	rlf	??_PWM_Init+1,f
  5571  0ED9  0DBF               	rlf	??_PWM_Init+2,f
  5572  0EDA  0DC0               	rlf	??_PWM_Init+3,f
  5573  0EDB  3EFF               	addlw	-1
  5574  0EDC  1D03               	skipz
  5575  0EDD  2ED6               	goto	u2675
  5576  0EDE  0840               	movf	??_PWM_Init+3,w
  5577  0EDF  00AF               	movwf	___lldiv@divisor+3
  5578  0EE0  083F               	movf	??_PWM_Init+2,w
  5579  0EE1  00AE               	movwf	___lldiv@divisor+2
  5580  0EE2  083E               	movf	??_PWM_Init+1,w
  5581  0EE3  00AD               	movwf	___lldiv@divisor+1
  5582  0EE4  083D               	movf	??_PWM_Init,w
  5583  0EE5  00AC               	movwf	___lldiv@divisor
  5584  0EE6  3000               	movlw	0
  5585  0EE7  00B3               	movwf	___lldiv@dividend+3
  5586  0EE8  303D               	movlw	61
  5587  0EE9  00B2               	movwf	___lldiv@dividend+2
  5588  0EEA  3009               	movlw	9
  5589  0EEB  00B1               	movwf	___lldiv@dividend+1
  5590  0EEC  3000               	movlw	0
  5591  0EED  00B0               	movwf	___lldiv@dividend
  5592  0EEE  120A  118A  2786   	fcall	___lldiv
  5593  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0EF3  082C               	movf	?___lldiv,w
  5596  0EF4  3EFF               	addlw	255
  5597  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  5598  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  5599  0EF7  0092               	movwf	18	;volatile
  5600                           
  5601                           ;pwm_Init.c: 18: CCP1CONbits.P1M = 0b00;
  5602  0EF8  303F               	movlw	-193
  5603  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0EFB  0597               	andwf	23,f	;volatile
  5606                           
  5607                           ;pwm_Init.c: 19: CCP1CONbits.CCP1M = 0b1100;
  5608  0EFC  0817               	movf	23,w	;volatile
  5609  0EFD  39F0               	andlw	-16
  5610  0EFE  380C               	iorlw	12
  5611  0EFF  0097               	movwf	23	;volatile
  5612                           
  5613                           ;pwm_Init.c: 20: CCP1CONbits.DC1B = 0b00;
  5614  0F00  30CF               	movlw	-49
  5615  0F01  0597               	andwf	23,f	;volatile
  5616                           
  5617                           ;pwm_Init.c: 21: CCPR1L = 0x00;
  5618  0F02  0195               	clrf	21	;volatile
  5619                           
  5620                           ;pwm_Init.c: 23: PIR1bits.TMR2IF = 0;
  5621  0F03  108C               	bcf	12,1	;volatile
  5622                           
  5623                           ;pwm_Init.c: 24: T2CONbits.TOUTPS = 0b0000;
  5624  0F04  3087               	movlw	-121
  5625  0F05  0592               	andwf	18,f	;volatile
  5626                           
  5627                           ;pwm_Init.c: 25: T2CONbits.T2CKPS = 0b00;
  5628  0F06  30FC               	movlw	-4
  5629  0F07  0592               	andwf	18,f	;volatile
  5630                           
  5631                           ;pwm_Init.c: 26: T2CONbits.TMR2ON = 1;
  5632  0F08  1512               	bsf	18,2	;volatile
  5633                           
  5634                           ;pwm_Init.c: 27: TRISCbits.TRISC2 = 0;
  5635  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  5636  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  5637  0F0B  1107               	bcf	7,2	;volatile
  5638  0F0C  0008               	return
  5639  0F0D                     __end_of_PWM_Init:	
  5640                           
  5641                           	psect	text23
  5642  05DF                     __ptext23:	
  5643 ;; *************** function _PWM_DutyCycle *****************
  5644 ;; Defined at:
  5645 ;;		line 30 in file "pwm_Init.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       4       0       0       0
  5660 ;;      Locals:         0       0       0       0       0
  5661 ;;      Temps:          0       4       0       0       0
  5662 ;;      Totals:         0       8       0       0       0
  5663 ;;Total ram usage:        8 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    2
  5666 ;; This function calls:
  5667 ;;		___lldiv
  5668 ;;		___lmul
  5669 ;; This function is called by:
  5670 ;;		_system_Initialize
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function _PWM_DutyCycle
  5676  05DF                     _PWM_DutyCycle:	
  5677                           
  5678                           ;pwm_Init.c: 32: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5679                           
  5680                           ;incstack = 0
  5681                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5682  05DF  3000               	movlw	0
  5683  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  5684  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  5685  05E2  00AF               	movwf	___lldiv@divisor+3
  5686  05E3  3000               	movlw	0
  5687  05E4  00AE               	movwf	___lldiv@divisor+2
  5688  05E5  3000               	movlw	0
  5689  05E6  00AD               	movwf	___lldiv@divisor+1
  5690  05E7  3064               	movlw	100
  5691  05E8  00AC               	movwf	___lldiv@divisor
  5692  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  5693  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  5694  05EB  0812               	movf	18,w	;volatile
  5695  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  5696  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  5697  05EE  00BD               	movwf	??_PWM_DutyCycle
  5698  05EF  01BE               	clrf	??_PWM_DutyCycle+1
  5699  05F0  1003               	clrc
  5700  05F1  0DBD               	rlf	??_PWM_DutyCycle,f
  5701  05F2  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5702  05F3  1003               	clrc
  5703  05F4  0DBD               	rlf	??_PWM_DutyCycle,f
  5704  05F5  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5705  05F6  083D               	movf	??_PWM_DutyCycle,w
  5706  05F7  3E04               	addlw	4
  5707  05F8  00A0               	movwf	___lmul@multiplier
  5708  05F9  083E               	movf	??_PWM_DutyCycle+1,w
  5709  05FA  1803               	skipnc
  5710  05FB  3E01               	addlw	1
  5711  05FC  3E00               	addlw	0
  5712  05FD  00A1               	movwf	___lmul@multiplier+1
  5713  05FE  01A2               	clrf	___lmul@multiplier+2
  5714  05FF  1BA1               	btfsc	___lmul@multiplier+1,7
  5715  0600  03A2               	decf	___lmul@multiplier+2,f
  5716  0601  0822               	movf	___lmul@multiplier+2,w
  5717  0602  00A3               	movwf	___lmul@multiplier+3
  5718  0603  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5719  0604  00A7               	movwf	___lmul@multiplicand+3
  5720  0605  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5721  0606  00A6               	movwf	___lmul@multiplicand+2
  5722  0607  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5723  0608  00A5               	movwf	___lmul@multiplicand+1
  5724  0609  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5725  060A  00A4               	movwf	___lmul@multiplicand
  5726  060B  120A  158A  2646  120A  118A  	fcall	___lmul
  5727  0610  1283               	bcf	3,5	;RP0=0, select bank0
  5728  0611  1303               	bcf	3,6	;RP1=0, select bank0
  5729  0612  0823               	movf	?___lmul+3,w
  5730  0613  00B3               	movwf	___lldiv@dividend+3
  5731  0614  0822               	movf	?___lmul+2,w
  5732  0615  00B2               	movwf	___lldiv@dividend+2
  5733  0616  0821               	movf	?___lmul+1,w
  5734  0617  00B1               	movwf	___lldiv@dividend+1
  5735  0618  0820               	movf	?___lmul,w
  5736  0619  00B0               	movwf	___lldiv@dividend
  5737  061A  120A  118A  2786  120A  118A  	fcall	___lldiv
  5738  061F  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0620  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0621  082F               	movf	?___lldiv+3,w
  5741  0622  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5742  0623  082E               	movf	?___lldiv+2,w
  5743  0624  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5744  0625  082D               	movf	?___lldiv+1,w
  5745  0626  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5746  0627  082C               	movf	?___lldiv,w
  5747  0628  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5748                           
  5749                           ;pwm_Init.c: 33: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5750  0629  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5751  062A  00BD               	movwf	??_PWM_DutyCycle
  5752  062B  3003               	movlw	3
  5753  062C                     u3925:	
  5754  062C  1003               	clrc
  5755  062D  0DBD               	rlf	??_PWM_DutyCycle,f
  5756  062E  3EFF               	addlw	-1
  5757  062F  1D03               	skipz
  5758  0630  2E2C               	goto	u3925
  5759  0631  1003               	clrc
  5760  0632  0D3D               	rlf	??_PWM_DutyCycle,w
  5761  0633  00BE               	movwf	??_PWM_DutyCycle+1
  5762  0634  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5763  0635  0817               	movf	23,w	;volatile
  5764  0636  063E               	xorwf	??_PWM_DutyCycle+1,w
  5765  0637  39CF               	andlw	-49
  5766  0638  063E               	xorwf	??_PWM_DutyCycle+1,w
  5767  0639  0097               	movwf	23	;volatile
  5768                           
  5769                           ;pwm_Init.c: 34: CCPR1L = (iDutyCycle >> 2);
  5770  063A  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5771  063B  00BD               	movwf	??_PWM_DutyCycle
  5772  063C  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5773  063D  00BE               	movwf	??_PWM_DutyCycle+1
  5774  063E  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5775  063F  00BF               	movwf	??_PWM_DutyCycle+2
  5776  0640  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5777  0641  00C0               	movwf	??_PWM_DutyCycle+3
  5778  0642  3002               	movlw	2
  5779  0643                     u3935:	
  5780  0643  1003               	clrc
  5781  0644  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5782  0645  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5783  0646  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5784  0647  0CBD               	rrf	??_PWM_DutyCycle,f
  5785  0648  3EFF               	addlw	-1
  5786  0649  1D03               	skipz
  5787  064A  2E43               	goto	u3935
  5788  064B  083D               	movf	??_PWM_DutyCycle,w
  5789  064C  0095               	movwf	21	;volatile
  5790  064D  0008               	return
  5791  064E                     __end_of_PWM_DutyCycle:	
  5792                           
  5793                           	psect	text24
  5794  0E46                     __ptext24:	
  5795 ;; *************** function ___lmul *****************
  5796 ;; Defined at:
  5797 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5800 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  product         4    8[BANK0 ] unsigned long 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  4    0[BANK0 ] unsigned long 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         0       8       0       0       0
  5813 ;;      Locals:         0       4       0       0       0
  5814 ;;      Temps:          1       0       0       0       0
  5815 ;;      Totals:         1      12       0       0       0
  5816 ;;Total ram usage:       13 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_PWM_DutyCycle
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function ___lmul
  5828  0E46                     ___lmul:	
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5832  0E46  3000               	movlw	0
  5833  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  5834  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  5835  0E49  00AB               	movwf	___lmul@product+3
  5836  0E4A  3000               	movlw	0
  5837  0E4B  00AA               	movwf	___lmul@product+2
  5838  0E4C  3000               	movlw	0
  5839  0E4D  00A9               	movwf	___lmul@product+1
  5840  0E4E  3000               	movlw	0
  5841  0E4F  00A8               	movwf	___lmul@product
  5842  0E50                     l2569:	
  5843  0E50  1C20               	btfss	___lmul@multiplier,0
  5844  0E51  2E66               	goto	l2573
  5845  0E52  0824               	movf	___lmul@multiplicand,w
  5846  0E53  07A8               	addwf	___lmul@product,f
  5847  0E54  0825               	movf	___lmul@multiplicand+1,w
  5848  0E55  1103               	clrz
  5849  0E56  1803               	skipnc
  5850  0E57  3E01               	addlw	1
  5851  0E58  1D03               	btfss	3,2
  5852  0E59  07A9               	addwf	___lmul@product+1,f
  5853  0E5A  0826               	movf	___lmul@multiplicand+2,w
  5854  0E5B  1103               	clrz
  5855  0E5C  1803               	skipnc
  5856  0E5D  3E01               	addlw	1
  5857  0E5E  1D03               	btfss	3,2
  5858  0E5F  07AA               	addwf	___lmul@product+2,f
  5859  0E60  0827               	movf	___lmul@multiplicand+3,w
  5860  0E61  1103               	clrz
  5861  0E62  1803               	skipnc
  5862  0E63  3E01               	addlw	1
  5863  0E64  1D03               	btfss	3,2
  5864  0E65  07AB               	addwf	___lmul@product+3,f
  5865  0E66                     l2573:	
  5866  0E66  3001               	movlw	1
  5867  0E67  00F4               	movwf	??___lmul
  5868  0E68                     u3285:	
  5869  0E68  1003               	clrc
  5870  0E69  0DA4               	rlf	___lmul@multiplicand,f
  5871  0E6A  0DA5               	rlf	___lmul@multiplicand+1,f
  5872  0E6B  0DA6               	rlf	___lmul@multiplicand+2,f
  5873  0E6C  0DA7               	rlf	___lmul@multiplicand+3,f
  5874  0E6D  0BF4               	decfsz	??___lmul,f
  5875  0E6E  2E68               	goto	u3285
  5876  0E6F  3001               	movlw	1
  5877  0E70                     u3295:	
  5878  0E70  1003               	clrc
  5879  0E71  0CA3               	rrf	___lmul@multiplier+3,f
  5880  0E72  0CA2               	rrf	___lmul@multiplier+2,f
  5881  0E73  0CA1               	rrf	___lmul@multiplier+1,f
  5882  0E74  0CA0               	rrf	___lmul@multiplier,f
  5883  0E75  3EFF               	addlw	-1
  5884  0E76  1D03               	skipz
  5885  0E77  2E70               	goto	u3295
  5886  0E78  0823               	movf	___lmul@multiplier+3,w
  5887  0E79  0422               	iorwf	___lmul@multiplier+2,w
  5888  0E7A  0421               	iorwf	___lmul@multiplier+1,w
  5889  0E7B  0420               	iorwf	___lmul@multiplier,w
  5890  0E7C  1D03               	skipz
  5891  0E7D  2E50               	goto	l2569
  5892  0E7E  082B               	movf	___lmul@product+3,w
  5893  0E7F  00A3               	movwf	?___lmul+3
  5894  0E80  082A               	movf	___lmul@product+2,w
  5895  0E81  00A2               	movwf	?___lmul+2
  5896  0E82  0829               	movf	___lmul@product+1,w
  5897  0E83  00A1               	movwf	?___lmul+1
  5898  0E84  0828               	movf	___lmul@product,w
  5899  0E85  00A0               	movwf	?___lmul
  5900  0E86  0008               	return
  5901  0E87                     __end_of___lmul:	
  5902                           
  5903                           	psect	text25
  5904  0786                     __ptext25:	
  5905 ;; *************** function ___lldiv *****************
  5906 ;; Defined at:
  5907 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  divisor         4   12[BANK0 ] unsigned long 
  5910 ;;  dividend        4   16[BANK0 ] unsigned long 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  quotient        4   20[BANK0 ] unsigned long 
  5913 ;;  counter         1   24[BANK0 ] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4   12[BANK0 ] unsigned long 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5923 ;;      Params:         0       8       0       0       0
  5924 ;;      Locals:         0       5       0       0       0
  5925 ;;      Temps:          1       0       0       0       0
  5926 ;;      Totals:         1      13       0       0       0
  5927 ;;Total ram usage:       14 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_PWM_Init
  5934 ;;		_PWM_DutyCycle
  5935 ;;		_UART_Init
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           
  5940                           ;psect for function ___lldiv
  5941  0786                     ___lldiv:	
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5945  0786  3000               	movlw	0
  5946  0787  1283               	bcf	3,5	;RP0=0, select bank0
  5947  0788  1303               	bcf	3,6	;RP1=0, select bank0
  5948  0789  00B7               	movwf	___lldiv@quotient+3
  5949  078A  3000               	movlw	0
  5950  078B  00B6               	movwf	___lldiv@quotient+2
  5951  078C  3000               	movlw	0
  5952  078D  00B5               	movwf	___lldiv@quotient+1
  5953  078E  3000               	movlw	0
  5954  078F  00B4               	movwf	___lldiv@quotient
  5955  0790  082F               	movf	___lldiv@divisor+3,w
  5956  0791  042E               	iorwf	___lldiv@divisor+2,w
  5957  0792  042D               	iorwf	___lldiv@divisor+1,w
  5958  0793  042C               	iorwf	___lldiv@divisor,w
  5959  0794  1903               	skipnz
  5960  0795  2FDD               	goto	l2151
  5961  0796  01B8               	clrf	___lldiv@counter
  5962  0797  0AB8               	incf	___lldiv@counter,f
  5963  0798                     l2137:	
  5964  0798  1BAF               	btfsc	___lldiv@divisor+3,7
  5965  0799  2FA8               	goto	l2139
  5966  079A  3001               	movlw	1
  5967  079B  00F5               	movwf	??___lldiv
  5968  079C                     u2465:	
  5969  079C  1003               	clrc
  5970  079D  0DAC               	rlf	___lldiv@divisor,f
  5971  079E  0DAD               	rlf	___lldiv@divisor+1,f
  5972  079F  0DAE               	rlf	___lldiv@divisor+2,f
  5973  07A0  0DAF               	rlf	___lldiv@divisor+3,f
  5974  07A1  0BF5               	decfsz	??___lldiv,f
  5975  07A2  2F9C               	goto	u2465
  5976  07A3  3001               	movlw	1
  5977  07A4  00F5               	movwf	??___lldiv
  5978  07A5  0875               	movf	??___lldiv,w
  5979  07A6  07B8               	addwf	___lldiv@counter,f
  5980  07A7  2F98               	goto	l2137
  5981  07A8                     l2139:	
  5982  07A8  3001               	movlw	1
  5983  07A9  00F5               	movwf	??___lldiv
  5984  07AA                     u2485:	
  5985  07AA  1003               	clrc
  5986  07AB  0DB4               	rlf	___lldiv@quotient,f
  5987  07AC  0DB5               	rlf	___lldiv@quotient+1,f
  5988  07AD  0DB6               	rlf	___lldiv@quotient+2,f
  5989  07AE  0DB7               	rlf	___lldiv@quotient+3,f
  5990  07AF  0BF5               	decfsz	??___lldiv,f
  5991  07B0  2FAA               	goto	u2485
  5992  07B1  082F               	movf	___lldiv@divisor+3,w
  5993  07B2  0233               	subwf	___lldiv@dividend+3,w
  5994  07B3  1D03               	skipz
  5995  07B4  2FBF               	goto	u2495
  5996  07B5  082E               	movf	___lldiv@divisor+2,w
  5997  07B6  0232               	subwf	___lldiv@dividend+2,w
  5998  07B7  1D03               	skipz
  5999  07B8  2FBF               	goto	u2495
  6000  07B9  082D               	movf	___lldiv@divisor+1,w
  6001  07BA  0231               	subwf	___lldiv@dividend+1,w
  6002  07BB  1D03               	skipz
  6003  07BC  2FBF               	goto	u2495
  6004  07BD  082C               	movf	___lldiv@divisor,w
  6005  07BE  0230               	subwf	___lldiv@dividend,w
  6006  07BF                     u2495:	
  6007  07BF  1C03               	skipc
  6008  07C0  2FD0               	goto	l2147
  6009  07C1  082C               	movf	___lldiv@divisor,w
  6010  07C2  02B0               	subwf	___lldiv@dividend,f
  6011  07C3  082D               	movf	___lldiv@divisor+1,w
  6012  07C4  1C03               	skipc
  6013  07C5  0F2D               	incfsz	___lldiv@divisor+1,w
  6014  07C6  02B1               	subwf	___lldiv@dividend+1,f
  6015  07C7  082E               	movf	___lldiv@divisor+2,w
  6016  07C8  1C03               	skipc
  6017  07C9  0F2E               	incfsz	___lldiv@divisor+2,w
  6018  07CA  02B2               	subwf	___lldiv@dividend+2,f
  6019  07CB  082F               	movf	___lldiv@divisor+3,w
  6020  07CC  1C03               	skipc
  6021  07CD  0F2F               	incfsz	___lldiv@divisor+3,w
  6022  07CE  02B3               	subwf	___lldiv@dividend+3,f
  6023  07CF  1434               	bsf	___lldiv@quotient,0
  6024  07D0                     l2147:	
  6025  07D0  3001               	movlw	1
  6026  07D1                     u2505:	
  6027  07D1  1003               	clrc
  6028  07D2  0CAF               	rrf	___lldiv@divisor+3,f
  6029  07D3  0CAE               	rrf	___lldiv@divisor+2,f
  6030  07D4  0CAD               	rrf	___lldiv@divisor+1,f
  6031  07D5  0CAC               	rrf	___lldiv@divisor,f
  6032  07D6  3EFF               	addlw	-1
  6033  07D7  1D03               	skipz
  6034  07D8  2FD1               	goto	u2505
  6035  07D9  3001               	movlw	1
  6036  07DA  02B8               	subwf	___lldiv@counter,f
  6037  07DB  1D03               	btfss	3,2
  6038  07DC  2FA8               	goto	l2139
  6039  07DD                     l2151:	
  6040  07DD  0837               	movf	___lldiv@quotient+3,w
  6041  07DE  00AF               	movwf	?___lldiv+3
  6042  07DF  0836               	movf	___lldiv@quotient+2,w
  6043  07E0  00AE               	movwf	?___lldiv+2
  6044  07E1  0835               	movf	___lldiv@quotient+1,w
  6045  07E2  00AD               	movwf	?___lldiv+1
  6046  07E3  0834               	movf	___lldiv@quotient,w
  6047  07E4  00AC               	movwf	?___lldiv
  6048  07E5  0008               	return
  6049  07E6                     __end_of___lldiv:	
  6050                           
  6051                           	psect	text26
  6052  0BA5                     __ptext26:	
  6053 ;; *************** function _Oscillator_Init *****************
  6054 ;; Defined at:
  6055 ;;		line 23 in file "SYST_Init.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		status,2
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6069 ;;      Params:         0       0       0       0       0
  6070 ;;      Locals:         0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0
  6072 ;;      Totals:         0       0       0       0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_system_Initialize
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           
  6084                           ;psect for function _Oscillator_Init
  6085  0BA5                     _Oscillator_Init:	
  6086                           
  6087                           ;SYST_Init.c: 24: OSCCON = 0x00;
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in _Oscillator_Init: [status,2]
  6091  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  6092  0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  6093  0BA7  018F               	clrf	15	;volatile
  6094                           
  6095                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  6096  0BA8  0190               	clrf	16	;volatile
  6097  0BA9  0008               	return
  6098  0BAA                     __end_of_Oscillator_Init:	
  6099                           
  6100                           	psect	text27
  6101  0725                     __ptext27:	
  6102 ;; *************** function _Lcd_Init *****************
  6103 ;; Defined at:
  6104 ;;		line 62 in file "lcd_Config.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6118 ;;      Params:         0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0
  6120 ;;      Temps:          0       2       0       0       0
  6121 ;;      Totals:         0       2       0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    3
  6125 ;; This function calls:
  6126 ;;		_Lcd_Cmd
  6127 ;;		_Lcd_Port
  6128 ;; This function is called by:
  6129 ;;		_system_Initialize
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _Lcd_Init
  6135  0725                     _Lcd_Init:	
  6136                           
  6137                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  6138                           
  6139                           ;incstack = 0
  6140                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6141  0725  3000               	movlw	0
  6142  0726  120A  158A  243C  120A  118A  	fcall	_Lcd_Port
  6143                           
  6144                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  6145  072B  301A               	movlw	26
  6146  072C  1283               	bcf	3,5	;RP0=0, select bank0
  6147  072D  1303               	bcf	3,6	;RP1=0, select bank0
  6148  072E  00A2               	movwf	??_Lcd_Init+1
  6149  072F  30F7               	movlw	247
  6150  0730  00A1               	movwf	??_Lcd_Init
  6151  0731                     u4307:	
  6152  0731  0BA1               	decfsz	??_Lcd_Init,f
  6153  0732  2F31               	goto	u4307
  6154  0733  0BA2               	decfsz	??_Lcd_Init+1,f
  6155  0734  2F31               	goto	u4307
  6156  0735  2F36               	nop2
  6157                           
  6158                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  6159  0736  3003               	movlw	3
  6160  0737  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6161                           
  6162                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  6163  073C  3007               	movlw	7
  6164  073D  1283               	bcf	3,5	;RP0=0, select bank0
  6165  073E  1303               	bcf	3,6	;RP1=0, select bank0
  6166  073F  00A2               	movwf	??_Lcd_Init+1
  6167  0740  307C               	movlw	124
  6168  0741  00A1               	movwf	??_Lcd_Init
  6169  0742                     u4317:	
  6170  0742  0BA1               	decfsz	??_Lcd_Init,f
  6171  0743  2F42               	goto	u4317
  6172  0744  0BA2               	decfsz	??_Lcd_Init+1,f
  6173  0745  2F42               	goto	u4317
  6174  0746  0000               	nop
  6175                           
  6176                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  6177  0747  3003               	movlw	3
  6178  0748  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6179                           
  6180                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  6181  074D  300F               	movlw	15
  6182  074E  1283               	bcf	3,5	;RP0=0, select bank0
  6183  074F  1303               	bcf	3,6	;RP1=0, select bank0
  6184  0750  00A2               	movwf	??_Lcd_Init+1
  6185  0751  3047               	movlw	71
  6186  0752  00A1               	movwf	??_Lcd_Init
  6187  0753                     u4327:	
  6188  0753  0BA1               	decfsz	??_Lcd_Init,f
  6189  0754  2F53               	goto	u4327
  6190  0755  0BA2               	decfsz	??_Lcd_Init+1,f
  6191  0756  2F53               	goto	u4327
  6192                           
  6193                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  6194  0757  3003               	movlw	3
  6195  0758  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6196                           
  6197                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  6198  075D  3002               	movlw	2
  6199  075E  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6200                           
  6201                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  6202  0763  3002               	movlw	2
  6203  0764  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6204                           
  6205                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  6206  0769  3008               	movlw	8
  6207  076A  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6208                           
  6209                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  6210  076F  3000               	movlw	0
  6211  0770  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6212                           
  6213                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  6214  0775  300C               	movlw	12
  6215  0776  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6216                           
  6217                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  6218  077B  3000               	movlw	0
  6219  077C  120A  118A  27E6  120A  118A  	fcall	_Lcd_Cmd
  6220                           
  6221                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  6222  0781  3006               	movlw	6
  6223  0782  120A  118A  27E6   	fcall	_Lcd_Cmd
  6224  0785  0008               	return
  6225  0786                     __end_of_Lcd_Init:	
  6226                           
  6227                           	psect	text28
  6228  07E6                     __ptext28:	
  6229 ;; *************** function _Lcd_Cmd *****************
  6230 ;; Defined at:
  6231 ;;		line 32 in file "lcd_Config.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  a               1    wreg     unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  a               1    0[BANK0 ] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6245 ;;      Params:         0       0       0       0       0
  6246 ;;      Locals:         0       1       0       0       0
  6247 ;;      Temps:          2       0       0       0       0
  6248 ;;      Totals:         2       1       0       0       0
  6249 ;;Total ram usage:        3 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    2
  6252 ;; This function calls:
  6253 ;;		_Lcd_Port
  6254 ;; This function is called by:
  6255 ;;		_Lcd_Set_Cursor
  6256 ;;		_Lcd_Init
  6257 ;;		_Lcd_Clear
  6258 ;;		_Lcd_Shift_Right
  6259 ;;		_Lcd_Shift_Left
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _Lcd_Cmd
  6265  07E6                     _Lcd_Cmd:	
  6266                           
  6267                           ;incstack = 0
  6268                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6269                           ;Lcd_Cmd@a stored from wreg
  6270  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  6271  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  6272  07E8  00A0               	movwf	Lcd_Cmd@a
  6273                           
  6274                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  6275  07E9  1286               	bcf	6,5	;volatile
  6276                           
  6277                           ;lcd_Config.c: 34: Lcd_Port(a);
  6278  07EA  0820               	movf	Lcd_Cmd@a,w
  6279  07EB  120A  158A  243C  120A  118A  	fcall	_Lcd_Port
  6280                           
  6281                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  6282  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  6283  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  6284  07F2  1606               	bsf	6,4	;volatile
  6285                           
  6286                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  6287  07F3  3006               	movlw	6
  6288  07F4  00F6               	movwf	??_Lcd_Cmd+1
  6289  07F5  3030               	movlw	48
  6290  07F6  00F5               	movwf	??_Lcd_Cmd
  6291  07F7                     u4337:	
  6292  07F7  0BF5               	decfsz	??_Lcd_Cmd,f
  6293  07F8  2FF7               	goto	u4337
  6294  07F9  0BF6               	decfsz	??_Lcd_Cmd+1,f
  6295  07FA  2FF7               	goto	u4337
  6296  07FB  0000               	nop
  6297                           
  6298                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  6299  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  6300  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  6301  07FE  1206               	bcf	6,4	;volatile
  6302  07FF  0008               	return
  6303  0800                     __end_of_Lcd_Cmd:	
  6304                           
  6305                           	psect	text29
  6306  0C3C                     __ptext29:	
  6307 ;; *************** function _Lcd_Port *****************
  6308 ;; Defined at:
  6309 ;;		line 10 in file "lcd_Config.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  a               1    wreg     unsigned char 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  a               1    4[COMMON] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		wreg
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6323 ;;      Params:         0       0       0       0       0
  6324 ;;      Locals:         1       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0
  6326 ;;      Totals:         1       0       0       0       0
  6327 ;;Total ram usage:        1 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_Lcd_Cmd
  6334 ;;		_Lcd_Init
  6335 ;;		_Lcd_Write_Char
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           
  6340                           ;psect for function _Lcd_Port
  6341  0C3C                     _Lcd_Port:	
  6342                           
  6343                           ;incstack = 0
  6344                           ; Regs used in _Lcd_Port: [wreg]
  6345                           ;Lcd_Port@a stored from wreg
  6346  0C3C  00F4               	movwf	Lcd_Port@a
  6347                           
  6348                           ;lcd_Config.c: 11: if (a & 1)
  6349  0C3D  1C74               	btfss	Lcd_Port@a,0
  6350  0C3E  2C43               	goto	l174
  6351                           
  6352                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  6353  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  6355  0C41  1586               	bsf	6,3	;volatile
  6356  0C42  2C46               	goto	l175
  6357  0C43                     l174:	
  6358                           
  6359                           ;lcd_Config.c: 13: else
  6360                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  6361  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  6363  0C45  1186               	bcf	6,3	;volatile
  6364  0C46                     l175:	
  6365                           
  6366                           ;lcd_Config.c: 16: if (a & 2)
  6367  0C46  1CF4               	btfss	Lcd_Port@a,1
  6368  0C47  2C4A               	goto	l176
  6369                           
  6370                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  6371  0C48  1506               	bsf	6,2	;volatile
  6372  0C49  2C4B               	goto	l177
  6373  0C4A                     l176:	
  6374                           
  6375                           ;lcd_Config.c: 18: else
  6376                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  6377  0C4A  1106               	bcf	6,2	;volatile
  6378  0C4B                     l177:	
  6379                           
  6380                           ;lcd_Config.c: 21: if (a & 4)
  6381  0C4B  1D74               	btfss	Lcd_Port@a,2
  6382  0C4C  2C4F               	goto	l178
  6383                           
  6384                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  6385  0C4D  1486               	bsf	6,1	;volatile
  6386  0C4E  2C50               	goto	l179
  6387  0C4F                     l178:	
  6388                           
  6389                           ;lcd_Config.c: 23: else
  6390                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  6391  0C4F  1086               	bcf	6,1	;volatile
  6392  0C50                     l179:	
  6393                           
  6394                           ;lcd_Config.c: 26: if (a & 8)
  6395  0C50  1DF4               	btfss	Lcd_Port@a,3
  6396  0C51  2C54               	goto	l180
  6397                           
  6398                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  6399  0C52  1406               	bsf	6,0	;volatile
  6400  0C53  0008               	return
  6401  0C54                     l180:	
  6402                           
  6403                           ;lcd_Config.c: 28: else
  6404                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  6405  0C54  1006               	bcf	6,0	;volatile
  6406  0C55  0008               	return
  6407  0C56                     __end_of_Lcd_Port:	
  6408                           
  6409                           	psect	text30
  6410  0BDC                     __ptext30:	
  6411 ;; *************** function _Interrupt_Init *****************
  6412 ;; Defined at:
  6413 ;;		line 10 in file "interrupt_Init.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;		None
  6418 ;; Return value:  Size  Location     Type
  6419 ;;                  1    wreg      void 
  6420 ;; Registers used:
  6421 ;;		None
  6422 ;; Tracked objects:
  6423 ;;		On entry : 0/0
  6424 ;;		On exit  : 0/0
  6425 ;;		Unchanged: 0/0
  6426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6427 ;;      Params:         0       0       0       0       0
  6428 ;;      Locals:         0       0       0       0       0
  6429 ;;      Temps:          0       0       0       0       0
  6430 ;;      Totals:         0       0       0       0       0
  6431 ;;Total ram usage:        0 bytes
  6432 ;; Hardware stack levels used:    1
  6433 ;; Hardware stack levels required when called:    1
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		_system_Initialize
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _Interrupt_Init
  6443  0BDC                     _Interrupt_Init:	
  6444                           
  6445                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in _Interrupt_Init: []
  6449  0BDC  178B               	bsf	11,7	;volatile
  6450                           
  6451                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6452  0BDD  170B               	bsf	11,6	;volatile
  6453                           
  6454                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6455  0BDE  1683               	bsf	3,5	;RP0=1, select bank1
  6456  0BDF  1303               	bcf	3,6	;RP1=0, select bank1
  6457  0BE0  170C               	bsf	12,6	;volatile
  6458                           
  6459                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6460  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  6462  0BE3  130C               	bcf	12,6	;volatile
  6463                           
  6464                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6465  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  6466  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  6467  0BE6  168C               	bsf	12,5	;volatile
  6468                           
  6469                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6470  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  6471  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  6472  0BE9  128C               	bcf	12,5	;volatile
  6473  0BEA  0008               	return
  6474  0BEB                     __end_of_Interrupt_Init:	
  6475                           
  6476                           	psect	text31
  6477  0C23                     __ptext31:	
  6478 ;; *************** function _ADC_Init *****************
  6479 ;; Defined at:
  6480 ;;		line 13 in file "adc_Init.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1    wreg      void 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6494 ;;      Params:         0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0
  6497 ;;      Totals:         0       0       0       0       0
  6498 ;;Total ram usage:        0 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_system_Initialize
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function _ADC_Init
  6510  0C23                     _ADC_Init:	
  6511                           
  6512                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6516  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0C25  081F               	movf	31,w	;volatile
  6519  0C26  393F               	andlw	-193
  6520  0C27  3840               	iorlw	64
  6521  0C28  009F               	movwf	31	;volatile
  6522                           
  6523                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6524  0C29  30C3               	movlw	-61
  6525  0C2A  059F               	andwf	31,f	;volatile
  6526                           
  6527                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6528  0C2B  109F               	bcf	31,1	;volatile
  6529  0C2C  1C9F               	btfss	31,1	;volatile
  6530  0C2D  2C32               	goto	u1080
  6531  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0C30  149F               	bsf	31,1	;volatile
  6534  0C31  2C35               	goto	l1439
  6535  0C32                     u1080:	
  6536  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  6537  0C33  1303               	bcf	3,6	;RP1=0, select bank0
  6538  0C34  109F               	bcf	31,1	;volatile
  6539  0C35                     l1439:	
  6540                           
  6541                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6542  0C35  141F               	bsf	31,0	;volatile
  6543                           
  6544                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6545  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  6546  0C37  1303               	bcf	3,6	;RP1=0, select bank1
  6547  0C38  179F               	bsf	31,7	;volatile
  6548                           
  6549                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6550  0C39  121F               	bcf	31,4	;volatile
  6551                           
  6552                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6553  0C3A  129F               	bcf	31,5	;volatile
  6554  0C3B  0008               	return
  6555  0C3C                     __end_of_ADC_Init:	
  6556                           
  6557                           	psect	text32
  6558  0003                     __ptext32:	
  6559 ;; *************** function _Ass_2 *****************
  6560 ;; Defined at:
  6561 ;;		line 16 in file "Assignement_Two.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		None
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6575 ;;      Params:         0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _Ass_2
  6591  0003                     _Ass_2:	
  6592                           
  6593                           ;Assignement_Two.c: 21: return;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _Ass_2: []
  6597  0003  0008               	return
  6598  0004                     __end_of_Ass_2:	
  6599                           
  6600                           	psect	text33
  6601  06BC                     __ptext33:	
  6602 ;; *************** function _ASS_1 *****************
  6603 ;; Defined at:
  6604 ;;		line 15 in file "Assignement_One.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;		None
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  bSize           2   16[BANK0 ] int 
  6609 ;;  bSize           2   14[BANK0 ] int 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6619 ;;      Params:         0       0       0       0       0
  6620 ;;      Locals:         0       4       0       0       0
  6621 ;;      Temps:          0       6       0       0       0
  6622 ;;      Totals:         0      10       0       0       0
  6623 ;;Total ram usage:       10 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:    3
  6626 ;; This function calls:
  6627 ;;		_UART_Read
  6628 ;;		_UART_Write_String
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function _ASS_1
  6636  06BC                     _ASS_1:	
  6637                           
  6638                           ;Assignement_One.c: 17: for (int bSize = 0; !PIR1bits.RCIF; bSize++) {
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _ASS_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6642  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  6643  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  6644  06BE  01AE               	clrf	ASS_1@bSize
  6645  06BF  01AF               	clrf	ASS_1@bSize+1
  6646  06C0                     l2977:	
  6647  06C0  1A8C               	btfsc	12,5	;volatile
  6648  06C1  2EF4               	goto	l32
  6649                           
  6650                           ;Assignement_One.c: 18: dataBuffer[bSize] = UART_Read();
  6651  06C2  120A  158A  23C0  120A  118A  	fcall	_UART_Read
  6652  06C7  0874               	movf	?_UART_Read,w
  6653  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  6654  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  6655  06CA  00A8               	movwf	??_ASS_1
  6656  06CB  0875               	movf	?_UART_Read+1,w
  6657  06CC  00A9               	movwf	??_ASS_1+1
  6658  06CD  01AA               	clrf	??_ASS_1+2
  6659  06CE  01AB               	clrf	??_ASS_1+3
  6660  06CF  082E               	movf	ASS_1@bSize,w
  6661  06D0  00AC               	movwf	??_ASS_1+4
  6662  06D1  3001               	movlw	1
  6663  06D2                     u4205:	
  6664  06D2  1003               	clrc
  6665  06D3  0DAC               	rlf	??_ASS_1+4,f
  6666  06D4  3EFF               	addlw	-1
  6667  06D5  1D03               	skipz
  6668  06D6  2ED2               	goto	u4205
  6669  06D7  1003               	clrc
  6670  06D8  0D2C               	rlf	??_ASS_1+4,w
  6671  06D9  076F               	addwf	_dataBuffer,w
  6672  06DA  00AD               	movwf	??_ASS_1+5
  6673  06DB  082D               	movf	??_ASS_1+5,w
  6674  06DC  0084               	movwf	4
  6675  06DD  0828               	movf	??_ASS_1,w
  6676  06DE  1383               	bcf	3,7	;select IRP bank0
  6677  06DF  0080               	movwf	0
  6678  06E0  0A84               	incf	4,f
  6679  06E1  0829               	movf	??_ASS_1+1,w
  6680  06E2  0080               	movwf	0
  6681  06E3  0A84               	incf	4,f
  6682  06E4  082A               	movf	??_ASS_1+2,w
  6683  06E5  0080               	movwf	0
  6684  06E6  0A84               	incf	4,f
  6685  06E7  082B               	movf	??_ASS_1+3,w
  6686  06E8  0080               	movwf	0
  6687                           
  6688                           ;Assignement_One.c: 19: if (PIR1bits.RCIF)
  6689  06E9  1E8C               	btfss	12,5	;volatile
  6690  06EA  2EED               	goto	l2975
  6691                           
  6692                           ;Assignement_One.c: 20: data_TransferComplete = 1;
  6693  06EB  01F8               	clrf	_data_TransferComplete
  6694  06EC  0AF8               	incf	_data_TransferComplete,f
  6695  06ED                     l2975:	
  6696  06ED  3001               	movlw	1
  6697  06EE  07AE               	addwf	ASS_1@bSize,f
  6698  06EF  1803               	skipnc
  6699  06F0  0AAF               	incf	ASS_1@bSize+1,f
  6700  06F1  3000               	movlw	0
  6701  06F2  07AF               	addwf	ASS_1@bSize+1,f
  6702  06F3  2EC0               	goto	l2977
  6703  06F4                     l32:	
  6704                           
  6705                           ;Assignement_One.c: 21: }
  6706                           ;Assignement_One.c: 23: if (PORTBbits.RB7 == 1 || data_TransferComplete) {
  6707  06F4  1B86               	btfsc	6,7	;volatile
  6708  06F5  2EF9               	goto	l2981
  6709  06F6  0878               	movf	_data_TransferComplete,w
  6710  06F7  1903               	btfsc	3,2
  6711  06F8  0008               	return
  6712  06F9                     l2981:	
  6713                           
  6714                           ;Assignement_One.c: 24: for (int bSize = 0; !TXSTAbits.TRMT; bSize++)
  6715  06F9  01B0               	clrf	ASS_1@bSize_143
  6716  06FA  01B1               	clrf	ASS_1@bSize_143+1
  6717  06FB                     l2987:	
  6718  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  6719  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  6720  06FD  1898               	btfsc	24,1	;volatile
  6721  06FE  2F23               	goto	l2989
  6722                           
  6723                           ;Assignement_One.c: 25: UART_Write_String(dataBuffer[bSize]);
  6724  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0700  0830               	movf	ASS_1@bSize_143,w
  6726  0701  00A8               	movwf	??_ASS_1
  6727  0702  3001               	movlw	1
  6728  0703                     u4255:	
  6729  0703  1003               	clrc
  6730  0704  0DA8               	rlf	??_ASS_1,f
  6731  0705  3EFF               	addlw	-1
  6732  0706  1D03               	skipz
  6733  0707  2F03               	goto	u4255
  6734  0708  1003               	clrc
  6735  0709  0D28               	rlf	??_ASS_1,w
  6736  070A  076F               	addwf	_dataBuffer,w
  6737  070B  00A9               	movwf	??_ASS_1+1
  6738  070C  0829               	movf	??_ASS_1+1,w
  6739  070D  0084               	movwf	4
  6740  070E  1383               	bcf	3,7	;select IRP bank0
  6741  070F  0800               	movf	0,w
  6742  0710  00A0               	movwf	UART_Write_String@cText
  6743  0711  0A84               	incf	4,f
  6744  0712  0800               	movf	0,w
  6745  0713  0384               	decf	4,f
  6746  0714  00A1               	movwf	UART_Write_String@cText+1
  6747  0715  120A  158A  255B  120A  118A  	fcall	_UART_Write_String
  6748  071A  3001               	movlw	1
  6749  071B  1283               	bcf	3,5	;RP0=0, select bank0
  6750  071C  1303               	bcf	3,6	;RP1=0, select bank0
  6751  071D  07B0               	addwf	ASS_1@bSize_143,f
  6752  071E  1803               	skipnc
  6753  071F  0AB1               	incf	ASS_1@bSize_143+1,f
  6754  0720  3000               	movlw	0
  6755  0721  07B1               	addwf	ASS_1@bSize_143+1,f
  6756  0722  2EFB               	goto	l2987
  6757  0723                     l2989:	
  6758                           
  6759                           ;Assignement_One.c: 26: data_TransferComplete = 0;
  6760  0723  01F8               	clrf	_data_TransferComplete
  6761  0724  0008               	return
  6762  0725                     __end_of_ASS_1:	
  6763                           ;Assignement_One.c: 27: }
  6764                           ;Assignement_One.c: 28: return;
  6765                           
  6766                           
  6767                           	psect	text34
  6768  0D5B                     __ptext34:	
  6769 ;; *************** function _UART_Write_String *****************
  6770 ;; Defined at:
  6771 ;;		line 32 in file "uart_Init.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  cText           2    0[BANK0 ] PTR unsigned char 
  6774 ;;		 -> RAM(512), 
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  iSize           2    6[BANK0 ] int 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6786 ;;      Params:         0       2       0       0       0
  6787 ;;      Locals:         0       2       0       0       0
  6788 ;;      Temps:          0       4       0       0       0
  6789 ;;      Totals:         0       8       0       0       0
  6790 ;;Total ram usage:        8 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    2
  6793 ;; This function calls:
  6794 ;;		_UART_Write_char
  6795 ;; This function is called by:
  6796 ;;		_ASS_1
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _UART_Write_String
  6802  0D5B                     _UART_Write_String:	
  6803                           
  6804                           ;uart_Init.c: 33: for (int iSize = 0; cText[iSize] != '\0'; iSize++) {
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6808  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  6809  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  6810  0D5D  01A6               	clrf	UART_Write_String@iSize
  6811  0D5E  01A7               	clrf	UART_Write_String@iSize+1
  6812  0D5F                     l2807:	
  6813  0D5F  0826               	movf	UART_Write_String@iSize,w
  6814  0D60  0720               	addwf	UART_Write_String@cText,w
  6815  0D61  00A2               	movwf	??_UART_Write_String
  6816  0D62  0827               	movf	UART_Write_String@iSize+1,w
  6817  0D63  1803               	skipnc
  6818  0D64  0A27               	incf	UART_Write_String@iSize+1,w
  6819  0D65  0721               	addwf	UART_Write_String@cText+1,w
  6820  0D66  00A3               	movwf	??_UART_Write_String+1
  6821  0D67  0822               	movf	??_UART_Write_String,w
  6822  0D68  0084               	movwf	4
  6823  0D69  1783               	bsf	3,7
  6824  0D6A  1C23               	btfss	??_UART_Write_String+1,0
  6825  0D6B  1383               	bcf	3,7
  6826  0D6C  0800               	movf	0,w
  6827  0D6D  1903               	btfsc	3,2
  6828  0D6E  0008               	return
  6829                           
  6830                           ;uart_Init.c: 34: UART_Write_char(cText[iSize]);
  6831  0D6F  0826               	movf	UART_Write_String@iSize,w
  6832  0D70  0720               	addwf	UART_Write_String@cText,w
  6833  0D71  00A2               	movwf	??_UART_Write_String
  6834  0D72  0827               	movf	UART_Write_String@iSize+1,w
  6835  0D73  1803               	skipnc
  6836  0D74  0A27               	incf	UART_Write_String@iSize+1,w
  6837  0D75  0721               	addwf	UART_Write_String@cText+1,w
  6838  0D76  00A3               	movwf	??_UART_Write_String+1
  6839  0D77  0822               	movf	??_UART_Write_String,w
  6840  0D78  0084               	movwf	4
  6841  0D79  1783               	bsf	3,7
  6842  0D7A  1C23               	btfss	??_UART_Write_String+1,0
  6843  0D7B  1383               	bcf	3,7
  6844  0D7C  0800               	movf	0,w
  6845  0D7D  00A4               	movwf	??_UART_Write_String+2
  6846  0D7E  01A5               	clrf	??_UART_Write_String+3
  6847  0D7F  0824               	movf	??_UART_Write_String+2,w
  6848  0D80  00F4               	movwf	UART_Write_char@iData
  6849  0D81  0825               	movf	??_UART_Write_String+3,w
  6850  0D82  00F5               	movwf	UART_Write_char@iData+1
  6851  0D83  120A  158A  23AA  120A  158A  	fcall	_UART_Write_char
  6852  0D88  3001               	movlw	1
  6853  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0D8B  07A6               	addwf	UART_Write_String@iSize,f
  6856  0D8C  1803               	skipnc
  6857  0D8D  0AA7               	incf	UART_Write_String@iSize+1,f
  6858  0D8E  3000               	movlw	0
  6859  0D8F  07A7               	addwf	UART_Write_String@iSize+1,f
  6860  0D90  2D5F               	goto	l2807
  6861  0D91                     __end_of_UART_Write_String:	
  6862                           
  6863                           	psect	text35
  6864  0BAA                     __ptext35:	
  6865 ;; *************** function _UART_Write_char *****************
  6866 ;; Defined at:
  6867 ;;		line 27 in file "uart_Init.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  iData           2    4[COMMON] unsigned int 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6881 ;;      Params:         2       0       0       0       0
  6882 ;;      Locals:         0       0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0
  6884 ;;      Totals:         2       0       0       0       0
  6885 ;;Total ram usage:        2 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_UART_Write_String
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _UART_Write_char
  6897  0BAA                     _UART_Write_char:	
  6898  0BAA                     l401:	
  6899                           ;uart_Init.c: 28: while(!TXSTAbits.TRMT);
  6900                           
  6901                           ;incstack = 0
  6902                           ; Regs used in _UART_Write_char: [wreg]
  6903                           
  6904  0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  6905  0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  6906  0BAC  1C98               	btfss	24,1	;volatile
  6907  0BAD  2BAA               	goto	l401
  6908                           
  6909                           ;uart_Init.c: 29: TXREG = iData;
  6910  0BAE  0874               	movf	UART_Write_char@iData,w
  6911  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  6912  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  6913  0BB1  0099               	movwf	25	;volatile
  6914  0BB2  0008               	return
  6915  0BB3                     __end_of_UART_Write_char:	
  6916                           
  6917                           	psect	text36
  6918  0BC0                     __ptext36:	
  6919 ;; *************** function _UART_Read *****************
  6920 ;; Defined at:
  6921 ;;		line 38 in file "uart_Init.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  2    4[COMMON] unsigned int 
  6928 ;; Registers used:
  6929 ;;		wreg
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         2       0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0
  6937 ;;      Temps:          0       2       0       0       0
  6938 ;;      Totals:         2       2       0       0       0
  6939 ;;Total ram usage:        4 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_ASS_1
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           
  6950                           ;psect for function _UART_Read
  6951  0BC0                     _UART_Read:	
  6952                           
  6953                           ;uart_Init.c: 39: while(!PIR1bits.RCIF)
  6954                           
  6955                           ;incstack = 0
  6956                           ; Regs used in _UART_Read: [wreg]
  6957  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  6958  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  6959  0BC2  1A8C               	btfsc	12,5	;volatile
  6960  0BC3  0008               	return
  6961                           
  6962                           ;uart_Init.c: 40: return RCREG;
  6963  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  6964  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  6965  0BC6  081A               	movf	26,w	;volatile
  6966  0BC7  00A0               	movwf	??_UART_Read
  6967  0BC8  01A1               	clrf	??_UART_Read+1
  6968  0BC9  0820               	movf	??_UART_Read,w
  6969  0BCA  00F4               	movwf	?_UART_Read
  6970  0BCB  0821               	movf	??_UART_Read+1,w
  6971  0BCC  00F5               	movwf	?_UART_Read+1
  6972  0BCD  0008               	return
  6973  0BCE                     __end_of_UART_Read:	
  6974                           
  6975                           	psect	text37
  6976  0C79                     __ptext37:	
  6977 ;; *************** function _ISR *****************
  6978 ;; Defined at:
  6979 ;;		line 25 in file "interrupt_Init.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		None
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6993 ;;      Params:         0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0
  6995 ;;      Temps:          4       0       0       0       0
  6996 ;;      Totals:         4       0       0       0       0
  6997 ;;Total ram usage:        4 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		Interrupt level 1
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           
  7007                           ;psect for function _ISR
  7008  0C79                     _ISR:	
  7009                           
  7010                           ;interrupt_Init.c: 26: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  7011  0C79  1683               	bsf	3,5	;RP0=1, select bank1
  7012  0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  7013  0C7B  1E8C               	btfss	12,5	;volatile
  7014  0C7C  2C82               	goto	i1l283
  7015  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  7016  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  7017  0C7F  1E8C               	btfss	12,5	;volatile
  7018  0C80  2C82               	goto	i1l283
  7019                           
  7020                           ;interrupt_Init.c: 27: PIR1bits.RCIF = 0;
  7021  0C81  128C               	bcf	12,5	;volatile
  7022  0C82                     i1l283:	
  7023                           
  7024                           ;interrupt_Init.c: 28: }
  7025                           ;interrupt_Init.c: 29: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  7026  0C82  1683               	bsf	3,5	;RP0=1, select bank1
  7027  0C83  1303               	bcf	3,6	;RP1=0, select bank1
  7028  0C84  1F0C               	btfss	12,6	;volatile
  7029  0C85  2C8B               	goto	i1l284
  7030  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  7031  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  7032  0C88  1F0C               	btfss	12,6	;volatile
  7033  0C89  2C8B               	goto	i1l284
  7034                           
  7035                           ;interrupt_Init.c: 30: PIR1bits.ADIF = 0;
  7036  0C8A  130C               	bcf	12,6	;volatile
  7037  0C8B                     i1l284:	
  7038                           
  7039                           ;interrupt_Init.c: 31: }
  7040                           ;interrupt_Init.c: 32: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  7041  0C8B  1A8B               	btfsc	11,5	;volatile
  7042  0C8C  1D0B               	btfss	11,2	;volatile
  7043  0C8D  2C8F               	goto	i1l285
  7044                           
  7045                           ;interrupt_Init.c: 33: INTCONbits.T0IF = 0;
  7046  0C8E  110B               	bcf	11,2	;volatile
  7047  0C8F                     i1l285:	
  7048                           
  7049                           ;interrupt_Init.c: 34: }
  7050                           ;interrupt_Init.c: 35: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  7051  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  7052  0C90  1303               	bcf	3,6	;RP1=0, select bank1
  7053  0C91  1D8C               	btfss	12,3	;volatile
  7054  0C92  2C98               	goto	i1l287
  7055  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  7056  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  7057  0C95  1D8C               	btfss	12,3	;volatile
  7058  0C96  2C98               	goto	i1l287
  7059                           
  7060                           ;interrupt_Init.c: 36: PIR1bits.SSPIF = 0;
  7061  0C97  118C               	bcf	12,3	;volatile
  7062  0C98                     i1l287:	
  7063  0C98  0873               	movf	??_ISR+3,w
  7064  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0C9A  00FF               	movwf	127
  7066  0C9B  0872               	movf	??_ISR+2,w
  7067  0C9C  008A               	movwf	10
  7068  0C9D  0871               	movf	??_ISR+1,w
  7069  0C9E  0084               	movwf	4
  7070  0C9F  0E70               	swapf	??_ISR^(0+-128),w
  7071  0CA0  0083               	movwf	3
  7072  0CA1  0EFE               	swapf	126,f
  7073  0CA2  0E7E               	swapf	126,w
  7074  0CA3  0009               	retfie
  7075  0CA4                     __end_of_ISR:	
  7076  007E                     btemp	set	126	;btemp
  7077  007E                     wtemp0	set	126
  7078                           
  7079                           	psect	intentry
  7080  0004                     __pintentry:	
  7081                           ;incstack = 0
  7082                           ; Regs used in _ISR: []
  7083                           
  7084  0004                     interrupt_function:	
  7085  007E                     saved_w	set	btemp
  7086  0004  00FE               	movwf	btemp
  7087  0005  0E03               	swapf	3,w
  7088  0006  00F0               	movwf	??_ISR
  7089  0007  0804               	movf	4,w
  7090  0008  00F1               	movwf	??_ISR+1
  7091  0009  080A               	movf	10,w
  7092  000A  00F2               	movwf	??_ISR+2
  7093  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7094  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7095  000D  087F               	movf	btemp+1,w
  7096  000E  00F3               	movwf	??_ISR+3
  7097  000F  120A  158A  2C79   	ljmp	_ISR


Data Sizes:
    Strings     17
    Constant    10
    Data        45
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     79      80
    BANK1            80     15      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Write_String@cText	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    temp_Display@TEMP	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    Lcd_write@string	PTR unsigned char  size(2) Largest target is 13
		 -> sTemperature(BANK1[2]), STR_1(CODE[13]), 

    dataBuffer	PTR unsigned long  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ASS_1->_UART_Read
    _UART_Write_String->_UART_Write_char

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_Display
    _temp_Display->_sprintf
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _ASS_1->_UART_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20535
                              _ASS_1
                              _Ass_2
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                         4     4      0   17594
                                             78 BANK0      1     1      0
                                             12 BANK1      3     3      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13825
                                             68 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             54 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                              9 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             25 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2498
                                             75 BANK0      3     0      3
                                              0 BANK1     12    12      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            7     5      2     538
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              1 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ass_2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ASS_1                                               10    10      0     389
                                              8 BANK0     10    10      0
                          _UART_Read
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    8     6      2     315
                                              0 BANK0      8     6      2
                    _UART_Write_char
 ---------------------------------------------------------------------------------
 (3) _UART_Write_char                                      2     0      2     108
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            4     2      2       0
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ASS_1
     _UART_Read
     _UART_Write_String
       _UART_Write_char
   _Ass_2
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9E      12        0.0%
ABS                  0      0      9E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 24 18:34:48 2019

          ??_Interrupt_Init 0074      UART_Write_String@cText 0020      UART_Write_String@iSize 0026  
    __size_of_PWM_DutyCycle 006F                           pc 0002                 __CFG_CP$OFF 0000  
                        l32 06F4                          fsr 0004         ___wmul@multiplicand 0022  
__size_of_UART_Write_String 0036                ___ftadd@exp1 0055                ___ftadd@exp2 0054  
               __CFG_LVP$ON 0000                ___ftadd@sign 0053                         l401 0BAA  
                       l180 0C54                         l252 02EC                         l174 0C43  
                       l175 0C46                         l176 0C4A                         l177 0C4B  
                       l178 0C4F                         l179 0C50                         l493 012C  
                       l840 05C5                         l588 0C62                         l756 069B  
                       l780 027D                         l757 06A3                         l749 0686  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 0C79  
                       _adc 00E0                         fsr0 0004                         indf 0000  
              __CFG_IESO$ON 0000                __CFG_FOSC$HS 0000                        ?_ISR 0070  
              ___ftdiv@cntr 0043                ___ftdiv@sign 0048                        l2121 05BA  
                      l2113 059D                        l2123 05C8                        l2115 05AD  
                      l2151 07DD                        l2127 05D6                        l3023 0CE0  
                      l2137 0798                        l3025 0CD5                        l2147 07D0  
                      l2139 07A8                        l3027 0CDB                        l1439 0C35  
                      l2095 056B                        l2505 068B                        l2507 0695  
                      l2621 0258                        l2615 0243                        l2633 028F  
                      l2617 024F                        l2609 022E                        l2721 0443  
                      l2705 03F4                        l2555 0C58                        l2491 0658  
                      l2627 026D                        l2619 0254                        l2573 0E66  
                      l2637 02A1                        l2629 0279                        l2733 046B  
                      l2717 0433                        l2807 0D5F                        l2903 00C5  
                      l2495 065F                        l2647 02C4                        l2591 0205  
                      l2663 04C7                        l2569 0E50                        l2761 0DF6  
                      l2753 0DD2                        l2921 00FD                        l2905 00DE  
                      l2497 066B                        l2657 04B1                        l2729 045B  
                      l2835 0F81                        l2851 0E8B                        l2755 0DE0  
                      l2915 00F7                        l2499 0670                        l2587 01FE  
                      l2765 0E01                        l2597 0214                        l2685 052B  
                      l2677 050C                        l2783 0D4B                        l1895 0BDA  
                      l2951 0177                        l2935 014B                        l2927 011E  
                      l2871 03B3                        l2777 0D2F                        l2945 0168  
                      l2937 014F                        l2961 003C                        l2865 030F  
                      l2779 0D3D                        l2787 0D56                        l2939 0153  
                      l2963 01CE                        l2699 03DE                        l2875 03C4  
                      l2981 06F9                        l2893 0077                        l2975 06ED  
                      l2959 017B                        l2887 0060                        l2977 06C0  
                      l2987 06FB                        l2989 0723                        STR_1 081A  
                      STR_2 0827                        u1080 0C32                        u3105 0664  
                      u3205 0DA2                        u3125 067F                        u2505 07D1  
                      u4105 0114                        u3145 068E                        u2425 05BC  
                      u4025 030D                        u3235 0C63                        u4205 06D2  
                      u3245 0C6A                        u3405 022F                        u2365 0572  
                      u4045 03C2                        u2465 079C                        u2705 0E38  
                      u4145 013B                        u3185 06AA                        u4307 0731  
                      u3435 0244                        u2395 059E                        u4317 0742  
                      u2485 07AA                        u3285 0E68                        u3605 051E  
                      u4255 0703                        u4327 0753                        u2495 07BF  
                      u3295 0E70                        u3615 052C                        u4337 07F7  
                      u3465 0259                        u3705 044C                        u2675 0ED6  
                      u3805 0DE1                        u4277 02E4                        u4287 0DB2  
                      u3815 0DED                        u3495 026E                        u3575 04D9  
                      u3655 0400                        u4297 0DC2                        u3825 0DF7  
                      u3585 04EB                        u3745 046C                        u3665 0412  
                      u3595 050D                        u3755 0474                        u3925 062C  
                      u3935 0643                        u3855 0D32                        u3695 0444  
                      u3785 0DD5                        u3955 0F66                        u3875 0D43  
                      u3885 0D4C                        u3975 0F8F                        _TMR0 0001  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 0CCF  
              ___ftpack@arg 0020                ___ftpack@exp 0023                        btemp 007E  
          __end_of_ADC_Init 0C3C                        start 0012       _temp_Measurement$1694 0066  
           __end_of_Lcd_Cmd 0800               __CFG_MCLRE$ON 0000                ___ftmul@cntr 0037  
              ___ftmul@sign 0038           ??_Oscillator_Init 0074                       ??_ISR 0070  
   __end_of_UART_Write_char 0BB3                ___fttol@exp1 0063                ___fttol@lval 005F  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 02DE  
             __CFG_WDTE$OFF 0000             __end_of___ftdiv 0551             __end_of___lldiv 07E6  
           __end_of___ftmul 0499             __end_of___fttol 05DF                       _ASS_1 06BC  
           __end_of___lwdiv 0E06             __end_of___lwmod 0D5B                       i1l283 0C82  
                     i1l284 0C8B                       i1l285 0C8F                       i1l287 0C98  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009     __size_of_Lcd_Set_Cursor 0052                       _TRISB 0086  
                     _TRISD 0088                       _TXREG 0019                       _Ass_2 0003  
       ___lmul@multiplicand 0024          __size_of_UART_Init 0040          __size_of_UART_Read 000E  
        __size_of_TMR0_Init 000F               _PWM_DutyCycle 05DF             __end_of_dpowers 081A  
           __end_of_isdigit 0BDC               ___ftpack@sign 0024            __end_of_SPI_Init 0BC0  
            __CFG_BOREN$OFF 0000                       pclath 000A            __end_of_PWM_Init 0F0D  
                     status 0003                       wtemp0 007E             __end_of_sprintf 01D5  
          __end_of_Lcd_Init 0786            __end_of_Lcd_Port 0C56             __initialization 0015  
              __end_of_main 0CFA                _student_Name 00BD                      ??_main 0077  
             ___fttol@sign1 005E                      ?_ASS_1 0070                      ?_Ass_2 0070  
            ?_PWM_DutyCycle 0039          __size_of_Lcd_write 0041                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _EECON2 018D            __end_of___ftpack 06BC                      _ANSELH 0189  
          __end_of___lwtoft 0C23                      _OSCCON 008F                   ??_Lcd_Cmd 0075  
   __size_of_Lcd_Write_Char 0037                      _SSPBUF 0013              __CFG_PWRTE$OFF 0000  
         __end_of_UART_Init 0E46           __end_of_UART_Read 0BCE           __end_of_TMR0_Init 0BFA  
                    ___lmul 0E46                      ___wmul 0C56                   ??___ftadd 004F  
                 ??___ftdiv 003F                   ??___lldiv 0075                   ??___ftmul 002F  
                 ??___fttol 005A            ?_UART_Write_char 0074                   ??___lwdiv 0074  
                 ??___lwmod 0075       ___ftmul@f3_as_product 0034           ?_temp_Measurement 0070  
                 ??_isdigit 0074                   ?_ADC_Init 0070                      saved_w 007E  
        ??_temp_Measurement 0064                   ??_sprintf 00CD             Lcd_Set_Cursor@y 0026  
           Lcd_Set_Cursor@z 0025     __end_of__initialization 0031                  ___ftadd@f1 0049  
                ___ftadd@f2 004C                  ___ftdiv@f1 003C                  ___ftdiv@f2 0039  
                ___ftdiv@f3 0044               __end_of_ASS_1 0725                  ___ftmul@f1 0029  
                ___ftmul@f2 002C               __end_of_Ass_2 0004                  ___fttol@f1 0056  
            __pcstackCOMMON 0070                __pidataBANK1 0CFA           __end_of_Lcd_write 0EC8  
                 ?_SPI_Init 0070                  ___lwtoft@c 0025                   ?_PWM_Init 0039  
                   ??_ASS_1 0028              _Lcd_Set_Cursor 0F58             ??_PWM_DutyCycle 003D  
            _OPTION_REGbits 0081                  ??_ADC_Init 0074                     ??_Ass_2 0074  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  _dataBuffer 006F  
              sprintf@width 00D6                  __pbssBANK0 006F                  __pbssBANK1 00DC  
           _Oscillator_Init 0BA5                  __pmaintext 0CCF                     ?___lmul 0020  
                   ?___wmul 0020                  __pintentry 0004              ___lmul@product 0028  
                 ?___ftpack 0020      __end_of_Lcd_Set_Cursor 0FAA                  ??_SPI_Init 0074  
                ??_PWM_Init 003D                   ?___lwtoft 0025                     _GO_DONE 00F9  
                   _OSCTUNE 0090                  ??_Lcd_Init 0021                  ??_Lcd_Port 0074  
                __stringtab 0800              _Lcd_Write_Char 0D91                     _Lcd_Cmd 07E6  
             ?_temp_Display 0070             __size_of___lmul 0041                     ___ftadd 01D5  
                   ___ftdiv 0499                     ___lldiv 0786             __size_of___wmul 0023  
                   ___ftmul 03C6                     ___fttol 0551                     ___lwdiv 0DC8  
                   ___lwmod 0D27                  ??___ftpack 0074                   _ANSELbits 0188  
           ?_Lcd_Set_Cursor 0021                     __ptext1 0FAA                     __ptext2 02DE  
                   __ptext3 0C0B                     __ptext4 0551                     __ptext5 03C6  
                   __ptext6 0499                     __ptext7 01D5                     __ptext8 064E  
                   __ptext9 0035                     _g_state 0079                  ??___lwtoft 0028  
                _pinManager 0CA4                __size_of_ISR 002B                     _dpowers 0810  
                 _T2CONbits 0012                     _rawData 00DC     __size_of_Interrupt_Init 000F  
                   _isdigit 0BCE     __end_of_Oscillator_Init 0BAA                     _sprintf 0035  
    __end_of_Lcd_Write_Char 0DC8        end_of_initialization 0031              ??_temp_Display 00D9  
           ___lldiv@divisor 002C            temp_Display@TEMP 006E             ___lldiv@counter 0038  
                 _RCSTAbits 0018                   Lcd_Port@a 0074                   _UART_Init 0E06  
                 _UART_Read 0BC0                   _TMR0_Init 0BEB                   _PORTAbits 0005  
                 _PORTBbits 0006                  ASS_1@bSize 002E              _Admin_PassWord 00C6  
                 _TRISAbits 0085                   _TRISBbits 0086                   _TRISCbits 0087  
        PWM_Init@iFrequency 0039           _system_Initialize 0F0D           __size_of_ADC_Init 0019  
        ?_system_Initialize 0070             ?_Lcd_Write_Char 0070              _Admin_UserName 00B4  
               _CCP1CONbits 0017                 ___ftdiv@exp 0047   __size_of_temp_Measurement 00E8  
                 _TXSTAbits 0098                _sTemperature 00E2         ??_system_Initialize 0077  
               ___ftmul@exp 0033              __end_of___lmul 0E87              __end_of___wmul 0C79  
                ?_UART_Init 0039                  ?_UART_Read 0074                 _BAUDCTLbits 0187  
                ?_TMR0_Init 0070                   _Lcd_write 0E87                 ?_pinManager 0070  
 __end_of_system_Initialize 0F58           __size_of_SPI_Init 000D    __size_of_UART_Write_char 0009  
         __size_of_PWM_Init 0045         start_initialization 0015            ?_Oscillator_Init 0070  
               __end_of_ISR 0CA4       _data_TransferComplete 0078              _student_Number 00A0  
         __size_of_Lcd_Init 0061           __size_of_Lcd_Port 001A                    ??___lmul 0074  
                  ??___wmul 0074                  init_fetch0 0BFA                 __pdataBANK1 00A0  
           Lcd_Write_Char@a 0022             Lcd_Write_Char@y 0021               _segment_Array 00AA  
      __end_of_temp_Display 1000                  ?_Lcd_write 0023      temp_Measurement@sample 0069  
            _Interrupt_Init 0BDC           __size_of___ftpack 006E                 __pbssCOMMON 0077  
                 ___latbits 0002           __size_of___lwtoft 0018               __pcstackBANK0 0020  
             __pcstackBANK1 00CD       __end_of_PWM_DutyCycle 064E                _isdigit$1444 0074  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00D2                 sprintf@prec 00D1  
       __size_of_pinManager 002B            ___lwdiv@dividend 0022            ??_Lcd_Set_Cursor 0022  
                  ?___ftadd 0049                    ?___ftdiv 0039                    ?___lldiv 002C  
                  ?___ftmul 0029                    ?___fttol 0056                    ?___lwdiv 0020  
                  ?___lwmod 0027                 ??_UART_Init 003B                 ??_UART_Read 0020  
    __end_of_Interrupt_Init 0BEB                 ??_TMR0_Init 0074                   __pstrings 0800  
            __size_of_ASS_1 0069  __size_of_system_Initialize 004B                    ?_isdigit 0070  
           Lcd_write@string 0023                    _ADC_Init 0C23              __size_of_Ass_2 0001  
   PWM_DutyCycle@iDutyCycle 0039            ___lwdiv@quotient 0025                    ?_sprintf 006B  
         ??_UART_Write_char 0076           interrupt_function 0004              ___wmul@product 0074  
          _temp_Measurement 02DE                    _PIE1bits 008C                    Lcd_Cmd@a 0020  
                  _PIR1bits 000C           UART_Init@baudRate 0039                    _SPI_Init 0BB3  
           ?_Interrupt_Init 0070                 ??_Lcd_write 0025                  _ADCON0bits 001F  
               __stringbase 080F                  _ADCON1bits 009F                    _PWM_Init 0EC8  
         ___wmul@multiplier 0020            ??_Lcd_Write_Char 0075                    _Lcd_Init 0725  
                  _Lcd_Port 0C3C           ___lmul@multiplier 0020        Lcd_Set_Cursor@column 0021  
      UART_Write_char@iData 0074            __size_of_Lcd_Cmd 001A                  _EECON1bits 018C  
     __size_of_temp_Display 0056            __size_of___ftadd 0109            __size_of___ftdiv 00B8  
          __size_of___lldiv 0060            __size_of___ftmul 00D3            __size_of___fttol 008E  
          __size_of___lwdiv 003E            __size_of___lwmod 0034                    ___ftpack 064E  
        __end_of__stringtab 0810                ??_pinManager 0074                    ___lwtoft 0C0B  
         _UART_Write_String 0D5B                  sprintf@val 00D3            __size_of_isdigit 000E  
        ?_UART_Write_String 0020             ___lwdiv@divisor 0020             ___lwdiv@counter 0024  
                  __ptext10 0BCE                    __ptext11 0C56                    __ptext20 0BEB  
                  __ptext12 0D27                    __ptext21 0BB3                    __ptext13 0DC8  
                  __ptext30 0BDC                    __ptext22 0EC8                    __ptext14 0E87  
                  __ptext31 0C23                    __ptext23 05DF                    __ptext15 0D91  
                  __ptext32 0003                    __ptext24 0E46                    __ptext16 0F58  
                  __ptext33 06BC                    __ptext25 0786                    __ptext17 0F0D  
                  __ptext34 0D5B                    __ptext26 0BA5                    __ptext18 0CA4  
                  __ptext35 0BAA                    __ptext27 0725                    __ptext19 0E06  
                  __ptext36 0BC0                    __ptext28 07E6                    __ptext37 0C79  
                  __ptext29 0C3C           __CFG_BOR4V$BOR40V 0000            __size_of_sprintf 01A0  
       ??_UART_Write_String 0022               __size_of_main 002B                _temp_Display 0FAA  
        __end_of_pinManager 0CCF              ASS_1@bSize_143 0030   __end_of_UART_Write_String 0D91  
                _INTCONbits 000B                    init_ram0 0BFE                    isdigit@c 0075  
        Lcd_Write_Char@temp 0020                    intlevel1 0000                   sprintf@ap 00D0  
                 sprintf@sp 00D5    __size_of_Oscillator_Init 0005            ___lwmod@dividend 0029  
          ___lldiv@dividend 0030                   stringcode 080A          Lcd_Set_Cursor@temp 0027  
  __end_of_temp_Measurement 03C6                 _temperature 0077                    sprintf@c 00D8  
                  sprintf@f 006B             _UART_Write_char 0BAA            ___lldiv@quotient 0034  
           ___lwmod@divisor 0027            _segment_Variable 00DE             ___lwmod@counter 0076  
                  stringdir 080A                    stringtab 0800           Lcd_Set_Cursor@raw 0024  
                Lcd_write@i 0028                  _SSPCONbits 0014  
