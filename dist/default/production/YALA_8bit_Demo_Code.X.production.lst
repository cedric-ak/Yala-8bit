

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 20 18:07:57 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  008F                     	;# 
   363  0090                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0105                     	;# 
   382  0107                     	;# 
   383  0108                     	;# 
   384  0109                     	;# 
   385  010C                     	;# 
   386  010C                     	;# 
   387  010D                     	;# 
   388  010E                     	;# 
   389  010F                     	;# 
   390  0185                     	;# 
   391  0187                     	;# 
   392  0188                     	;# 
   393  0189                     	;# 
   394  018C                     	;# 
   395  018D                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  000E                     	;# 
   412  000F                     	;# 
   413  0010                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0013                     	;# 
   417  0014                     	;# 
   418  0015                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0017                     	;# 
   422  0018                     	;# 
   423  0019                     	;# 
   424  001A                     	;# 
   425  001B                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001D                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  0081                     	;# 
   432  0085                     	;# 
   433  0086                     	;# 
   434  0087                     	;# 
   435  0088                     	;# 
   436  0089                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  008E                     	;# 
   440  008F                     	;# 
   441  0090                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0095                     	;# 
   449  0096                     	;# 
   450  0097                     	;# 
   451  0098                     	;# 
   452  0099                     	;# 
   453  009A                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  009F                     	;# 
   459  0105                     	;# 
   460  0107                     	;# 
   461  0108                     	;# 
   462  0109                     	;# 
   463  010C                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0185                     	;# 
   469  0187                     	;# 
   470  0188                     	;# 
   471  0189                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0000                     	;# 
   475  0001                     	;# 
   476  0002                     	;# 
   477  0003                     	;# 
   478  0004                     	;# 
   479  0005                     	;# 
   480  0006                     	;# 
   481  0007                     	;# 
   482  0008                     	;# 
   483  0009                     	;# 
   484  000A                     	;# 
   485  000B                     	;# 
   486  000C                     	;# 
   487  000D                     	;# 
   488  000E                     	;# 
   489  000E                     	;# 
   490  000F                     	;# 
   491  0010                     	;# 
   492  0011                     	;# 
   493  0012                     	;# 
   494  0013                     	;# 
   495  0014                     	;# 
   496  0015                     	;# 
   497  0015                     	;# 
   498  0016                     	;# 
   499  0017                     	;# 
   500  0018                     	;# 
   501  0019                     	;# 
   502  001A                     	;# 
   503  001B                     	;# 
   504  001B                     	;# 
   505  001C                     	;# 
   506  001D                     	;# 
   507  001E                     	;# 
   508  001F                     	;# 
   509  0081                     	;# 
   510  0085                     	;# 
   511  0086                     	;# 
   512  0087                     	;# 
   513  0088                     	;# 
   514  0089                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  008F                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0098                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009E                     	;# 
   536  009F                     	;# 
   537  0105                     	;# 
   538  0107                     	;# 
   539  0108                     	;# 
   540  0109                     	;# 
   541  010C                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0185                     	;# 
   547  0187                     	;# 
   548  0188                     	;# 
   549  0189                     	;# 
   550  018C                     	;# 
   551  018D                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  000E                     	;# 
   568  000F                     	;# 
   569  0010                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0014                     	;# 
   574  0015                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001D                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  0081                     	;# 
   588  0085                     	;# 
   589  0086                     	;# 
   590  0087                     	;# 
   591  0088                     	;# 
   592  0089                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  008F                     	;# 
   597  0090                     	;# 
   598  0091                     	;# 
   599  0092                     	;# 
   600  0093                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0094                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009E                     	;# 
   614  009F                     	;# 
   615  0105                     	;# 
   616  0107                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010E                     	;# 
   623  010F                     	;# 
   624  0185                     	;# 
   625  0187                     	;# 
   626  0188                     	;# 
   627  0189                     	;# 
   628  018C                     	;# 
   629  018D                     	;# 
   630  0000                     	;# 
   631  0001                     	;# 
   632  0002                     	;# 
   633  0003                     	;# 
   634  0004                     	;# 
   635  0005                     	;# 
   636  0006                     	;# 
   637  0007                     	;# 
   638  0008                     	;# 
   639  0009                     	;# 
   640  000A                     	;# 
   641  000B                     	;# 
   642  000C                     	;# 
   643  000D                     	;# 
   644  000E                     	;# 
   645  000E                     	;# 
   646  000F                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0015                     	;# 
   653  0015                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001B                     	;# 
   661  001C                     	;# 
   662  001D                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  0081                     	;# 
   666  0085                     	;# 
   667  0086                     	;# 
   668  0087                     	;# 
   669  0088                     	;# 
   670  0089                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  008F                     	;# 
   675  0090                     	;# 
   676  0091                     	;# 
   677  0092                     	;# 
   678  0093                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  009F                     	;# 
   693  0105                     	;# 
   694  0107                     	;# 
   695  0108                     	;# 
   696  0109                     	;# 
   697  010C                     	;# 
   698  010C                     	;# 
   699  010D                     	;# 
   700  010E                     	;# 
   701  010F                     	;# 
   702  0185                     	;# 
   703  0187                     	;# 
   704  0188                     	;# 
   705  0189                     	;# 
   706  018C                     	;# 
   707  018D                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  000E                     	;# 
   723  000E                     	;# 
   724  000F                     	;# 
   725  0010                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0013                     	;# 
   729  0014                     	;# 
   730  0015                     	;# 
   731  0015                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001B                     	;# 
   739  001C                     	;# 
   740  001D                     	;# 
   741  001E                     	;# 
   742  001F                     	;# 
   743  0081                     	;# 
   744  0085                     	;# 
   745  0086                     	;# 
   746  0087                     	;# 
   747  0088                     	;# 
   748  0089                     	;# 
   749  008C                     	;# 
   750  008D                     	;# 
   751  008E                     	;# 
   752  008F                     	;# 
   753  0090                     	;# 
   754  0091                     	;# 
   755  0092                     	;# 
   756  0093                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  009F                     	;# 
   771  0105                     	;# 
   772  0107                     	;# 
   773  0108                     	;# 
   774  0109                     	;# 
   775  010C                     	;# 
   776  010C                     	;# 
   777  010D                     	;# 
   778  010E                     	;# 
   779  010F                     	;# 
   780  0185                     	;# 
   781  0187                     	;# 
   782  0188                     	;# 
   783  0189                     	;# 
   784  018C                     	;# 
   785  018D                     	;# 
   786  0000                     	;# 
   787  0001                     	;# 
   788  0002                     	;# 
   789  0003                     	;# 
   790  0004                     	;# 
   791  0005                     	;# 
   792  0006                     	;# 
   793  0007                     	;# 
   794  0008                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  000E                     	;# 
   802  000F                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0014                     	;# 
   808  0015                     	;# 
   809  0015                     	;# 
   810  0016                     	;# 
   811  0017                     	;# 
   812  0018                     	;# 
   813  0019                     	;# 
   814  001A                     	;# 
   815  001B                     	;# 
   816  001B                     	;# 
   817  001C                     	;# 
   818  001D                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  0081                     	;# 
   822  0085                     	;# 
   823  0086                     	;# 
   824  0087                     	;# 
   825  0088                     	;# 
   826  0089                     	;# 
   827  008C                     	;# 
   828  008D                     	;# 
   829  008E                     	;# 
   830  008F                     	;# 
   831  0090                     	;# 
   832  0091                     	;# 
   833  0092                     	;# 
   834  0093                     	;# 
   835  0093                     	;# 
   836  0093                     	;# 
   837  0094                     	;# 
   838  0095                     	;# 
   839  0096                     	;# 
   840  0097                     	;# 
   841  0098                     	;# 
   842  0099                     	;# 
   843  009A                     	;# 
   844  009B                     	;# 
   845  009C                     	;# 
   846  009D                     	;# 
   847  009E                     	;# 
   848  009F                     	;# 
   849  0105                     	;# 
   850  0107                     	;# 
   851  0108                     	;# 
   852  0109                     	;# 
   853  010C                     	;# 
   854  010C                     	;# 
   855  010D                     	;# 
   856  010E                     	;# 
   857  010F                     	;# 
   858  0185                     	;# 
   859  0187                     	;# 
   860  0188                     	;# 
   861  0189                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  0000                     	;# 
   865  0001                     	;# 
   866  0002                     	;# 
   867  0003                     	;# 
   868  0004                     	;# 
   869  0005                     	;# 
   870  0006                     	;# 
   871  0007                     	;# 
   872  0008                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  000E                     	;# 
   880  000F                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001B                     	;# 
   895  001C                     	;# 
   896  001D                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  0081                     	;# 
   900  0085                     	;# 
   901  0086                     	;# 
   902  0087                     	;# 
   903  0088                     	;# 
   904  0089                     	;# 
   905  008C                     	;# 
   906  008D                     	;# 
   907  008E                     	;# 
   908  008F                     	;# 
   909  0090                     	;# 
   910  0091                     	;# 
   911  0092                     	;# 
   912  0093                     	;# 
   913  0093                     	;# 
   914  0093                     	;# 
   915  0094                     	;# 
   916  0095                     	;# 
   917  0096                     	;# 
   918  0097                     	;# 
   919  0098                     	;# 
   920  0099                     	;# 
   921  009A                     	;# 
   922  009B                     	;# 
   923  009C                     	;# 
   924  009D                     	;# 
   925  009E                     	;# 
   926  009F                     	;# 
   927  0105                     	;# 
   928  0107                     	;# 
   929  0108                     	;# 
   930  0109                     	;# 
   931  010C                     	;# 
   932  010C                     	;# 
   933  010D                     	;# 
   934  010E                     	;# 
   935  010F                     	;# 
   936  0185                     	;# 
   937  0187                     	;# 
   938  0188                     	;# 
   939  0189                     	;# 
   940  018C                     	;# 
   941  018D                     	;# 
   942  0000                     	;# 
   943  0001                     	;# 
   944  0002                     	;# 
   945  0003                     	;# 
   946  0004                     	;# 
   947  0005                     	;# 
   948  0006                     	;# 
   949  0007                     	;# 
   950  0008                     	;# 
   951  0009                     	;# 
   952  000A                     	;# 
   953  000B                     	;# 
   954  000C                     	;# 
   955  000D                     	;# 
   956  000E                     	;# 
   957  000E                     	;# 
   958  000F                     	;# 
   959  0010                     	;# 
   960  0011                     	;# 
   961  0012                     	;# 
   962  0013                     	;# 
   963  0014                     	;# 
   964  0015                     	;# 
   965  0015                     	;# 
   966  0016                     	;# 
   967  0017                     	;# 
   968  0018                     	;# 
   969  0019                     	;# 
   970  001A                     	;# 
   971  001B                     	;# 
   972  001B                     	;# 
   973  001C                     	;# 
   974  001D                     	;# 
   975  001E                     	;# 
   976  001F                     	;# 
   977  0081                     	;# 
   978  0085                     	;# 
   979  0086                     	;# 
   980  0087                     	;# 
   981  0088                     	;# 
   982  0089                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  008F                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0093                     	;# 
   992  0093                     	;# 
   993  0094                     	;# 
   994  0095                     	;# 
   995  0096                     	;# 
   996  0097                     	;# 
   997  0098                     	;# 
   998  0099                     	;# 
   999  009A                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  009F                     	;# 
  1005  0105                     	;# 
  1006  0107                     	;# 
  1007  0108                     	;# 
  1008  0109                     	;# 
  1009  010C                     	;# 
  1010  010C                     	;# 
  1011  010D                     	;# 
  1012  010E                     	;# 
  1013  010F                     	;# 
  1014  0185                     	;# 
  1015  0187                     	;# 
  1016  0188                     	;# 
  1017  0189                     	;# 
  1018  018C                     	;# 
  1019  018D                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000D                     	;# 
  1034  000E                     	;# 
  1035  000E                     	;# 
  1036  000F                     	;# 
  1037  0010                     	;# 
  1038  0011                     	;# 
  1039  0012                     	;# 
  1040  0013                     	;# 
  1041  0014                     	;# 
  1042  0015                     	;# 
  1043  0015                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001B                     	;# 
  1051  001C                     	;# 
  1052  001D                     	;# 
  1053  001E                     	;# 
  1054  001F                     	;# 
  1055  0081                     	;# 
  1056  0085                     	;# 
  1057  0086                     	;# 
  1058  0087                     	;# 
  1059  0088                     	;# 
  1060  0089                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008F                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009E                     	;# 
  1082  009F                     	;# 
  1083  0105                     	;# 
  1084  0107                     	;# 
  1085  0108                     	;# 
  1086  0109                     	;# 
  1087  010C                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  010E                     	;# 
  1091  010F                     	;# 
  1092  0185                     	;# 
  1093  0187                     	;# 
  1094  0188                     	;# 
  1095  0189                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098                           
  1099                           	psect	idataBANK1
  1100  0C77                     __pidataBANK1:	
  1101                           
  1102                           ;initializer for _segment_Array
  1103  0C77  343F               	retlw	63
  1104  0C78  3406               	retlw	6
  1105  0C79  345B               	retlw	91
  1106  0C7A  344F               	retlw	79
  1107  0C7B  3466               	retlw	102
  1108  0C7C  346D               	retlw	109
  1109  0C7D  347D               	retlw	125
  1110  0C7E  3407               	retlw	7
  1111  0C7F  347F               	retlw	127
  1112  0C80  346F               	retlw	111
  1113                           
  1114                           ;initializer for _student_Name
  1115  0C81  3422               	retlw	low ((STR_4-__stringbase)| (0+32768))
  1116                           
  1117                           ;initializer for _student_Number
  1118  0C82  3418               	retlw	low ((STR_3-__stringbase)| (0+32768))
  1119                           
  1120                           	psect	strings
  1121  0800                     __pstrings:	
  1122  0800                     stringtab:	
  1123  0800                     __stringtab:	
  1124                           
  1125                           ;	String table - string pointers are 1 byte each
  1126  0800  1BFF               	btfsc	btemp+1,7
  1127  0801  280A               	ljmp	stringcode
  1128  0802  1383               	bcf	3,7
  1129  0803  187F               	btfsc	btemp+1,0
  1130  0804  1783               	bsf	3,7
  1131  0805  0800               	movf	0,w
  1132  0806  0A84               	incf	4,f
  1133  0807  1903               	skipnz
  1134  0808  0AFF               	incf	btemp+1,f
  1135  0809  0008               	return
  1136  080A                     stringcode:	
  1137  080A                     stringdir:	
  1138  080A  3008               	movlw	high stringdir
  1139  080B  008A               	movwf	10
  1140  080C  0804               	movf	4,w
  1141  080D  0A84               	incf	4,f
  1142  080E  0782               	addwf	2,f
  1143  080F                     __stringbase:	
  1144  080F  3400               	retlw	0
  1145  0810                     __end_of__stringtab:	
  1146  0810                     _dpowers:	
  1147  0810  3401               	retlw	1
  1148  0811  3400               	retlw	0
  1149  0812  340A               	retlw	10
  1150  0813  3400               	retlw	0
  1151  0814  3464               	retlw	100
  1152  0815  3400               	retlw	0
  1153  0816  34E8               	retlw	232
  1154  0817  3403               	retlw	3
  1155  0818  3410               	retlw	16
  1156  0819  3427               	retlw	39
  1157  081A                     __end_of_dpowers:	
  1158  0001                     _TMR0	set	1
  1159  001A                     _RCREG	set	26
  1160  0019                     _TXREG	set	25
  1161  0018                     _RCSTAbits	set	24
  1162  0014                     _SSPCONbits	set	20
  1163  0005                     _PORTAbits	set	5
  1164  0012                     _T2CONbits	set	18
  1165  0015                     _CCPR1L	set	21
  1166  0017                     _CCP1CONbits	set	23
  1167  000B                     _INTCONbits	set	11
  1168  001E                     _ADRESH	set	30
  1169  000C                     _PIR1bits	set	12
  1170  001F                     _ADCON0bits	set	31
  1171  0006                     _PORTBbits	set	6
  1172  0009                     _PORTE	set	9
  1173  0008                     _PORTD	set	8
  1174  0007                     _PORTC	set	7
  1175  0006                     _PORTB	set	6
  1176  0005                     _PORTA	set	5
  1177  0013                     _SSPBUF	set	19
  1178  00F9                     _GO_DONE	set	249
  1179  0081                     _OPTION_REGbits	set	129
  1180  0099                     _SPBRG	set	153
  1181  0098                     _TXSTAbits	set	152
  1182  0092                     _PR2	set	146
  1183  008C                     _PIE1bits	set	140
  1184  009E                     _ADRESL	set	158
  1185  009F                     _ADCON1bits	set	159
  1186  0090                     _OSCTUNE	set	144
  1187  008F                     _OSCCON	set	143
  1188  0085                     _TRISAbits	set	133
  1189  0087                     _TRISCbits	set	135
  1190  0086                     _TRISBbits	set	134
  1191  0086                     _TRISB	set	134
  1192  0088                     _TRISD	set	136
  1193  010C                     _EEDATA	set	268
  1194  010D                     _EEADR	set	269
  1195  018D                     _EECON2	set	397
  1196  018C                     _EECON1bits	set	396
  1197  0187                     _BAUDCTLbits	set	391
  1198  0188                     _ANSELbits	set	392
  1199  0189                     _ANSELH	set	393
  1200  081A                     STR_1:	
  1201  081A  3454               	retlw	84	;'T'
  1202  081B  3465               	retlw	101	;'e'
  1203  081C  346D               	retlw	109	;'m'
  1204  081D  3470               	retlw	112	;'p'
  1205  081E  3465               	retlw	101	;'e'
  1206  081F  3472               	retlw	114	;'r'
  1207  0820  3461               	retlw	97	;'a'
  1208  0821  3474               	retlw	116	;'t'
  1209  0822  3475               	retlw	117	;'u'
  1210  0823  3472               	retlw	114	;'r'
  1211  0824  3465               	retlw	101	;'e'
  1212  0825  343A               	retlw	58	;':'
  1213  0826  3400               	retlw	0
  1214  0827                     STR_3:	
  1215  0827  3432               	retlw	50	;'2'
  1216  0828  3430               	retlw	48	;'0'
  1217  0829  3431               	retlw	49	;'1'
  1218  082A  3431               	retlw	49	;'1'
  1219  082B  3434               	retlw	52	;'4'
  1220  082C  3437               	retlw	55	;'7'
  1221  082D  3432               	retlw	50	;'2'
  1222  082E  3439               	retlw	57	;'9'
  1223  082F  3436               	retlw	54	;'6'
  1224  0830  3400               	retlw	0
  1225  0831                     STR_4:	
  1226  0831  3441               	retlw	65	;'A'
  1227  0832  346B               	retlw	107	;'k'
  1228  0833  3469               	retlw	105	;'i'
  1229  0834  346C               	retlw	108	;'l'
  1230  0835  3469               	retlw	105	;'i'
  1231  0836  346D               	retlw	109	;'m'
  1232  0837  3461               	retlw	97	;'a'
  1233  0838  346C               	retlw	108	;'l'
  1234  0839  3469               	retlw	105	;'i'
  1235  083A  3400               	retlw	0
  1236  083B                     STR_2:	
  1237  083B  3425               	retlw	37	;'%'
  1238  083C  3433               	retlw	51	;'3'
  1239  083D  3464               	retlw	100	;'d'
  1240  083E  3400               	retlw	0
  1241                           
  1242                           ; #config settings
  1243  0000                     
  1244                           	psect	cinit
  1245  0015                     start_initialization:	
  1246  0015                     __initialization:	
  1247                           
  1248                           ; Initialize objects allocated to BANK1
  1249  0015  1383               	bcf	3,7	;select IRP bank0
  1250  0016  30BD               	movlw	low (__pdataBANK1+12)
  1251  0017  00FD               	movwf	btemp+-1
  1252  0018  300C               	movlw	high __pidataBANK1
  1253  0019  00FE               	movwf	btemp
  1254  001A  3077               	movlw	low __pidataBANK1
  1255  001B  00FF               	movwf	btemp+1
  1256  001C  30B1               	movlw	low __pdataBANK1
  1257  001D  0084               	movwf	4
  1258  001E  120A  158A  24C0   	fcall	init_ram0
  1259                           
  1260                           ; Clear objects allocated to BANK1
  1261  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0023  01BD               	clrf	__pbssBANK1& (0+127)
  1264  0024  01BE               	clrf	(__pbssBANK1+1)& (0+127)
  1265  0025  01BF               	clrf	(__pbssBANK1+2)& (0+127)
  1266  0026  01C0               	clrf	(__pbssBANK1+3)& (0+127)
  1267  0027  01C1               	clrf	(__pbssBANK1+4)& (0+127)
  1268  0028  01C2               	clrf	(__pbssBANK1+5)& (0+127)
  1269  0029  01C3               	clrf	(__pbssBANK1+6)& (0+127)
  1270  002A  01C4               	clrf	(__pbssBANK1+7)& (0+127)
  1271                           
  1272                           ; Clear objects allocated to COMMON
  1273  002B  01F6               	clrf	__pbssCOMMON& (0+127)
  1274  002C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1275  002D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1276  002E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1277  002F                     end_of_initialization:	
  1278                           ;End of C runtime variable initialization code
  1279                           
  1280  002F                     __end_of__initialization:	
  1281  002F  0183               	clrf	3
  1282  0030  120A  158A  2D82   	ljmp	_main	;jump to C main() function
  1283                           
  1284                           	psect	bssCOMMON
  1285  0076                     __pbssCOMMON:	
  1286  0076                     _data_TransferComplete:	
  1287  0076                     	ds	1
  1288  0077                     _dataBuffer:	
  1289  0077                     	ds	1
  1290  0078                     _temperature:	
  1291  0078                     	ds	1
  1292  0079                     _g_state:	
  1293  0079                     	ds	1
  1294                           
  1295                           	psect	bssBANK1
  1296  00BD                     __pbssBANK1:	
  1297  00BD                     _rawData:	
  1298  00BD                     	ds	2
  1299  00BF                     _segment_Variable:	
  1300  00BF                     	ds	2
  1301  00C1                     _adc:	
  1302  00C1                     	ds	2
  1303  00C3                     _sTemperature:	
  1304  00C3                     	ds	2
  1305                           
  1306                           	psect	dataBANK1
  1307  00B1                     __pdataBANK1:	
  1308  00B1                     _segment_Array:	
  1309  00B1                     	ds	10
  1310  00BB                     _student_Name:	
  1311  00BB                     	ds	1
  1312  00BC                     _student_Number:	
  1313  00BC                     	ds	1
  1314                           
  1315                           	psect	inittext
  1316  0CBC                     init_fetch0:	
  1317                           ;	Called with low address in FSR and high address in W
  1318                           
  1319  0CBC  087E               	movf	126,w
  1320  0CBD  008A               	movwf	10
  1321  0CBE  087F               	movf	127,w
  1322  0CBF  0082               	movwf	2
  1323  0CC0                     init_ram0:	
  1324                           ;Called with:
  1325                           ;	high address of idata address in btemp 
  1326                           ;	low address of idata address in btemp+1 
  1327                           ;	low address of data in FSR
  1328                           ;	high address + 1 of data in btemp-1
  1329                           
  1330  0CC0  24BC  120A  158A   	fcall	init_fetch0
  1331  0CC3  0080               	movwf	0
  1332  0CC4  0A84               	incf	4,f
  1333  0CC5  0804               	movf	4,w
  1334  0CC6  067D               	xorwf	125,w
  1335  0CC7  1903               	btfsc	3,2
  1336  0CC8  3400               	retlw	0
  1337  0CC9  0AFF               	incf	127,f
  1338  0CCA  1903               	btfsc	3,2
  1339  0CCB  0AFE               	incf	126,f
  1340  0CCC  2CC0               	goto	init_ram0
  1341                           
  1342                           	psect	cstackBANK1
  1343  00A0                     __pcstackBANK1:	
  1344  00A0                     ??_sprintf:	
  1345                           
  1346                           ; 1 bytes @ 0x0
  1347  00A0                     	ds	3
  1348  00A3                     sprintf@ap:	
  1349                           
  1350                           ; 1 bytes @ 0x3
  1351  00A3                     	ds	1
  1352  00A4                     sprintf@prec:	
  1353                           
  1354                           ; 1 bytes @ 0x4
  1355  00A4                     	ds	1
  1356  00A5                     sprintf@flag:	
  1357                           
  1358                           ; 1 bytes @ 0x5
  1359  00A5                     	ds	1
  1360  00A6                     sprintf@val:	
  1361                           
  1362                           ; 2 bytes @ 0x6
  1363  00A6                     	ds	2
  1364  00A8                     sprintf@sp:	
  1365                           
  1366                           ; 1 bytes @ 0x8
  1367  00A8                     	ds	1
  1368  00A9                     sprintf@width:	
  1369                           
  1370                           ; 2 bytes @ 0x9
  1371  00A9                     	ds	2
  1372  00AB                     sprintf@c:	
  1373                           
  1374                           ; 1 bytes @ 0xB
  1375  00AB                     	ds	1
  1376  00AC                     ??_temp_Display:	
  1377                           
  1378                           ; 1 bytes @ 0xC
  1379  00AC                     	ds	3
  1380  00AF                     temp_Display@TEMP:	
  1381                           
  1382                           ; 1 bytes @ 0xF
  1383  00AF                     	ds	1
  1384  00B0                     ??_main:	
  1385                           
  1386                           ; 1 bytes @ 0x10
  1387  00B0                     	ds	1
  1388                           
  1389                           	psect	cstackCOMMON
  1390  0070                     __pcstackCOMMON:	
  1391  0070                     ?_isdigit:	
  1392  0070                     ?_system_Initialize:	
  1393                           ; 1 bit 
  1394                           
  1395  0070                     ?_temp_Display:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_Oscillator_Init:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ?_Interrupt_Init:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_Lcd_Init:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?_ADC_Init:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_TMR0_Init:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ?_SPI_Init:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_pinManager:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_Lcd_Port:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?_Lcd_Cmd:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_Lcd_Write_Char:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_temp_Measurement:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_ISR:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ??_ISR:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ?_main:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440                           
  1441                           ; 2 bytes @ 0x0
  1442  0070                     	ds	4
  1443  0074                     ??_Oscillator_Init:	
  1444  0074                     ??_Interrupt_Init:	
  1445                           ; 1 bytes @ 0x4
  1446                           
  1447  0074                     ??_ADC_Init:	
  1448                           ; 1 bytes @ 0x4
  1449                           
  1450  0074                     ??_TMR0_Init:	
  1451                           ; 1 bytes @ 0x4
  1452                           
  1453  0074                     ??_SPI_Init:	
  1454                           ; 1 bytes @ 0x4
  1455                           
  1456  0074                     ??_isdigit:	
  1457                           ; 1 bytes @ 0x4
  1458                           
  1459  0074                     ??_pinManager:	
  1460                           ; 1 bytes @ 0x4
  1461                           
  1462  0074                     ??_Lcd_Port:	
  1463                           ; 1 bytes @ 0x4
  1464                           
  1465  0074                     ??___wmul:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468  0074                     ??___lmul:	
  1469                           ; 1 bytes @ 0x4
  1470                           
  1471  0074                     ??___lwdiv:	
  1472                           ; 1 bytes @ 0x4
  1473                           
  1474  0074                     ??___lwtoft:	
  1475                           ; 1 bytes @ 0x4
  1476                           
  1477  0074                     Lcd_Port@a:	
  1478                           ; 1 bytes @ 0x4
  1479                           
  1480  0074                     _isdigit$1419:	
  1481                           ; 1 bytes @ 0x4
  1482                           
  1483  0074                     ___wmul@product:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486                           
  1487                           ; 2 bytes @ 0x4
  1488  0074                     	ds	1
  1489  0075                     ??_Lcd_Write_Char:	
  1490  0075                     ??___lldiv:	
  1491                           ; 1 bytes @ 0x5
  1492                           
  1493  0075                     ??___lwmod:	
  1494                           ; 1 bytes @ 0x5
  1495                           
  1496  0075                     Lcd_Cmd@a:	
  1497                           ; 1 bytes @ 0x5
  1498                           
  1499  0075                     isdigit@c:	
  1500                           ; 1 bytes @ 0x5
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x5
  1504  0075                     	ds	1
  1505  0076                     ??_system_Initialize:	
  1506                           
  1507                           	psect	cstackBANK0
  1508  0020                     __pcstackBANK0:	
  1509                           ; 1 bytes @ 0x6
  1510                           
  1511  0020                     ??_Lcd_Cmd:	
  1512  0020                     ?___wmul:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0020                     ?___lwdiv:	
  1516                           ; 2 bytes @ 0x0
  1517                           
  1518  0020                     ?___ftpack:	
  1519                           ; 2 bytes @ 0x0
  1520                           
  1521  0020                     ?___lmul:	
  1522                           ; 3 bytes @ 0x0
  1523                           
  1524  0020                     Lcd_Write_Char@temp:	
  1525                           ; 4 bytes @ 0x0
  1526                           
  1527  0020                     ___wmul@multiplier:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0020                     ___lwdiv@divisor:	
  1531                           ; 2 bytes @ 0x0
  1532                           
  1533  0020                     ___ftpack@arg:	
  1534                           ; 2 bytes @ 0x0
  1535                           
  1536  0020                     ___lmul@multiplier:	
  1537                           ; 3 bytes @ 0x0
  1538                           
  1539                           
  1540                           ; 4 bytes @ 0x0
  1541  0020                     	ds	1
  1542  0021                     Lcd_Write_Char@y:	
  1543                           
  1544                           ; 1 bytes @ 0x1
  1545  0021                     	ds	1
  1546  0022                     ??_Lcd_Init:	
  1547  0022                     ?_Lcd_Set_Cursor:	
  1548                           ; 1 bytes @ 0x2
  1549                           
  1550  0022                     Lcd_Set_Cursor@column:	
  1551                           ; 1 bytes @ 0x2
  1552                           
  1553  0022                     Lcd_Write_Char@a:	
  1554                           ; 1 bytes @ 0x2
  1555                           
  1556  0022                     ___wmul@multiplicand:	
  1557                           ; 1 bytes @ 0x2
  1558                           
  1559  0022                     ___lwdiv@dividend:	
  1560                           ; 2 bytes @ 0x2
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0x2
  1564  0022                     	ds	1
  1565  0023                     ??_Lcd_Set_Cursor:	
  1566  0023                     ?_Lcd_write:	
  1567                           ; 1 bytes @ 0x3
  1568                           
  1569  0023                     ___ftpack@exp:	
  1570                           ; 1 bytes @ 0x3
  1571                           
  1572  0023                     Lcd_write@string:	
  1573                           ; 1 bytes @ 0x3
  1574                           
  1575                           
  1576                           ; 2 bytes @ 0x3
  1577  0023                     	ds	1
  1578  0024                     ___ftpack@sign:	
  1579  0024                     ___lwdiv@counter:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0024                     ___lmul@multiplicand:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585                           
  1586                           ; 4 bytes @ 0x4
  1587  0024                     	ds	1
  1588  0025                     ??___ftpack:	
  1589  0025                     ??_Lcd_write:	
  1590                           ; 1 bytes @ 0x5
  1591                           
  1592  0025                     Lcd_Set_Cursor@raw:	
  1593                           ; 1 bytes @ 0x5
  1594                           
  1595  0025                     ___lwdiv@quotient:	
  1596                           ; 1 bytes @ 0x5
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x5
  1600  0025                     	ds	1
  1601  0026                     Lcd_Set_Cursor@z:	
  1602                           
  1603                           ; 1 bytes @ 0x6
  1604  0026                     	ds	1
  1605  0027                     ?___lwmod:	
  1606  0027                     Lcd_Set_Cursor@y:	
  1607                           ; 2 bytes @ 0x7
  1608                           
  1609  0027                     ___lwmod@divisor:	
  1610                           ; 1 bytes @ 0x7
  1611                           
  1612                           
  1613                           ; 2 bytes @ 0x7
  1614  0027                     	ds	1
  1615  0028                     ?___lwtoft:	
  1616  0028                     Lcd_Set_Cursor@temp:	
  1617                           ; 3 bytes @ 0x8
  1618                           
  1619  0028                     Lcd_write@i:	
  1620                           ; 1 bytes @ 0x8
  1621                           
  1622  0028                     ___lwtoft@c:	
  1623                           ; 2 bytes @ 0x8
  1624                           
  1625  0028                     ___lmul@product:	
  1626                           ; 2 bytes @ 0x8
  1627                           
  1628                           
  1629                           ; 4 bytes @ 0x8
  1630  0028                     	ds	1
  1631  0029                     ___lwmod@dividend:	
  1632                           
  1633                           ; 2 bytes @ 0x9
  1634  0029                     	ds	2
  1635  002B                     ?___ftmul:	
  1636  002B                     ___lwmod@counter:	
  1637                           ; 3 bytes @ 0xB
  1638                           
  1639  002B                     ___ftmul@f1:	
  1640                           ; 1 bytes @ 0xB
  1641                           
  1642                           
  1643                           ; 3 bytes @ 0xB
  1644  002B                     	ds	1
  1645  002C                     ?___lldiv:	
  1646  002C                     ___lldiv@divisor:	
  1647                           ; 4 bytes @ 0xC
  1648                           
  1649                           
  1650                           ; 4 bytes @ 0xC
  1651  002C                     	ds	2
  1652  002E                     ___ftmul@f2:	
  1653                           
  1654                           ; 3 bytes @ 0xE
  1655  002E                     	ds	2
  1656  0030                     ___lldiv@dividend:	
  1657                           
  1658                           ; 4 bytes @ 0x10
  1659  0030                     	ds	1
  1660  0031                     ??___ftmul:	
  1661                           
  1662                           ; 1 bytes @ 0x11
  1663  0031                     	ds	3
  1664  0034                     ___lldiv@quotient:	
  1665                           
  1666                           ; 4 bytes @ 0x14
  1667  0034                     	ds	1
  1668  0035                     ___ftmul@exp:	
  1669                           
  1670                           ; 1 bytes @ 0x15
  1671  0035                     	ds	1
  1672  0036                     ___ftmul@f3_as_product:	
  1673                           
  1674                           ; 3 bytes @ 0x16
  1675  0036                     	ds	2
  1676  0038                     ___lldiv@counter:	
  1677                           
  1678                           ; 1 bytes @ 0x18
  1679  0038                     	ds	1
  1680  0039                     ?_PWM_Init:	
  1681  0039                     ?_PWM_DutyCycle:	
  1682                           ; 1 bytes @ 0x19
  1683                           
  1684  0039                     ?_UART_Init:	
  1685                           ; 1 bytes @ 0x19
  1686                           
  1687  0039                     ___ftmul@cntr:	
  1688                           ; 1 bytes @ 0x19
  1689                           
  1690  0039                     UART_Init@baudRate:	
  1691                           ; 1 bytes @ 0x19
  1692                           
  1693  0039                     PWM_Init@iFrequency:	
  1694                           ; 2 bytes @ 0x19
  1695                           
  1696  0039                     PWM_DutyCycle@iDutyCycle:	
  1697                           ; 4 bytes @ 0x19
  1698                           
  1699                           
  1700                           ; 4 bytes @ 0x19
  1701  0039                     	ds	1
  1702  003A                     ___ftmul@sign:	
  1703                           
  1704                           ; 1 bytes @ 0x1A
  1705  003A                     	ds	1
  1706  003B                     ??_UART_Init:	
  1707  003B                     ?___ftdiv:	
  1708                           ; 1 bytes @ 0x1B
  1709                           
  1710  003B                     ___ftdiv@f2:	
  1711                           ; 3 bytes @ 0x1B
  1712                           
  1713                           
  1714                           ; 3 bytes @ 0x1B
  1715  003B                     	ds	2
  1716  003D                     ??_PWM_Init:	
  1717  003D                     ??_PWM_DutyCycle:	
  1718                           ; 1 bytes @ 0x1D
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0x1D
  1722  003D                     	ds	1
  1723  003E                     ___ftdiv@f1:	
  1724                           
  1725                           ; 3 bytes @ 0x1E
  1726  003E                     	ds	3
  1727  0041                     ??___ftdiv:	
  1728                           
  1729                           ; 1 bytes @ 0x21
  1730  0041                     	ds	4
  1731  0045                     ___ftdiv@cntr:	
  1732                           
  1733                           ; 1 bytes @ 0x25
  1734  0045                     	ds	1
  1735  0046                     ___ftdiv@f3:	
  1736                           
  1737                           ; 3 bytes @ 0x26
  1738  0046                     	ds	3
  1739  0049                     ___ftdiv@exp:	
  1740                           
  1741                           ; 1 bytes @ 0x29
  1742  0049                     	ds	1
  1743  004A                     ___ftdiv@sign:	
  1744                           
  1745                           ; 1 bytes @ 0x2A
  1746  004A                     	ds	1
  1747  004B                     ?___ftadd:	
  1748  004B                     ___ftadd@f1:	
  1749                           ; 3 bytes @ 0x2B
  1750                           
  1751                           
  1752                           ; 3 bytes @ 0x2B
  1753  004B                     	ds	3
  1754  004E                     ___ftadd@f2:	
  1755                           
  1756                           ; 3 bytes @ 0x2E
  1757  004E                     	ds	3
  1758  0051                     ??___ftadd:	
  1759                           
  1760                           ; 1 bytes @ 0x31
  1761  0051                     	ds	4
  1762  0055                     ___ftadd@sign:	
  1763                           
  1764                           ; 1 bytes @ 0x35
  1765  0055                     	ds	1
  1766  0056                     ___ftadd@exp2:	
  1767                           
  1768                           ; 1 bytes @ 0x36
  1769  0056                     	ds	1
  1770  0057                     ___ftadd@exp1:	
  1771                           
  1772                           ; 1 bytes @ 0x37
  1773  0057                     	ds	1
  1774  0058                     ?___fttol:	
  1775  0058                     ___fttol@f1:	
  1776                           ; 4 bytes @ 0x38
  1777                           
  1778                           
  1779                           ; 3 bytes @ 0x38
  1780  0058                     	ds	4
  1781  005C                     ??___fttol:	
  1782                           
  1783                           ; 1 bytes @ 0x3C
  1784  005C                     	ds	4
  1785  0060                     ___fttol@sign1:	
  1786                           
  1787                           ; 1 bytes @ 0x40
  1788  0060                     	ds	1
  1789  0061                     ___fttol@lval:	
  1790                           
  1791                           ; 4 bytes @ 0x41
  1792  0061                     	ds	4
  1793  0065                     ___fttol@exp1:	
  1794                           
  1795                           ; 1 bytes @ 0x45
  1796  0065                     	ds	1
  1797  0066                     ??_temp_Measurement:	
  1798                           
  1799                           ; 1 bytes @ 0x46
  1800  0066                     	ds	2
  1801  0068                     _temp_Measurement$1672:	
  1802                           
  1803                           ; 3 bytes @ 0x48
  1804  0068                     	ds	3
  1805  006B                     temp_Measurement@sample:	
  1806                           
  1807                           ; 2 bytes @ 0x4B
  1808  006B                     	ds	2
  1809  006D                     ?_sprintf:	
  1810  006D                     sprintf@f:	
  1811                           ; 2 bytes @ 0x4D
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x4D
  1815  006D                     	ds	3
  1816                           
  1817                           	psect	maintext
  1818  0D82                     __pmaintext:	
  1819 ;;
  1820 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1821 ;;
  1822 ;; *************** function _main *****************
  1823 ;; Defined at:
  1824 ;;		line 11 in file "main.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   16[None  ] int 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : B00/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       1       0       0
  1841 ;;      Totals:         0       0       1       0       0
  1842 ;;Total ram usage:        1 bytes
  1843 ;; Hardware stack levels required when called:    5
  1844 ;; This function calls:
  1845 ;;		_system_Initialize
  1846 ;;		_temp_Display
  1847 ;; This function is called by:
  1848 ;;		Startup code after reset
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _main
  1854  0D82                     _main:	
  1855                           
  1856                           ;main.c: 13: system_Initialize();
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1860  0D82  120A  158A  2763  120A  158A  	fcall	_system_Initialize
  1861                           
  1862                           ;main.c: 18: switch(g_state){
  1863  0D87  2D99               	goto	l2980
  1864  0D88                     l19:	
  1865                           ;main.c: 19: case ASSIGNMENT_1:
  1866                           
  1867                           
  1868                           ;main.c: 21: g_state = ASSIGNMENT_2;
  1869  0D88  01F9               	clrf	_g_state
  1870  0D89  0AF9               	incf	_g_state,f
  1871                           
  1872                           ;main.c: 22: break;
  1873  0D8A  2D99               	goto	l2980
  1874  0D8B                     l2982:	
  1875                           ;main.c: 24: case ASSIGNMENT_2:
  1876                           
  1877                           
  1878                           ;main.c: 25: g_state = ASSIGNMENT_3;
  1879  0D8B  3002               	movlw	2
  1880  0D8C  2D92               	goto	L3
  1881  0D8D                     l2984:	
  1882                           ;main.c: 28: case ASSIGNMENT_3:
  1883                           
  1884                           ;main.c: 26: break;
  1885                           
  1886                           
  1887                           ;main.c: 29: g_state = ASSIGNMENT_5;
  1888  0D8D  3004               	movlw	4
  1889  0D8E  2D92               	goto	L3
  1890  0D8F                     l2986:	
  1891                           ;main.c: 31: case ASSIGNMENT_5:
  1892                           
  1893                           ;main.c: 30: break;
  1894                           
  1895                           
  1896                           ;main.c: 32: g_state = ASSIGNMENT_6;
  1897  0D8F  3005               	movlw	5
  1898  0D90  2D92               	goto	L3
  1899  0D91                     l2988:	
  1900                           ;main.c: 35: case ASSIGNMENT_6:
  1901                           
  1902                           ;main.c: 33: break;
  1903                           
  1904                           
  1905                           ;main.c: 36: g_state = ASSIGNMENT_7;
  1906  0D91  3006               	movlw	6
  1907  0D92                     L3:	
  1908  0D92  1683               	bsf	3,5	;RP0=1, select bank1
  1909  0D93  1303               	bcf	3,6	;RP1=0, select bank1
  1910  0D94  00B0               	movwf	??_main^(0+128)
  1911  0D95  0830               	movf	??_main^(0+128),w
  1912  0D96  00F9               	movwf	_g_state
  1913                           
  1914                           ;main.c: 37: break;
  1915  0D97  2D99               	goto	l2980
  1916  0D98                     l2990:	
  1917                           ;main.c: 39: case ASSIGNMENT_7:
  1918                           
  1919                           
  1920                           ;main.c: 40: g_state = ASSIGNMENT_1;
  1921  0D98  01F9               	clrf	_g_state
  1922  0D99                     l2980:	
  1923                           ;main.c: 15: while (1) {
  1924                           
  1925                           ;main.c: 43: }
  1926                           
  1927                           ;main.c: 41: break;
  1928                           
  1929                           
  1930                           ;main.c: 16: temp_Display();
  1931  0D99  120A  118A  277B  120A  158A  	fcall	_temp_Display
  1932  0D9E  0879               	movf	_g_state,w
  1933                           
  1934                           ; Switch size 1, requested type "space"
  1935                           ; Number of cases is 6, Range of values is 0 to 6
  1936                           ; switch strategies available:
  1937                           ; Name         Instructions Cycles
  1938                           ; simple_byte           19    10 (average)
  1939                           ; direct_byte           29     8 (fixed)
  1940                           ; jumptable            260     6 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  0D9F  3A00               	xorlw	0	; case 0
  1943  0DA0  1903               	skipnz
  1944  0DA1  2D88               	goto	l19
  1945  0DA2  3A01               	xorlw	1	; case 1
  1946  0DA3  1903               	skipnz
  1947  0DA4  2D8B               	goto	l2982
  1948  0DA5  3A03               	xorlw	3	; case 2
  1949  0DA6  1903               	skipnz
  1950  0DA7  2D8D               	goto	l2984
  1951  0DA8  3A06               	xorlw	6	; case 4
  1952  0DA9  1903               	skipnz
  1953  0DAA  2D8F               	goto	l2986
  1954  0DAB  3A01               	xorlw	1	; case 5
  1955  0DAC  1903               	skipnz
  1956  0DAD  2D91               	goto	l2988
  1957  0DAE  3A03               	xorlw	3	; case 6
  1958  0DAF  1903               	skipnz
  1959  0DB0  2D98               	goto	l2990
  1960  0DB1  2D99               	goto	l2980
  1961  0DB2  2D99               	goto	l2980
  1962  0DB3                     __end_of_main:	
  1963                           ;main.c: 44: }
  1964                           ;main.c: 45: return;
  1965                           
  1966                           
  1967                           	psect	text1
  1968  077B                     __ptext1:	
  1969 ;; *************** function _temp_Display *****************
  1970 ;; Defined at:
  1971 ;;		line 40 in file "adc_Init.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  TEMP            1   15[BANK1 ] PTR unsigned char 
  1976 ;;		 -> STR_1(13), 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         0       0       0       0       0
  1987 ;;      Locals:         0       0       1       0       0
  1988 ;;      Temps:          0       0       3       0       0
  1989 ;;      Totals:         0       0       4       0       0
  1990 ;;Total ram usage:        4 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    4
  1993 ;; This function calls:
  1994 ;;		_Lcd_Set_Cursor
  1995 ;;		_Lcd_write
  1996 ;;		_sprintf
  1997 ;;		_temp_Measurement
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _temp_Display
  2005  077B                     _temp_Display:	
  2006                           
  2007                           ;adc_Init.c: 41: char *TEMP = "Temperature:";
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011  077B  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2012  077C  1683               	bsf	3,5	;RP0=1, select bank1
  2013  077D  1303               	bcf	3,6	;RP1=0, select bank1
  2014  077E  00AC               	movwf	??_temp_Display^(0+128)
  2015  077F  082C               	movf	??_temp_Display^(0+128),w
  2016  0780  00AF               	movwf	temp_Display@TEMP^(0+128)
  2017                           
  2018                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  2019  0781  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0782  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0783  01A2               	clrf	Lcd_Set_Cursor@column
  2022  0784  0AA2               	incf	Lcd_Set_Cursor@column,f
  2023  0785  3001               	movlw	1
  2024  0786  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  2025                           
  2026                           ;adc_Init.c: 43: Lcd_write(TEMP);
  2027  078B  1683               	bsf	3,5	;RP0=1, select bank1
  2028  078C  1303               	bcf	3,6	;RP1=0, select bank1
  2029  078D  082F               	movf	temp_Display@TEMP^(0+128),w
  2030  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2031  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0790  00A3               	movwf	Lcd_write@string
  2033  0791  3000               	movlw	0
  2034  0792  1D03               	btfss	3,2
  2035  0793  3080               	movlw	128
  2036  0794  00A4               	movwf	Lcd_write@string+1
  2037  0795  120A  158A  26DD  120A  118A  	fcall	_Lcd_write
  2038                           
  2039                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  2040  079A  302C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2041  079B  1683               	bsf	3,5	;RP0=1, select bank1
  2042  079C  1303               	bcf	3,6	;RP1=0, select bank1
  2043  079D  00AC               	movwf	??_temp_Display^(0+128)
  2044  079E  082C               	movf	??_temp_Display^(0+128),w
  2045  079F  1283               	bcf	3,5	;RP0=0, select bank0
  2046  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  2047  07A1  00ED               	movwf	sprintf@f
  2048  07A2  120A  118A  22DC  120A  118A  	fcall	_temp_Measurement
  2049  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2050  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  2051  07A9  00AD               	movwf	(??_temp_Display+1)^(0+128)
  2052  07AA  01AE               	clrf	((??_temp_Display+1)^(0+128)+1)
  2053  07AB  082D               	movf	(??_temp_Display+1)^(0+128),w
  2054  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2055  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2056  07AE  00EE               	movwf	?_sprintf+1
  2057  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  2058  07B0  1303               	bcf	3,6	;RP1=0, select bank1
  2059  07B1  082E               	movf	(??_temp_Display+2)^(0+128),w
  2060  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2061  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2062  07B4  00EF               	movwf	?_sprintf+2
  2063  07B5  30C3               	movlw	(low (_sTemperature| 0))& (0+255)
  2064  07B6  120A  118A  2033  120A  118A  	fcall	_sprintf
  2065                           
  2066                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof("Temperature:"));
  2067  07BB  300D               	movlw	13
  2068  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  2069  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  2070  07BE  00AC               	movwf	??_temp_Display^(0+128)
  2071  07BF  082C               	movf	??_temp_Display^(0+128),w
  2072  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  2073  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  2074  07C2  00A2               	movwf	Lcd_Set_Cursor@column
  2075  07C3  3001               	movlw	1
  2076  07C4  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  2077                           
  2078                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  2079  07C9  30C3               	movlw	(low (_sTemperature| 0))& (0+255)
  2080  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2081  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2082  07CC  00A3               	movwf	Lcd_write@string
  2083  07CD  3000               	movlw	0
  2084  07CE  00A4               	movwf	Lcd_write@string+1
  2085  07CF  120A  158A  26DD   	fcall	_Lcd_write
  2086  07D2  0008               	return
  2087  07D3                     __end_of_temp_Display:	
  2088                           
  2089                           	psect	text2
  2090  02DC                     __ptext2:	
  2091 ;; *************** function _temp_Measurement *****************
  2092 ;; Defined at:
  2093 ;;		line 24 in file "adc_Init.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  sample          2   75[BANK0 ] int 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         0       5       0       0       0
  2109 ;;      Temps:          0       2       0       0       0
  2110 ;;      Totals:         0       7       0       0       0
  2111 ;;Total ram usage:        7 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    3
  2114 ;; This function calls:
  2115 ;;		___ftadd
  2116 ;;		___ftdiv
  2117 ;;		___ftmul
  2118 ;;		___fttol
  2119 ;;		___lwdiv
  2120 ;;		___lwtoft
  2121 ;; This function is called by:
  2122 ;;		_temp_Display
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _temp_Measurement
  2128  02DC                     _temp_Measurement:	
  2129                           
  2130                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2134  02DC  3007               	movlw	7
  2135  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2136  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2137  02DF  00E7               	movwf	??_temp_Measurement+1
  2138  02E0  307C               	movlw	124
  2139  02E1  00E6               	movwf	??_temp_Measurement
  2140  02E2                     u4197:	
  2141  02E2  0BE6               	decfsz	??_temp_Measurement,f
  2142  02E3  2AE2               	goto	u4197
  2143  02E4  0BE7               	decfsz	??_temp_Measurement+1,f
  2144  02E5  2AE2               	goto	u4197
  2145  02E6  0000               	nop
  2146                           
  2147                           ;adc_Init.c: 26: GO_DONE = 1;
  2148  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2149  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2150  02E9  149F               	bsf	31,1	;volatile
  2151  02EA                     l194:	
  2152                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  2153                           
  2154  02EA  1F0C               	btfss	12,6	;volatile
  2155  02EB  2AEA               	goto	l194
  2156                           
  2157                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  2158  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2159  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2160  02EE  081E               	movf	30,w	;volatile
  2161  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2162  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2163  02F1  00E6               	movwf	??_temp_Measurement
  2164  02F2  0866               	movf	??_temp_Measurement,w
  2165  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2166  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2167  02F5  00C1               	movwf	_adc^(0+128)
  2168                           
  2169                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  2170  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2171  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2172  02F8  081E               	movf	30,w	;volatile
  2173  02F9  00E6               	movwf	??_temp_Measurement
  2174  02FA  0866               	movf	??_temp_Measurement,w
  2175  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2176  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2177  02FD  00C2               	movwf	(_adc^(0+128)+1)
  2178                           
  2179                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  2180  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2181  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0300  01EB               	clrf	temp_Measurement@sample
  2183  0301  01EC               	clrf	temp_Measurement@sample+1
  2184  0302  086C               	movf	temp_Measurement@sample+1,w
  2185  0303  3A80               	xorlw	128
  2186  0304  00FF               	movwf	127
  2187  0305  3080               	movlw	128
  2188  0306  027F               	subwf	127,w
  2189  0307  1D03               	skipz
  2190  0308  2B0B               	goto	u4015
  2191  0309  300A               	movlw	10
  2192  030A  026B               	subwf	temp_Measurement@sample,w
  2193  030B                     u4015:	
  2194  030B  1803               	btfsc	3,0
  2195  030C  2BC2               	goto	l2858
  2196  030D                     l2848:	
  2197                           
  2198                           ;adc_Init.c: 31: rawData += adc.result;
  2199  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2200  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2201  030F  0841               	movf	_adc^(0+128),w
  2202  0310  07BD               	addwf	_rawData^(0+128),f
  2203  0311  1803               	skipnc
  2204  0312  0ABE               	incf	(_rawData+1)^(0+128),f
  2205  0313  0842               	movf	(_adc+1)^(0+128),w
  2206  0314  07BE               	addwf	(_rawData+1)^(0+128),f
  2207                           
  2208                           ;adc_Init.c: 32: if (sample == 9) {
  2209  0315  3009               	movlw	9
  2210  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0318  066B               	xorwf	temp_Measurement@sample,w
  2213  0319  046C               	iorwf	temp_Measurement@sample+1,w
  2214  031A  1D03               	btfss	3,2
  2215  031B  2BB1               	goto	l2854
  2216                           
  2217                           ;adc_Init.c: 33: rawData = rawData / 11;
  2218  031C  300B               	movlw	11
  2219  031D  00A0               	movwf	___lwdiv@divisor
  2220  031E  3000               	movlw	0
  2221  031F  00A1               	movwf	___lwdiv@divisor+1
  2222  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0322  083E               	movf	(_rawData+1)^(0+128),w
  2225  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0325  00A3               	movwf	___lwdiv@dividend+1
  2228  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0328  083D               	movf	_rawData^(0+128),w
  2231  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2232  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2233  032B  00A2               	movwf	___lwdiv@dividend
  2234  032C  120A  158A  261E  120A  118A  	fcall	___lwdiv
  2235  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0333  0821               	movf	?___lwdiv+1,w
  2238  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0336  00BE               	movwf	(_rawData+1)^(0+128)
  2241  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0339  0820               	movf	?___lwdiv,w
  2244  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2245  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2246  033C  00BD               	movwf	_rawData^(0+128)
  2247                           
  2248                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2249  033D  083E               	movf	(_rawData+1)^(0+128),w
  2250  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2251  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0340  00A9               	movwf	___lwtoft@c+1
  2253  0341  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0342  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0343  083D               	movf	_rawData^(0+128),w
  2256  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0346  00A8               	movwf	___lwtoft@c
  2259  0347  120A  158A  24CD  120A  118A  	fcall	___lwtoft
  2260  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2261  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2262  034E  0828               	movf	?___lwtoft,w
  2263  034F  00AE               	movwf	___ftmul@f2
  2264  0350  0829               	movf	?___lwtoft+1,w
  2265  0351  00AF               	movwf	___ftmul@f2+1
  2266  0352  082A               	movf	?___lwtoft+2,w
  2267  0353  00B0               	movwf	___ftmul@f2+2
  2268  0354  3040               	movlw	64
  2269  0355  00AB               	movwf	___ftmul@f1
  2270  0356  309C               	movlw	156
  2271  0357  00AC               	movwf	___ftmul@f1+1
  2272  0358  3045               	movlw	69
  2273  0359  00AD               	movwf	___ftmul@f1+2
  2274  035A  120A  118A  23C4  120A  118A  	fcall	___ftmul
  2275  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0361  082B               	movf	?___ftmul,w
  2278  0362  00BE               	movwf	___ftdiv@f1
  2279  0363  082C               	movf	?___ftmul+1,w
  2280  0364  00BF               	movwf	___ftdiv@f1+1
  2281  0365  082D               	movf	?___ftmul+2,w
  2282  0366  00C0               	movwf	___ftdiv@f1+2
  2283  0367  30C0               	movlw	192
  2284  0368  00BB               	movwf	___ftdiv@f2
  2285  0369  307F               	movlw	127
  2286  036A  00BC               	movwf	___ftdiv@f2+1
  2287  036B  3044               	movlw	68
  2288  036C  00BD               	movwf	___ftdiv@f2+2
  2289  036D  120A  118A  2497  120A  118A  	fcall	___ftdiv
  2290  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0374  083B               	movf	?___ftdiv,w
  2293  0375  00CE               	movwf	___ftadd@f2
  2294  0376  083C               	movf	?___ftdiv+1,w
  2295  0377  00CF               	movwf	___ftadd@f2+1
  2296  0378  083D               	movf	?___ftdiv+2,w
  2297  0379  00D0               	movwf	___ftadd@f2+2
  2298  037A  3000               	movlw	0
  2299  037B  00CB               	movwf	___ftadd@f1
  2300  037C  30FA               	movlw	250
  2301  037D  00CC               	movwf	___ftadd@f1+1
  2302  037E  30C3               	movlw	195
  2303  037F  00CD               	movwf	___ftadd@f1+2
  2304  0380  120A  118A  21D3  120A  118A  	fcall	___ftadd
  2305  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0387  084B               	movf	?___ftadd,w
  2308  0388  00E8               	movwf	_temp_Measurement$1672
  2309  0389  084C               	movf	?___ftadd+1,w
  2310  038A  00E9               	movwf	_temp_Measurement$1672+1
  2311  038B  084D               	movf	?___ftadd+2,w
  2312  038C  00EA               	movwf	_temp_Measurement$1672+2
  2313                           
  2314                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2315  038D  0868               	movf	_temp_Measurement$1672,w
  2316  038E  00BE               	movwf	___ftdiv@f1
  2317  038F  0869               	movf	_temp_Measurement$1672+1,w
  2318  0390  00BF               	movwf	___ftdiv@f1+1
  2319  0391  086A               	movf	_temp_Measurement$1672+2,w
  2320  0392  00C0               	movwf	___ftdiv@f1+2
  2321  0393  3000               	movlw	0
  2322  0394  00BB               	movwf	___ftdiv@f2
  2323  0395  3020               	movlw	32
  2324  0396  00BC               	movwf	___ftdiv@f2+1
  2325  0397  3041               	movlw	65
  2326  0398  00BD               	movwf	___ftdiv@f2+2
  2327  0399  120A  118A  2497  120A  118A  	fcall	___ftdiv
  2328  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2329  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2330  03A0  083B               	movf	?___ftdiv,w
  2331  03A1  00D8               	movwf	___fttol@f1
  2332  03A2  083C               	movf	?___ftdiv+1,w
  2333  03A3  00D9               	movwf	___fttol@f1+1
  2334  03A4  083D               	movf	?___ftdiv+2,w
  2335  03A5  00DA               	movwf	___fttol@f1+2
  2336  03A6  120A  118A  254F  120A  118A  	fcall	___fttol
  2337  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2338  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2339  03AD  0858               	movf	?___fttol,w
  2340  03AE  00E6               	movwf	??_temp_Measurement
  2341  03AF  0866               	movf	??_temp_Measurement,w
  2342  03B0  00F8               	movwf	_temperature
  2343  03B1                     l2854:	
  2344  03B1  3001               	movlw	1
  2345  03B2  07EB               	addwf	temp_Measurement@sample,f
  2346  03B3  1803               	skipnc
  2347  03B4  0AEC               	incf	temp_Measurement@sample+1,f
  2348  03B5  3000               	movlw	0
  2349  03B6  07EC               	addwf	temp_Measurement@sample+1,f
  2350  03B7  086C               	movf	temp_Measurement@sample+1,w
  2351  03B8  3A80               	xorlw	128
  2352  03B9  00FF               	movwf	127
  2353  03BA  3080               	movlw	128
  2354  03BB  027F               	subwf	127,w
  2355  03BC  1D03               	skipz
  2356  03BD  2BC0               	goto	u4035
  2357  03BE  300A               	movlw	10
  2358  03BF  026B               	subwf	temp_Measurement@sample,w
  2359  03C0                     u4035:	
  2360  03C0  1C03               	skipc
  2361  03C1  2B0D               	goto	l2848
  2362  03C2                     l2858:	
  2363                           
  2364                           ;adc_Init.c: 35: }
  2365                           ;adc_Init.c: 36: }
  2366                           ;adc_Init.c: 37: return temperature;
  2367  03C2  0878               	movf	_temperature,w
  2368  03C3  0008               	return
  2369  03C4                     __end_of_temp_Measurement:	
  2370                           
  2371                           	psect	text3
  2372  0CCD                     __ptext3:	
  2373 ;; *************** function ___lwtoft *****************
  2374 ;; Defined at:
  2375 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  c               2    8[BANK0 ] unsigned int 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  3    8[BANK0 ] float 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       3       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          1       0       0       0       0
  2392 ;;      Totals:         1       3       0       0       0
  2393 ;;Total ram usage:        4 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    2
  2396 ;; This function calls:
  2397 ;;		___ftpack
  2398 ;; This function is called by:
  2399 ;;		_temp_Measurement
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function ___lwtoft
  2405  0CCD                     ___lwtoft:	
  2406                           
  2407                           ;incstack = 0
  2408                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2409  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0CCF  0828               	movf	___lwtoft@c,w
  2412  0CD0  00A0               	movwf	___ftpack@arg
  2413  0CD1  0829               	movf	___lwtoft@c+1,w
  2414  0CD2  00A1               	movwf	___ftpack@arg+1
  2415  0CD3  01A2               	clrf	___ftpack@arg+2
  2416  0CD4  308E               	movlw	142
  2417  0CD5  00F4               	movwf	??___lwtoft
  2418  0CD6  0874               	movf	??___lwtoft,w
  2419  0CD7  00A3               	movwf	___ftpack@exp
  2420  0CD8  01A4               	clrf	___ftpack@sign
  2421  0CD9  120A  118A  264C   	fcall	___ftpack
  2422  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0CDE  0820               	movf	?___ftpack,w
  2425  0CDF  00A8               	movwf	?___lwtoft
  2426  0CE0  0821               	movf	?___ftpack+1,w
  2427  0CE1  00A9               	movwf	?___lwtoft+1
  2428  0CE2  0822               	movf	?___ftpack+2,w
  2429  0CE3  00AA               	movwf	?___lwtoft+2
  2430  0CE4  0008               	return
  2431  0CE5                     __end_of___lwtoft:	
  2432                           
  2433                           	psect	text4
  2434  054F                     __ptext4:	
  2435 ;; *************** function ___fttol *****************
  2436 ;; Defined at:
  2437 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  f1              3   56[BANK0 ] float 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  lval            4   65[BANK0 ] unsigned long 
  2442 ;;  exp1            1   69[BANK0 ] unsigned char 
  2443 ;;  sign1           1   64[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  4   56[BANK0 ] long 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       4       0       0       0
  2454 ;;      Locals:         0       6       0       0       0
  2455 ;;      Temps:          0       4       0       0       0
  2456 ;;      Totals:         0      14       0       0       0
  2457 ;;Total ram usage:       14 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_temp_Measurement
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function ___fttol
  2469  054F                     ___fttol:	
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2473  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0550  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0551  0858               	movf	___fttol@f1,w
  2476  0552  00DC               	movwf	??___fttol
  2477  0553  0859               	movf	___fttol@f1+1,w
  2478  0554  00DD               	movwf	??___fttol+1
  2479  0555  085A               	movf	___fttol@f1+2,w
  2480  0556  00DE               	movwf	??___fttol+2
  2481  0557  1003               	clrc
  2482  0558  0D5D               	rlf	??___fttol+1,w
  2483  0559  0D5E               	rlf	??___fttol+2,w
  2484  055A  00DF               	movwf	??___fttol+3
  2485  055B  085F               	movf	??___fttol+3,w
  2486  055C  00E5               	movwf	___fttol@exp1
  2487  055D  0865               	movf	___fttol@exp1,w
  2488  055E  1D03               	btfss	3,2
  2489  055F  2D69               	goto	l2704
  2490  0560  3000               	movlw	0
  2491  0561  00DB               	movwf	?___fttol+3
  2492  0562  3000               	movlw	0
  2493  0563  00DA               	movwf	?___fttol+2
  2494  0564  3000               	movlw	0
  2495  0565  00D9               	movwf	?___fttol+1
  2496  0566  3000               	movlw	0
  2497  0567  00D8               	movwf	?___fttol
  2498  0568  0008               	return
  2499  0569                     l2704:	
  2500  0569  0858               	movf	___fttol@f1,w
  2501  056A  00DC               	movwf	??___fttol
  2502  056B  0859               	movf	___fttol@f1+1,w
  2503  056C  00DD               	movwf	??___fttol+1
  2504  056D  085A               	movf	___fttol@f1+2,w
  2505  056E  00DE               	movwf	??___fttol+2
  2506  056F  3017               	movlw	23
  2507  0570                     u3695:	
  2508  0570  1003               	clrc
  2509  0571  0CDE               	rrf	??___fttol+2,f
  2510  0572  0CDD               	rrf	??___fttol+1,f
  2511  0573  0CDC               	rrf	??___fttol,f
  2512  0574  3EFF               	addlw	-1
  2513  0575  1D03               	skipz
  2514  0576  2D70               	goto	u3695
  2515  0577  085C               	movf	??___fttol,w
  2516  0578  00DF               	movwf	??___fttol+3
  2517  0579  085F               	movf	??___fttol+3,w
  2518  057A  00E0               	movwf	___fttol@sign1
  2519  057B  17D9               	bsf	___fttol@f1+1,7
  2520  057C  30FF               	movlw	255
  2521  057D  05D8               	andwf	___fttol@f1,f
  2522  057E  30FF               	movlw	255
  2523  057F  05D9               	andwf	___fttol@f1+1,f
  2524  0580  3000               	movlw	0
  2525  0581  05DA               	andwf	___fttol@f1+2,f
  2526  0582  0858               	movf	___fttol@f1,w
  2527  0583  00E1               	movwf	___fttol@lval
  2528  0584  0859               	movf	___fttol@f1+1,w
  2529  0585  00E2               	movwf	___fttol@lval+1
  2530  0586  085A               	movf	___fttol@f1+2,w
  2531  0587  00E3               	movwf	___fttol@lval+2
  2532  0588  01E4               	clrf	___fttol@lval+3
  2533  0589  308E               	movlw	142
  2534  058A  02E5               	subwf	___fttol@exp1,f
  2535  058B  1FE5               	btfss	___fttol@exp1,7
  2536  058C  2DAB               	goto	l2724
  2537  058D  0865               	movf	___fttol@exp1,w
  2538  058E  3A80               	xorlw	128
  2539  058F  3E8F               	addlw	143
  2540  0590  1803               	skipnc
  2541  0591  2D9B               	goto	l2722
  2542  0592  3000               	movlw	0
  2543  0593  00DB               	movwf	?___fttol+3
  2544  0594  3000               	movlw	0
  2545  0595  00DA               	movwf	?___fttol+2
  2546  0596  3000               	movlw	0
  2547  0597  00D9               	movwf	?___fttol+1
  2548  0598  3000               	movlw	0
  2549  0599  00D8               	movwf	?___fttol
  2550  059A  0008               	return
  2551  059B                     l2722:	
  2552  059B  3001               	movlw	1
  2553  059C                     u3725:	
  2554  059C  1003               	clrc
  2555  059D  0CE4               	rrf	___fttol@lval+3,f
  2556  059E  0CE3               	rrf	___fttol@lval+2,f
  2557  059F  0CE2               	rrf	___fttol@lval+1,f
  2558  05A0  0CE1               	rrf	___fttol@lval,f
  2559  05A1  3EFF               	addlw	-1
  2560  05A2  1D03               	skipz
  2561  05A3  2D9C               	goto	u3725
  2562  05A4  3001               	movlw	1
  2563  05A5  00DC               	movwf	??___fttol
  2564  05A6  085C               	movf	??___fttol,w
  2565  05A7  07E5               	addwf	___fttol@exp1,f
  2566  05A8  1903               	btfsc	3,2
  2567  05A9  2DC6               	goto	l2732
  2568  05AA  2D9B               	goto	l2722
  2569  05AB                     l2724:	
  2570  05AB  3018               	movlw	24
  2571  05AC  0265               	subwf	___fttol@exp1,w
  2572  05AD  1C03               	skipc
  2573  05AE  2DC3               	goto	l821
  2574  05AF  3000               	movlw	0
  2575  05B0  00DB               	movwf	?___fttol+3
  2576  05B1  3000               	movlw	0
  2577  05B2  00DA               	movwf	?___fttol+2
  2578  05B3  3000               	movlw	0
  2579  05B4  00D9               	movwf	?___fttol+1
  2580  05B5  3000               	movlw	0
  2581  05B6  00D8               	movwf	?___fttol
  2582  05B7  0008               	return
  2583  05B8                     l2730:	
  2584  05B8  3001               	movlw	1
  2585  05B9  00DC               	movwf	??___fttol
  2586  05BA                     u3755:	
  2587  05BA  1003               	clrc
  2588  05BB  0DE1               	rlf	___fttol@lval,f
  2589  05BC  0DE2               	rlf	___fttol@lval+1,f
  2590  05BD  0DE3               	rlf	___fttol@lval+2,f
  2591  05BE  0DE4               	rlf	___fttol@lval+3,f
  2592  05BF  0BDC               	decfsz	??___fttol,f
  2593  05C0  2DBA               	goto	u3755
  2594  05C1  3001               	movlw	1
  2595  05C2  02E5               	subwf	___fttol@exp1,f
  2596  05C3                     l821:	
  2597  05C3  0865               	movf	___fttol@exp1,w
  2598  05C4  1D03               	btfss	3,2
  2599  05C5  2DB8               	goto	l2730
  2600  05C6                     l2732:	
  2601  05C6  0860               	movf	___fttol@sign1,w
  2602  05C7  1903               	btfsc	3,2
  2603  05C8  2DD4               	goto	l2736
  2604  05C9  09E1               	comf	___fttol@lval,f
  2605  05CA  09E2               	comf	___fttol@lval+1,f
  2606  05CB  09E3               	comf	___fttol@lval+2,f
  2607  05CC  09E4               	comf	___fttol@lval+3,f
  2608  05CD  0AE1               	incf	___fttol@lval,f
  2609  05CE  1903               	skipnz
  2610  05CF  0AE2               	incf	___fttol@lval+1,f
  2611  05D0  1903               	skipnz
  2612  05D1  0AE3               	incf	___fttol@lval+2,f
  2613  05D2  1903               	skipnz
  2614  05D3  0AE4               	incf	___fttol@lval+3,f
  2615  05D4                     l2736:	
  2616  05D4  0864               	movf	___fttol@lval+3,w
  2617  05D5  00DB               	movwf	?___fttol+3
  2618  05D6  0863               	movf	___fttol@lval+2,w
  2619  05D7  00DA               	movwf	?___fttol+2
  2620  05D8  0862               	movf	___fttol@lval+1,w
  2621  05D9  00D9               	movwf	?___fttol+1
  2622  05DA  0861               	movf	___fttol@lval,w
  2623  05DB  00D8               	movwf	?___fttol
  2624  05DC  0008               	return
  2625  05DD                     __end_of___fttol:	
  2626                           
  2627                           	psect	text5
  2628  03C4                     __ptext5:	
  2629 ;; *************** function ___ftmul *****************
  2630 ;; Defined at:
  2631 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  f1              3   11[BANK0 ] float 
  2634 ;;  f2              3   14[BANK0 ] float 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  2637 ;;  sign            1   26[BANK0 ] unsigned char 
  2638 ;;  cntr            1   25[BANK0 ] unsigned char 
  2639 ;;  exp             1   21[BANK0 ] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  3   11[BANK0 ] float 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       6       0       0       0
  2650 ;;      Locals:         0       6       0       0       0
  2651 ;;      Temps:          0       4       0       0       0
  2652 ;;      Totals:         0      16       0       0       0
  2653 ;;Total ram usage:       16 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		___ftpack
  2658 ;; This function is called by:
  2659 ;;		_temp_Measurement
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function ___ftmul
  2665  03C4                     ___ftmul:	
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2669  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2670  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2671  03C6  082B               	movf	___ftmul@f1,w
  2672  03C7  00B1               	movwf	??___ftmul
  2673  03C8  082C               	movf	___ftmul@f1+1,w
  2674  03C9  00B2               	movwf	??___ftmul+1
  2675  03CA  082D               	movf	___ftmul@f1+2,w
  2676  03CB  00B3               	movwf	??___ftmul+2
  2677  03CC  1003               	clrc
  2678  03CD  0D32               	rlf	??___ftmul+1,w
  2679  03CE  0D33               	rlf	??___ftmul+2,w
  2680  03CF  00B4               	movwf	??___ftmul+3
  2681  03D0  0834               	movf	??___ftmul+3,w
  2682  03D1  00B5               	movwf	___ftmul@exp
  2683  03D2  0835               	movf	___ftmul@exp,w
  2684  03D3  1D03               	btfss	3,2
  2685  03D4  2BDC               	goto	l2654
  2686  03D5  3000               	movlw	0
  2687  03D6  00AB               	movwf	?___ftmul
  2688  03D7  3000               	movlw	0
  2689  03D8  00AC               	movwf	?___ftmul+1
  2690  03D9  3000               	movlw	0
  2691  03DA  00AD               	movwf	?___ftmul+2
  2692  03DB  0008               	return
  2693  03DC                     l2654:	
  2694  03DC  082E               	movf	___ftmul@f2,w
  2695  03DD  00B1               	movwf	??___ftmul
  2696  03DE  082F               	movf	___ftmul@f2+1,w
  2697  03DF  00B2               	movwf	??___ftmul+1
  2698  03E0  0830               	movf	___ftmul@f2+2,w
  2699  03E1  00B3               	movwf	??___ftmul+2
  2700  03E2  1003               	clrc
  2701  03E3  0D32               	rlf	??___ftmul+1,w
  2702  03E4  0D33               	rlf	??___ftmul+2,w
  2703  03E5  00B4               	movwf	??___ftmul+3
  2704  03E6  0834               	movf	??___ftmul+3,w
  2705  03E7  00BA               	movwf	___ftmul@sign
  2706  03E8  083A               	movf	___ftmul@sign,w
  2707  03E9  1D03               	btfss	3,2
  2708  03EA  2BF2               	goto	l2660
  2709  03EB  3000               	movlw	0
  2710  03EC  00AB               	movwf	?___ftmul
  2711  03ED  3000               	movlw	0
  2712  03EE  00AC               	movwf	?___ftmul+1
  2713  03EF  3000               	movlw	0
  2714  03F0  00AD               	movwf	?___ftmul+2
  2715  03F1  0008               	return
  2716  03F2                     l2660:	
  2717  03F2  083A               	movf	___ftmul@sign,w
  2718  03F3  3E7B               	addlw	123
  2719  03F4  00B1               	movwf	??___ftmul
  2720  03F5  0831               	movf	??___ftmul,w
  2721  03F6  07B5               	addwf	___ftmul@exp,f
  2722  03F7  082B               	movf	___ftmul@f1,w
  2723  03F8  00B1               	movwf	??___ftmul
  2724  03F9  082C               	movf	___ftmul@f1+1,w
  2725  03FA  00B2               	movwf	??___ftmul+1
  2726  03FB  082D               	movf	___ftmul@f1+2,w
  2727  03FC  00B3               	movwf	??___ftmul+2
  2728  03FD  3010               	movlw	16
  2729  03FE                     u3565:	
  2730  03FE  1003               	clrc
  2731  03FF  0CB3               	rrf	??___ftmul+2,f
  2732  0400  0CB2               	rrf	??___ftmul+1,f
  2733  0401  0CB1               	rrf	??___ftmul,f
  2734  0402  3EFF               	addlw	-1
  2735  0403  1D03               	skipz
  2736  0404  2BFE               	goto	u3565
  2737  0405  0831               	movf	??___ftmul,w
  2738  0406  00B4               	movwf	??___ftmul+3
  2739  0407  0834               	movf	??___ftmul+3,w
  2740  0408  00BA               	movwf	___ftmul@sign
  2741  0409  082E               	movf	___ftmul@f2,w
  2742  040A  00B1               	movwf	??___ftmul
  2743  040B  082F               	movf	___ftmul@f2+1,w
  2744  040C  00B2               	movwf	??___ftmul+1
  2745  040D  0830               	movf	___ftmul@f2+2,w
  2746  040E  00B3               	movwf	??___ftmul+2
  2747  040F  3010               	movlw	16
  2748  0410                     u3575:	
  2749  0410  1003               	clrc
  2750  0411  0CB3               	rrf	??___ftmul+2,f
  2751  0412  0CB2               	rrf	??___ftmul+1,f
  2752  0413  0CB1               	rrf	??___ftmul,f
  2753  0414  3EFF               	addlw	-1
  2754  0415  1D03               	skipz
  2755  0416  2C10               	goto	u3575
  2756  0417  0831               	movf	??___ftmul,w
  2757  0418  00B4               	movwf	??___ftmul+3
  2758  0419  0834               	movf	??___ftmul+3,w
  2759  041A  06BA               	xorwf	___ftmul@sign,f
  2760  041B  3080               	movlw	128
  2761  041C  00B1               	movwf	??___ftmul
  2762  041D  0831               	movf	??___ftmul,w
  2763  041E  05BA               	andwf	___ftmul@sign,f
  2764  041F  17AC               	bsf	___ftmul@f1+1,7
  2765  0420  17AF               	bsf	___ftmul@f2+1,7
  2766  0421  30FF               	movlw	255
  2767  0422  05AE               	andwf	___ftmul@f2,f
  2768  0423  30FF               	movlw	255
  2769  0424  05AF               	andwf	___ftmul@f2+1,f
  2770  0425  3000               	movlw	0
  2771  0426  05B0               	andwf	___ftmul@f2+2,f
  2772  0427  3000               	movlw	0
  2773  0428  00B6               	movwf	___ftmul@f3_as_product
  2774  0429  3000               	movlw	0
  2775  042A  00B7               	movwf	___ftmul@f3_as_product+1
  2776  042B  3000               	movlw	0
  2777  042C  00B8               	movwf	___ftmul@f3_as_product+2
  2778  042D  3007               	movlw	7
  2779  042E  00B1               	movwf	??___ftmul
  2780  042F  0831               	movf	??___ftmul,w
  2781  0430  00B9               	movwf	___ftmul@cntr
  2782  0431                     l2672:	
  2783  0431  1C2B               	btfss	___ftmul@f1,0
  2784  0432  2C41               	goto	l2676
  2785  0433  082E               	movf	___ftmul@f2,w
  2786  0434  07B6               	addwf	___ftmul@f3_as_product,f
  2787  0435  082F               	movf	___ftmul@f2+1,w
  2788  0436  1103               	clrz
  2789  0437  1803               	skipnc
  2790  0438  0A2F               	incf	___ftmul@f2+1,w
  2791  0439  1D03               	btfss	3,2
  2792  043A  07B7               	addwf	___ftmul@f3_as_product+1,f
  2793  043B  0830               	movf	___ftmul@f2+2,w
  2794  043C  1103               	clrz
  2795  043D  1803               	skipnc
  2796  043E  0A30               	incf	___ftmul@f2+2,w
  2797  043F  1D03               	btfss	3,2
  2798  0440  07B8               	addwf	___ftmul@f3_as_product+2,f
  2799  0441                     l2676:	
  2800  0441  3001               	movlw	1
  2801  0442                     u3605:	
  2802  0442  1003               	clrc
  2803  0443  0CAD               	rrf	___ftmul@f1+2,f
  2804  0444  0CAC               	rrf	___ftmul@f1+1,f
  2805  0445  0CAB               	rrf	___ftmul@f1,f
  2806  0446  3EFF               	addlw	-1
  2807  0447  1D03               	skipz
  2808  0448  2C42               	goto	u3605
  2809  0449  3001               	movlw	1
  2810  044A                     u3615:	
  2811  044A  1003               	clrc
  2812  044B  0DAE               	rlf	___ftmul@f2,f
  2813  044C  0DAF               	rlf	___ftmul@f2+1,f
  2814  044D  0DB0               	rlf	___ftmul@f2+2,f
  2815  044E  3EFF               	addlw	-1
  2816  044F  1D03               	skipz
  2817  0450  2C4A               	goto	u3615
  2818  0451  3001               	movlw	1
  2819  0452  02B9               	subwf	___ftmul@cntr,f
  2820  0453  1D03               	btfss	3,2
  2821  0454  2C31               	goto	l2672
  2822  0455  3009               	movlw	9
  2823  0456  00B1               	movwf	??___ftmul
  2824  0457  0831               	movf	??___ftmul,w
  2825  0458  00B9               	movwf	___ftmul@cntr
  2826  0459                     l2684:	
  2827  0459  1C2B               	btfss	___ftmul@f1,0
  2828  045A  2C69               	goto	l2688
  2829  045B  082E               	movf	___ftmul@f2,w
  2830  045C  07B6               	addwf	___ftmul@f3_as_product,f
  2831  045D  082F               	movf	___ftmul@f2+1,w
  2832  045E  1103               	clrz
  2833  045F  1803               	skipnc
  2834  0460  0A2F               	incf	___ftmul@f2+1,w
  2835  0461  1D03               	btfss	3,2
  2836  0462  07B7               	addwf	___ftmul@f3_as_product+1,f
  2837  0463  0830               	movf	___ftmul@f2+2,w
  2838  0464  1103               	clrz
  2839  0465  1803               	skipnc
  2840  0466  0A30               	incf	___ftmul@f2+2,w
  2841  0467  1D03               	btfss	3,2
  2842  0468  07B8               	addwf	___ftmul@f3_as_product+2,f
  2843  0469                     l2688:	
  2844  0469  3001               	movlw	1
  2845  046A                     u3655:	
  2846  046A  1003               	clrc
  2847  046B  0CAD               	rrf	___ftmul@f1+2,f
  2848  046C  0CAC               	rrf	___ftmul@f1+1,f
  2849  046D  0CAB               	rrf	___ftmul@f1,f
  2850  046E  3EFF               	addlw	-1
  2851  046F  1D03               	skipz
  2852  0470  2C6A               	goto	u3655
  2853  0471  3001               	movlw	1
  2854  0472                     u3665:	
  2855  0472  1003               	clrc
  2856  0473  0CB8               	rrf	___ftmul@f3_as_product+2,f
  2857  0474  0CB7               	rrf	___ftmul@f3_as_product+1,f
  2858  0475  0CB6               	rrf	___ftmul@f3_as_product,f
  2859  0476  3EFF               	addlw	-1
  2860  0477  1D03               	skipz
  2861  0478  2C72               	goto	u3665
  2862  0479  3001               	movlw	1
  2863  047A  02B9               	subwf	___ftmul@cntr,f
  2864  047B  1D03               	btfss	3,2
  2865  047C  2C59               	goto	l2684
  2866  047D  0836               	movf	___ftmul@f3_as_product,w
  2867  047E  00A0               	movwf	___ftpack@arg
  2868  047F  0837               	movf	___ftmul@f3_as_product+1,w
  2869  0480  00A1               	movwf	___ftpack@arg+1
  2870  0481  0838               	movf	___ftmul@f3_as_product+2,w
  2871  0482  00A2               	movwf	___ftpack@arg+2
  2872  0483  0835               	movf	___ftmul@exp,w
  2873  0484  00B1               	movwf	??___ftmul
  2874  0485  0831               	movf	??___ftmul,w
  2875  0486  00A3               	movwf	___ftpack@exp
  2876  0487  083A               	movf	___ftmul@sign,w
  2877  0488  00B2               	movwf	??___ftmul+1
  2878  0489  0832               	movf	??___ftmul+1,w
  2879  048A  00A4               	movwf	___ftpack@sign
  2880  048B  120A  118A  264C   	fcall	___ftpack
  2881  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2882  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0490  0820               	movf	?___ftpack,w
  2884  0491  00AB               	movwf	?___ftmul
  2885  0492  0821               	movf	?___ftpack+1,w
  2886  0493  00AC               	movwf	?___ftmul+1
  2887  0494  0822               	movf	?___ftpack+2,w
  2888  0495  00AD               	movwf	?___ftmul+2
  2889  0496  0008               	return
  2890  0497                     __end_of___ftmul:	
  2891                           
  2892                           	psect	text6
  2893  0497                     __ptext6:	
  2894 ;; *************** function ___ftdiv *****************
  2895 ;; Defined at:
  2896 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  f2              3   27[BANK0 ] float 
  2899 ;;  f1              3   30[BANK0 ] float 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  f3              3   38[BANK0 ] float 
  2902 ;;  sign            1   42[BANK0 ] unsigned char 
  2903 ;;  exp             1   41[BANK0 ] unsigned char 
  2904 ;;  cntr            1   37[BANK0 ] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  3   27[BANK0 ] float 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0, pclath, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2914 ;;      Params:         0       6       0       0       0
  2915 ;;      Locals:         0       6       0       0       0
  2916 ;;      Temps:          0       4       0       0       0
  2917 ;;      Totals:         0      16       0       0       0
  2918 ;;Total ram usage:       16 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    2
  2921 ;; This function calls:
  2922 ;;		___ftpack
  2923 ;; This function is called by:
  2924 ;;		_temp_Measurement
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function ___ftdiv
  2930  0497                     ___ftdiv:	
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2934  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0499  083E               	movf	___ftdiv@f1,w
  2937  049A  00C1               	movwf	??___ftdiv
  2938  049B  083F               	movf	___ftdiv@f1+1,w
  2939  049C  00C2               	movwf	??___ftdiv+1
  2940  049D  0840               	movf	___ftdiv@f1+2,w
  2941  049E  00C3               	movwf	??___ftdiv+2
  2942  049F  1003               	clrc
  2943  04A0  0D42               	rlf	??___ftdiv+1,w
  2944  04A1  0D43               	rlf	??___ftdiv+2,w
  2945  04A2  00C4               	movwf	??___ftdiv+3
  2946  04A3  0844               	movf	??___ftdiv+3,w
  2947  04A4  00C9               	movwf	___ftdiv@exp
  2948  04A5  0849               	movf	___ftdiv@exp,w
  2949  04A6  1D03               	btfss	3,2
  2950  04A7  2CAF               	goto	l2612
  2951  04A8  3000               	movlw	0
  2952  04A9  00BB               	movwf	?___ftdiv
  2953  04AA  3000               	movlw	0
  2954  04AB  00BC               	movwf	?___ftdiv+1
  2955  04AC  3000               	movlw	0
  2956  04AD  00BD               	movwf	?___ftdiv+2
  2957  04AE  0008               	return
  2958  04AF                     l2612:	
  2959  04AF  083B               	movf	___ftdiv@f2,w
  2960  04B0  00C1               	movwf	??___ftdiv
  2961  04B1  083C               	movf	___ftdiv@f2+1,w
  2962  04B2  00C2               	movwf	??___ftdiv+1
  2963  04B3  083D               	movf	___ftdiv@f2+2,w
  2964  04B4  00C3               	movwf	??___ftdiv+2
  2965  04B5  1003               	clrc
  2966  04B6  0D42               	rlf	??___ftdiv+1,w
  2967  04B7  0D43               	rlf	??___ftdiv+2,w
  2968  04B8  00C4               	movwf	??___ftdiv+3
  2969  04B9  0844               	movf	??___ftdiv+3,w
  2970  04BA  00CA               	movwf	___ftdiv@sign
  2971  04BB  084A               	movf	___ftdiv@sign,w
  2972  04BC  1D03               	btfss	3,2
  2973  04BD  2CC5               	goto	l2618
  2974  04BE  3000               	movlw	0
  2975  04BF  00BB               	movwf	?___ftdiv
  2976  04C0  3000               	movlw	0
  2977  04C1  00BC               	movwf	?___ftdiv+1
  2978  04C2  3000               	movlw	0
  2979  04C3  00BD               	movwf	?___ftdiv+2
  2980  04C4  0008               	return
  2981  04C5                     l2618:	
  2982  04C5  3000               	movlw	0
  2983  04C6  00C6               	movwf	___ftdiv@f3
  2984  04C7  3000               	movlw	0
  2985  04C8  00C7               	movwf	___ftdiv@f3+1
  2986  04C9  3000               	movlw	0
  2987  04CA  00C8               	movwf	___ftdiv@f3+2
  2988  04CB  3089               	movlw	137
  2989  04CC  074A               	addwf	___ftdiv@sign,w
  2990  04CD  00C1               	movwf	??___ftdiv
  2991  04CE  0841               	movf	??___ftdiv,w
  2992  04CF  02C9               	subwf	___ftdiv@exp,f
  2993  04D0  083E               	movf	___ftdiv@f1,w
  2994  04D1  00C1               	movwf	??___ftdiv
  2995  04D2  083F               	movf	___ftdiv@f1+1,w
  2996  04D3  00C2               	movwf	??___ftdiv+1
  2997  04D4  0840               	movf	___ftdiv@f1+2,w
  2998  04D5  00C3               	movwf	??___ftdiv+2
  2999  04D6  3010               	movlw	16
  3000  04D7                     u3485:	
  3001  04D7  1003               	clrc
  3002  04D8  0CC3               	rrf	??___ftdiv+2,f
  3003  04D9  0CC2               	rrf	??___ftdiv+1,f
  3004  04DA  0CC1               	rrf	??___ftdiv,f
  3005  04DB  3EFF               	addlw	-1
  3006  04DC  1D03               	skipz
  3007  04DD  2CD7               	goto	u3485
  3008  04DE  0841               	movf	??___ftdiv,w
  3009  04DF  00C4               	movwf	??___ftdiv+3
  3010  04E0  0844               	movf	??___ftdiv+3,w
  3011  04E1  00CA               	movwf	___ftdiv@sign
  3012  04E2  083B               	movf	___ftdiv@f2,w
  3013  04E3  00C1               	movwf	??___ftdiv
  3014  04E4  083C               	movf	___ftdiv@f2+1,w
  3015  04E5  00C2               	movwf	??___ftdiv+1
  3016  04E6  083D               	movf	___ftdiv@f2+2,w
  3017  04E7  00C3               	movwf	??___ftdiv+2
  3018  04E8  3010               	movlw	16
  3019  04E9                     u3495:	
  3020  04E9  1003               	clrc
  3021  04EA  0CC3               	rrf	??___ftdiv+2,f
  3022  04EB  0CC2               	rrf	??___ftdiv+1,f
  3023  04EC  0CC1               	rrf	??___ftdiv,f
  3024  04ED  3EFF               	addlw	-1
  3025  04EE  1D03               	skipz
  3026  04EF  2CE9               	goto	u3495
  3027  04F0  0841               	movf	??___ftdiv,w
  3028  04F1  00C4               	movwf	??___ftdiv+3
  3029  04F2  0844               	movf	??___ftdiv+3,w
  3030  04F3  06CA               	xorwf	___ftdiv@sign,f
  3031  04F4  3080               	movlw	128
  3032  04F5  00C1               	movwf	??___ftdiv
  3033  04F6  0841               	movf	??___ftdiv,w
  3034  04F7  05CA               	andwf	___ftdiv@sign,f
  3035  04F8  17BF               	bsf	___ftdiv@f1+1,7
  3036  04F9  30FF               	movlw	255
  3037  04FA  05BE               	andwf	___ftdiv@f1,f
  3038  04FB  30FF               	movlw	255
  3039  04FC  05BF               	andwf	___ftdiv@f1+1,f
  3040  04FD  3000               	movlw	0
  3041  04FE  05C0               	andwf	___ftdiv@f1+2,f
  3042  04FF  17BC               	bsf	___ftdiv@f2+1,7
  3043  0500  30FF               	movlw	255
  3044  0501  05BB               	andwf	___ftdiv@f2,f
  3045  0502  30FF               	movlw	255
  3046  0503  05BC               	andwf	___ftdiv@f2+1,f
  3047  0504  3000               	movlw	0
  3048  0505  05BD               	andwf	___ftdiv@f2+2,f
  3049  0506  3018               	movlw	24
  3050  0507  00C1               	movwf	??___ftdiv
  3051  0508  0841               	movf	??___ftdiv,w
  3052  0509  00C5               	movwf	___ftdiv@cntr
  3053  050A                     l2632:	
  3054  050A  3001               	movlw	1
  3055  050B                     u3505:	
  3056  050B  1003               	clrc
  3057  050C  0DC6               	rlf	___ftdiv@f3,f
  3058  050D  0DC7               	rlf	___ftdiv@f3+1,f
  3059  050E  0DC8               	rlf	___ftdiv@f3+2,f
  3060  050F  3EFF               	addlw	-1
  3061  0510  1D03               	skipz
  3062  0511  2D0B               	goto	u3505
  3063  0512  083D               	movf	___ftdiv@f2+2,w
  3064  0513  0240               	subwf	___ftdiv@f1+2,w
  3065  0514  1D03               	skipz
  3066  0515  2D1C               	goto	u3515
  3067  0516  083C               	movf	___ftdiv@f2+1,w
  3068  0517  023F               	subwf	___ftdiv@f1+1,w
  3069  0518  1D03               	skipz
  3070  0519  2D1C               	goto	u3515
  3071  051A  083B               	movf	___ftdiv@f2,w
  3072  051B  023E               	subwf	___ftdiv@f1,w
  3073  051C                     u3515:	
  3074  051C  1C03               	skipc
  3075  051D  2D29               	goto	l2640
  3076  051E  083B               	movf	___ftdiv@f2,w
  3077  051F  02BE               	subwf	___ftdiv@f1,f
  3078  0520  083C               	movf	___ftdiv@f2+1,w
  3079  0521  1C03               	skipc
  3080  0522  0F3C               	incfsz	___ftdiv@f2+1,w
  3081  0523  02BF               	subwf	___ftdiv@f1+1,f
  3082  0524  083D               	movf	___ftdiv@f2+2,w
  3083  0525  1C03               	skipc
  3084  0526  0A3D               	incf	___ftdiv@f2+2,w
  3085  0527  02C0               	subwf	___ftdiv@f1+2,f
  3086  0528  1446               	bsf	___ftdiv@f3,0
  3087  0529                     l2640:	
  3088  0529  3001               	movlw	1
  3089  052A                     u3525:	
  3090  052A  1003               	clrc
  3091  052B  0DBE               	rlf	___ftdiv@f1,f
  3092  052C  0DBF               	rlf	___ftdiv@f1+1,f
  3093  052D  0DC0               	rlf	___ftdiv@f1+2,f
  3094  052E  3EFF               	addlw	-1
  3095  052F  1D03               	skipz
  3096  0530  2D2A               	goto	u3525
  3097  0531  3001               	movlw	1
  3098  0532  02C5               	subwf	___ftdiv@cntr,f
  3099  0533  1D03               	btfss	3,2
  3100  0534  2D0A               	goto	l2632
  3101  0535  0846               	movf	___ftdiv@f3,w
  3102  0536  00A0               	movwf	___ftpack@arg
  3103  0537  0847               	movf	___ftdiv@f3+1,w
  3104  0538  00A1               	movwf	___ftpack@arg+1
  3105  0539  0848               	movf	___ftdiv@f3+2,w
  3106  053A  00A2               	movwf	___ftpack@arg+2
  3107  053B  0849               	movf	___ftdiv@exp,w
  3108  053C  00C1               	movwf	??___ftdiv
  3109  053D  0841               	movf	??___ftdiv,w
  3110  053E  00A3               	movwf	___ftpack@exp
  3111  053F  084A               	movf	___ftdiv@sign,w
  3112  0540  00C2               	movwf	??___ftdiv+1
  3113  0541  0842               	movf	??___ftdiv+1,w
  3114  0542  00A4               	movwf	___ftpack@sign
  3115  0543  120A  118A  264C   	fcall	___ftpack
  3116  0546  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0547  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0548  0820               	movf	?___ftpack,w
  3119  0549  00BB               	movwf	?___ftdiv
  3120  054A  0821               	movf	?___ftpack+1,w
  3121  054B  00BC               	movwf	?___ftdiv+1
  3122  054C  0822               	movf	?___ftpack+2,w
  3123  054D  00BD               	movwf	?___ftdiv+2
  3124  054E  0008               	return
  3125  054F                     __end_of___ftdiv:	
  3126                           
  3127                           	psect	text7
  3128  01D3                     __ptext7:	
  3129 ;; *************** function ___ftadd *****************
  3130 ;; Defined at:
  3131 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  f1              3   43[BANK0 ] float 
  3134 ;;  f2              3   46[BANK0 ] float 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  exp1            1   55[BANK0 ] unsigned char 
  3137 ;;  exp2            1   54[BANK0 ] unsigned char 
  3138 ;;  sign            1   53[BANK0 ] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  3   43[BANK0 ] float 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       6       0       0       0
  3149 ;;      Locals:         0       3       0       0       0
  3150 ;;      Temps:          0       4       0       0       0
  3151 ;;      Totals:         0      13       0       0       0
  3152 ;;Total ram usage:       13 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    2
  3155 ;; This function calls:
  3156 ;;		___ftpack
  3157 ;; This function is called by:
  3158 ;;		_temp_Measurement
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function ___ftadd
  3164  01D3                     ___ftadd:	
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3168  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3169  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3170  01D5  084B               	movf	___ftadd@f1,w
  3171  01D6  00D1               	movwf	??___ftadd
  3172  01D7  084C               	movf	___ftadd@f1+1,w
  3173  01D8  00D2               	movwf	??___ftadd+1
  3174  01D9  084D               	movf	___ftadd@f1+2,w
  3175  01DA  00D3               	movwf	??___ftadd+2
  3176  01DB  1003               	clrc
  3177  01DC  0D52               	rlf	??___ftadd+1,w
  3178  01DD  0D53               	rlf	??___ftadd+2,w
  3179  01DE  00D4               	movwf	??___ftadd+3
  3180  01DF  0854               	movf	??___ftadd+3,w
  3181  01E0  00D7               	movwf	___ftadd@exp1
  3182  01E1  084E               	movf	___ftadd@f2,w
  3183  01E2  00D1               	movwf	??___ftadd
  3184  01E3  084F               	movf	___ftadd@f2+1,w
  3185  01E4  00D2               	movwf	??___ftadd+1
  3186  01E5  0850               	movf	___ftadd@f2+2,w
  3187  01E6  00D3               	movwf	??___ftadd+2
  3188  01E7  1003               	clrc
  3189  01E8  0D52               	rlf	??___ftadd+1,w
  3190  01E9  0D53               	rlf	??___ftadd+2,w
  3191  01EA  00D4               	movwf	??___ftadd+3
  3192  01EB  0854               	movf	??___ftadd+3,w
  3193  01EC  00D6               	movwf	___ftadd@exp2
  3194  01ED  0857               	movf	___ftadd@exp1,w
  3195  01EE  1903               	btfsc	3,2
  3196  01EF  29FC               	goto	l2542
  3197  01F0  0856               	movf	___ftadd@exp2,w
  3198  01F1  0257               	subwf	___ftadd@exp1,w
  3199  01F2  1803               	skipnc
  3200  01F3  2A03               	goto	l2546
  3201  01F4  0357               	decf	___ftadd@exp1,w
  3202  01F5  3AFF               	xorlw	255
  3203  01F6  0756               	addwf	___ftadd@exp2,w
  3204  01F7  00D1               	movwf	??___ftadd
  3205  01F8  3019               	movlw	25
  3206  01F9  0251               	subwf	??___ftadd,w
  3207  01FA  1C03               	skipc
  3208  01FB  2A03               	goto	l2546
  3209  01FC                     l2542:	
  3210  01FC  084E               	movf	___ftadd@f2,w
  3211  01FD  00CB               	movwf	?___ftadd
  3212  01FE  084F               	movf	___ftadd@f2+1,w
  3213  01FF  00CC               	movwf	?___ftadd+1
  3214  0200  0850               	movf	___ftadd@f2+2,w
  3215  0201  00CD               	movwf	?___ftadd+2
  3216  0202  0008               	return
  3217  0203                     l2546:	
  3218  0203  0856               	movf	___ftadd@exp2,w
  3219  0204  1903               	btfsc	3,2
  3220  0205  0008               	return
  3221  0206  0857               	movf	___ftadd@exp1,w
  3222  0207  0256               	subwf	___ftadd@exp2,w
  3223  0208  1803               	skipnc
  3224  0209  2A12               	goto	l2552
  3225  020A  0356               	decf	___ftadd@exp2,w
  3226  020B  3AFF               	xorlw	255
  3227  020C  0757               	addwf	___ftadd@exp1,w
  3228  020D  00D1               	movwf	??___ftadd
  3229  020E  3019               	movlw	25
  3230  020F  0251               	subwf	??___ftadd,w
  3231  0210  1803               	btfsc	3,0
  3232  0211  0008               	return
  3233  0212                     l2552:	
  3234  0212  3006               	movlw	6
  3235  0213  00D1               	movwf	??___ftadd
  3236  0214  0851               	movf	??___ftadd,w
  3237  0215  00D5               	movwf	___ftadd@sign
  3238  0216  1BCD               	btfsc	___ftadd@f1+2,7
  3239  0217  17D5               	bsf	___ftadd@sign,7
  3240  0218  1BD0               	btfsc	___ftadd@f2+2,7
  3241  0219  1755               	bsf	___ftadd@sign,6
  3242  021A  17CC               	bsf	___ftadd@f1+1,7
  3243  021B  30FF               	movlw	255
  3244  021C  05CB               	andwf	___ftadd@f1,f
  3245  021D  30FF               	movlw	255
  3246  021E  05CC               	andwf	___ftadd@f1+1,f
  3247  021F  3000               	movlw	0
  3248  0220  05CD               	andwf	___ftadd@f1+2,f
  3249  0221  17CF               	bsf	___ftadd@f2+1,7
  3250  0222  30FF               	movlw	255
  3251  0223  05CE               	andwf	___ftadd@f2,f
  3252  0224  30FF               	movlw	255
  3253  0225  05CF               	andwf	___ftadd@f2+1,f
  3254  0226  3000               	movlw	0
  3255  0227  05D0               	andwf	___ftadd@f2+2,f
  3256  0228  0856               	movf	___ftadd@exp2,w
  3257  0229  0257               	subwf	___ftadd@exp1,w
  3258  022A  1803               	skipnc
  3259  022B  2A52               	goto	l2574
  3260  022C                     l2564:	
  3261  022C  3001               	movlw	1
  3262  022D                     u3315:	
  3263  022D  1003               	clrc
  3264  022E  0DCE               	rlf	___ftadd@f2,f
  3265  022F  0DCF               	rlf	___ftadd@f2+1,f
  3266  0230  0DD0               	rlf	___ftadd@f2+2,f
  3267  0231  3EFF               	addlw	-1
  3268  0232  1D03               	skipz
  3269  0233  2A2D               	goto	u3315
  3270  0234  3001               	movlw	1
  3271  0235  02D6               	subwf	___ftadd@exp2,f
  3272  0236  0856               	movf	___ftadd@exp2,w
  3273  0237  0657               	xorwf	___ftadd@exp1,w
  3274  0238  1903               	skipnz
  3275  0239  2A4D               	goto	l2572
  3276  023A  3001               	movlw	1
  3277  023B  02D5               	subwf	___ftadd@sign,f
  3278  023C  0855               	movf	___ftadd@sign,w
  3279  023D  3907               	andlw	7
  3280  023E  1903               	btfsc	3,2
  3281  023F  2A4D               	goto	l2572
  3282  0240  2A2C               	goto	l2564
  3283  0241                     l2570:	
  3284  0241  3001               	movlw	1
  3285  0242                     u3345:	
  3286  0242  1003               	clrc
  3287  0243  0CCD               	rrf	___ftadd@f1+2,f
  3288  0244  0CCC               	rrf	___ftadd@f1+1,f
  3289  0245  0CCB               	rrf	___ftadd@f1,f
  3290  0246  3EFF               	addlw	-1
  3291  0247  1D03               	skipz
  3292  0248  2A42               	goto	u3345
  3293  0249  3001               	movlw	1
  3294  024A  00D1               	movwf	??___ftadd
  3295  024B  0851               	movf	??___ftadd,w
  3296  024C  07D7               	addwf	___ftadd@exp1,f
  3297  024D                     l2572:	
  3298  024D  0857               	movf	___ftadd@exp1,w
  3299  024E  0656               	xorwf	___ftadd@exp2,w
  3300  024F  1903               	btfsc	3,2
  3301  0250  2A7B               	goto	l761
  3302  0251  2A41               	goto	l2570
  3303  0252                     l2574:	
  3304  0252  0857               	movf	___ftadd@exp1,w
  3305  0253  0256               	subwf	___ftadd@exp2,w
  3306  0254  1803               	skipnc
  3307  0255  2A7B               	goto	l761
  3308  0256                     l2576:	
  3309  0256  3001               	movlw	1
  3310  0257                     u3375:	
  3311  0257  1003               	clrc
  3312  0258  0DCB               	rlf	___ftadd@f1,f
  3313  0259  0DCC               	rlf	___ftadd@f1+1,f
  3314  025A  0DCD               	rlf	___ftadd@f1+2,f
  3315  025B  3EFF               	addlw	-1
  3316  025C  1D03               	skipz
  3317  025D  2A57               	goto	u3375
  3318  025E  3001               	movlw	1
  3319  025F  02D7               	subwf	___ftadd@exp1,f
  3320  0260  0856               	movf	___ftadd@exp2,w
  3321  0261  0657               	xorwf	___ftadd@exp1,w
  3322  0262  1903               	skipnz
  3323  0263  2A77               	goto	l2584
  3324  0264  3001               	movlw	1
  3325  0265  02D5               	subwf	___ftadd@sign,f
  3326  0266  0855               	movf	___ftadd@sign,w
  3327  0267  3907               	andlw	7
  3328  0268  1903               	btfsc	3,2
  3329  0269  2A77               	goto	l2584
  3330  026A  2A56               	goto	l2576
  3331  026B                     l2582:	
  3332  026B  3001               	movlw	1
  3333  026C                     u3405:	
  3334  026C  1003               	clrc
  3335  026D  0CD0               	rrf	___ftadd@f2+2,f
  3336  026E  0CCF               	rrf	___ftadd@f2+1,f
  3337  026F  0CCE               	rrf	___ftadd@f2,f
  3338  0270  3EFF               	addlw	-1
  3339  0271  1D03               	skipz
  3340  0272  2A6C               	goto	u3405
  3341  0273  3001               	movlw	1
  3342  0274  00D1               	movwf	??___ftadd
  3343  0275  0851               	movf	??___ftadd,w
  3344  0276  07D6               	addwf	___ftadd@exp2,f
  3345  0277                     l2584:	
  3346  0277  0857               	movf	___ftadd@exp1,w
  3347  0278  0656               	xorwf	___ftadd@exp2,w
  3348  0279  1D03               	skipz
  3349  027A  2A6B               	goto	l2582
  3350  027B                     l761:	
  3351  027B  1FD5               	btfss	___ftadd@sign,7
  3352  027C  2A8D               	goto	l2588
  3353  027D  30FF               	movlw	255
  3354  027E  06CB               	xorwf	___ftadd@f1,f
  3355  027F  30FF               	movlw	255
  3356  0280  06CC               	xorwf	___ftadd@f1+1,f
  3357  0281  30FF               	movlw	255
  3358  0282  06CD               	xorwf	___ftadd@f1+2,f
  3359  0283  3001               	movlw	1
  3360  0284  07CB               	addwf	___ftadd@f1,f
  3361  0285  3000               	movlw	0
  3362  0286  1803               	skipnc
  3363  0287  3001               	movlw	1
  3364  0288  07CC               	addwf	___ftadd@f1+1,f
  3365  0289  3000               	movlw	0
  3366  028A  1803               	skipnc
  3367  028B  3001               	movlw	1
  3368  028C  07CD               	addwf	___ftadd@f1+2,f
  3369  028D                     l2588:	
  3370  028D  1F55               	btfss	___ftadd@sign,6
  3371  028E  2A9F               	goto	l2592
  3372  028F  30FF               	movlw	255
  3373  0290  06CE               	xorwf	___ftadd@f2,f
  3374  0291  30FF               	movlw	255
  3375  0292  06CF               	xorwf	___ftadd@f2+1,f
  3376  0293  30FF               	movlw	255
  3377  0294  06D0               	xorwf	___ftadd@f2+2,f
  3378  0295  3001               	movlw	1
  3379  0296  07CE               	addwf	___ftadd@f2,f
  3380  0297  3000               	movlw	0
  3381  0298  1803               	skipnc
  3382  0299  3001               	movlw	1
  3383  029A  07CF               	addwf	___ftadd@f2+1,f
  3384  029B  3000               	movlw	0
  3385  029C  1803               	skipnc
  3386  029D  3001               	movlw	1
  3387  029E  07D0               	addwf	___ftadd@f2+2,f
  3388  029F                     l2592:	
  3389  029F  01D5               	clrf	___ftadd@sign
  3390  02A0  084B               	movf	___ftadd@f1,w
  3391  02A1  07CE               	addwf	___ftadd@f2,f
  3392  02A2  084C               	movf	___ftadd@f1+1,w
  3393  02A3  1103               	clrz
  3394  02A4  1803               	skipnc
  3395  02A5  0A4C               	incf	___ftadd@f1+1,w
  3396  02A6  1D03               	btfss	3,2
  3397  02A7  07CF               	addwf	___ftadd@f2+1,f
  3398  02A8  084D               	movf	___ftadd@f1+2,w
  3399  02A9  1103               	clrz
  3400  02AA  1803               	skipnc
  3401  02AB  0A4D               	incf	___ftadd@f1+2,w
  3402  02AC  1D03               	btfss	3,2
  3403  02AD  07D0               	addwf	___ftadd@f2+2,f
  3404  02AE  1FD0               	btfss	___ftadd@f2+2,7
  3405  02AF  2AC2               	goto	l2602
  3406  02B0  30FF               	movlw	255
  3407  02B1  06CE               	xorwf	___ftadd@f2,f
  3408  02B2  30FF               	movlw	255
  3409  02B3  06CF               	xorwf	___ftadd@f2+1,f
  3410  02B4  30FF               	movlw	255
  3411  02B5  06D0               	xorwf	___ftadd@f2+2,f
  3412  02B6  3001               	movlw	1
  3413  02B7  07CE               	addwf	___ftadd@f2,f
  3414  02B8  3000               	movlw	0
  3415  02B9  1803               	skipnc
  3416  02BA  3001               	movlw	1
  3417  02BB  07CF               	addwf	___ftadd@f2+1,f
  3418  02BC  3000               	movlw	0
  3419  02BD  1803               	skipnc
  3420  02BE  3001               	movlw	1
  3421  02BF  07D0               	addwf	___ftadd@f2+2,f
  3422  02C0  01D5               	clrf	___ftadd@sign
  3423  02C1  0AD5               	incf	___ftadd@sign,f
  3424  02C2                     l2602:	
  3425  02C2  084E               	movf	___ftadd@f2,w
  3426  02C3  00A0               	movwf	___ftpack@arg
  3427  02C4  084F               	movf	___ftadd@f2+1,w
  3428  02C5  00A1               	movwf	___ftpack@arg+1
  3429  02C6  0850               	movf	___ftadd@f2+2,w
  3430  02C7  00A2               	movwf	___ftpack@arg+2
  3431  02C8  0857               	movf	___ftadd@exp1,w
  3432  02C9  00D1               	movwf	??___ftadd
  3433  02CA  0851               	movf	??___ftadd,w
  3434  02CB  00A3               	movwf	___ftpack@exp
  3435  02CC  0855               	movf	___ftadd@sign,w
  3436  02CD  00D2               	movwf	??___ftadd+1
  3437  02CE  0852               	movf	??___ftadd+1,w
  3438  02CF  00A4               	movwf	___ftpack@sign
  3439  02D0  120A  118A  264C   	fcall	___ftpack
  3440  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3441  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3442  02D5  0820               	movf	?___ftpack,w
  3443  02D6  00CB               	movwf	?___ftadd
  3444  02D7  0821               	movf	?___ftpack+1,w
  3445  02D8  00CC               	movwf	?___ftadd+1
  3446  02D9  0822               	movf	?___ftpack+2,w
  3447  02DA  00CD               	movwf	?___ftadd+2
  3448  02DB  0008               	return
  3449  02DC                     __end_of___ftadd:	
  3450                           
  3451                           	psect	text8
  3452  064C                     __ptext8:	
  3453 ;; *************** function ___ftpack *****************
  3454 ;; Defined at:
  3455 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  arg             3    0[BANK0 ] unsigned um
  3458 ;;  exp             1    3[BANK0 ] unsigned char 
  3459 ;;  sign            1    4[BANK0 ] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  3    0[BANK0 ] float 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       5       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       3       0       0       0
  3474 ;;      Totals:         0       8       0       0       0
  3475 ;;Total ram usage:        8 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		___ftadd
  3482 ;;		___ftdiv
  3483 ;;		___ftmul
  3484 ;;		___lwtoft
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function ___ftpack
  3490  064C                     ___ftpack:	
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3494  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3495  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3496  064E  0823               	movf	___ftpack@exp,w
  3497  064F  1903               	btfsc	3,2
  3498  0650  2E56               	goto	l2438
  3499  0651  0822               	movf	___ftpack@arg+2,w
  3500  0652  0421               	iorwf	___ftpack@arg+1,w
  3501  0653  0420               	iorwf	___ftpack@arg,w
  3502  0654  1D03               	skipz
  3503  0655  2E69               	goto	l2444
  3504  0656                     l2438:	
  3505  0656  3000               	movlw	0
  3506  0657  00A0               	movwf	?___ftpack
  3507  0658  3000               	movlw	0
  3508  0659  00A1               	movwf	?___ftpack+1
  3509  065A  3000               	movlw	0
  3510  065B  00A2               	movwf	?___ftpack+2
  3511  065C  0008               	return
  3512  065D                     l2442:	
  3513  065D  3001               	movlw	1
  3514  065E  00A5               	movwf	??___ftpack
  3515  065F  0825               	movf	??___ftpack,w
  3516  0660  07A3               	addwf	___ftpack@exp,f
  3517  0661  3001               	movlw	1
  3518  0662                     u3005:	
  3519  0662  1003               	clrc
  3520  0663  0CA2               	rrf	___ftpack@arg+2,f
  3521  0664  0CA1               	rrf	___ftpack@arg+1,f
  3522  0665  0CA0               	rrf	___ftpack@arg,f
  3523  0666  3EFF               	addlw	-1
  3524  0667  1D03               	skipz
  3525  0668  2E62               	goto	u3005
  3526  0669                     l2444:	
  3527  0669  30FE               	movlw	254
  3528  066A  0522               	andwf	___ftpack@arg+2,w
  3529  066B  1903               	btfsc	3,2
  3530  066C  2E84               	goto	l730
  3531  066D  2E5D               	goto	l2442
  3532  066E                     l2446:	
  3533  066E  3001               	movlw	1
  3534  066F  00A5               	movwf	??___ftpack
  3535  0670  0825               	movf	??___ftpack,w
  3536  0671  07A3               	addwf	___ftpack@exp,f
  3537  0672  3001               	movlw	1
  3538  0673  07A0               	addwf	___ftpack@arg,f
  3539  0674  3000               	movlw	0
  3540  0675  1803               	skipnc
  3541  0676  3001               	movlw	1
  3542  0677  07A1               	addwf	___ftpack@arg+1,f
  3543  0678  3000               	movlw	0
  3544  0679  1803               	skipnc
  3545  067A  3001               	movlw	1
  3546  067B  07A2               	addwf	___ftpack@arg+2,f
  3547  067C  3001               	movlw	1
  3548  067D                     u3025:	
  3549  067D  1003               	clrc
  3550  067E  0CA2               	rrf	___ftpack@arg+2,f
  3551  067F  0CA1               	rrf	___ftpack@arg+1,f
  3552  0680  0CA0               	rrf	___ftpack@arg,f
  3553  0681  3EFF               	addlw	-1
  3554  0682  1D03               	skipz
  3555  0683  2E7D               	goto	u3025
  3556  0684                     l730:	
  3557  0684  30FF               	movlw	255
  3558  0685  0522               	andwf	___ftpack@arg+2,w
  3559  0686  1903               	btfsc	3,2
  3560  0687  2E93               	goto	l2454
  3561  0688  2E6E               	goto	l2446
  3562  0689                     l2452:	
  3563  0689  3001               	movlw	1
  3564  068A  02A3               	subwf	___ftpack@exp,f
  3565  068B  3001               	movlw	1
  3566  068C                     u3045:	
  3567  068C  1003               	clrc
  3568  068D  0DA0               	rlf	___ftpack@arg,f
  3569  068E  0DA1               	rlf	___ftpack@arg+1,f
  3570  068F  0DA2               	rlf	___ftpack@arg+2,f
  3571  0690  3EFF               	addlw	-1
  3572  0691  1D03               	skipz
  3573  0692  2E8C               	goto	u3045
  3574  0693                     l2454:	
  3575  0693  1BA1               	btfsc	___ftpack@arg+1,7
  3576  0694  2E99               	goto	l737
  3577  0695  3002               	movlw	2
  3578  0696  0223               	subwf	___ftpack@exp,w
  3579  0697  1803               	skipnc
  3580  0698  2E89               	goto	l2452
  3581  0699                     l737:	
  3582  0699  1823               	btfsc	___ftpack@exp,0
  3583  069A  2EA1               	goto	l738
  3584  069B  30FF               	movlw	255
  3585  069C  05A0               	andwf	___ftpack@arg,f
  3586  069D  307F               	movlw	127
  3587  069E  05A1               	andwf	___ftpack@arg+1,f
  3588  069F  30FF               	movlw	255
  3589  06A0  05A2               	andwf	___ftpack@arg+2,f
  3590  06A1                     l738:	
  3591  06A1  1003               	clrc
  3592  06A2  0CA3               	rrf	___ftpack@exp,f
  3593  06A3  0823               	movf	___ftpack@exp,w
  3594  06A4  00A5               	movwf	??___ftpack
  3595  06A5  01A6               	clrf	??___ftpack+1
  3596  06A6  01A7               	clrf	??___ftpack+2
  3597  06A7  3010               	movlw	16
  3598  06A8                     u3085:	
  3599  06A8  1003               	clrc
  3600  06A9  0DA5               	rlf	??___ftpack,f
  3601  06AA  0DA6               	rlf	??___ftpack+1,f
  3602  06AB  0DA7               	rlf	??___ftpack+2,f
  3603  06AC  3EFF               	addlw	-1
  3604  06AD  1D03               	skipz
  3605  06AE  2EA8               	goto	u3085
  3606  06AF  0825               	movf	??___ftpack,w
  3607  06B0  04A0               	iorwf	___ftpack@arg,f
  3608  06B1  0826               	movf	??___ftpack+1,w
  3609  06B2  04A1               	iorwf	___ftpack@arg+1,f
  3610  06B3  0827               	movf	??___ftpack+2,w
  3611  06B4  04A2               	iorwf	___ftpack@arg+2,f
  3612  06B5  0824               	movf	___ftpack@sign,w
  3613  06B6  1903               	btfsc	3,2
  3614  06B7  0008               	return
  3615  06B8  17A2               	bsf	___ftpack@arg+2,7
  3616  06B9  0008               	return
  3617  06BA                     __end_of___ftpack:	
  3618                           
  3619                           	psect	text9
  3620  0033                     __ptext9:	
  3621 ;; *************** function _sprintf *****************
  3622 ;; Defined at:
  3623 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  sp              1    wreg     PTR unsigned char 
  3626 ;;		 -> sTemperature(2), 
  3627 ;;  f               1   77[BANK0 ] PTR const unsigned char 
  3628 ;;		 -> STR_2(4), 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  sp              1    8[BANK1 ] PTR unsigned char 
  3631 ;;		 -> sTemperature(2), 
  3632 ;;  tmpval          4    0        struct .
  3633 ;;  width           2    9[BANK1 ] int 
  3634 ;;  val             2    6[BANK1 ] unsigned int 
  3635 ;;  cp              2    0        PTR const unsigned char 
  3636 ;;  len             2    0        unsigned int 
  3637 ;;  c               1   11[BANK1 ] char 
  3638 ;;  flag            1    5[BANK1 ] unsigned char 
  3639 ;;  prec            1    4[BANK1 ] char 
  3640 ;;  ap              1    3[BANK1 ] PTR void [1]
  3641 ;;		 -> ?_sprintf(2), 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   77[BANK0 ] int 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3651 ;;      Params:         0       3       0       0       0
  3652 ;;      Locals:         0       0       9       0       0
  3653 ;;      Temps:          0       0       3       0       0
  3654 ;;      Totals:         0       3      12       0       0
  3655 ;;Total ram usage:       15 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    2
  3658 ;; This function calls:
  3659 ;;		___lwdiv
  3660 ;;		___lwmod
  3661 ;;		___wmul
  3662 ;;		_isdigit
  3663 ;; This function is called by:
  3664 ;;		_temp_Display
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _sprintf
  3670  0033                     _sprintf:	
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3674                           ;sprintf@sp stored from wreg
  3675  0033  1683               	bsf	3,5	;RP0=1, select bank1
  3676  0034  1303               	bcf	3,6	;RP1=0, select bank1
  3677  0035  00A8               	movwf	sprintf@sp^(0+128)
  3678                           
  3679                           ;doprnt.c: 494: va_list ap;
  3680                           ;doprnt.c: 499: signed char c;
  3681                           ;doprnt.c: 501: int width;
  3682                           ;doprnt.c: 506: signed char prec;
  3683                           ;doprnt.c: 508: unsigned char flag;
  3684                           ;doprnt.c: 523: union {
  3685                           ;doprnt.c: 524: unsigned long vd;
  3686                           ;doprnt.c: 525: double integ;
  3687                           ;doprnt.c: 526: } tmpval;
  3688                           ;doprnt.c: 528: unsigned int val;
  3689                           ;doprnt.c: 529: unsigned len;
  3690                           ;doprnt.c: 530: const char * cp;
  3691                           ;doprnt.c: 533: *ap = __va_start();
  3692  0036  306E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3693  0037  00A0               	movwf	??_sprintf^(0+128)
  3694  0038  0820               	movf	??_sprintf^(0+128),w
  3695  0039  00A3               	movwf	sprintf@ap^(0+128)
  3696  003A                     l2944:	
  3697                           ;doprnt.c: 536: while(c = *f++) {
  3698                           
  3699  003A  3001               	movlw	1
  3700  003B  1283               	bcf	3,5	;RP0=0, select bank0
  3701  003C  1303               	bcf	3,6	;RP1=0, select bank0
  3702  003D  07ED               	addwf	sprintf@f,f
  3703  003E  30FF               	movlw	-1
  3704  003F  076D               	addwf	sprintf@f,w
  3705  0040  0084               	movwf	4
  3706  0041  120A  158A  200A  120A  118A  	fcall	stringdir
  3707  0046  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0047  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0048  00A0               	movwf	??_sprintf^(0+128)
  3710  0049  0820               	movf	??_sprintf^(0+128),w
  3711  004A  00AB               	movwf	sprintf@c^(0+128)
  3712  004B  082B               	movf	sprintf@c^(0+128),w
  3713  004C  1903               	btfsc	3,2
  3714  004D  29CC               	goto	l2946
  3715                           
  3716                           ;doprnt.c: 538: if(c != '%')
  3717  004E  3025               	movlw	37
  3718  004F  062B               	xorwf	sprintf@c^(0+128),w
  3719  0050  1903               	btfsc	3,2
  3720  0051  285E               	goto	l2870
  3721                           
  3722                           ;doprnt.c: 540: {
  3723                           ;doprnt.c: 541: ((*sp++ = (c)));
  3724  0052  082B               	movf	sprintf@c^(0+128),w
  3725  0053  00A0               	movwf	??_sprintf^(0+128)
  3726  0054  0828               	movf	sprintf@sp^(0+128),w
  3727  0055  0084               	movwf	4
  3728  0056  0820               	movf	??_sprintf^(0+128),w
  3729  0057  1383               	bcf	3,7	;select IRP bank0
  3730  0058  0080               	movwf	0
  3731  0059  3001               	movlw	1
  3732  005A  00A0               	movwf	??_sprintf^(0+128)
  3733  005B  0820               	movf	??_sprintf^(0+128),w
  3734  005C  07A8               	addwf	sprintf@sp^(0+128),f
  3735                           
  3736                           ;doprnt.c: 542: continue;
  3737  005D  283A               	goto	l2944
  3738  005E                     l2870:	
  3739                           
  3740                           ;doprnt.c: 543: }
  3741                           ;doprnt.c: 546: width = 0;
  3742  005E  01A9               	clrf	sprintf@width^(0+128)
  3743  005F  01AA               	clrf	(sprintf@width+1)^(0+128)
  3744                           
  3745                           ;doprnt.c: 548: flag = 0;
  3746  0060  01A5               	clrf	sprintf@flag^(0+128)
  3747                           
  3748                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3749  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0063  086D               	movf	sprintf@f,w
  3752  0064  0084               	movwf	4
  3753  0065  120A  158A  200A  120A  118A  	fcall	stringdir
  3754  006A  120A  158A  2490  120A  118A  	fcall	_isdigit
  3755  006F  1C03               	btfss	3,0
  3756  0070  28C3               	goto	l2886
  3757                           
  3758                           ;doprnt.c: 598: width = 0;
  3759  0071  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0072  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0073  01A9               	clrf	sprintf@width^(0+128)
  3762  0074  01AA               	clrf	(sprintf@width+1)^(0+128)
  3763  0075                     l2876:	
  3764                           ;doprnt.c: 599: do {
  3765                           
  3766                           
  3767                           ;doprnt.c: 600: width *= 10;
  3768  0075  300A               	movlw	10
  3769  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0078  00A0               	movwf	___wmul@multiplier
  3772  0079  3000               	movlw	0
  3773  007A  00A1               	movwf	___wmul@multiplier+1
  3774  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3775  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3776  007D  082A               	movf	(sprintf@width+1)^(0+128),w
  3777  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3778  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0080  00A3               	movwf	___wmul@multiplicand+1
  3780  0081  1683               	bsf	3,5	;RP0=1, select bank1
  3781  0082  1303               	bcf	3,6	;RP1=0, select bank1
  3782  0083  0829               	movf	sprintf@width^(0+128),w
  3783  0084  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0085  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0086  00A2               	movwf	___wmul@multiplicand
  3786  0087  120A  158A  2534  120A  118A  	fcall	___wmul
  3787  008C  1283               	bcf	3,5	;RP0=0, select bank0
  3788  008D  1303               	bcf	3,6	;RP1=0, select bank0
  3789  008E  0821               	movf	?___wmul+1,w
  3790  008F  1683               	bsf	3,5	;RP0=1, select bank1
  3791  0090  1303               	bcf	3,6	;RP1=0, select bank1
  3792  0091  00AA               	movwf	(sprintf@width+1)^(0+128)
  3793  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0094  0820               	movf	?___wmul,w
  3796  0095  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0096  1303               	bcf	3,6	;RP1=0, select bank1
  3798  0097  00A9               	movwf	sprintf@width^(0+128)
  3799                           
  3800                           ;doprnt.c: 601: width += *f++ - '0';
  3801  0098  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0099  1303               	bcf	3,6	;RP1=0, select bank0
  3803  009A  086D               	movf	sprintf@f,w
  3804  009B  0084               	movwf	4
  3805  009C  120A  158A  200A  120A  118A  	fcall	stringdir
  3806  00A1  3ED0               	addlw	208
  3807  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3808  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  3809  00A4  00A0               	movwf	??_sprintf^(0+128)
  3810  00A5  30FF               	movlw	255
  3811  00A6  1803               	skipnc
  3812  00A7  3000               	movlw	0
  3813  00A8  00A1               	movwf	(??_sprintf^(0+128)+1)
  3814  00A9  0820               	movf	??_sprintf^(0+128),w
  3815  00AA  07A9               	addwf	sprintf@width^(0+128),f
  3816  00AB  1803               	skipnc
  3817  00AC  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3818  00AD  0821               	movf	(??_sprintf+1)^(0+128),w
  3819  00AE  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3820  00AF  3001               	movlw	1
  3821  00B0  00A0               	movwf	??_sprintf^(0+128)
  3822  00B1  0820               	movf	??_sprintf^(0+128),w
  3823  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3824  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3825  00B4  07ED               	addwf	sprintf@f,f
  3826                           
  3827                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3828  00B5  086D               	movf	sprintf@f,w
  3829  00B6  0084               	movwf	4
  3830  00B7  120A  158A  200A  120A  118A  	fcall	stringdir
  3831  00BC  120A  158A  2490  120A  118A  	fcall	_isdigit
  3832  00C1  1803               	btfsc	3,0
  3833  00C2  2875               	goto	l2876
  3834  00C3                     l2886:	
  3835                           ;doprnt.c: 822: }
  3836                           
  3837                           ;doprnt.c: 813: continue;
  3838                           
  3839                           ;doprnt.c: 802: default:
  3840                           
  3841                           ;doprnt.c: 698: case 'i':
  3842                           ;doprnt.c: 699: break;
  3843                           
  3844                           ;doprnt.c: 697: case 'd':
  3845                           
  3846                           ;doprnt.c: 638: goto alldone;
  3847                           
  3848                           ;doprnt.c: 637: case 0:
  3849                           
  3850                           ;doprnt.c: 608: }
  3851                           ;doprnt.c: 635: switch(c = *f++) {
  3852                           
  3853  00C3  3001               	movlw	1
  3854  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3855  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3856  00C6  07ED               	addwf	sprintf@f,f
  3857  00C7  30FF               	movlw	-1
  3858  00C8  076D               	addwf	sprintf@f,w
  3859  00C9  0084               	movwf	4
  3860  00CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3861  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  3862  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  3863  00D1  00AB               	movwf	sprintf@c^(0+128)
  3864                           
  3865                           ; Switch size 1, requested type "space"
  3866                           ; Number of cases is 3, Range of values is 0 to 105
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte           10     6 (average)
  3870                           ; jumptable            260     6 (fixed)
  3871                           ;	Chosen strategy is simple_byte
  3872  00D2  3A00               	xorlw	0	; case 0
  3873  00D3  1903               	skipnz
  3874  00D4  29CC               	goto	l2946
  3875  00D5  3A64               	xorlw	100	; case 100
  3876  00D6  1903               	skipnz
  3877  00D7  28DC               	goto	l2888
  3878  00D8  3A0D               	xorlw	13	; case 105
  3879  00D9  1903               	skipnz
  3880  00DA  28DC               	goto	l2888
  3881  00DB  283A               	goto	l2944
  3882  00DC                     l2888:	
  3883                           
  3884                           ;doprnt.c: 1253: {
  3885                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3886  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3887  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  3888  00DE  0823               	movf	sprintf@ap^(0+128),w
  3889  00DF  0084               	movwf	4
  3890  00E0  1383               	bcf	3,7	;select IRP bank0
  3891  00E1  0800               	movf	0,w
  3892  00E2  00A6               	movwf	sprintf@val^(0+128)
  3893  00E3  0A84               	incf	4,f
  3894  00E4  0800               	movf	0,w
  3895  00E5  00A7               	movwf	(sprintf@val+1)^(0+128)
  3896  00E6  3002               	movlw	2
  3897  00E7  00A0               	movwf	??_sprintf^(0+128)
  3898  00E8  0820               	movf	??_sprintf^(0+128),w
  3899  00E9  07A3               	addwf	sprintf@ap^(0+128),f
  3900                           
  3901                           ;doprnt.c: 1261: if((int)val < 0) {
  3902  00EA  1FA7               	btfss	(sprintf@val+1)^(0+128),7
  3903  00EB  28F5               	goto	l2898
  3904                           
  3905                           ;doprnt.c: 1262: flag |= 0x03;
  3906  00EC  3003               	movlw	3
  3907  00ED  00A0               	movwf	??_sprintf^(0+128)
  3908  00EE  0820               	movf	??_sprintf^(0+128),w
  3909  00EF  04A5               	iorwf	sprintf@flag^(0+128),f
  3910                           
  3911                           ;doprnt.c: 1263: val = -val;
  3912  00F0  09A6               	comf	sprintf@val^(0+128),f
  3913  00F1  09A7               	comf	(sprintf@val+1)^(0+128),f
  3914  00F2  0AA6               	incf	sprintf@val^(0+128),f
  3915  00F3  1903               	skipnz
  3916  00F4  0AA7               	incf	(sprintf@val+1)^(0+128),f
  3917  00F5                     l2898:	
  3918                           
  3919                           ;doprnt.c: 1264: }
  3920                           ;doprnt.c: 1266: }
  3921                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3922  00F5  01AB               	clrf	sprintf@c^(0+128)
  3923  00F6  0AAB               	incf	sprintf@c^(0+128),f
  3924  00F7  3005               	movlw	5
  3925  00F8  062B               	xorwf	sprintf@c^(0+128),w
  3926  00F9  1903               	btfsc	3,2
  3927  00FA  291C               	goto	l2910
  3928  00FB                     l2904:	
  3929                           
  3930                           ;doprnt.c: 1306: if(val < dpowers[c])
  3931  00FB  082B               	movf	sprintf@c^(0+128),w
  3932  00FC  00A0               	movwf	??_sprintf^(0+128)
  3933  00FD  0720               	addwf	??_sprintf^(0+128),w
  3934  00FE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3935  00FF  0084               	movwf	4
  3936  0100  120A  158A  200A  120A  118A  	fcall	stringdir
  3937  0105  00A1               	movwf	(??_sprintf+1)^(0+128)
  3938  0106  120A  158A  200A  120A  118A  	fcall	stringdir
  3939  010B  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3940  010C  0822               	movf	(??_sprintf+2)^(0+128),w
  3941  010D  0227               	subwf	(sprintf@val+1)^(0+128),w
  3942  010E  1D03               	skipz
  3943  010F  2912               	goto	u4095
  3944  0110  0821               	movf	(??_sprintf+1)^(0+128),w
  3945  0111  0226               	subwf	sprintf@val^(0+128),w
  3946  0112                     u4095:	
  3947  0112  1C03               	btfss	3,0
  3948  0113  291C               	goto	l2910
  3949                           
  3950                           ;doprnt.c: 1307: break;
  3951  0114  3001               	movlw	1
  3952  0115  00A0               	movwf	??_sprintf^(0+128)
  3953  0116  0820               	movf	??_sprintf^(0+128),w
  3954  0117  07AB               	addwf	sprintf@c^(0+128),f
  3955  0118  3005               	movlw	5
  3956  0119  062B               	xorwf	sprintf@c^(0+128),w
  3957  011A  1D03               	btfss	3,2
  3958  011B  28FB               	goto	l2904
  3959  011C                     l2910:	
  3960                           
  3961                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3962  011C  0829               	movf	sprintf@width^(0+128),w
  3963  011D  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3964  011E  1903               	btfsc	3,2
  3965  011F  292A               	goto	l474
  3966  0120  0825               	movf	sprintf@flag^(0+128),w
  3967  0121  3903               	andlw	3
  3968  0122  1903               	btfsc	3,2
  3969  0123  292A               	goto	l474
  3970                           
  3971                           ;doprnt.c: 1346: width--;
  3972  0124  30FF               	movlw	255
  3973  0125  07A9               	addwf	sprintf@width^(0+128),f
  3974  0126  1803               	skipnc
  3975  0127  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3976  0128  30FF               	movlw	255
  3977  0129  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3978  012A                     l474:	
  3979                           
  3980                           ;doprnt.c: 1381: if(width > c)
  3981  012A  082B               	movf	sprintf@c^(0+128),w
  3982  012B  00A0               	movwf	??_sprintf^(0+128)
  3983  012C  01A1               	clrf	(??_sprintf^(0+128)+1)
  3984  012D  1BA0               	btfsc	??_sprintf^(0+128),7
  3985  012E  03A1               	decf	(??_sprintf^(0+128)+1),f
  3986  012F  0821               	movf	(??_sprintf+1)^(0+128),w
  3987  0130  3A80               	xorlw	128
  3988  0131  00A2               	movwf	(??_sprintf+2)^(0+128)
  3989  0132  082A               	movf	(sprintf@width+1)^(0+128),w
  3990  0133  3A80               	xorlw	128
  3991  0134  0222               	subwf	(??_sprintf+2)^(0+128),w
  3992  0135  1D03               	skipz
  3993  0136  2939               	goto	u4135
  3994  0137  0829               	movf	sprintf@width^(0+128),w
  3995  0138  0220               	subwf	??_sprintf^(0+128),w
  3996  0139                     u4135:	
  3997  0139  1803               	skipnc
  3998  013A  2949               	goto	l2918
  3999                           
  4000                           ;doprnt.c: 1382: width -= c;
  4001  013B  1683               	bsf	3,5	;RP0=1, select bank1
  4002  013C  1303               	bcf	3,6	;RP1=0, select bank1
  4003  013D  082B               	movf	sprintf@c^(0+128),w
  4004  013E  00A0               	movwf	??_sprintf^(0+128)
  4005  013F  01A1               	clrf	(??_sprintf^(0+128)+1)
  4006  0140  1BA0               	btfsc	??_sprintf^(0+128),7
  4007  0141  03A1               	decf	(??_sprintf^(0+128)+1),f
  4008  0142  0820               	movf	??_sprintf^(0+128),w
  4009  0143  02A9               	subwf	sprintf@width^(0+128),f
  4010  0144  0821               	movf	(??_sprintf+1)^(0+128),w
  4011  0145  1C03               	skipc
  4012  0146  03AA               	decf	(sprintf@width+1)^(0+128),f
  4013  0147  02AA               	subwf	(sprintf@width+1)^(0+128),f
  4014  0148  294D               	goto	l2920
  4015  0149                     l2918:	
  4016                           
  4017                           ;doprnt.c: 1383: else
  4018                           ;doprnt.c: 1384: width = 0;
  4019  0149  1683               	bsf	3,5	;RP0=1, select bank1
  4020  014A  1303               	bcf	3,6	;RP1=0, select bank1
  4021  014B  01A9               	clrf	sprintf@width^(0+128)
  4022  014C  01AA               	clrf	(sprintf@width+1)^(0+128)
  4023  014D                     l2920:	
  4024                           
  4025                           ;doprnt.c: 1422: {
  4026                           ;doprnt.c: 1424: if(width
  4027                           ;doprnt.c: 1428: )
  4028  014D  0829               	movf	sprintf@width^(0+128),w
  4029  014E  042A               	iorwf	(sprintf@width+1)^(0+128),w
  4030  014F  1903               	btfsc	3,2
  4031  0150  2966               	goto	l2928
  4032  0151                     l2922:	
  4033                           ;doprnt.c: 1429: do
  4034                           
  4035                           
  4036                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4037  0151  3020               	movlw	32
  4038  0152  00A0               	movwf	??_sprintf^(0+128)
  4039  0153  0828               	movf	sprintf@sp^(0+128),w
  4040  0154  0084               	movwf	4
  4041  0155  0820               	movf	??_sprintf^(0+128),w
  4042  0156  1383               	bcf	3,7	;select IRP bank0
  4043  0157  0080               	movwf	0
  4044  0158  3001               	movlw	1
  4045  0159  00A0               	movwf	??_sprintf^(0+128)
  4046  015A  0820               	movf	??_sprintf^(0+128),w
  4047  015B  07A8               	addwf	sprintf@sp^(0+128),f
  4048                           
  4049                           ;doprnt.c: 1431: while(--width);
  4050  015C  30FF               	movlw	255
  4051  015D  07A9               	addwf	sprintf@width^(0+128),f
  4052  015E  1803               	skipnc
  4053  015F  0AAA               	incf	(sprintf@width+1)^(0+128),f
  4054  0160  30FF               	movlw	255
  4055  0161  07AA               	addwf	(sprintf@width+1)^(0+128),f
  4056  0162  0829               	movf	sprintf@width^(0+128),w
  4057  0163  042A               	iorwf	(sprintf@width+1)^(0+128),w
  4058  0164  1D03               	btfss	3,2
  4059  0165  2951               	goto	l2922
  4060  0166                     l2928:	
  4061                           
  4062                           ;doprnt.c: 1438: if(flag & 0x03)
  4063  0166  0825               	movf	sprintf@flag^(0+128),w
  4064  0167  3903               	andlw	3
  4065  0168  1903               	btfsc	3,2
  4066  0169  2975               	goto	l2934
  4067                           
  4068                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4069  016A  302D               	movlw	45
  4070  016B  00A0               	movwf	??_sprintf^(0+128)
  4071  016C  0828               	movf	sprintf@sp^(0+128),w
  4072  016D  0084               	movwf	4
  4073  016E  0820               	movf	??_sprintf^(0+128),w
  4074  016F  1383               	bcf	3,7	;select IRP bank0
  4075  0170  0080               	movwf	0
  4076  0171  3001               	movlw	1
  4077  0172  00A0               	movwf	??_sprintf^(0+128)
  4078  0173  0820               	movf	??_sprintf^(0+128),w
  4079  0174  07A8               	addwf	sprintf@sp^(0+128),f
  4080  0175                     l2934:	
  4081                           
  4082                           ;doprnt.c: 1469: }
  4083                           ;doprnt.c: 1472: prec = c;
  4084  0175  082B               	movf	sprintf@c^(0+128),w
  4085  0176  00A0               	movwf	??_sprintf^(0+128)
  4086  0177  0820               	movf	??_sprintf^(0+128),w
  4087  0178  00A4               	movwf	sprintf@prec^(0+128)
  4088  0179                     l2942:	
  4089                           ;doprnt.c: 1474: while(prec--) {
  4090                           
  4091  0179  30FF               	movlw	255
  4092  017A  00A0               	movwf	??_sprintf^(0+128)
  4093  017B  0820               	movf	??_sprintf^(0+128),w
  4094  017C  07A4               	addwf	sprintf@prec^(0+128),f
  4095  017D  0A24               	incf	sprintf@prec^(0+128),w
  4096  017E  1903               	btfsc	3,2
  4097  017F  283A               	goto	l2944
  4098                           
  4099                           ;doprnt.c: 1478: {
  4100                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4101  0180  300A               	movlw	10
  4102  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4103  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4104  0183  00A7               	movwf	___lwmod@divisor
  4105  0184  3000               	movlw	0
  4106  0185  00A8               	movwf	___lwmod@divisor+1
  4107  0186  1683               	bsf	3,5	;RP0=1, select bank1
  4108  0187  1303               	bcf	3,6	;RP1=0, select bank1
  4109  0188  0824               	movf	sprintf@prec^(0+128),w
  4110  0189  00A0               	movwf	??_sprintf^(0+128)
  4111  018A  0720               	addwf	??_sprintf^(0+128),w
  4112  018B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4113  018C  0084               	movwf	4
  4114  018D  120A  158A  200A  120A  118A  	fcall	stringdir
  4115  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0194  00A0               	movwf	___lwdiv@divisor
  4118  0195  120A  158A  200A  120A  118A  	fcall	stringdir
  4119  019A  00A1               	movwf	___lwdiv@divisor+1
  4120  019B  1683               	bsf	3,5	;RP0=1, select bank1
  4121  019C  1303               	bcf	3,6	;RP1=0, select bank1
  4122  019D  0827               	movf	(sprintf@val+1)^(0+128),w
  4123  019E  1283               	bcf	3,5	;RP0=0, select bank0
  4124  019F  1303               	bcf	3,6	;RP1=0, select bank0
  4125  01A0  00A3               	movwf	___lwdiv@dividend+1
  4126  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  4127  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  4128  01A3  0826               	movf	sprintf@val^(0+128),w
  4129  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  4130  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  4131  01A6  00A2               	movwf	___lwdiv@dividend
  4132  01A7  120A  158A  261E  120A  118A  	fcall	___lwdiv
  4133  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4134  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4135  01AE  0821               	movf	?___lwdiv+1,w
  4136  01AF  00AA               	movwf	___lwmod@dividend+1
  4137  01B0  0820               	movf	?___lwdiv,w
  4138  01B1  00A9               	movwf	___lwmod@dividend
  4139  01B2  120A  158A  25B3  120A  118A  	fcall	___lwmod
  4140  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  4141  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  4142  01B9  0827               	movf	?___lwmod,w
  4143  01BA  3E30               	addlw	48
  4144  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  4145  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  4146  01BD  00A1               	movwf	(??_sprintf+1)^(0+128)
  4147  01BE  0821               	movf	(??_sprintf+1)^(0+128),w
  4148  01BF  00AB               	movwf	sprintf@c^(0+128)
  4149                           
  4150                           ;doprnt.c: 1523: }
  4151                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4152  01C0  082B               	movf	sprintf@c^(0+128),w
  4153  01C1  00A0               	movwf	??_sprintf^(0+128)
  4154  01C2  0828               	movf	sprintf@sp^(0+128),w
  4155  01C3  0084               	movwf	4
  4156  01C4  0820               	movf	??_sprintf^(0+128),w
  4157  01C5  1383               	bcf	3,7	;select IRP bank0
  4158  01C6  0080               	movwf	0
  4159  01C7  3001               	movlw	1
  4160  01C8  00A0               	movwf	??_sprintf^(0+128)
  4161  01C9  0820               	movf	??_sprintf^(0+128),w
  4162  01CA  07A8               	addwf	sprintf@sp^(0+128),f
  4163  01CB  2979               	goto	l2942
  4164  01CC                     l2946:	
  4165                           ;doprnt.c: 1525: }
  4166                           ;doprnt.c: 1533: }
  4167                           ;doprnt.c: 1535: alldone:
  4168                           
  4169                           
  4170                           ;doprnt.c: 1538: *sp = 0;
  4171  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  4172  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  4173  01CE  0828               	movf	sprintf@sp^(0+128),w
  4174  01CF  0084               	movwf	4
  4175  01D0  1383               	bcf	3,7	;select IRP bank0
  4176  01D1  0180               	clrf	0
  4177  01D2  0008               	return
  4178  01D3                     __end_of_sprintf:	
  4179                           ;doprnt.c: 1540: return 0;
  4180                           ;	Return value of _sprintf is never used
  4181                           
  4182                           
  4183                           	psect	text10
  4184  0C90                     __ptext10:	
  4185 ;; *************** function _isdigit *****************
  4186 ;; Defined at:
  4187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  c               1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  c               1    5[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;		None               void
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         2       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         2       0       0       0       0
  4205 ;;Total ram usage:        2 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_sprintf
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _isdigit
  4217  0C90                     _isdigit:	
  4218                           
  4219                           ;incstack = 0
  4220                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4221                           ;isdigit@c stored from wreg
  4222  0C90  00F5               	movwf	isdigit@c
  4223  0C91  01F4               	clrf	_isdigit$1419
  4224  0C92  303A               	movlw	58
  4225  0C93  0275               	subwf	isdigit@c,w
  4226  0C94  1803               	skipnc
  4227  0C95  2C9C               	goto	l2504
  4228  0C96  3030               	movlw	48
  4229  0C97  0275               	subwf	isdigit@c,w
  4230  0C98  1C03               	skipc
  4231  0C99  2C9C               	goto	l2504
  4232  0C9A  01F4               	clrf	_isdigit$1419
  4233  0C9B  0AF4               	incf	_isdigit$1419,f
  4234  0C9C                     l2504:	
  4235  0C9C  0C74               	rrf	_isdigit$1419,w
  4236  0C9D  0008               	return
  4237  0C9E                     __end_of_isdigit:	
  4238                           
  4239                           	psect	text11
  4240  0D34                     __ptext11:	
  4241 ;; *************** function ___wmul *****************
  4242 ;; Defined at:
  4243 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4246 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  product         2    4[COMMON] unsigned int 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2    0[BANK0 ] unsigned int 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4258 ;;      Params:         0       4       0       0       0
  4259 ;;      Locals:         2       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0
  4261 ;;      Totals:         2       4       0       0       0
  4262 ;;Total ram usage:        6 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_sprintf
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           
  4273                           ;psect for function ___wmul
  4274  0D34                     ___wmul:	
  4275                           
  4276                           ;incstack = 0
  4277                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4278  0D34  01F4               	clrf	___wmul@product
  4279  0D35  01F5               	clrf	___wmul@product+1
  4280  0D36                     l2510:	
  4281  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0D38  1C20               	btfss	___wmul@multiplier,0
  4284  0D39  2D40               	goto	l569
  4285  0D3A  0822               	movf	___wmul@multiplicand,w
  4286  0D3B  07F4               	addwf	___wmul@product,f
  4287  0D3C  1803               	skipnc
  4288  0D3D  0AF5               	incf	___wmul@product+1,f
  4289  0D3E  0823               	movf	___wmul@multiplicand+1,w
  4290  0D3F  07F5               	addwf	___wmul@product+1,f
  4291  0D40                     l569:	
  4292  0D40  3001               	movlw	1
  4293  0D41                     u3145:	
  4294  0D41  1003               	clrc
  4295  0D42  0DA2               	rlf	___wmul@multiplicand,f
  4296  0D43  0DA3               	rlf	___wmul@multiplicand+1,f
  4297  0D44  3EFF               	addlw	-1
  4298  0D45  1D03               	skipz
  4299  0D46  2D41               	goto	u3145
  4300  0D47  3001               	movlw	1
  4301  0D48                     u3155:	
  4302  0D48  1003               	clrc
  4303  0D49  0CA1               	rrf	___wmul@multiplier+1,f
  4304  0D4A  0CA0               	rrf	___wmul@multiplier,f
  4305  0D4B  3EFF               	addlw	-1
  4306  0D4C  1D03               	skipz
  4307  0D4D  2D48               	goto	u3155
  4308  0D4E  0820               	movf	___wmul@multiplier,w
  4309  0D4F  0421               	iorwf	___wmul@multiplier+1,w
  4310  0D50  1D03               	btfss	3,2
  4311  0D51  2D36               	goto	l2510
  4312  0D52  0875               	movf	___wmul@product+1,w
  4313  0D53  00A1               	movwf	?___wmul+1
  4314  0D54  0874               	movf	___wmul@product,w
  4315  0D55  00A0               	movwf	?___wmul
  4316  0D56  0008               	return
  4317  0D57                     __end_of___wmul:	
  4318                           
  4319                           	psect	text12
  4320  0DB3                     __ptext12:	
  4321 ;; *************** function ___lwmod *****************
  4322 ;; Defined at:
  4323 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  divisor         2    7[BANK0 ] unsigned int 
  4326 ;;  dividend        2    9[BANK0 ] unsigned int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  counter         1   11[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2    7[BANK0 ] unsigned int 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       4       0       0       0
  4339 ;;      Locals:         0       1       0       0       0
  4340 ;;      Temps:          1       0       0       0       0
  4341 ;;      Totals:         1       5       0       0       0
  4342 ;;Total ram usage:        6 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_sprintf
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function ___lwmod
  4354  0DB3                     ___lwmod:	
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4358  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0DB5  0827               	movf	___lwmod@divisor,w
  4361  0DB6  0428               	iorwf	___lwmod@divisor+1,w
  4362  0DB7  1903               	btfsc	3,2
  4363  0DB8  2DE2               	goto	l2784
  4364  0DB9  01AB               	clrf	___lwmod@counter
  4365  0DBA  0AAB               	incf	___lwmod@counter,f
  4366  0DBB                     l2774:	
  4367  0DBB  1BA8               	btfsc	___lwmod@divisor+1,7
  4368  0DBC  2DC9               	goto	l2776
  4369  0DBD  3001               	movlw	1
  4370  0DBE                     u3865:	
  4371  0DBE  1003               	clrc
  4372  0DBF  0DA7               	rlf	___lwmod@divisor,f
  4373  0DC0  0DA8               	rlf	___lwmod@divisor+1,f
  4374  0DC1  3EFF               	addlw	-1
  4375  0DC2  1D03               	skipz
  4376  0DC3  2DBE               	goto	u3865
  4377  0DC4  3001               	movlw	1
  4378  0DC5  00F5               	movwf	??___lwmod
  4379  0DC6  0875               	movf	??___lwmod,w
  4380  0DC7  07AB               	addwf	___lwmod@counter,f
  4381  0DC8  2DBB               	goto	l2774
  4382  0DC9                     l2776:	
  4383  0DC9  0828               	movf	___lwmod@divisor+1,w
  4384  0DCA  022A               	subwf	___lwmod@dividend+1,w
  4385  0DCB  1D03               	skipz
  4386  0DCC  2DCF               	goto	u3885
  4387  0DCD  0827               	movf	___lwmod@divisor,w
  4388  0DCE  0229               	subwf	___lwmod@dividend,w
  4389  0DCF                     u3885:	
  4390  0DCF  1C03               	skipc
  4391  0DD0  2DD7               	goto	l2780
  4392  0DD1  0827               	movf	___lwmod@divisor,w
  4393  0DD2  02A9               	subwf	___lwmod@dividend,f
  4394  0DD3  0828               	movf	___lwmod@divisor+1,w
  4395  0DD4  1C03               	skipc
  4396  0DD5  03AA               	decf	___lwmod@dividend+1,f
  4397  0DD6  02AA               	subwf	___lwmod@dividend+1,f
  4398  0DD7                     l2780:	
  4399  0DD7  3001               	movlw	1
  4400  0DD8                     u3895:	
  4401  0DD8  1003               	clrc
  4402  0DD9  0CA8               	rrf	___lwmod@divisor+1,f
  4403  0DDA  0CA7               	rrf	___lwmod@divisor,f
  4404  0DDB  3EFF               	addlw	-1
  4405  0DDC  1D03               	skipz
  4406  0DDD  2DD8               	goto	u3895
  4407  0DDE  3001               	movlw	1
  4408  0DDF  02AB               	subwf	___lwmod@counter,f
  4409  0DE0  1D03               	btfss	3,2
  4410  0DE1  2DC9               	goto	l2776
  4411  0DE2                     l2784:	
  4412  0DE2  082A               	movf	___lwmod@dividend+1,w
  4413  0DE3  00A8               	movwf	?___lwmod+1
  4414  0DE4  0829               	movf	___lwmod@dividend,w
  4415  0DE5  00A7               	movwf	?___lwmod
  4416  0DE6  0008               	return
  4417  0DE7                     __end_of___lwmod:	
  4418                           
  4419                           	psect	text13
  4420  0E1E                     __ptext13:	
  4421 ;; *************** function ___lwdiv *****************
  4422 ;; Defined at:
  4423 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  divisor         2    0[BANK0 ] unsigned int 
  4426 ;;  dividend        2    2[BANK0 ] unsigned int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  quotient        2    5[BANK0 ] unsigned int 
  4429 ;;  counter         1    4[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    0[BANK0 ] unsigned int 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4439 ;;      Params:         0       4       0       0       0
  4440 ;;      Locals:         0       3       0       0       0
  4441 ;;      Temps:          1       0       0       0       0
  4442 ;;      Totals:         1       7       0       0       0
  4443 ;;Total ram usage:        8 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_temp_Measurement
  4450 ;;		_sprintf
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function ___lwdiv
  4456  0E1E                     ___lwdiv:	
  4457                           
  4458                           ;incstack = 0
  4459                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4460  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0E20  01A5               	clrf	___lwdiv@quotient
  4463  0E21  01A6               	clrf	___lwdiv@quotient+1
  4464  0E22  0820               	movf	___lwdiv@divisor,w
  4465  0E23  0421               	iorwf	___lwdiv@divisor+1,w
  4466  0E24  1903               	btfsc	3,2
  4467  0E25  2E57               	goto	l2762
  4468  0E26  01A4               	clrf	___lwdiv@counter
  4469  0E27  0AA4               	incf	___lwdiv@counter,f
  4470  0E28                     l2750:	
  4471  0E28  1BA1               	btfsc	___lwdiv@divisor+1,7
  4472  0E29  2E36               	goto	l2752
  4473  0E2A  3001               	movlw	1
  4474  0E2B                     u3795:	
  4475  0E2B  1003               	clrc
  4476  0E2C  0DA0               	rlf	___lwdiv@divisor,f
  4477  0E2D  0DA1               	rlf	___lwdiv@divisor+1,f
  4478  0E2E  3EFF               	addlw	-1
  4479  0E2F  1D03               	skipz
  4480  0E30  2E2B               	goto	u3795
  4481  0E31  3001               	movlw	1
  4482  0E32  00F4               	movwf	??___lwdiv
  4483  0E33  0874               	movf	??___lwdiv,w
  4484  0E34  07A4               	addwf	___lwdiv@counter,f
  4485  0E35  2E28               	goto	l2750
  4486  0E36                     l2752:	
  4487  0E36  3001               	movlw	1
  4488  0E37                     u3815:	
  4489  0E37  1003               	clrc
  4490  0E38  0DA5               	rlf	___lwdiv@quotient,f
  4491  0E39  0DA6               	rlf	___lwdiv@quotient+1,f
  4492  0E3A  3EFF               	addlw	-1
  4493  0E3B  1D03               	skipz
  4494  0E3C  2E37               	goto	u3815
  4495  0E3D  0821               	movf	___lwdiv@divisor+1,w
  4496  0E3E  0223               	subwf	___lwdiv@dividend+1,w
  4497  0E3F  1D03               	skipz
  4498  0E40  2E43               	goto	u3825
  4499  0E41  0820               	movf	___lwdiv@divisor,w
  4500  0E42  0222               	subwf	___lwdiv@dividend,w
  4501  0E43                     u3825:	
  4502  0E43  1C03               	skipc
  4503  0E44  2E4C               	goto	l2758
  4504  0E45  0820               	movf	___lwdiv@divisor,w
  4505  0E46  02A2               	subwf	___lwdiv@dividend,f
  4506  0E47  0821               	movf	___lwdiv@divisor+1,w
  4507  0E48  1C03               	skipc
  4508  0E49  03A3               	decf	___lwdiv@dividend+1,f
  4509  0E4A  02A3               	subwf	___lwdiv@dividend+1,f
  4510  0E4B  1425               	bsf	___lwdiv@quotient,0
  4511  0E4C                     l2758:	
  4512  0E4C  3001               	movlw	1
  4513  0E4D                     u3835:	
  4514  0E4D  1003               	clrc
  4515  0E4E  0CA1               	rrf	___lwdiv@divisor+1,f
  4516  0E4F  0CA0               	rrf	___lwdiv@divisor,f
  4517  0E50  3EFF               	addlw	-1
  4518  0E51  1D03               	skipz
  4519  0E52  2E4D               	goto	u3835
  4520  0E53  3001               	movlw	1
  4521  0E54  02A4               	subwf	___lwdiv@counter,f
  4522  0E55  1D03               	btfss	3,2
  4523  0E56  2E36               	goto	l2752
  4524  0E57                     l2762:	
  4525  0E57  0826               	movf	___lwdiv@quotient+1,w
  4526  0E58  00A1               	movwf	?___lwdiv+1
  4527  0E59  0825               	movf	___lwdiv@quotient,w
  4528  0E5A  00A0               	movwf	?___lwdiv
  4529  0E5B  0008               	return
  4530  0E5C                     __end_of___lwdiv:	
  4531                           
  4532                           	psect	text14
  4533  0EDD                     __ptext14:	
  4534 ;; *************** function _Lcd_write *****************
  4535 ;; Defined at:
  4536 ;;		line 95 in file "lcd_Config.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  string          2    3[BANK0 ] PTR unsigned char 
  4539 ;;		 -> sTemperature(2), STR_1(13), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  i               2    8[BANK0 ] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4551 ;;      Params:         0       2       0       0       0
  4552 ;;      Locals:         0       2       0       0       0
  4553 ;;      Temps:          0       3       0       0       0
  4554 ;;      Totals:         0       7       0       0       0
  4555 ;;Total ram usage:        7 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    3
  4558 ;; This function calls:
  4559 ;;		_Lcd_Write_Char
  4560 ;; This function is called by:
  4561 ;;		_temp_Display
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           
  4566                           ;psect for function _Lcd_write
  4567  0EDD                     _Lcd_write:	
  4568                           
  4569                           ;lcd_Config.c: 96: int i;
  4570                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4574  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  4575  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  4576  0EDF  01A8               	clrf	Lcd_write@i
  4577  0EE0  01A9               	clrf	Lcd_write@i+1
  4578  0EE1                     l2834:	
  4579  0EE1  0828               	movf	Lcd_write@i,w
  4580  0EE2  0723               	addwf	Lcd_write@string,w
  4581  0EE3  00A6               	movwf	??_Lcd_write+1
  4582  0EE4  0824               	movf	Lcd_write@string+1,w
  4583  0EE5  00A5               	movwf	??_Lcd_write
  4584  0EE6  1803               	skipnc
  4585  0EE7  0AA5               	incf	??_Lcd_write,f
  4586  0EE8  1BA8               	btfsc	Lcd_write@i,7
  4587  0EE9  03A5               	decf	??_Lcd_write,f
  4588  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  4589  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  4590  0EEC  0825               	movf	??_Lcd_write,w
  4591  0EED  00A7               	movwf	??_Lcd_write+2
  4592  0EEE  0827               	movf	??_Lcd_write+2,w
  4593  0EEF  00FF               	movwf	127
  4594  0EF0  0826               	movf	??_Lcd_write+1,w
  4595  0EF1  0084               	movwf	4
  4596  0EF2  120A  158A  2000  120A  158A  	fcall	stringtab
  4597  0EF7  3A00               	xorlw	0
  4598  0EF8  1903               	btfsc	3,2
  4599  0EF9  0008               	return
  4600                           
  4601                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4602  0EFA  0828               	movf	Lcd_write@i,w
  4603  0EFB  0723               	addwf	Lcd_write@string,w
  4604  0EFC  00A6               	movwf	??_Lcd_write+1
  4605  0EFD  0824               	movf	Lcd_write@string+1,w
  4606  0EFE  00A5               	movwf	??_Lcd_write
  4607  0EFF  1803               	skipnc
  4608  0F00  0AA5               	incf	??_Lcd_write,f
  4609  0F01  1BA8               	btfsc	Lcd_write@i,7
  4610  0F02  03A5               	decf	??_Lcd_write,f
  4611  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0F05  0825               	movf	??_Lcd_write,w
  4614  0F06  00A7               	movwf	??_Lcd_write+2
  4615  0F07  0827               	movf	??_Lcd_write+2,w
  4616  0F08  00FF               	movwf	127
  4617  0F09  0826               	movf	??_Lcd_write+1,w
  4618  0F0A  0084               	movwf	4
  4619  0F0B  120A  158A  2000  120A  158A  	fcall	stringtab
  4620  0F10  120A  158A  25E7  120A  158A  	fcall	_Lcd_Write_Char
  4621  0F15  3001               	movlw	1
  4622  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0F18  07A8               	addwf	Lcd_write@i,f
  4625  0F19  1803               	skipnc
  4626  0F1A  0AA9               	incf	Lcd_write@i+1,f
  4627  0F1B  3000               	movlw	0
  4628  0F1C  07A9               	addwf	Lcd_write@i+1,f
  4629  0F1D  2EE1               	goto	l2834
  4630  0F1E                     __end_of_Lcd_write:	
  4631                           
  4632                           	psect	text15
  4633  0DE7                     __ptext15:	
  4634 ;; *************** function _Lcd_Write_Char *****************
  4635 ;; Defined at:
  4636 ;;		line 80 in file "lcd_Config.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  a               1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  a               1    2[BANK0 ] unsigned char 
  4641 ;;  y               1    1[BANK0 ] unsigned char 
  4642 ;;  temp            1    0[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      void 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4652 ;;      Params:         0       0       0       0       0
  4653 ;;      Locals:         0       3       0       0       0
  4654 ;;      Temps:          1       0       0       0       0
  4655 ;;      Totals:         1       3       0       0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    2
  4659 ;; This function calls:
  4660 ;;		_Lcd_Port
  4661 ;; This function is called by:
  4662 ;;		_Lcd_write
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _Lcd_Write_Char
  4668  0DE7                     _Lcd_Write_Char:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4672                           ;Lcd_Write_Char@a stored from wreg
  4673  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0DE9  00A2               	movwf	Lcd_Write_Char@a
  4676                           
  4677                           ;lcd_Config.c: 81: char temp, y;
  4678                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4679  0DEA  0822               	movf	Lcd_Write_Char@a,w
  4680  0DEB  390F               	andlw	15
  4681  0DEC  00F5               	movwf	??_Lcd_Write_Char
  4682  0DED  0875               	movf	??_Lcd_Write_Char,w
  4683  0DEE  00A0               	movwf	Lcd_Write_Char@temp
  4684                           
  4685                           ;lcd_Config.c: 83: y = a & 0xF0;
  4686  0DEF  0822               	movf	Lcd_Write_Char@a,w
  4687  0DF0  39F0               	andlw	240
  4688  0DF1  00F5               	movwf	??_Lcd_Write_Char
  4689  0DF2  0875               	movf	??_Lcd_Write_Char,w
  4690  0DF3  00A1               	movwf	Lcd_Write_Char@y
  4691                           
  4692                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4693  0DF4  1686               	bsf	6,5	;volatile
  4694                           
  4695                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4696  0DF5  0821               	movf	Lcd_Write_Char@y,w
  4697  0DF6  00F5               	movwf	??_Lcd_Write_Char
  4698  0DF7  3004               	movlw	4
  4699  0DF8                     u3105:	
  4700  0DF8  1003               	clrc
  4701  0DF9  0CF5               	rrf	??_Lcd_Write_Char,f
  4702  0DFA  3EFF               	addlw	-1
  4703  0DFB  1D03               	skipz
  4704  0DFC  2DF8               	goto	u3105
  4705  0DFD  0875               	movf	??_Lcd_Write_Char,w
  4706  0DFE  120A  158A  24FE  120A  158A  	fcall	_Lcd_Port
  4707                           
  4708                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4709  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  4710  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  4711  0E05  1606               	bsf	6,4	;volatile
  4712                           
  4713                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4714  0E06  300D               	movlw	13
  4715  0E07  00F5               	movwf	??_Lcd_Write_Char
  4716  0E08                     u4207:	
  4717  0E08  0BF5               	decfsz	??_Lcd_Write_Char,f
  4718  0E09  2E08               	goto	u4207
  4719                           
  4720                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4721  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0E0C  1206               	bcf	6,4	;volatile
  4724                           
  4725                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4726  0E0D  0820               	movf	Lcd_Write_Char@temp,w
  4727  0E0E  120A  158A  24FE  120A  158A  	fcall	_Lcd_Port
  4728                           
  4729                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4730  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  4732  0E15  1606               	bsf	6,4	;volatile
  4733                           
  4734                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4735  0E16  300D               	movlw	13
  4736  0E17  00F5               	movwf	??_Lcd_Write_Char
  4737  0E18                     u4217:	
  4738  0E18  0BF5               	decfsz	??_Lcd_Write_Char,f
  4739  0E19  2E18               	goto	u4217
  4740                           
  4741                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4742  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4743  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4744  0E1C  1206               	bcf	6,4	;volatile
  4745  0E1D  0008               	return
  4746  0E1E                     __end_of_Lcd_Write_Char:	
  4747                           
  4748                           	psect	text16
  4749  0FAE                     __ptext16:	
  4750 ;; *************** function _Lcd_Set_Cursor *****************
  4751 ;; Defined at:
  4752 ;;		line 45 in file "lcd_Config.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  raw             1    wreg     unsigned char 
  4755 ;;  column          1    2[BANK0 ] unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  raw             1    5[BANK0 ] unsigned char 
  4758 ;;  temp            1    8[BANK0 ] unsigned char 
  4759 ;;  y               1    7[BANK0 ] unsigned char 
  4760 ;;  z               1    6[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4770 ;;      Params:         0       1       0       0       0
  4771 ;;      Locals:         0       4       0       0       0
  4772 ;;      Temps:          0       2       0       0       0
  4773 ;;      Totals:         0       7       0       0       0
  4774 ;;Total ram usage:        7 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    3
  4777 ;; This function calls:
  4778 ;;		_Lcd_Cmd
  4779 ;; This function is called by:
  4780 ;;		_temp_Display
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           
  4785                           ;psect for function _Lcd_Set_Cursor
  4786  0FAE                     _Lcd_Set_Cursor:	
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4790                           ;Lcd_Set_Cursor@raw stored from wreg
  4791  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0FB0  00A5               	movwf	Lcd_Set_Cursor@raw
  4794                           
  4795                           ;lcd_Config.c: 46: char temp, z, y;
  4796                           ;lcd_Config.c: 47: if (raw == 1) {
  4797  0FB1  0325               	decf	Lcd_Set_Cursor@raw,w
  4798  0FB2  1D03               	btfss	3,2
  4799  0FB3  2FD7               	goto	l2818
  4800                           
  4801                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4802  0FB4  0822               	movf	Lcd_Set_Cursor@column,w
  4803  0FB5  3E7F               	addlw	127
  4804  0FB6  00A3               	movwf	??_Lcd_Set_Cursor
  4805  0FB7  0823               	movf	??_Lcd_Set_Cursor,w
  4806  0FB8  00A8               	movwf	Lcd_Set_Cursor@temp
  4807                           
  4808                           ;lcd_Config.c: 49: z = temp >> 4;
  4809  0FB9  0828               	movf	Lcd_Set_Cursor@temp,w
  4810  0FBA  00A3               	movwf	??_Lcd_Set_Cursor
  4811  0FBB  3004               	movlw	4
  4812  0FBC                     u3945:	
  4813  0FBC  1003               	clrc
  4814  0FBD  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4815  0FBE  3EFF               	addlw	-1
  4816  0FBF  1D03               	skipz
  4817  0FC0  2FBC               	goto	u3945
  4818  0FC1  0823               	movf	??_Lcd_Set_Cursor,w
  4819  0FC2  00A4               	movwf	??_Lcd_Set_Cursor+1
  4820  0FC3  0824               	movf	??_Lcd_Set_Cursor+1,w
  4821  0FC4  00A6               	movwf	Lcd_Set_Cursor@z
  4822                           
  4823                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4824  0FC5  0828               	movf	Lcd_Set_Cursor@temp,w
  4825  0FC6  390F               	andlw	15
  4826  0FC7  00A3               	movwf	??_Lcd_Set_Cursor
  4827  0FC8  0823               	movf	??_Lcd_Set_Cursor,w
  4828  0FC9  00A7               	movwf	Lcd_Set_Cursor@y
  4829                           
  4830                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4831  0FCA  0826               	movf	Lcd_Set_Cursor@z,w
  4832  0FCB  120A  158A  2518  120A  158A  	fcall	_Lcd_Cmd
  4833                           
  4834                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4835  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0FD2  0827               	movf	Lcd_Set_Cursor@y,w
  4838  0FD3  120A  158A  2518   	fcall	_Lcd_Cmd
  4839                           
  4840                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4841  0FD6  0008               	return
  4842  0FD7                     l2818:	
  4843  0FD7  3002               	movlw	2
  4844  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0FDA  0625               	xorwf	Lcd_Set_Cursor@raw,w
  4847  0FDB  1D03               	btfss	3,2
  4848  0FDC  0008               	return
  4849                           
  4850                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4851  0FDD  0822               	movf	Lcd_Set_Cursor@column,w
  4852  0FDE  3EBF               	addlw	191
  4853  0FDF  00A3               	movwf	??_Lcd_Set_Cursor
  4854  0FE0  0823               	movf	??_Lcd_Set_Cursor,w
  4855  0FE1  00A8               	movwf	Lcd_Set_Cursor@temp
  4856                           
  4857                           ;lcd_Config.c: 55: z = temp >> 4;
  4858  0FE2  0828               	movf	Lcd_Set_Cursor@temp,w
  4859  0FE3  00A3               	movwf	??_Lcd_Set_Cursor
  4860  0FE4  3004               	movlw	4
  4861  0FE5                     u3965:	
  4862  0FE5  1003               	clrc
  4863  0FE6  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4864  0FE7  3EFF               	addlw	-1
  4865  0FE8  1D03               	skipz
  4866  0FE9  2FE5               	goto	u3965
  4867  0FEA  0823               	movf	??_Lcd_Set_Cursor,w
  4868  0FEB  00A4               	movwf	??_Lcd_Set_Cursor+1
  4869  0FEC  0824               	movf	??_Lcd_Set_Cursor+1,w
  4870  0FED  00A6               	movwf	Lcd_Set_Cursor@z
  4871                           
  4872                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4873  0FEE  0828               	movf	Lcd_Set_Cursor@temp,w
  4874  0FEF  390F               	andlw	15
  4875  0FF0  00A3               	movwf	??_Lcd_Set_Cursor
  4876  0FF1  0823               	movf	??_Lcd_Set_Cursor,w
  4877  0FF2  00A7               	movwf	Lcd_Set_Cursor@y
  4878                           
  4879                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  4880  0FF3  0826               	movf	Lcd_Set_Cursor@z,w
  4881  0FF4  120A  158A  2518  120A  158A  	fcall	_Lcd_Cmd
  4882                           
  4883                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  4884  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0FFB  0827               	movf	Lcd_Set_Cursor@y,w
  4887  0FFC  120A  158A  2518   	fcall	_Lcd_Cmd
  4888  0FFF  0008               	return
  4889  1000                     __end_of_Lcd_Set_Cursor:	
  4890                           
  4891                           	psect	text17
  4892  0F63                     __ptext17:	
  4893 ;; *************** function _system_Initialize *****************
  4894 ;; Defined at:
  4895 ;;		line 10 in file "SYST_Init.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4909 ;;      Params:         0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0
  4912 ;;      Totals:         0       0       0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    4
  4916 ;; This function calls:
  4917 ;;		_ADC_Init
  4918 ;;		_Interrupt_Init
  4919 ;;		_Lcd_Init
  4920 ;;		_Oscillator_Init
  4921 ;;		_PWM_DutyCycle
  4922 ;;		_PWM_Init
  4923 ;;		_SPI_Init
  4924 ;;		_TMR0_Init
  4925 ;;		_UART_Init
  4926 ;;		_pinManager
  4927 ;; This function is called by:
  4928 ;;		_main
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           
  4933                           ;psect for function _system_Initialize
  4934  0F63                     _system_Initialize:	
  4935                           
  4936                           ;SYST_Init.c: 11: Oscillator_Init();
  4937                           
  4938                           ;incstack = 0
  4939                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4940  0F63  120A  158A  2472  120A  158A  	fcall	_Oscillator_Init
  4941                           
  4942                           ;SYST_Init.c: 12: Interrupt_Init();
  4943  0F68  120A  158A  249E  120A  158A  	fcall	_Interrupt_Init
  4944                           
  4945                           ;SYST_Init.c: 13: pinManager();
  4946  0F6D  120A  118A  27D3  120A  158A  	fcall	_pinManager
  4947                           
  4948                           ;SYST_Init.c: 14: Lcd_Init();
  4949  0F72  120A  118A  26BA  120A  158A  	fcall	_Lcd_Init
  4950                           
  4951                           ;SYST_Init.c: 15: ADC_Init();
  4952  0F77  120A  158A  24E5  120A  158A  	fcall	_ADC_Init
  4953                           
  4954                           ;SYST_Init.c: 16: TMR0_Init();
  4955  0F7C  120A  158A  24AD  120A  158A  	fcall	_TMR0_Init
  4956                           
  4957                           ;SYST_Init.c: 17: PWM_Init(10000);
  4958  0F81  3000               	movlw	0
  4959  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0F84  00BC               	movwf	PWM_Init@iFrequency+3
  4962  0F85  3000               	movlw	0
  4963  0F86  00BB               	movwf	PWM_Init@iFrequency+2
  4964  0F87  3027               	movlw	39
  4965  0F88  00BA               	movwf	PWM_Init@iFrequency+1
  4966  0F89  3010               	movlw	16
  4967  0F8A  00B9               	movwf	PWM_Init@iFrequency
  4968  0F8B  120A  158A  271E  120A  158A  	fcall	_PWM_Init
  4969                           
  4970                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  4971  0F90  3000               	movlw	0
  4972  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0F93  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  4975  0F94  3000               	movlw	0
  4976  0F95  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  4977  0F96  3000               	movlw	0
  4978  0F97  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  4979  0F98  3046               	movlw	70
  4980  0F99  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  4981  0F9A  120A  118A  25DD  120A  158A  	fcall	_PWM_DutyCycle
  4982                           
  4983                           ;SYST_Init.c: 19: SPI_Init();
  4984  0F9F  120A  158A  2483  120A  158A  	fcall	_SPI_Init
  4985                           
  4986                           ;SYST_Init.c: 20: UART_Init(9600);
  4987  0FA4  3080               	movlw	128
  4988  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0FA7  00B9               	movwf	UART_Init@baudRate
  4991  0FA8  3025               	movlw	37
  4992  0FA9  00BA               	movwf	UART_Init@baudRate+1
  4993  0FAA  120A  158A  265C   	fcall	_UART_Init
  4994  0FAD  0008               	return
  4995  0FAE                     __end_of_system_Initialize:	
  4996                           
  4997                           	psect	text18
  4998  07D3                     __ptext18:	
  4999 ;; *************** function _pinManager *****************
  5000 ;; Defined at:
  5001 ;;		line 19 in file "pin_Manager.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		status,2
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0
  5018 ;;      Totals:         0       0       0       0       0
  5019 ;;Total ram usage:        0 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_system_Initialize
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _pinManager
  5031  07D3                     _pinManager:	
  5032                           
  5033                           ;pin_Manager.c: 21: TRISD = 0;
  5034                           
  5035                           ;incstack = 0
  5036                           ; Regs used in _pinManager: [status,2]
  5037  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  5038  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  5039  07D5  0188               	clrf	8	;volatile
  5040                           
  5041                           ;pin_Manager.c: 23: ANSELH = 0;
  5042  07D6  1683               	bsf	3,5	;RP0=1, select bank3
  5043  07D7  1703               	bsf	3,6	;RP1=1, select bank3
  5044  07D8  0189               	clrf	9	;volatile
  5045                           
  5046                           ;pin_Manager.c: 24: TRISB = 0;
  5047  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  5048  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  5049  07DB  0186               	clrf	6	;volatile
  5050                           
  5051                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  5052  07DC  1706               	bsf	6,6	;volatile
  5053                           
  5054                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  5055  07DD  1786               	bsf	6,7	;volatile
  5056                           
  5057                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  5058  07DE  1107               	bcf	7,2	;volatile
  5059                           
  5060                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  5061  07DF  1683               	bsf	3,5	;RP0=1, select bank3
  5062  07E0  1703               	bsf	3,6	;RP1=1, select bank3
  5063  07E1  1088               	bcf	8,1	;volatile
  5064                           
  5065                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  5066  07E2  1108               	bcf	8,2	;volatile
  5067                           
  5068                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  5069  07E3  1188               	bcf	8,3	;volatile
  5070                           
  5071                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  5072  07E4  1208               	bcf	8,4	;volatile
  5073                           
  5074                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  5075  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  5076  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  5077  07E7  1085               	bcf	5,1	;volatile
  5078                           
  5079                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  5080  07E8  1105               	bcf	5,2	;volatile
  5081                           
  5082                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  5083  07E9  1185               	bcf	5,3	;volatile
  5084                           
  5085                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  5086  07EA  1205               	bcf	5,4	;volatile
  5087                           
  5088                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  5089  07EB  1683               	bsf	3,5	;RP0=1, select bank3
  5090  07EC  1703               	bsf	3,6	;RP1=1, select bank3
  5091  07ED  1408               	bsf	8,0	;volatile
  5092                           
  5093                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  5094  07EE  1288               	bcf	8,5	;volatile
  5095                           
  5096                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  5097  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  5098  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  5099  07F1  1405               	bsf	5,0	;volatile
  5100                           
  5101                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  5102  07F2  1287               	bcf	7,5	;volatile
  5103                           
  5104                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  5105  07F3  1607               	bsf	7,4	;volatile
  5106                           
  5107                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  5108  07F4  1285               	bcf	5,5	;volatile
  5109                           
  5110                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  5111  07F5  1187               	bcf	7,3	;volatile
  5112                           
  5113                           ;pin_Manager.c: 51: PORTA = 0;
  5114  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  5115  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  5116  07F8  0185               	clrf	5	;volatile
  5117                           
  5118                           ;pin_Manager.c: 52: PORTB = 0;
  5119  07F9  0186               	clrf	6	;volatile
  5120                           
  5121                           ;pin_Manager.c: 53: PORTC = 0;
  5122  07FA  0187               	clrf	7	;volatile
  5123                           
  5124                           ;pin_Manager.c: 54: PORTD = 0;
  5125  07FB  0188               	clrf	8	;volatile
  5126                           
  5127                           ;pin_Manager.c: 55: PORTE = 0;
  5128  07FC  0189               	clrf	9	;volatile
  5129  07FD  0008               	return
  5130  07FE                     __end_of_pinManager:	
  5131                           
  5132                           	psect	text19
  5133  0E5C                     __ptext19:	
  5134 ;; *************** function _UART_Init *****************
  5135 ;; Defined at:
  5136 ;;		line 10 in file "uart_Init.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  baudRate        2   25[BANK0 ] unsigned int 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0, pclath, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       2       0       0       0
  5151 ;;      Locals:         0       0       0       0       0
  5152 ;;      Temps:          0       4       0       0       0
  5153 ;;      Totals:         0       6       0       0       0
  5154 ;;Total ram usage:        6 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    2
  5157 ;; This function calls:
  5158 ;;		___lldiv
  5159 ;; This function is called by:
  5160 ;;		_system_Initialize
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _UART_Init
  5166  0E5C                     _UART_Init:	
  5167                           
  5168                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  5172  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  5173  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  5174  0E5E  1707               	bsf	7,6	;volatile
  5175                           
  5176                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  5177  0E5F  1787               	bsf	7,7	;volatile
  5178                           
  5179                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  5180  0E60  1698               	bsf	24,5	;volatile
  5181                           
  5182                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  5183  0E61  1218               	bcf	24,4	;volatile
  5184                           
  5185                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  5186  0E62  1318               	bcf	24,6	;volatile
  5187                           
  5188                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  5189  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0E65  1798               	bsf	24,7	;volatile
  5192                           
  5193                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  5194  0E66  1618               	bsf	24,4	;volatile
  5195                           
  5196                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  5197  0E67  1318               	bcf	24,6	;volatile
  5198                           
  5199                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  5200  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  5201  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  5202  0E6A  1518               	bsf	24,2	;volatile
  5203                           
  5204                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  5205  0E6B  1683               	bsf	3,5	;RP0=1, select bank3
  5206  0E6C  1703               	bsf	3,6	;RP1=1, select bank3
  5207  0E6D  1187               	bcf	7,3	;volatile
  5208                           
  5209                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  5210  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0E70  0839               	movf	UART_Init@baudRate,w
  5213  0E71  00AC               	movwf	___lldiv@divisor
  5214  0E72  083A               	movf	UART_Init@baudRate+1,w
  5215  0E73  00AD               	movwf	___lldiv@divisor+1
  5216  0E74  01AE               	clrf	___lldiv@divisor+2
  5217  0E75  01AF               	clrf	___lldiv@divisor+3
  5218  0E76  3000               	movlw	0
  5219  0E77  00B3               	movwf	___lldiv@dividend+3
  5220  0E78  303D               	movlw	61
  5221  0E79  00B2               	movwf	___lldiv@dividend+2
  5222  0E7A  3009               	movlw	9
  5223  0E7B  00B1               	movwf	___lldiv@dividend+1
  5224  0E7C  3000               	movlw	0
  5225  0E7D  00B0               	movwf	___lldiv@dividend
  5226  0E7E  120A  118A  271B  120A  158A  	fcall	___lldiv
  5227  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  5228  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  5229  0E85  082C               	movf	?___lldiv,w
  5230  0E86  00BB               	movwf	??_UART_Init
  5231  0E87  082D               	movf	?___lldiv+1,w
  5232  0E88  00BC               	movwf	??_UART_Init+1
  5233  0E89  082E               	movf	?___lldiv+2,w
  5234  0E8A  00BD               	movwf	??_UART_Init+2
  5235  0E8B  082F               	movf	?___lldiv+3,w
  5236  0E8C  00BE               	movwf	??_UART_Init+3
  5237  0E8D  3004               	movlw	4
  5238  0E8E                     u2675:	
  5239  0E8E  1003               	clrc
  5240  0E8F  0CBE               	rrf	??_UART_Init+3,f
  5241  0E90  0CBD               	rrf	??_UART_Init+2,f
  5242  0E91  0CBC               	rrf	??_UART_Init+1,f
  5243  0E92  0CBB               	rrf	??_UART_Init,f
  5244  0E93  3EFF               	addlw	-1
  5245  0E94  1D03               	skipz
  5246  0E95  2E8E               	goto	u2675
  5247  0E96  083B               	movf	??_UART_Init,w
  5248  0E97  3EFF               	addlw	255
  5249  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  5250  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  5251  0E9A  0099               	movwf	25	;volatile
  5252  0E9B  0008               	return
  5253  0E9C                     __end_of_UART_Init:	
  5254                           
  5255                           	psect	text20
  5256  0CAD                     __ptext20:	
  5257 ;; *************** function _TMR0_Init *****************
  5258 ;; Defined at:
  5259 ;;		line 19 in file "timer_Init.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5273 ;;      Params:         0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0
  5276 ;;      Totals:         0       0       0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    1
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_system_Initialize
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _TMR0_Init
  5289  0CAD                     _TMR0_Init:	
  5290                           
  5291                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  5295  0CAD  168B               	bsf	11,5	;volatile
  5296                           
  5297                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  5298  0CAE  110B               	bcf	11,2	;volatile
  5299                           
  5300                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  5301  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  5302  0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  5303  0CB1  1281               	bcf	1,5	;volatile
  5304                           
  5305                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  5306  0CB2  1181               	bcf	1,3	;volatile
  5307                           
  5308                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  5309  0CB3  0801               	movf	1,w	;volatile
  5310  0CB4  39F8               	andlw	-8
  5311  0CB5  3805               	iorlw	5
  5312  0CB6  0081               	movwf	1	;volatile
  5313                           
  5314                           ;timer_Init.c: 26: TMR0 = 100;
  5315  0CB7  3064               	movlw	100
  5316  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  5317  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  5318  0CBA  0081               	movwf	1	;volatile
  5319  0CBB  0008               	return
  5320  0CBC                     __end_of_TMR0_Init:	
  5321                           
  5322                           	psect	text21
  5323  0C83                     __ptext21:	
  5324 ;; *************** function _SPI_Init *****************
  5325 ;; Defined at:
  5326 ;;		line 10 in file "spi_Init.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5340 ;;      Params:         0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    1
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_system_Initialize
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _SPI_Init
  5356  0C83                     _SPI_Init:	
  5357                           
  5358                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5362  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0C85  1694               	bsf	20,5	;volatile
  5365                           
  5366                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5367  0C86  30F0               	movlw	-16
  5368  0C87  0594               	andwf	20,f	;volatile
  5369                           
  5370                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5371  0C88  1394               	bcf	20,7	;volatile
  5372                           
  5373                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5374  0C89  1683               	bsf	3,5	;RP0=1, select bank1
  5375  0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  5376  0C8B  158C               	bsf	12,3	;volatile
  5377                           
  5378                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5379  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0C8E  118C               	bcf	12,3	;volatile
  5382  0C8F  0008               	return
  5383  0C90                     __end_of_SPI_Init:	
  5384                           
  5385                           	psect	text22
  5386  0F1E                     __ptext22:	
  5387 ;; *************** function _PWM_Init *****************
  5388 ;; Defined at:
  5389 ;;		line 14 in file "pwm_Init.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5403 ;;      Params:         0       4       0       0       0
  5404 ;;      Locals:         0       0       0       0       0
  5405 ;;      Temps:          0       4       0       0       0
  5406 ;;      Totals:         0       8       0       0       0
  5407 ;;Total ram usage:        8 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    2
  5410 ;; This function calls:
  5411 ;;		___lldiv
  5412 ;; This function is called by:
  5413 ;;		_system_Initialize
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _PWM_Init
  5419  0F1E                     _PWM_Init:	
  5420                           
  5421                           ;pwm_Init.c: 15: TRISCbits.TRISC2 = 1;
  5422                           
  5423                           ;incstack = 0
  5424                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5425  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5426  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5427  0F20  1507               	bsf	7,2	;volatile
  5428                           
  5429                           ;pwm_Init.c: 17: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5430  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0F23  0839               	movf	PWM_Init@iFrequency,w
  5433  0F24  00BD               	movwf	??_PWM_Init
  5434  0F25  083A               	movf	PWM_Init@iFrequency+1,w
  5435  0F26  00BE               	movwf	??_PWM_Init+1
  5436  0F27  083B               	movf	PWM_Init@iFrequency+2,w
  5437  0F28  00BF               	movwf	??_PWM_Init+2
  5438  0F29  083C               	movf	PWM_Init@iFrequency+3,w
  5439  0F2A  00C0               	movwf	??_PWM_Init+3
  5440  0F2B  3002               	movlw	2
  5441  0F2C                     u2645:	
  5442  0F2C  1003               	clrc
  5443  0F2D  0DBD               	rlf	??_PWM_Init,f
  5444  0F2E  0DBE               	rlf	??_PWM_Init+1,f
  5445  0F2F  0DBF               	rlf	??_PWM_Init+2,f
  5446  0F30  0DC0               	rlf	??_PWM_Init+3,f
  5447  0F31  3EFF               	addlw	-1
  5448  0F32  1D03               	skipz
  5449  0F33  2F2C               	goto	u2645
  5450  0F34  0840               	movf	??_PWM_Init+3,w
  5451  0F35  00AF               	movwf	___lldiv@divisor+3
  5452  0F36  083F               	movf	??_PWM_Init+2,w
  5453  0F37  00AE               	movwf	___lldiv@divisor+2
  5454  0F38  083E               	movf	??_PWM_Init+1,w
  5455  0F39  00AD               	movwf	___lldiv@divisor+1
  5456  0F3A  083D               	movf	??_PWM_Init,w
  5457  0F3B  00AC               	movwf	___lldiv@divisor
  5458  0F3C  3000               	movlw	0
  5459  0F3D  00B3               	movwf	___lldiv@dividend+3
  5460  0F3E  303D               	movlw	61
  5461  0F3F  00B2               	movwf	___lldiv@dividend+2
  5462  0F40  3009               	movlw	9
  5463  0F41  00B1               	movwf	___lldiv@dividend+1
  5464  0F42  3000               	movlw	0
  5465  0F43  00B0               	movwf	___lldiv@dividend
  5466  0F44  120A  118A  271B   	fcall	___lldiv
  5467  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0F49  082C               	movf	?___lldiv,w
  5470  0F4A  3EFF               	addlw	255
  5471  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  5472  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  5473  0F4D  0092               	movwf	18	;volatile
  5474                           
  5475                           ;pwm_Init.c: 18: CCP1CONbits.P1M = 0b00;
  5476  0F4E  303F               	movlw	-193
  5477  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0F51  0597               	andwf	23,f	;volatile
  5480                           
  5481                           ;pwm_Init.c: 19: CCP1CONbits.CCP1M = 0b1100;
  5482  0F52  0817               	movf	23,w	;volatile
  5483  0F53  39F0               	andlw	-16
  5484  0F54  380C               	iorlw	12
  5485  0F55  0097               	movwf	23	;volatile
  5486                           
  5487                           ;pwm_Init.c: 20: CCP1CONbits.DC1B = 0b00;
  5488  0F56  30CF               	movlw	-49
  5489  0F57  0597               	andwf	23,f	;volatile
  5490                           
  5491                           ;pwm_Init.c: 21: CCPR1L = 0x00;
  5492  0F58  0195               	clrf	21	;volatile
  5493                           
  5494                           ;pwm_Init.c: 23: PIR1bits.TMR2IF = 0;
  5495  0F59  108C               	bcf	12,1	;volatile
  5496                           
  5497                           ;pwm_Init.c: 24: T2CONbits.TOUTPS = 0b0000;
  5498  0F5A  3087               	movlw	-121
  5499  0F5B  0592               	andwf	18,f	;volatile
  5500                           
  5501                           ;pwm_Init.c: 25: T2CONbits.T2CKPS = 0b00;
  5502  0F5C  30FC               	movlw	-4
  5503  0F5D  0592               	andwf	18,f	;volatile
  5504                           
  5505                           ;pwm_Init.c: 26: T2CONbits.TMR2ON = 1;
  5506  0F5E  1512               	bsf	18,2	;volatile
  5507                           
  5508                           ;pwm_Init.c: 27: TRISCbits.TRISC2 = 0;
  5509  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5510  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  5511  0F61  1107               	bcf	7,2	;volatile
  5512  0F62  0008               	return
  5513  0F63                     __end_of_PWM_Init:	
  5514                           
  5515                           	psect	text23
  5516  05DD                     __ptext23:	
  5517 ;; *************** function _PWM_DutyCycle *****************
  5518 ;; Defined at:
  5519 ;;		line 30 in file "pwm_Init.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5533 ;;      Params:         0       4       0       0       0
  5534 ;;      Locals:         0       0       0       0       0
  5535 ;;      Temps:          0       4       0       0       0
  5536 ;;      Totals:         0       8       0       0       0
  5537 ;;Total ram usage:        8 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    2
  5540 ;; This function calls:
  5541 ;;		___lldiv
  5542 ;;		___lmul
  5543 ;; This function is called by:
  5544 ;;		_system_Initialize
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _PWM_DutyCycle
  5550  05DD                     _PWM_DutyCycle:	
  5551                           
  5552                           ;pwm_Init.c: 32: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5553                           
  5554                           ;incstack = 0
  5555                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5556  05DD  3000               	movlw	0
  5557  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  5558  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  5559  05E0  00AF               	movwf	___lldiv@divisor+3
  5560  05E1  3000               	movlw	0
  5561  05E2  00AE               	movwf	___lldiv@divisor+2
  5562  05E3  3000               	movlw	0
  5563  05E4  00AD               	movwf	___lldiv@divisor+1
  5564  05E5  3064               	movlw	100
  5565  05E6  00AC               	movwf	___lldiv@divisor
  5566  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  5567  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  5568  05E9  0812               	movf	18,w	;volatile
  5569  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  5570  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  5571  05EC  00BD               	movwf	??_PWM_DutyCycle
  5572  05ED  01BE               	clrf	??_PWM_DutyCycle+1
  5573  05EE  1003               	clrc
  5574  05EF  0DBD               	rlf	??_PWM_DutyCycle,f
  5575  05F0  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5576  05F1  1003               	clrc
  5577  05F2  0DBD               	rlf	??_PWM_DutyCycle,f
  5578  05F3  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5579  05F4  083D               	movf	??_PWM_DutyCycle,w
  5580  05F5  3E04               	addlw	4
  5581  05F6  00A0               	movwf	___lmul@multiplier
  5582  05F7  083E               	movf	??_PWM_DutyCycle+1,w
  5583  05F8  1803               	skipnc
  5584  05F9  3E01               	addlw	1
  5585  05FA  3E00               	addlw	0
  5586  05FB  00A1               	movwf	___lmul@multiplier+1
  5587  05FC  01A2               	clrf	___lmul@multiplier+2
  5588  05FD  1BA1               	btfsc	___lmul@multiplier+1,7
  5589  05FE  03A2               	decf	___lmul@multiplier+2,f
  5590  05FF  0822               	movf	___lmul@multiplier+2,w
  5591  0600  00A3               	movwf	___lmul@multiplier+3
  5592  0601  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5593  0602  00A7               	movwf	___lmul@multiplicand+3
  5594  0603  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5595  0604  00A6               	movwf	___lmul@multiplicand+2
  5596  0605  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5597  0606  00A5               	movwf	___lmul@multiplicand+1
  5598  0607  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5599  0608  00A4               	movwf	___lmul@multiplicand
  5600  0609  120A  158A  269C  120A  118A  	fcall	___lmul
  5601  060E  1283               	bcf	3,5	;RP0=0, select bank0
  5602  060F  1303               	bcf	3,6	;RP1=0, select bank0
  5603  0610  0823               	movf	?___lmul+3,w
  5604  0611  00B3               	movwf	___lldiv@dividend+3
  5605  0612  0822               	movf	?___lmul+2,w
  5606  0613  00B2               	movwf	___lldiv@dividend+2
  5607  0614  0821               	movf	?___lmul+1,w
  5608  0615  00B1               	movwf	___lldiv@dividend+1
  5609  0616  0820               	movf	?___lmul,w
  5610  0617  00B0               	movwf	___lldiv@dividend
  5611  0618  120A  118A  271B  120A  118A  	fcall	___lldiv
  5612  061D  1283               	bcf	3,5	;RP0=0, select bank0
  5613  061E  1303               	bcf	3,6	;RP1=0, select bank0
  5614  061F  082F               	movf	?___lldiv+3,w
  5615  0620  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5616  0621  082E               	movf	?___lldiv+2,w
  5617  0622  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5618  0623  082D               	movf	?___lldiv+1,w
  5619  0624  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5620  0625  082C               	movf	?___lldiv,w
  5621  0626  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5622                           
  5623                           ;pwm_Init.c: 33: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5624  0627  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5625  0628  00BD               	movwf	??_PWM_DutyCycle
  5626  0629  3003               	movlw	3
  5627  062A                     u3915:	
  5628  062A  1003               	clrc
  5629  062B  0DBD               	rlf	??_PWM_DutyCycle,f
  5630  062C  3EFF               	addlw	-1
  5631  062D  1D03               	skipz
  5632  062E  2E2A               	goto	u3915
  5633  062F  1003               	clrc
  5634  0630  0D3D               	rlf	??_PWM_DutyCycle,w
  5635  0631  00BE               	movwf	??_PWM_DutyCycle+1
  5636  0632  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5637  0633  0817               	movf	23,w	;volatile
  5638  0634  063E               	xorwf	??_PWM_DutyCycle+1,w
  5639  0635  39CF               	andlw	-49
  5640  0636  063E               	xorwf	??_PWM_DutyCycle+1,w
  5641  0637  0097               	movwf	23	;volatile
  5642                           
  5643                           ;pwm_Init.c: 34: CCPR1L = (iDutyCycle >> 2);
  5644  0638  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5645  0639  00BD               	movwf	??_PWM_DutyCycle
  5646  063A  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5647  063B  00BE               	movwf	??_PWM_DutyCycle+1
  5648  063C  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5649  063D  00BF               	movwf	??_PWM_DutyCycle+2
  5650  063E  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5651  063F  00C0               	movwf	??_PWM_DutyCycle+3
  5652  0640  3002               	movlw	2
  5653  0641                     u3925:	
  5654  0641  1003               	clrc
  5655  0642  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5656  0643  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5657  0644  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5658  0645  0CBD               	rrf	??_PWM_DutyCycle,f
  5659  0646  3EFF               	addlw	-1
  5660  0647  1D03               	skipz
  5661  0648  2E41               	goto	u3925
  5662  0649  083D               	movf	??_PWM_DutyCycle,w
  5663  064A  0095               	movwf	21	;volatile
  5664  064B  0008               	return
  5665  064C                     __end_of_PWM_DutyCycle:	
  5666                           
  5667                           	psect	text24
  5668  0E9C                     __ptext24:	
  5669 ;; *************** function ___lmul *****************
  5670 ;; Defined at:
  5671 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5674 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  product         4    8[BANK0 ] unsigned long 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  4    0[BANK0 ] unsigned long 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5686 ;;      Params:         0       8       0       0       0
  5687 ;;      Locals:         0       4       0       0       0
  5688 ;;      Temps:          1       0       0       0       0
  5689 ;;      Totals:         1      12       0       0       0
  5690 ;;Total ram usage:       13 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_PWM_DutyCycle
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function ___lmul
  5702  0E9C                     ___lmul:	
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5706  0E9C  3000               	movlw	0
  5707  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0E9F  00AB               	movwf	___lmul@product+3
  5710  0EA0  3000               	movlw	0
  5711  0EA1  00AA               	movwf	___lmul@product+2
  5712  0EA2  3000               	movlw	0
  5713  0EA3  00A9               	movwf	___lmul@product+1
  5714  0EA4  3000               	movlw	0
  5715  0EA5  00A8               	movwf	___lmul@product
  5716  0EA6                     l2524:	
  5717  0EA6  1C20               	btfss	___lmul@multiplier,0
  5718  0EA7  2EBC               	goto	l2528
  5719  0EA8  0824               	movf	___lmul@multiplicand,w
  5720  0EA9  07A8               	addwf	___lmul@product,f
  5721  0EAA  0825               	movf	___lmul@multiplicand+1,w
  5722  0EAB  1103               	clrz
  5723  0EAC  1803               	skipnc
  5724  0EAD  3E01               	addlw	1
  5725  0EAE  1D03               	btfss	3,2
  5726  0EAF  07A9               	addwf	___lmul@product+1,f
  5727  0EB0  0826               	movf	___lmul@multiplicand+2,w
  5728  0EB1  1103               	clrz
  5729  0EB2  1803               	skipnc
  5730  0EB3  3E01               	addlw	1
  5731  0EB4  1D03               	btfss	3,2
  5732  0EB5  07AA               	addwf	___lmul@product+2,f
  5733  0EB6  0827               	movf	___lmul@multiplicand+3,w
  5734  0EB7  1103               	clrz
  5735  0EB8  1803               	skipnc
  5736  0EB9  3E01               	addlw	1
  5737  0EBA  1D03               	btfss	3,2
  5738  0EBB  07AB               	addwf	___lmul@product+3,f
  5739  0EBC                     l2528:	
  5740  0EBC  3001               	movlw	1
  5741  0EBD  00F4               	movwf	??___lmul
  5742  0EBE                     u3195:	
  5743  0EBE  1003               	clrc
  5744  0EBF  0DA4               	rlf	___lmul@multiplicand,f
  5745  0EC0  0DA5               	rlf	___lmul@multiplicand+1,f
  5746  0EC1  0DA6               	rlf	___lmul@multiplicand+2,f
  5747  0EC2  0DA7               	rlf	___lmul@multiplicand+3,f
  5748  0EC3  0BF4               	decfsz	??___lmul,f
  5749  0EC4  2EBE               	goto	u3195
  5750  0EC5  3001               	movlw	1
  5751  0EC6                     u3205:	
  5752  0EC6  1003               	clrc
  5753  0EC7  0CA3               	rrf	___lmul@multiplier+3,f
  5754  0EC8  0CA2               	rrf	___lmul@multiplier+2,f
  5755  0EC9  0CA1               	rrf	___lmul@multiplier+1,f
  5756  0ECA  0CA0               	rrf	___lmul@multiplier,f
  5757  0ECB  3EFF               	addlw	-1
  5758  0ECC  1D03               	skipz
  5759  0ECD  2EC6               	goto	u3205
  5760  0ECE  0823               	movf	___lmul@multiplier+3,w
  5761  0ECF  0422               	iorwf	___lmul@multiplier+2,w
  5762  0ED0  0421               	iorwf	___lmul@multiplier+1,w
  5763  0ED1  0420               	iorwf	___lmul@multiplier,w
  5764  0ED2  1D03               	skipz
  5765  0ED3  2EA6               	goto	l2524
  5766  0ED4  082B               	movf	___lmul@product+3,w
  5767  0ED5  00A3               	movwf	?___lmul+3
  5768  0ED6  082A               	movf	___lmul@product+2,w
  5769  0ED7  00A2               	movwf	?___lmul+2
  5770  0ED8  0829               	movf	___lmul@product+1,w
  5771  0ED9  00A1               	movwf	?___lmul+1
  5772  0EDA  0828               	movf	___lmul@product,w
  5773  0EDB  00A0               	movwf	?___lmul
  5774  0EDC  0008               	return
  5775  0EDD                     __end_of___lmul:	
  5776                           
  5777                           	psect	text25
  5778  071B                     __ptext25:	
  5779 ;; *************** function ___lldiv *****************
  5780 ;; Defined at:
  5781 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  divisor         4   12[BANK0 ] unsigned long 
  5784 ;;  dividend        4   16[BANK0 ] unsigned long 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  quotient        4   20[BANK0 ] unsigned long 
  5787 ;;  counter         1   24[BANK0 ] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4   12[BANK0 ] unsigned long 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5797 ;;      Params:         0       8       0       0       0
  5798 ;;      Locals:         0       5       0       0       0
  5799 ;;      Temps:          1       0       0       0       0
  5800 ;;      Totals:         1      13       0       0       0
  5801 ;;Total ram usage:       14 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_PWM_Init
  5808 ;;		_PWM_DutyCycle
  5809 ;;		_UART_Init
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function ___lldiv
  5815  071B                     ___lldiv:	
  5816                           
  5817                           ;incstack = 0
  5818                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5819  071B  3000               	movlw	0
  5820  071C  1283               	bcf	3,5	;RP0=0, select bank0
  5821  071D  1303               	bcf	3,6	;RP1=0, select bank0
  5822  071E  00B7               	movwf	___lldiv@quotient+3
  5823  071F  3000               	movlw	0
  5824  0720  00B6               	movwf	___lldiv@quotient+2
  5825  0721  3000               	movlw	0
  5826  0722  00B5               	movwf	___lldiv@quotient+1
  5827  0723  3000               	movlw	0
  5828  0724  00B4               	movwf	___lldiv@quotient
  5829  0725  082F               	movf	___lldiv@divisor+3,w
  5830  0726  042E               	iorwf	___lldiv@divisor+2,w
  5831  0727  042D               	iorwf	___lldiv@divisor+1,w
  5832  0728  042C               	iorwf	___lldiv@divisor,w
  5833  0729  1903               	skipnz
  5834  072A  2F72               	goto	l2132
  5835  072B  01B8               	clrf	___lldiv@counter
  5836  072C  0AB8               	incf	___lldiv@counter,f
  5837  072D                     l2118:	
  5838  072D  1BAF               	btfsc	___lldiv@divisor+3,7
  5839  072E  2F3D               	goto	l2120
  5840  072F  3001               	movlw	1
  5841  0730  00F5               	movwf	??___lldiv
  5842  0731                     u2455:	
  5843  0731  1003               	clrc
  5844  0732  0DAC               	rlf	___lldiv@divisor,f
  5845  0733  0DAD               	rlf	___lldiv@divisor+1,f
  5846  0734  0DAE               	rlf	___lldiv@divisor+2,f
  5847  0735  0DAF               	rlf	___lldiv@divisor+3,f
  5848  0736  0BF5               	decfsz	??___lldiv,f
  5849  0737  2F31               	goto	u2455
  5850  0738  3001               	movlw	1
  5851  0739  00F5               	movwf	??___lldiv
  5852  073A  0875               	movf	??___lldiv,w
  5853  073B  07B8               	addwf	___lldiv@counter,f
  5854  073C  2F2D               	goto	l2118
  5855  073D                     l2120:	
  5856  073D  3001               	movlw	1
  5857  073E  00F5               	movwf	??___lldiv
  5858  073F                     u2475:	
  5859  073F  1003               	clrc
  5860  0740  0DB4               	rlf	___lldiv@quotient,f
  5861  0741  0DB5               	rlf	___lldiv@quotient+1,f
  5862  0742  0DB6               	rlf	___lldiv@quotient+2,f
  5863  0743  0DB7               	rlf	___lldiv@quotient+3,f
  5864  0744  0BF5               	decfsz	??___lldiv,f
  5865  0745  2F3F               	goto	u2475
  5866  0746  082F               	movf	___lldiv@divisor+3,w
  5867  0747  0233               	subwf	___lldiv@dividend+3,w
  5868  0748  1D03               	skipz
  5869  0749  2F54               	goto	u2485
  5870  074A  082E               	movf	___lldiv@divisor+2,w
  5871  074B  0232               	subwf	___lldiv@dividend+2,w
  5872  074C  1D03               	skipz
  5873  074D  2F54               	goto	u2485
  5874  074E  082D               	movf	___lldiv@divisor+1,w
  5875  074F  0231               	subwf	___lldiv@dividend+1,w
  5876  0750  1D03               	skipz
  5877  0751  2F54               	goto	u2485
  5878  0752  082C               	movf	___lldiv@divisor,w
  5879  0753  0230               	subwf	___lldiv@dividend,w
  5880  0754                     u2485:	
  5881  0754  1C03               	skipc
  5882  0755  2F65               	goto	l2128
  5883  0756  082C               	movf	___lldiv@divisor,w
  5884  0757  02B0               	subwf	___lldiv@dividend,f
  5885  0758  082D               	movf	___lldiv@divisor+1,w
  5886  0759  1C03               	skipc
  5887  075A  0F2D               	incfsz	___lldiv@divisor+1,w
  5888  075B  02B1               	subwf	___lldiv@dividend+1,f
  5889  075C  082E               	movf	___lldiv@divisor+2,w
  5890  075D  1C03               	skipc
  5891  075E  0F2E               	incfsz	___lldiv@divisor+2,w
  5892  075F  02B2               	subwf	___lldiv@dividend+2,f
  5893  0760  082F               	movf	___lldiv@divisor+3,w
  5894  0761  1C03               	skipc
  5895  0762  0F2F               	incfsz	___lldiv@divisor+3,w
  5896  0763  02B3               	subwf	___lldiv@dividend+3,f
  5897  0764  1434               	bsf	___lldiv@quotient,0
  5898  0765                     l2128:	
  5899  0765  3001               	movlw	1
  5900  0766                     u2495:	
  5901  0766  1003               	clrc
  5902  0767  0CAF               	rrf	___lldiv@divisor+3,f
  5903  0768  0CAE               	rrf	___lldiv@divisor+2,f
  5904  0769  0CAD               	rrf	___lldiv@divisor+1,f
  5905  076A  0CAC               	rrf	___lldiv@divisor,f
  5906  076B  3EFF               	addlw	-1
  5907  076C  1D03               	skipz
  5908  076D  2F66               	goto	u2495
  5909  076E  3001               	movlw	1
  5910  076F  02B8               	subwf	___lldiv@counter,f
  5911  0770  1D03               	btfss	3,2
  5912  0771  2F3D               	goto	l2120
  5913  0772                     l2132:	
  5914  0772  0837               	movf	___lldiv@quotient+3,w
  5915  0773  00AF               	movwf	?___lldiv+3
  5916  0774  0836               	movf	___lldiv@quotient+2,w
  5917  0775  00AE               	movwf	?___lldiv+2
  5918  0776  0835               	movf	___lldiv@quotient+1,w
  5919  0777  00AD               	movwf	?___lldiv+1
  5920  0778  0834               	movf	___lldiv@quotient,w
  5921  0779  00AC               	movwf	?___lldiv
  5922  077A  0008               	return
  5923  077B                     __end_of___lldiv:	
  5924                           
  5925                           	psect	text26
  5926  0C72                     __ptext26:	
  5927 ;; *************** function _Oscillator_Init *****************
  5928 ;; Defined at:
  5929 ;;		line 23 in file "SYST_Init.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;		None
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      void 
  5936 ;; Registers used:
  5937 ;;		status,2
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5943 ;;      Params:         0       0       0       0       0
  5944 ;;      Locals:         0       0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0
  5946 ;;      Totals:         0       0       0       0       0
  5947 ;;Total ram usage:        0 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    1
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_system_Initialize
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function _Oscillator_Init
  5959  0C72                     _Oscillator_Init:	
  5960                           
  5961                           ;SYST_Init.c: 24: OSCCON = 0x00;
  5962                           
  5963                           ;incstack = 0
  5964                           ; Regs used in _Oscillator_Init: [status,2]
  5965  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  5966  0C73  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0C74  018F               	clrf	15	;volatile
  5968                           
  5969                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  5970  0C75  0190               	clrf	16	;volatile
  5971  0C76  0008               	return
  5972  0C77                     __end_of_Oscillator_Init:	
  5973                           
  5974                           	psect	text27
  5975  06BA                     __ptext27:	
  5976 ;; *************** function _Lcd_Init *****************
  5977 ;; Defined at:
  5978 ;;		line 62 in file "lcd_Config.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, pclath, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5992 ;;      Params:         0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0
  5994 ;;      Temps:          0       2       0       0       0
  5995 ;;      Totals:         0       2       0       0       0
  5996 ;;Total ram usage:        2 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    3
  5999 ;; This function calls:
  6000 ;;		_Lcd_Cmd
  6001 ;;		_Lcd_Port
  6002 ;; This function is called by:
  6003 ;;		_system_Initialize
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _Lcd_Init
  6009  06BA                     _Lcd_Init:	
  6010                           
  6011                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6015  06BA  3000               	movlw	0
  6016  06BB  120A  158A  24FE  120A  118A  	fcall	_Lcd_Port
  6017                           
  6018                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  6019  06C0  301A               	movlw	26
  6020  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  6021  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  6022  06C3  00A3               	movwf	??_Lcd_Init+1
  6023  06C4  30F7               	movlw	247
  6024  06C5  00A2               	movwf	??_Lcd_Init
  6025  06C6                     u4227:	
  6026  06C6  0BA2               	decfsz	??_Lcd_Init,f
  6027  06C7  2EC6               	goto	u4227
  6028  06C8  0BA3               	decfsz	??_Lcd_Init+1,f
  6029  06C9  2EC6               	goto	u4227
  6030  06CA  2ECB               	nop2
  6031                           
  6032                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  6033  06CB  3003               	movlw	3
  6034  06CC  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6035                           
  6036                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  6037  06D1  3007               	movlw	7
  6038  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  6039  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  6040  06D4  00A3               	movwf	??_Lcd_Init+1
  6041  06D5  307C               	movlw	124
  6042  06D6  00A2               	movwf	??_Lcd_Init
  6043  06D7                     u4237:	
  6044  06D7  0BA2               	decfsz	??_Lcd_Init,f
  6045  06D8  2ED7               	goto	u4237
  6046  06D9  0BA3               	decfsz	??_Lcd_Init+1,f
  6047  06DA  2ED7               	goto	u4237
  6048  06DB  0000               	nop
  6049                           
  6050                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  6051  06DC  3003               	movlw	3
  6052  06DD  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6053                           
  6054                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  6055  06E2  300F               	movlw	15
  6056  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  6057  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  6058  06E5  00A3               	movwf	??_Lcd_Init+1
  6059  06E6  3047               	movlw	71
  6060  06E7  00A2               	movwf	??_Lcd_Init
  6061  06E8                     u4247:	
  6062  06E8  0BA2               	decfsz	??_Lcd_Init,f
  6063  06E9  2EE8               	goto	u4247
  6064  06EA  0BA3               	decfsz	??_Lcd_Init+1,f
  6065  06EB  2EE8               	goto	u4247
  6066                           
  6067                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  6068  06EC  3003               	movlw	3
  6069  06ED  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6070                           
  6071                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  6072  06F2  3002               	movlw	2
  6073  06F3  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6074                           
  6075                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  6076  06F8  3002               	movlw	2
  6077  06F9  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6078                           
  6079                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  6080  06FE  3008               	movlw	8
  6081  06FF  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6082                           
  6083                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  6084  0704  3000               	movlw	0
  6085  0705  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6086                           
  6087                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  6088  070A  300C               	movlw	12
  6089  070B  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6090                           
  6091                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  6092  0710  3000               	movlw	0
  6093  0711  120A  158A  2518  120A  118A  	fcall	_Lcd_Cmd
  6094                           
  6095                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  6096  0716  3006               	movlw	6
  6097  0717  120A  158A  2518   	fcall	_Lcd_Cmd
  6098  071A  0008               	return
  6099  071B                     __end_of_Lcd_Init:	
  6100                           
  6101                           	psect	text28
  6102  0D18                     __ptext28:	
  6103 ;; *************** function _Lcd_Cmd *****************
  6104 ;; Defined at:
  6105 ;;		line 32 in file "lcd_Config.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  a               1    wreg     unsigned char 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  a               1    5[COMMON] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, pclath, cstack
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6119 ;;      Params:         0       0       0       0       0
  6120 ;;      Locals:         1       0       0       0       0
  6121 ;;      Temps:          0       2       0       0       0
  6122 ;;      Totals:         1       2       0       0       0
  6123 ;;Total ram usage:        3 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    2
  6126 ;; This function calls:
  6127 ;;		_Lcd_Port
  6128 ;; This function is called by:
  6129 ;;		_Lcd_Set_Cursor
  6130 ;;		_Lcd_Init
  6131 ;;		_Lcd_Clear
  6132 ;;		_Lcd_Shift_Right
  6133 ;;		_Lcd_Shift_Left
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _Lcd_Cmd
  6139  0D18                     _Lcd_Cmd:	
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6143                           ;Lcd_Cmd@a stored from wreg
  6144  0D18  00F5               	movwf	Lcd_Cmd@a
  6145                           
  6146                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  6147  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  6148  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  6149  0D1B  1286               	bcf	6,5	;volatile
  6150                           
  6151                           ;lcd_Config.c: 34: Lcd_Port(a);
  6152  0D1C  0875               	movf	Lcd_Cmd@a,w
  6153  0D1D  120A  158A  24FE  120A  158A  	fcall	_Lcd_Port
  6154                           
  6155                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  6156  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  6157  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  6158  0D24  1606               	bsf	6,4	;volatile
  6159                           
  6160                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  6161  0D25  3006               	movlw	6
  6162  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  6163  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  6164  0D28  00A1               	movwf	??_Lcd_Cmd+1
  6165  0D29  302F               	movlw	47
  6166  0D2A  00A0               	movwf	??_Lcd_Cmd
  6167  0D2B                     u4257:	
  6168  0D2B  0BA0               	decfsz	??_Lcd_Cmd,f
  6169  0D2C  2D2B               	goto	u4257
  6170  0D2D  0BA1               	decfsz	??_Lcd_Cmd+1,f
  6171  0D2E  2D2B               	goto	u4257
  6172  0D2F  2D30               	nop2
  6173                           
  6174                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  6175  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  6177  0D32  1206               	bcf	6,4	;volatile
  6178  0D33  0008               	return
  6179  0D34                     __end_of_Lcd_Cmd:	
  6180                           
  6181                           	psect	text29
  6182  0CFE                     __ptext29:	
  6183 ;; *************** function _Lcd_Port *****************
  6184 ;; Defined at:
  6185 ;;		line 10 in file "lcd_Config.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;  a               1    wreg     unsigned char 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  a               1    4[COMMON] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6199 ;;      Params:         0       0       0       0       0
  6200 ;;      Locals:         1       0       0       0       0
  6201 ;;      Temps:          0       0       0       0       0
  6202 ;;      Totals:         1       0       0       0       0
  6203 ;;Total ram usage:        1 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_Lcd_Cmd
  6210 ;;		_Lcd_Init
  6211 ;;		_Lcd_Write_Char
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function _Lcd_Port
  6217  0CFE                     _Lcd_Port:	
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in _Lcd_Port: [wreg]
  6221                           ;Lcd_Port@a stored from wreg
  6222  0CFE  00F4               	movwf	Lcd_Port@a
  6223                           
  6224                           ;lcd_Config.c: 11: if (a & 1)
  6225  0CFF  1C74               	btfss	Lcd_Port@a,0
  6226  0D00  2D05               	goto	l116
  6227                           
  6228                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  6229  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  6230  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  6231  0D03  1586               	bsf	6,3	;volatile
  6232  0D04  2D08               	goto	l117
  6233  0D05                     l116:	
  6234                           
  6235                           ;lcd_Config.c: 13: else
  6236                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  6237  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0D07  1186               	bcf	6,3	;volatile
  6240  0D08                     l117:	
  6241                           
  6242                           ;lcd_Config.c: 16: if (a & 2)
  6243  0D08  1CF4               	btfss	Lcd_Port@a,1
  6244  0D09  2D0C               	goto	l118
  6245                           
  6246                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  6247  0D0A  1506               	bsf	6,2	;volatile
  6248  0D0B  2D0D               	goto	l119
  6249  0D0C                     l118:	
  6250                           
  6251                           ;lcd_Config.c: 18: else
  6252                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  6253  0D0C  1106               	bcf	6,2	;volatile
  6254  0D0D                     l119:	
  6255                           
  6256                           ;lcd_Config.c: 21: if (a & 4)
  6257  0D0D  1D74               	btfss	Lcd_Port@a,2
  6258  0D0E  2D11               	goto	l120
  6259                           
  6260                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  6261  0D0F  1486               	bsf	6,1	;volatile
  6262  0D10  2D12               	goto	l121
  6263  0D11                     l120:	
  6264                           
  6265                           ;lcd_Config.c: 23: else
  6266                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  6267  0D11  1086               	bcf	6,1	;volatile
  6268  0D12                     l121:	
  6269                           
  6270                           ;lcd_Config.c: 26: if (a & 8)
  6271  0D12  1DF4               	btfss	Lcd_Port@a,3
  6272  0D13  2D16               	goto	l122
  6273                           
  6274                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  6275  0D14  1406               	bsf	6,0	;volatile
  6276  0D15  0008               	return
  6277  0D16                     l122:	
  6278                           
  6279                           ;lcd_Config.c: 28: else
  6280                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  6281  0D16  1006               	bcf	6,0	;volatile
  6282  0D17  0008               	return
  6283  0D18                     __end_of_Lcd_Port:	
  6284                           
  6285                           	psect	text30
  6286  0C9E                     __ptext30:	
  6287 ;; *************** function _Interrupt_Init *****************
  6288 ;; Defined at:
  6289 ;;		line 10 in file "interrupt_Init.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		None
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6303 ;;      Params:         0       0       0       0       0
  6304 ;;      Locals:         0       0       0       0       0
  6305 ;;      Temps:          0       0       0       0       0
  6306 ;;      Totals:         0       0       0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_system_Initialize
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function _Interrupt_Init
  6319  0C9E                     _Interrupt_Init:	
  6320                           
  6321                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6322                           
  6323                           ;incstack = 0
  6324                           ; Regs used in _Interrupt_Init: []
  6325  0C9E  178B               	bsf	11,7	;volatile
  6326                           
  6327                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6328  0C9F  170B               	bsf	11,6	;volatile
  6329                           
  6330                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6331  0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  6332  0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  6333  0CA2  170C               	bsf	12,6	;volatile
  6334                           
  6335                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6336  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0CA5  130C               	bcf	12,6	;volatile
  6339                           
  6340                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6341  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
  6342  0CA7  1303               	bcf	3,6	;RP1=0, select bank1
  6343  0CA8  168C               	bsf	12,5	;volatile
  6344                           
  6345                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6346  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  6347  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  6348  0CAB  128C               	bcf	12,5	;volatile
  6349  0CAC  0008               	return
  6350  0CAD                     __end_of_Interrupt_Init:	
  6351                           
  6352                           	psect	text31
  6353  0CE5                     __ptext31:	
  6354 ;; *************** function _ADC_Init *****************
  6355 ;; Defined at:
  6356 ;;		line 13 in file "adc_Init.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6370 ;;      Params:         0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0
  6373 ;;      Totals:         0       0       0       0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_system_Initialize
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           
  6385                           ;psect for function _ADC_Init
  6386  0CE5                     _ADC_Init:	
  6387                           
  6388                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6389                           
  6390                           ;incstack = 0
  6391                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6392  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  6394  0CE7  081F               	movf	31,w	;volatile
  6395  0CE8  393F               	andlw	-193
  6396  0CE9  3840               	iorlw	64
  6397  0CEA  009F               	movwf	31	;volatile
  6398                           
  6399                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6400  0CEB  30C3               	movlw	-61
  6401  0CEC  059F               	andwf	31,f	;volatile
  6402                           
  6403                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6404  0CED  109F               	bcf	31,1	;volatile
  6405  0CEE  1C9F               	btfss	31,1	;volatile
  6406  0CEF  2CF4               	goto	u1050
  6407  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  6408  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  6409  0CF2  149F               	bsf	31,1	;volatile
  6410  0CF3  2CF7               	goto	l1402
  6411  0CF4                     u1050:	
  6412  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  6413  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  6414  0CF6  109F               	bcf	31,1	;volatile
  6415  0CF7                     l1402:	
  6416                           
  6417                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6418  0CF7  141F               	bsf	31,0	;volatile
  6419                           
  6420                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6421  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  6422  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  6423  0CFA  179F               	bsf	31,7	;volatile
  6424                           
  6425                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6426  0CFB  121F               	bcf	31,4	;volatile
  6427                           
  6428                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6429  0CFC  129F               	bcf	31,5	;volatile
  6430  0CFD  0008               	return
  6431  0CFE                     __end_of_ADC_Init:	
  6432                           
  6433                           	psect	text32
  6434  0D57                     __ptext32:	
  6435 ;; *************** function _ISR *****************
  6436 ;; Defined at:
  6437 ;;		line 25 in file "interrupt_Init.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      void 
  6444 ;; Registers used:
  6445 ;;		None
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6451 ;;      Params:         0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0
  6453 ;;      Temps:          4       0       0       0       0
  6454 ;;      Totals:         4       0       0       0       0
  6455 ;;Total ram usage:        4 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		Interrupt level 1
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           
  6465                           ;psect for function _ISR
  6466  0D57                     _ISR:	
  6467                           
  6468                           ;interrupt_Init.c: 26: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  6469  0D57  1683               	bsf	3,5	;RP0=1, select bank1
  6470  0D58  1303               	bcf	3,6	;RP1=0, select bank1
  6471  0D59  1E8C               	btfss	12,5	;volatile
  6472  0D5A  2D60               	goto	i1l225
  6473  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  6475  0D5D  1E8C               	btfss	12,5	;volatile
  6476  0D5E  2D60               	goto	i1l225
  6477                           
  6478                           ;interrupt_Init.c: 27: PIR1bits.RCIF = 0;
  6479  0D5F  128C               	bcf	12,5	;volatile
  6480  0D60                     i1l225:	
  6481                           
  6482                           ;interrupt_Init.c: 28: }
  6483                           ;interrupt_Init.c: 29: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  6484  0D60  1683               	bsf	3,5	;RP0=1, select bank1
  6485  0D61  1303               	bcf	3,6	;RP1=0, select bank1
  6486  0D62  1F0C               	btfss	12,6	;volatile
  6487  0D63  2D69               	goto	i1l226
  6488  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  6489  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  6490  0D66  1F0C               	btfss	12,6	;volatile
  6491  0D67  2D69               	goto	i1l226
  6492                           
  6493                           ;interrupt_Init.c: 30: PIR1bits.ADIF = 0;
  6494  0D68  130C               	bcf	12,6	;volatile
  6495  0D69                     i1l226:	
  6496                           
  6497                           ;interrupt_Init.c: 31: }
  6498                           ;interrupt_Init.c: 32: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  6499  0D69  1A8B               	btfsc	11,5	;volatile
  6500  0D6A  1D0B               	btfss	11,2	;volatile
  6501  0D6B  2D6D               	goto	i1l227
  6502                           
  6503                           ;interrupt_Init.c: 33: INTCONbits.T0IF = 0;
  6504  0D6C  110B               	bcf	11,2	;volatile
  6505  0D6D                     i1l227:	
  6506                           
  6507                           ;interrupt_Init.c: 34: }
  6508                           ;interrupt_Init.c: 35: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  6509  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  6510  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  6511  0D6F  1D8C               	btfss	12,3	;volatile
  6512  0D70  2D76               	goto	i1l229
  6513  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  6514  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  6515  0D73  1D8C               	btfss	12,3	;volatile
  6516  0D74  2D76               	goto	i1l229
  6517                           
  6518                           ;interrupt_Init.c: 36: PIR1bits.SSPIF = 0;
  6519  0D75  118C               	bcf	12,3	;volatile
  6520  0D76                     i1l229:	
  6521  0D76  0873               	movf	??_ISR+3,w
  6522  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0D78  00FF               	movwf	127
  6524  0D79  0872               	movf	??_ISR+2,w
  6525  0D7A  008A               	movwf	10
  6526  0D7B  0871               	movf	??_ISR+1,w
  6527  0D7C  0084               	movwf	4
  6528  0D7D  0E70               	swapf	??_ISR^(0+-128),w
  6529  0D7E  0083               	movwf	3
  6530  0D7F  0EFE               	swapf	126,f
  6531  0D80  0E7E               	swapf	126,w
  6532  0D81  0009               	retfie
  6533  0D82                     __end_of_ISR:	
  6534  007E                     btemp	set	126	;btemp
  6535  007E                     wtemp0	set	126
  6536                           
  6537                           	psect	intentry
  6538  0004                     __pintentry:	
  6539                           ;incstack = 0
  6540                           ; Regs used in _ISR: []
  6541                           
  6542  0004                     interrupt_function:	
  6543  007E                     saved_w	set	btemp
  6544  0004  00FE               	movwf	btemp
  6545  0005  0E03               	swapf	3,w
  6546  0006  00F0               	movwf	??_ISR
  6547  0007  0804               	movf	4,w
  6548  0008  00F1               	movwf	??_ISR+1
  6549  0009  080A               	movf	10,w
  6550  000A  00F2               	movwf	??_ISR+2
  6551  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6552  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6553  000D  087F               	movf	btemp+1,w
  6554  000E  00F3               	movwf	??_ISR+3
  6555  000F  120A  158A  2D57   	ljmp	_ISR


Data Sizes:
    Strings     37
    Constant    10
    Data        12
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     17      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    dataBuffer	PTR unsigned long  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    student_Name	PTR unsigned char  size(1) Largest target is 10
		 -> STR_4(CODE[10]), 

    student_Number	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    temp_Display@TEMP	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    Lcd_write@string	PTR unsigned char  size(2) Largest target is 13
		 -> sTemperature(BANK1[2]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _temp_Measurement->___lwdiv
    _temp_Measurement->___lwtoft
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _temp_Display->_sprintf
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   20309
                                             16 BANK1      1     1      0
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                         4     4      0   17757
                                             12 BANK1      4     4      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13957
                                             70 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              4 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     448
                                             56 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                             11 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             27 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             43 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2529
                                             77 BANK0      3     0      3
                                              0 BANK1     12    12      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            7     5      2     538
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     11      25       7       46.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7F      12        0.0%
ABS                  0      0      7F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 20 18:07:57 2019

          ??_Interrupt_Init 0074      __size_of_PWM_DutyCycle 006F                           pc 0002  
               __CFG_CP$OFF 0000                          l19 0D88                          fsr 0004  
       ___wmul@multiplicand 0022                ___ftadd@exp1 0057                ___ftadd@exp2 0056  
               __CFG_LVP$ON 0000                ___ftadd@sign 0055                         l120 0D11  
                       l121 0D12                         l122 0D16                         l116 0D05  
                       l117 0D08                         l118 0D0C                         l119 0D0D  
                       l194 02EA                         l474 012A                         l730 0684  
                       l821 05C3                         l569 0D40                         l737 0699  
                       l761 027B                         l738 06A1                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 0D57                         _adc 00C1  
                       fsr0 0004                         indf 0000                __CFG_IESO$ON 0000  
              __CFG_FOSC$HS 0000                        ?_ISR 0070                ___ftdiv@cntr 0045  
              ___ftdiv@sign 004A                        l2120 073D                        l1402 0CF7  
                      l2132 0772                        l2118 072D                        l2128 0765  
                      l2510 0D36                        l2504 0C9C                        l2442 065D  
                      l2602 02C2                        l2524 0EA6                        l2452 0689  
                      l2444 0669                        l2612 04AF                        l2454 0693  
                      l2446 066E                        l2438 0656                        l2542 01FC  
                      l2528 0EBC                        l2552 0212                        l2640 0529  
                      l2632 050A                        l2704 0569                        l2570 0241  
                      l2546 0203                        l2618 04C5                        l2730 05B8  
                      l2722 059B                        l2572 024D                        l2564 022C  
                      l2660 03F2                        l2732 05C6                        l2724 05AB  
                      l2750 0E28                        l2910 011C                        l2582 026B  
                      l2574 0252                        l2654 03DC                        l2752 0E36  
                      l2920 014D                        l2904 00FB                        l2592 029F  
                      l2584 0277                        l2576 0256                        l2672 0431  
                      l2736 05D4                        l2818 0FD7                        l2834 0EE1  
                      l2762 0E57                        l2922 0151                        l2780 0DD7  
                      l2588 028D                        l2684 0459                        l2676 0441  
                      l2758 0E4C                        l2774 0DBB                        l2942 0179  
                      l2934 0175                        l2918 0149                        l2870 005E  
                      l2854 03B1                        l2776 0DC9                        l2784 0DE2  
                      l2928 0166                        l2944 003A                        l2688 0469  
                      l2848 030D                        l2946 01CC                        l2858 03C2  
                      l2876 0075                        l2980 0D99                        l2886 00C3  
                      l2990 0D98                        l2982 0D8B                        l2888 00DC  
                      l2984 0D8D                        l2898 00F5                        l2986 0D8F  
                      l2988 0D91                        STR_1 081A                        STR_2 083B  
                      STR_3 0827                        STR_4 0831                        u1050 0CF4  
                      u3005 0662                        u3105 0DF8                        u3025 067D  
                      u3205 0EC6                        u3045 068C                        u4015 030B  
                      u3145 0D41                        u3155 0D48                        u3315 022D  
                      u4035 03C0                        u3085 06A8                        u3405 026C  
                      u2455 0731                        u4207 0E08                        u4135 0139  
                      u4217 0E18                        u3345 0242                        u3505 050B  
                      u4227 06C6                        u2475 073F                        u3195 0EBE  
                      u3515 051C                        u4237 06D7                        u2485 0754  
                      u2645 0F2C                        u3525 052A                        u3605 0442  
                      u4247 06E8                        u2495 0766                        u4095 0112  
                      u3375 0257                        u3615 044A                        u4257 0D2B  
                      u2675 0E8E                        u3485 04D7                        u3565 03FE  
                      u3725 059C                        u4197 02E2                        u3815 0E37  
                      u3495 04E9                        u3655 046A                        u3575 0410  
                      u3825 0E43                        u3665 0472                        u3915 062A  
                      u3835 0E4D                        u3755 05BA                        u3925 0641  
                      u3695 0570                        u3945 0FBC                        u3865 0DBE  
                      u3795 0E2B                        u3965 0FE5                        u3885 0DCF  
                      u3895 0DD8                        _TMR0 0001                __CFG_WRT$OFF 0000  
             __CFG_FCMEN$ON 0000                        _main 0D82                ___ftpack@arg 0020  
              ___ftpack@exp 0023                        btemp 007E            __end_of_ADC_Init 0CFE  
                      start 0012       _temp_Measurement$1672 0068             __end_of_Lcd_Cmd 0D34  
             __CFG_MCLRE$ON 0000                ___ftmul@cntr 0039                ___ftmul@sign 003A  
         ??_Oscillator_Init 0074                       ??_ISR 0070                ___fttol@exp1 0065  
              ___fttol@lval 0061                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 02DC               __CFG_WDTE$OFF 0000             __end_of___ftdiv 054F  
           __end_of___lldiv 077B             __end_of___ftmul 0497             __end_of___fttol 05DD  
           __end_of___lwdiv 0E5C                       i1l225 0D60                       i1l226 0D69  
                     i1l227 0D6D                       i1l229 0D76             __end_of___lwmod 0DE7  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009     __size_of_Lcd_Set_Cursor 0052                       _TRISB 0086  
                     _TRISD 0088                       _TXREG 0019         ___lmul@multiplicand 0024  
        __size_of_UART_Init 0040          __size_of_TMR0_Init 000F               _PWM_DutyCycle 05DD  
           __end_of_dpowers 081A             __end_of_isdigit 0C9E               ___ftpack@sign 0024  
          __end_of_SPI_Init 0C90              __CFG_BOREN$OFF 0000                       pclath 000A  
          __end_of_PWM_Init 0F63                       status 0003                       wtemp0 007E  
           __end_of_sprintf 01D3            __end_of_Lcd_Init 071B            __end_of_Lcd_Port 0D18  
           __initialization 0015                __end_of_main 0DB3                _student_Name 00BB  
                    ??_main 00B0               ___fttol@sign1 0060              ?_PWM_DutyCycle 0039  
        __size_of_Lcd_write 0041                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _EECON2 018D  
          __end_of___ftpack 06BA                      _ANSELH 0189            __end_of___lwtoft 0CE5  
                    _OSCCON 008F                   ??_Lcd_Cmd 0020     __size_of_Lcd_Write_Char 0037  
                    _SSPBUF 0013              __CFG_PWRTE$OFF 0000           __end_of_UART_Init 0E9C  
         __end_of_TMR0_Init 0CBC                      ___lmul 0E9C                      ___wmul 0D34  
                 ??___ftadd 0051                   ??___ftdiv 0041                   ??___lldiv 0075  
                 ??___ftmul 0031                   ??___fttol 005C                   ??___lwdiv 0074  
                 ??___lwmod 0075       ___ftmul@f3_as_product 0036           ?_temp_Measurement 0070  
                 ??_isdigit 0074                   ?_ADC_Init 0070                      saved_w 007E  
        ??_temp_Measurement 0066                   ??_sprintf 00A0             Lcd_Set_Cursor@y 0027  
           Lcd_Set_Cursor@z 0026     __end_of__initialization 002F                  ___ftadd@f1 004B  
                ___ftadd@f2 004E                  ___ftdiv@f1 003E                  ___ftdiv@f2 003B  
                ___ftdiv@f3 0046                  ___ftmul@f1 002B                  ___ftmul@f2 002E  
                ___fttol@f1 0058              __pcstackCOMMON 0070                __pidataBANK1 0C77  
         __end_of_Lcd_write 0F1E                   ?_SPI_Init 0070                  ___lwtoft@c 0028  
                 ?_PWM_Init 0039              _Lcd_Set_Cursor 0FAE             ??_PWM_DutyCycle 003D  
            _OPTION_REGbits 0081                  ??_ADC_Init 0074                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  _dataBuffer 0077                sprintf@width 00A9  
                __pbssBANK1 00BD             _Oscillator_Init 0C72                  __pmaintext 0D82  
                   ?___lmul 0020                     ?___wmul 0020                  __pintentry 0004  
            ___lmul@product 0028                   ?___ftpack 0020      __end_of_Lcd_Set_Cursor 1000  
                ??_SPI_Init 0074                  ??_PWM_Init 003D                   ?___lwtoft 0028  
                   _GO_DONE 00F9                     _OSCTUNE 0090                  ??_Lcd_Init 0022  
                ??_Lcd_Port 0074                  __stringtab 0800              _Lcd_Write_Char 0DE7  
                   _Lcd_Cmd 0D18               ?_temp_Display 0070             __size_of___lmul 0041  
                   ___ftadd 01D3                     ___ftdiv 0497                     ___lldiv 071B  
           __size_of___wmul 0023                     ___ftmul 03C4                     ___fttol 054F  
                   ___lwdiv 0E1E                     ___lwmod 0DB3                  ??___ftpack 0025  
                 _ANSELbits 0188             ?_Lcd_Set_Cursor 0022                     __ptext1 077B  
                   __ptext2 02DC                     __ptext3 0CCD                     __ptext4 054F  
                   __ptext5 03C4                     __ptext6 0497                     __ptext7 01D3  
                   __ptext8 064C                     __ptext9 0033                     _g_state 0079  
                ??___lwtoft 0074                  _pinManager 07D3                __size_of_ISR 002B  
                   _dpowers 0810                   _T2CONbits 0012                     _rawData 00BD  
   __size_of_Interrupt_Init 000F                     _isdigit 0C90     __end_of_Oscillator_Init 0C77  
                   _sprintf 0033      __end_of_Lcd_Write_Char 0E1E        end_of_initialization 002F  
            ??_temp_Display 00AC             ___lldiv@divisor 002C            temp_Display@TEMP 00AF  
           ___lldiv@counter 0038                   _RCSTAbits 0018                   Lcd_Port@a 0074  
                 _UART_Init 0E5C                   _TMR0_Init 0CAD                   _PORTAbits 0005  
                 _PORTBbits 0006                   _TRISAbits 0085                   _TRISBbits 0086  
                 _TRISCbits 0087          PWM_Init@iFrequency 0039           _system_Initialize 0F63  
         __size_of_ADC_Init 0019          ?_system_Initialize 0070             ?_Lcd_Write_Char 0070  
               _CCP1CONbits 0017                 ___ftdiv@exp 0049   __size_of_temp_Measurement 00E8  
                 _TXSTAbits 0098                _sTemperature 00C3         ??_system_Initialize 0076  
               ___ftmul@exp 0035              __end_of___lmul 0EDD              __end_of___wmul 0D57  
                ?_UART_Init 0039                 _BAUDCTLbits 0187                  ?_TMR0_Init 0070  
                 _Lcd_write 0EDD                 ?_pinManager 0070   __end_of_system_Initialize 0FAE  
         __size_of_SPI_Init 000D           __size_of_PWM_Init 0045         start_initialization 0015  
          ?_Oscillator_Init 0070                 __end_of_ISR 0D82       _data_TransferComplete 0076  
            _student_Number 00BC           __size_of_Lcd_Init 0061           __size_of_Lcd_Port 001A  
                  ??___lmul 0074                    ??___wmul 0074                  init_fetch0 0CBC  
               __pdataBANK1 00B1             Lcd_Write_Char@a 0022             Lcd_Write_Char@y 0021  
             _segment_Array 00B1        __end_of_temp_Display 07D3                  ?_Lcd_write 0023  
    temp_Measurement@sample 006B              _Interrupt_Init 0C9E           __size_of___ftpack 006E  
               __pbssCOMMON 0076                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0       __end_of_PWM_DutyCycle 064C  
              _isdigit$1419 0074                    ?_Lcd_Cmd 0070                 sprintf@flag 00A5  
               sprintf@prec 00A4         __size_of_pinManager 002B            ___lwdiv@dividend 0022  
          ??_Lcd_Set_Cursor 0023                    ?___ftadd 004B                    ?___ftdiv 003B  
                  ?___lldiv 002C                    ?___ftmul 002B                    ?___fttol 0058  
                  ?___lwdiv 0020                    ?___lwmod 0027                 ??_UART_Init 003B  
    __end_of_Interrupt_Init 0CAD                 ??_TMR0_Init 0074                   __pstrings 0800  
__size_of_system_Initialize 004B                    ?_isdigit 0070             Lcd_write@string 0023  
                  _ADC_Init 0CE5     PWM_DutyCycle@iDutyCycle 0039            ___lwdiv@quotient 0025  
                  ?_sprintf 006D           interrupt_function 0004              ___wmul@product 0074  
          _temp_Measurement 02DC                    _PIE1bits 008C                    Lcd_Cmd@a 0075  
                  _PIR1bits 000C           UART_Init@baudRate 0039                    _SPI_Init 0C83  
           ?_Interrupt_Init 0070                 ??_Lcd_write 0025                  _ADCON0bits 001F  
               __stringbase 080F                  _ADCON1bits 009F                    _PWM_Init 0F1E  
         ___wmul@multiplier 0020            ??_Lcd_Write_Char 0075                    _Lcd_Init 06BA  
                  _Lcd_Port 0CFE           ___lmul@multiplier 0020        Lcd_Set_Cursor@column 0022  
          __size_of_Lcd_Cmd 001C                  _EECON1bits 018C       __size_of_temp_Display 0058  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___lldiv 0060  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 064C          __end_of__stringtab 0810  
              ??_pinManager 0074                    ___lwtoft 0CCD                  sprintf@val 00A6  
          __size_of_isdigit 000E             ___lwdiv@divisor 0020             ___lwdiv@counter 0024  
                  __ptext10 0C90                    __ptext11 0D34                    __ptext20 0CAD  
                  __ptext12 0DB3                    __ptext21 0C83                    __ptext13 0E1E  
                  __ptext30 0C9E                    __ptext22 0F1E                    __ptext14 0EDD  
                  __ptext31 0CE5                    __ptext23 05DD                    __ptext15 0DE7  
                  __ptext32 0D57                    __ptext24 0E9C                    __ptext16 0FAE  
                  __ptext25 071B                    __ptext17 0F63                    __ptext26 0C72  
                  __ptext18 07D3                    __ptext27 06BA                    __ptext19 0E5C  
                  __ptext28 0D18                    __ptext29 0CFE           __CFG_BOR4V$BOR40V 0000  
          __size_of_sprintf 01A0               __size_of_main 0031                _temp_Display 077B  
        __end_of_pinManager 07FE                  _INTCONbits 000B                    init_ram0 0CC0  
                  isdigit@c 0075          Lcd_Write_Char@temp 0020                    intlevel1 0000  
                 sprintf@ap 00A3                   sprintf@sp 00A8    __size_of_Oscillator_Init 0005  
          ___lwmod@dividend 0029            ___lldiv@dividend 0030                   stringcode 080A  
        Lcd_Set_Cursor@temp 0028    __end_of_temp_Measurement 03C4                 _temperature 0078  
                  sprintf@c 00AB                    sprintf@f 006D            ___lldiv@quotient 0034  
           ___lwmod@divisor 0027            _segment_Variable 00BF             ___lwmod@counter 002B  
                  stringdir 080A                    stringtab 0800           Lcd_Set_Cursor@raw 0025  
                Lcd_write@i 0028                  _SSPCONbits 0014  
