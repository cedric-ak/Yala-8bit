

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 16 17:16:19 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0000                     	;# 
   476  0001                     	;# 
   477  0002                     	;# 
   478  0003                     	;# 
   479  0004                     	;# 
   480  0005                     	;# 
   481  0006                     	;# 
   482  0007                     	;# 
   483  0008                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0088                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  0105                     	;# 
   539  0107                     	;# 
   540  0108                     	;# 
   541  0109                     	;# 
   542  010C                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0187                     	;# 
   549  0188                     	;# 
   550  0189                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  000E                     	;# 
   569  000F                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  0081                     	;# 
   589  0085                     	;# 
   590  0086                     	;# 
   591  0087                     	;# 
   592  0088                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  0081                     	;# 
   667  0085                     	;# 
   668  0086                     	;# 
   669  0087                     	;# 
   670  0088                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  0105                     	;# 
   695  0107                     	;# 
   696  0108                     	;# 
   697  0109                     	;# 
   698  010C                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  0185                     	;# 
   704  0187                     	;# 
   705  0188                     	;# 
   706  0189                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  000E                     	;# 
   724  000E                     	;# 
   725  000F                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0014                     	;# 
   731  0015                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001B                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  0081                     	;# 
   745  0085                     	;# 
   746  0086                     	;# 
   747  0087                     	;# 
   748  0088                     	;# 
   749  0089                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  0105                     	;# 
   773  0107                     	;# 
   774  0108                     	;# 
   775  0109                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0185                     	;# 
   782  0187                     	;# 
   783  0188                     	;# 
   784  0189                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000D                     	;# 
   801  000E                     	;# 
   802  000E                     	;# 
   803  000F                     	;# 
   804  0010                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0013                     	;# 
   808  0014                     	;# 
   809  0015                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0017                     	;# 
   813  0018                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  001D                     	;# 
   820  001E                     	;# 
   821  001F                     	;# 
   822  0081                     	;# 
   823  0085                     	;# 
   824  0086                     	;# 
   825  0087                     	;# 
   826  0088                     	;# 
   827  0089                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  008F                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0093                     	;# 
   837  0093                     	;# 
   838  0094                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0097                     	;# 
   842  0098                     	;# 
   843  0099                     	;# 
   844  009A                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  0105                     	;# 
   851  0107                     	;# 
   852  0108                     	;# 
   853  0109                     	;# 
   854  010C                     	;# 
   855  010C                     	;# 
   856  010D                     	;# 
   857  010E                     	;# 
   858  010F                     	;# 
   859  0185                     	;# 
   860  0187                     	;# 
   861  0188                     	;# 
   862  0189                     	;# 
   863  018C                     	;# 
   864  018D                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  000E                     	;# 
   880  000E                     	;# 
   881  000F                     	;# 
   882  0010                     	;# 
   883  0011                     	;# 
   884  0012                     	;# 
   885  0013                     	;# 
   886  0014                     	;# 
   887  0015                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0017                     	;# 
   891  0018                     	;# 
   892  0019                     	;# 
   893  001A                     	;# 
   894  001B                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001D                     	;# 
   898  001E                     	;# 
   899  001F                     	;# 
   900  0081                     	;# 
   901  0085                     	;# 
   902  0086                     	;# 
   903  0087                     	;# 
   904  0088                     	;# 
   905  0089                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  008E                     	;# 
   909  008F                     	;# 
   910  0090                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0093                     	;# 
   915  0093                     	;# 
   916  0094                     	;# 
   917  0095                     	;# 
   918  0096                     	;# 
   919  0097                     	;# 
   920  0098                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009C                     	;# 
   925  009D                     	;# 
   926  009E                     	;# 
   927  009F                     	;# 
   928  0105                     	;# 
   929  0107                     	;# 
   930  0108                     	;# 
   931  0109                     	;# 
   932  010C                     	;# 
   933  010C                     	;# 
   934  010D                     	;# 
   935  010E                     	;# 
   936  010F                     	;# 
   937  0185                     	;# 
   938  0187                     	;# 
   939  0188                     	;# 
   940  0189                     	;# 
   941  018C                     	;# 
   942  018D                     	;# 
   943                           
   944                           	psect	idataBANK1
   945  0D07                     __pidataBANK1:	
   946                           
   947                           ;initializer for temp_Display@F2019
   948  0D07  3454               	retlw	84
   949  0D08  3465               	retlw	101
   950  0D09  346D               	retlw	109
   951  0D0A  3470               	retlw	112
   952  0D0B  3465               	retlw	101
   953  0D0C  3472               	retlw	114
   954  0D0D  3461               	retlw	97
   955  0D0E  3474               	retlw	116
   956  0D0F  3475               	retlw	117
   957  0D10  3472               	retlw	114
   958  0D11  3465               	retlw	101
   959  0D12  343A               	retlw	58
   960  0D13  3400               	retlw	0
   961                           
   962                           ;initializer for _segment_Array
   963  0D14  343F               	retlw	63
   964  0D15  3406               	retlw	6
   965  0D16  345B               	retlw	91
   966  0D17  344F               	retlw	79
   967  0D18  3466               	retlw	102
   968  0D19  346D               	retlw	109
   969  0D1A  347D               	retlw	125
   970  0D1B  3407               	retlw	7
   971  0D1C  347F               	retlw	127
   972  0D1D  346F               	retlw	111
   973                           
   974                           	psect	strings
   975  0800                     __pstrings:	
   976  0800                     stringtab:	
   977  0800                     __stringtab:	
   978  0800                     stringcode:	
   979                           ;	String table - string pointers are 1 byte each
   980                           
   981  0800                     stringdir:	
   982  0800  3008               	movlw	high stringdir
   983  0801  008A               	movwf	10
   984  0802  0804               	movf	4,w
   985  0803  0A84               	incf	4,f
   986  0804  0782               	addwf	2,f
   987  0805                     __stringbase:	
   988  0805  3400               	retlw	0
   989  0806                     __end_of__stringtab:	
   990  0806                     _dpowers:	
   991  0806  3401               	retlw	1
   992  0807  3400               	retlw	0
   993  0808  340A               	retlw	10
   994  0809  3400               	retlw	0
   995  080A  3464               	retlw	100
   996  080B  3400               	retlw	0
   997  080C  34E8               	retlw	232
   998  080D  3403               	retlw	3
   999  080E  3410               	retlw	16
  1000  080F  3427               	retlw	39
  1001  0810                     __end_of_dpowers:	
  1002  0001                     _TMR0	set	1
  1003  001A                     _RCREG	set	26
  1004  0019                     _TXREG	set	25
  1005  0018                     _RCSTAbits	set	24
  1006  0014                     _SSPCONbits	set	20
  1007  0013                     _SSPBUF	set	19
  1008  0005                     _PORTAbits	set	5
  1009  0012                     _T2CONbits	set	18
  1010  0015                     _CCPR1L	set	21
  1011  0017                     _CCP1CONbits	set	23
  1012  000B                     _INTCONbits	set	11
  1013  001E                     _ADRESH	set	30
  1014  000C                     _PIR1bits	set	12
  1015  001F                     _ADCON0bits	set	31
  1016  0006                     _PORTBbits	set	6
  1017  0009                     _PORTE	set	9
  1018  0008                     _PORTD	set	8
  1019  0007                     _PORTC	set	7
  1020  0006                     _PORTB	set	6
  1021  0005                     _PORTA	set	5
  1022  00F9                     _GO_DONE	set	249
  1023  0081                     _OPTION_REGbits	set	129
  1024  0099                     _SPBRG	set	153
  1025  0098                     _TXSTAbits	set	152
  1026  0092                     _PR2	set	146
  1027  008C                     _PIE1bits	set	140
  1028  009E                     _ADRESL	set	158
  1029  009F                     _ADCON1bits	set	159
  1030  0090                     _OSCTUNE	set	144
  1031  008F                     _OSCCON	set	143
  1032  0085                     _TRISAbits	set	133
  1033  0087                     _TRISCbits	set	135
  1034  0086                     _TRISBbits	set	134
  1035  0086                     _TRISB	set	134
  1036  0088                     _TRISD	set	136
  1037  0187                     _BAUDCTLbits	set	391
  1038  0188                     _ANSELbits	set	392
  1039  0189                     _ANSELH	set	393
  1040  0810                     STR_1:	
  1041  0810  3425               	retlw	37	;'%'
  1042  0811  3433               	retlw	51	;'3'
  1043  0812  3464               	retlw	100	;'d'
  1044  0813  3400               	retlw	0
  1045                           
  1046                           ; #config settings
  1047  0000                     
  1048                           	psect	cinit
  1049  0015                     start_initialization:	
  1050  0015                     __initialization:	
  1051                           
  1052                           ; Initialize objects allocated to BANK1
  1053  0015  1383               	bcf	3,7	;select IRP bank0
  1054  0016  30D4               	movlw	low (__pdataBANK1+23)
  1055  0017  00FD               	movwf	btemp+-1
  1056  0018  300D               	movlw	high __pidataBANK1
  1057  0019  00FE               	movwf	btemp
  1058  001A  3007               	movlw	low __pidataBANK1
  1059  001B  00FF               	movwf	btemp+1
  1060  001C  30BD               	movlw	low __pdataBANK1
  1061  001D  0084               	movwf	4
  1062  001E  120A  158A  24FA   	fcall	init_ram0
  1063                           
  1064                           ; Clear objects allocated to BANK1
  1065  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1067  0023  01D4               	clrf	__pbssBANK1& (0+127)
  1068  0024  01D5               	clrf	(__pbssBANK1+1)& (0+127)
  1069  0025  01D6               	clrf	(__pbssBANK1+2)& (0+127)
  1070  0026  01D7               	clrf	(__pbssBANK1+3)& (0+127)
  1071  0027  01D8               	clrf	(__pbssBANK1+4)& (0+127)
  1072  0028  01D9               	clrf	(__pbssBANK1+5)& (0+127)
  1073                           
  1074                           ; Clear objects allocated to BANK0
  1075  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1076  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1077  002B  01EE               	clrf	__pbssBANK0& (0+127)
  1078                           
  1079                           ; Clear objects allocated to COMMON
  1080  002C  01F7               	clrf	__pbssCOMMON& (0+127)
  1081  002D  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1082  002E  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1083  002F                     end_of_initialization:	
  1084                           ;End of C runtime variable initialization code
  1085                           
  1086  002F                     __end_of__initialization:	
  1087  002F  0183               	clrf	3
  1088  0030  120A  158A  2CB2   	ljmp	_main	;jump to C main() function
  1089                           
  1090                           	psect	bssCOMMON
  1091  0077                     __pbssCOMMON:	
  1092  0077                     _adc:	
  1093  0077                     	ds	2
  1094  0079                     _g_state:	
  1095  0079                     	ds	1
  1096                           
  1097                           	psect	bssBANK0
  1098  006E                     __pbssBANK0:	
  1099  006E                     _temperature:	
  1100  006E                     	ds	1
  1101                           
  1102                           	psect	bssBANK1
  1103  00D4                     __pbssBANK1:	
  1104  00D4                     _rawData:	
  1105  00D4                     	ds	2
  1106  00D6                     _segment_Variable:	
  1107  00D6                     	ds	2
  1108  00D8                     _sTemperature:	
  1109  00D8                     	ds	2
  1110                           
  1111                           	psect	dataBANK1
  1112  00BD                     __pdataBANK1:	
  1113  00BD                     temp_Display@F2019:	
  1114  00BD                     	ds	13
  1115  00CA                     _segment_Array:	
  1116  00CA                     	ds	10
  1117                           
  1118                           	psect	inittext
  1119  0CF6                     init_fetch0:	
  1120                           ;	Called with low address in FSR and high address in W
  1121                           
  1122  0CF6  087E               	movf	126,w
  1123  0CF7  008A               	movwf	10
  1124  0CF8  087F               	movf	127,w
  1125  0CF9  0082               	movwf	2
  1126  0CFA                     init_ram0:	
  1127                           ;Called with:
  1128                           ;	high address of idata address in btemp 
  1129                           ;	low address of idata address in btemp+1 
  1130                           ;	low address of data in FSR
  1131                           ;	high address + 1 of data in btemp-1
  1132                           
  1133  0CFA  24F6  120A  158A   	fcall	init_fetch0
  1134  0CFD  0080               	movwf	0
  1135  0CFE  0A84               	incf	4,f
  1136  0CFF  0804               	movf	4,w
  1137  0D00  067D               	xorwf	125,w
  1138  0D01  1903               	btfsc	3,2
  1139  0D02  3400               	retlw	0
  1140  0D03  0AFF               	incf	127,f
  1141  0D04  1903               	btfsc	3,2
  1142  0D05  0AFE               	incf	126,f
  1143  0D06  2CFA               	goto	init_ram0
  1144                           
  1145                           	psect	cstackBANK1
  1146  00A0                     __pcstackBANK1:	
  1147  00A0                     ??_sprintf:	
  1148                           
  1149                           ; 1 bytes @ 0x0
  1150  00A0                     	ds	3
  1151  00A3                     sprintf@ap:	
  1152                           
  1153                           ; 1 bytes @ 0x3
  1154  00A3                     	ds	1
  1155  00A4                     sprintf@prec:	
  1156                           
  1157                           ; 1 bytes @ 0x4
  1158  00A4                     	ds	1
  1159  00A5                     sprintf@flag:	
  1160                           
  1161                           ; 1 bytes @ 0x5
  1162  00A5                     	ds	1
  1163  00A6                     sprintf@val:	
  1164                           
  1165                           ; 2 bytes @ 0x6
  1166  00A6                     	ds	2
  1167  00A8                     sprintf@sp:	
  1168                           
  1169                           ; 1 bytes @ 0x8
  1170  00A8                     	ds	1
  1171  00A9                     sprintf@width:	
  1172                           
  1173                           ; 2 bytes @ 0x9
  1174  00A9                     	ds	2
  1175  00AB                     sprintf@c:	
  1176                           
  1177                           ; 1 bytes @ 0xB
  1178  00AB                     	ds	1
  1179  00AC                     ??_temp_Display:	
  1180                           
  1181                           ; 1 bytes @ 0xC
  1182  00AC                     	ds	4
  1183  00B0                     temp_Display@TEMP:	
  1184                           
  1185                           ; 13 bytes @ 0x10
  1186  00B0                     	ds	13
  1187                           
  1188                           	psect	cstackCOMMON
  1189  0070                     __pcstackCOMMON:	
  1190  0070                     ?_isdigit:	
  1191  0070                     ?_system_Initialize:	
  1192                           ; 1 bit 
  1193                           
  1194  0070                     ?_temp_Display:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_Oscillator_Init:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_Interrupt_Init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_Lcd_Init:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_ADC_Init:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_TMR0_Init:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_SPI_Init:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_pinManager:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_Lcd_Port:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_Lcd_Cmd:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_Lcd_Write_Char:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_Lcd_write:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_temp_Measurement:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_ISR:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ??_ISR:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_main:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242                           
  1243                           ; 2 bytes @ 0x0
  1244  0070                     	ds	4
  1245  0074                     ??_Oscillator_Init:	
  1246  0074                     ??_Interrupt_Init:	
  1247                           ; 1 bytes @ 0x4
  1248                           
  1249  0074                     ??_ADC_Init:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0074                     ??_TMR0_Init:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0074                     ??_SPI_Init:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     ??_isdigit:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261  0074                     ??___ftpack:	
  1262                           ; 1 bytes @ 0x4
  1263                           
  1264  0074                     ??_pinManager:	
  1265                           ; 1 bytes @ 0x4
  1266                           
  1267  0074                     ??_Lcd_Port:	
  1268                           ; 1 bytes @ 0x4
  1269                           
  1270  0074                     ??___wmul:	
  1271                           ; 1 bytes @ 0x4
  1272                           
  1273  0074                     ??___lmul:	
  1274                           ; 1 bytes @ 0x4
  1275                           
  1276  0074                     ??___lwdiv:	
  1277                           ; 1 bytes @ 0x4
  1278                           
  1279  0074                     Lcd_Port@a:	
  1280                           ; 1 bytes @ 0x4
  1281                           
  1282  0074                     _isdigit$1267:	
  1283                           ; 1 bytes @ 0x4
  1284                           
  1285  0074                     ___wmul@product:	
  1286                           ; 1 bytes @ 0x4
  1287                           
  1288                           
  1289                           ; 2 bytes @ 0x4
  1290  0074                     	ds	1
  1291  0075                     ??_Lcd_Cmd:	
  1292  0075                     ??_Lcd_Write_Char:	
  1293                           ; 1 bytes @ 0x5
  1294                           
  1295  0075                     ??___lldiv:	
  1296                           ; 1 bytes @ 0x5
  1297                           
  1298  0075                     ??___lwmod:	
  1299                           ; 1 bytes @ 0x5
  1300                           
  1301  0075                     isdigit@c:	
  1302                           ; 1 bytes @ 0x5
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x5
  1306  0075                     	ds	1
  1307  0076                     ??_Lcd_write:	
  1308  0076                     ___lwmod@counter:	
  1309                           ; 1 bytes @ 0x6
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x6
  1313  0076                     	ds	1
  1314  0077                     ??_system_Initialize:	
  1315  0077                     ??_main:	
  1316                           ; 1 bytes @ 0x7
  1317                           
  1318                           
  1319                           	psect	cstackBANK0
  1320  0020                     __pcstackBANK0:	
  1321                           ; 1 bytes @ 0x7
  1322                           
  1323  0020                     ?___wmul:	
  1324  0020                     ?___lwdiv:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327  0020                     ?___ftpack:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330  0020                     ?___lmul:	
  1331                           ; 3 bytes @ 0x0
  1332                           
  1333  0020                     Lcd_Cmd@a:	
  1334                           ; 4 bytes @ 0x0
  1335                           
  1336  0020                     Lcd_Write_Char@temp:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0020                     ___wmul@multiplier:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0020                     ___lwdiv@divisor:	
  1343                           ; 2 bytes @ 0x0
  1344                           
  1345  0020                     ___ftpack@arg:	
  1346                           ; 2 bytes @ 0x0
  1347                           
  1348  0020                     ___lmul@multiplier:	
  1349                           ; 3 bytes @ 0x0
  1350                           
  1351                           
  1352                           ; 4 bytes @ 0x0
  1353  0020                     	ds	1
  1354  0021                     ??_Lcd_Init:	
  1355  0021                     ?_Lcd_Set_Cursor:	
  1356                           ; 1 bytes @ 0x1
  1357                           
  1358  0021                     Lcd_Set_Cursor@column:	
  1359                           ; 1 bytes @ 0x1
  1360                           
  1361  0021                     Lcd_Write_Char@y:	
  1362                           ; 1 bytes @ 0x1
  1363                           
  1364                           
  1365                           ; 1 bytes @ 0x1
  1366  0021                     	ds	1
  1367  0022                     ??_Lcd_Set_Cursor:	
  1368  0022                     Lcd_Write_Char@a:	
  1369                           ; 1 bytes @ 0x2
  1370                           
  1371  0022                     ___wmul@multiplicand:	
  1372                           ; 1 bytes @ 0x2
  1373                           
  1374  0022                     ___lwdiv@dividend:	
  1375                           ; 2 bytes @ 0x2
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x2
  1379  0022                     	ds	1
  1380  0023                     ___ftpack@exp:	
  1381  0023                     Lcd_write@i:	
  1382                           ; 1 bytes @ 0x3
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0x3
  1386  0023                     	ds	1
  1387  0024                     Lcd_Set_Cursor@raw:	
  1388  0024                     ___ftpack@sign:	
  1389                           ; 1 bytes @ 0x4
  1390                           
  1391  0024                     ___lwdiv@counter:	
  1392                           ; 1 bytes @ 0x4
  1393                           
  1394  0024                     ___lmul@multiplicand:	
  1395                           ; 1 bytes @ 0x4
  1396                           
  1397                           
  1398                           ; 4 bytes @ 0x4
  1399  0024                     	ds	1
  1400  0025                     ?___lwtoft:	
  1401  0025                     Lcd_Set_Cursor@z:	
  1402                           ; 3 bytes @ 0x5
  1403                           
  1404  0025                     Lcd_write@string:	
  1405                           ; 1 bytes @ 0x5
  1406                           
  1407  0025                     ___lwdiv@quotient:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410  0025                     ___lwtoft@c:	
  1411                           ; 2 bytes @ 0x5
  1412                           
  1413                           
  1414                           ; 2 bytes @ 0x5
  1415  0025                     	ds	1
  1416  0026                     Lcd_Set_Cursor@y:	
  1417                           
  1418                           ; 1 bytes @ 0x6
  1419  0026                     	ds	1
  1420  0027                     ?___lwmod:	
  1421  0027                     Lcd_Set_Cursor@temp:	
  1422                           ; 2 bytes @ 0x7
  1423                           
  1424  0027                     ___lwmod@divisor:	
  1425                           ; 1 bytes @ 0x7
  1426                           
  1427                           
  1428                           ; 2 bytes @ 0x7
  1429  0027                     	ds	1
  1430  0028                     ??___lwtoft:	
  1431  0028                     ___lmul@product:	
  1432                           ; 1 bytes @ 0x8
  1433                           
  1434                           
  1435                           ; 4 bytes @ 0x8
  1436  0028                     	ds	1
  1437  0029                     ?___ftmul:	
  1438  0029                     ___lwmod@dividend:	
  1439                           ; 3 bytes @ 0x9
  1440                           
  1441  0029                     ___ftmul@f1:	
  1442                           ; 2 bytes @ 0x9
  1443                           
  1444                           
  1445                           ; 3 bytes @ 0x9
  1446  0029                     	ds	3
  1447  002C                     ?___lldiv:	
  1448  002C                     ___ftmul@f2:	
  1449                           ; 4 bytes @ 0xC
  1450                           
  1451  002C                     ___lldiv@divisor:	
  1452                           ; 3 bytes @ 0xC
  1453                           
  1454                           
  1455                           ; 4 bytes @ 0xC
  1456  002C                     	ds	3
  1457  002F                     ??___ftmul:	
  1458                           
  1459                           ; 1 bytes @ 0xF
  1460  002F                     	ds	1
  1461  0030                     ___lldiv@dividend:	
  1462                           
  1463                           ; 4 bytes @ 0x10
  1464  0030                     	ds	3
  1465  0033                     ___ftmul@exp:	
  1466                           
  1467                           ; 1 bytes @ 0x13
  1468  0033                     	ds	1
  1469  0034                     ___ftmul@f3_as_product:	
  1470  0034                     ___lldiv@quotient:	
  1471                           ; 3 bytes @ 0x14
  1472                           
  1473                           
  1474                           ; 4 bytes @ 0x14
  1475  0034                     	ds	3
  1476  0037                     ___ftmul@cntr:	
  1477                           
  1478                           ; 1 bytes @ 0x17
  1479  0037                     	ds	1
  1480  0038                     ___ftmul@sign:	
  1481  0038                     ___lldiv@counter:	
  1482                           ; 1 bytes @ 0x18
  1483                           
  1484                           
  1485                           ; 1 bytes @ 0x18
  1486  0038                     	ds	1
  1487  0039                     ?_PWM_Init:	
  1488  0039                     ?_PWM_DutyCycle:	
  1489                           ; 1 bytes @ 0x19
  1490                           
  1491  0039                     ?_UART_Init:	
  1492                           ; 1 bytes @ 0x19
  1493                           
  1494  0039                     ?___ftdiv:	
  1495                           ; 1 bytes @ 0x19
  1496                           
  1497  0039                     UART_Init@baudRate:	
  1498                           ; 3 bytes @ 0x19
  1499                           
  1500  0039                     ___ftdiv@f2:	
  1501                           ; 2 bytes @ 0x19
  1502                           
  1503  0039                     PWM_Init@iFrequency:	
  1504                           ; 3 bytes @ 0x19
  1505                           
  1506  0039                     PWM_DutyCycle@iDutyCycle:	
  1507                           ; 4 bytes @ 0x19
  1508                           
  1509                           
  1510                           ; 4 bytes @ 0x19
  1511  0039                     	ds	2
  1512  003B                     ??_UART_Init:	
  1513                           
  1514                           ; 1 bytes @ 0x1B
  1515  003B                     	ds	1
  1516  003C                     ___ftdiv@f1:	
  1517                           
  1518                           ; 3 bytes @ 0x1C
  1519  003C                     	ds	1
  1520  003D                     ??_PWM_Init:	
  1521  003D                     ??_PWM_DutyCycle:	
  1522                           ; 1 bytes @ 0x1D
  1523                           
  1524                           
  1525                           ; 1 bytes @ 0x1D
  1526  003D                     	ds	2
  1527  003F                     ??___ftdiv:	
  1528                           
  1529                           ; 1 bytes @ 0x1F
  1530  003F                     	ds	4
  1531  0043                     ___ftdiv@cntr:	
  1532                           
  1533                           ; 1 bytes @ 0x23
  1534  0043                     	ds	1
  1535  0044                     ___ftdiv@f3:	
  1536                           
  1537                           ; 3 bytes @ 0x24
  1538  0044                     	ds	3
  1539  0047                     ___ftdiv@exp:	
  1540                           
  1541                           ; 1 bytes @ 0x27
  1542  0047                     	ds	1
  1543  0048                     ___ftdiv@sign:	
  1544                           
  1545                           ; 1 bytes @ 0x28
  1546  0048                     	ds	1
  1547  0049                     ?___ftadd:	
  1548  0049                     ___ftadd@f1:	
  1549                           ; 3 bytes @ 0x29
  1550                           
  1551                           
  1552                           ; 3 bytes @ 0x29
  1553  0049                     	ds	3
  1554  004C                     ___ftadd@f2:	
  1555                           
  1556                           ; 3 bytes @ 0x2C
  1557  004C                     	ds	3
  1558  004F                     ??___ftadd:	
  1559                           
  1560                           ; 1 bytes @ 0x2F
  1561  004F                     	ds	4
  1562  0053                     ___ftadd@sign:	
  1563                           
  1564                           ; 1 bytes @ 0x33
  1565  0053                     	ds	1
  1566  0054                     ___ftadd@exp2:	
  1567                           
  1568                           ; 1 bytes @ 0x34
  1569  0054                     	ds	1
  1570  0055                     ___ftadd@exp1:	
  1571                           
  1572                           ; 1 bytes @ 0x35
  1573  0055                     	ds	1
  1574  0056                     ?___fttol:	
  1575  0056                     ___fttol@f1:	
  1576                           ; 4 bytes @ 0x36
  1577                           
  1578                           
  1579                           ; 3 bytes @ 0x36
  1580  0056                     	ds	4
  1581  005A                     ??___fttol:	
  1582                           
  1583                           ; 1 bytes @ 0x3A
  1584  005A                     	ds	4
  1585  005E                     ___fttol@sign1:	
  1586                           
  1587                           ; 1 bytes @ 0x3E
  1588  005E                     	ds	1
  1589  005F                     ___fttol@lval:	
  1590                           
  1591                           ; 4 bytes @ 0x3F
  1592  005F                     	ds	4
  1593  0063                     ___fttol@exp1:	
  1594                           
  1595                           ; 1 bytes @ 0x43
  1596  0063                     	ds	1
  1597  0064                     ??_temp_Measurement:	
  1598                           
  1599                           ; 1 bytes @ 0x44
  1600  0064                     	ds	2
  1601  0066                     _temp_Measurement$1512:	
  1602                           
  1603                           ; 3 bytes @ 0x46
  1604  0066                     	ds	3
  1605  0069                     temp_Measurement@sample:	
  1606                           
  1607                           ; 2 bytes @ 0x49
  1608  0069                     	ds	2
  1609  006B                     ?_sprintf:	
  1610  006B                     sprintf@f:	
  1611                           ; 2 bytes @ 0x4B
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x4B
  1615  006B                     	ds	3
  1616                           
  1617                           	psect	maintext
  1618  0CB2                     __pmaintext:	
  1619 ;;
  1620 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1621 ;;
  1622 ;; *************** function _main *****************
  1623 ;; Defined at:
  1624 ;;		line 11 in file "main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2   16[None  ] int 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : B00/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels required when called:    5
  1644 ;; This function calls:
  1645 ;;		_system_Initialize
  1646 ;;		_temp_Display
  1647 ;; This function is called by:
  1648 ;;		Startup code after reset
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _main
  1654  0CB2                     _main:	
  1655                           
  1656                           ;main.c: 13: system_Initialize();
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660  0CB2  120A  158A  2763  120A  158A  	fcall	_system_Initialize
  1661  0CB7                     l2770:	
  1662                           ;main.c: 15: while (1) {
  1663                           
  1664                           
  1665                           ;main.c: 16: temp_Display();
  1666  0CB7  120A  118A  2775  120A  158A  	fcall	_temp_Display
  1667  0CBC  2CB7               	goto	l2770
  1668  0CBD                     __end_of_main:	
  1669                           ;main.c: 17: }
  1670                           ;main.c: 18: return;
  1671                           
  1672                           
  1673                           	psect	text1
  1674  0775                     __ptext1:	
  1675 ;; *************** function _temp_Display *****************
  1676 ;; Defined at:
  1677 ;;		line 40 in file "adc_Init.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  TEMP           13   16[BANK1 ] unsigned char [13]
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0      13       0       0
  1693 ;;      Temps:          0       0       4       0       0
  1694 ;;      Totals:         0       0      17       0       0
  1695 ;;Total ram usage:       17 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    4
  1698 ;; This function calls:
  1699 ;;		_Lcd_Set_Cursor
  1700 ;;		_Lcd_write
  1701 ;;		_sprintf
  1702 ;;		_temp_Measurement
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _temp_Display
  1710  0775                     _temp_Display:	
  1711                           
  1712                           ;adc_Init.c: 41: char TEMP[] = "Temperature:";
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1716  0775  30B0               	movlw	temp_Display@TEMP& (0+255)
  1717  0776  0084               	movwf	4
  1718  0777  30BD               	movlw	low temp_Display@F2019
  1719  0778  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0779  1303               	bcf	3,6	;RP1=0, select bank1
  1721  077A  00AC               	movwf	??_temp_Display^(0+128)
  1722  077B  0804               	movf	4,w
  1723  077C  00AD               	movwf	(??_temp_Display^(0+128)+1)
  1724  077D  300D               	movlw	13
  1725  077E  00AE               	movwf	(??_temp_Display^(0+128)+2)
  1726  077F                     u3950:	
  1727  077F  082C               	movf	??_temp_Display^(0+128),w
  1728  0780  0084               	movwf	4
  1729  0781  1383               	bcf	3,7	;select IRP bank1
  1730  0782  0800               	movf	0,w
  1731  0783  00AF               	movwf	(??_temp_Display^(0+128)+3)
  1732  0784  0AAC               	incf	??_temp_Display^(0+128),f
  1733  0785  082D               	movf	(??_temp_Display^(0+128)+1),w
  1734  0786  0084               	movwf	4
  1735  0787  082F               	movf	(??_temp_Display^(0+128)+3),w
  1736  0788  0080               	movwf	0
  1737  0789  0AAD               	incf	(??_temp_Display^(0+128)+1),f
  1738  078A  0BAE               	decfsz	(??_temp_Display^(0+128)+2),f
  1739  078B  2F7F               	goto	u3950
  1740                           
  1741                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  1742  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1743  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1744  078E  01A1               	clrf	Lcd_Set_Cursor@column
  1745  078F  0AA1               	incf	Lcd_Set_Cursor@column,f
  1746  0790  3001               	movlw	1
  1747  0791  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1748                           
  1749                           ;adc_Init.c: 43: Lcd_write(TEMP);
  1750  0796  30B0               	movlw	(low (temp_Display@TEMP| 0))& (0+255)
  1751  0797  120A  158A  2583  120A  118A  	fcall	_Lcd_write
  1752                           
  1753                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  1754  079C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1755  079D  1683               	bsf	3,5	;RP0=1, select bank1
  1756  079E  1303               	bcf	3,6	;RP1=0, select bank1
  1757  079F  00AC               	movwf	??_temp_Display^(0+128)
  1758  07A0  082C               	movf	??_temp_Display^(0+128),w
  1759  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1760  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1761  07A3  00EB               	movwf	sprintf@f
  1762  07A4  120A  118A  22DC  120A  118A  	fcall	_temp_Measurement
  1763  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  1764  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  1765  07AB  00AD               	movwf	(??_temp_Display+1)^(0+128)
  1766  07AC  01AE               	clrf	((??_temp_Display+1)^(0+128)+1)
  1767  07AD  082D               	movf	(??_temp_Display+1)^(0+128),w
  1768  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1769  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1770  07B0  00EC               	movwf	?_sprintf+1
  1771  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1772  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1773  07B3  082E               	movf	(??_temp_Display+2)^(0+128),w
  1774  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1775  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1776  07B6  00ED               	movwf	?_sprintf+2
  1777  07B7  30D8               	movlw	(low (_sTemperature| 0))& (0+255)
  1778  07B8  120A  118A  2033  120A  118A  	fcall	_sprintf
  1779                           
  1780                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof(TEMP));
  1781  07BD  300D               	movlw	13
  1782  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  1783  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  1784  07C0  00AC               	movwf	??_temp_Display^(0+128)
  1785  07C1  082C               	movf	??_temp_Display^(0+128),w
  1786  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1787  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1788  07C4  00A1               	movwf	Lcd_Set_Cursor@column
  1789  07C5  3001               	movlw	1
  1790  07C6  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1791                           
  1792                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  1793  07CB  30D8               	movlw	(low (_sTemperature| 0))& (0+255)
  1794  07CC  120A  158A  2583   	fcall	_Lcd_write
  1795  07CF  0008               	return
  1796  07D0                     __end_of_temp_Display:	
  1797                           
  1798                           	psect	text2
  1799  02DC                     __ptext2:	
  1800 ;; *************** function _temp_Measurement *****************
  1801 ;; Defined at:
  1802 ;;		line 24 in file "adc_Init.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  sample          2   73[BANK0 ] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      unsigned char 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         0       5       0       0       0
  1818 ;;      Temps:          0       2       0       0       0
  1819 ;;      Totals:         0       7       0       0       0
  1820 ;;Total ram usage:        7 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    3
  1823 ;; This function calls:
  1824 ;;		___ftadd
  1825 ;;		___ftdiv
  1826 ;;		___ftmul
  1827 ;;		___fttol
  1828 ;;		___lwdiv
  1829 ;;		___lwtoft
  1830 ;; This function is called by:
  1831 ;;		_temp_Display
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _temp_Measurement
  1837  02DC                     _temp_Measurement:	
  1838                           
  1839                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1843  02DC  3007               	movlw	7
  1844  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1845  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1846  02DF  00E5               	movwf	??_temp_Measurement+1
  1847  02E0  307C               	movlw	124
  1848  02E1  00E4               	movwf	??_temp_Measurement
  1849  02E2                     u3967:	
  1850  02E2  0BE4               	decfsz	??_temp_Measurement,f
  1851  02E3  2AE2               	goto	u3967
  1852  02E4  0BE5               	decfsz	??_temp_Measurement+1,f
  1853  02E5  2AE2               	goto	u3967
  1854  02E6  0000               	nop
  1855                           
  1856                           ;adc_Init.c: 26: GO_DONE = 1;
  1857  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1858  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1859  02E9  149F               	bsf	31,1	;volatile
  1860  02EA                     l186:	
  1861                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  1862                           
  1863  02EA  1F0C               	btfss	12,6	;volatile
  1864  02EB  2AEA               	goto	l186
  1865                           
  1866                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  1867  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1868  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  1869  02EE  081E               	movf	30,w	;volatile
  1870  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1871  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1872  02F1  00E4               	movwf	??_temp_Measurement
  1873  02F2  0864               	movf	??_temp_Measurement,w
  1874  02F3  00F7               	movwf	_adc
  1875                           
  1876                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  1877  02F4  081E               	movf	30,w	;volatile
  1878  02F5  00E4               	movwf	??_temp_Measurement
  1879  02F6  0864               	movf	??_temp_Measurement,w
  1880  02F7  00F8               	movwf	_adc+1
  1881                           
  1882                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  1883  02F8  01E9               	clrf	temp_Measurement@sample
  1884  02F9  01EA               	clrf	temp_Measurement@sample+1
  1885  02FA  086A               	movf	temp_Measurement@sample+1,w
  1886  02FB  3A80               	xorlw	128
  1887  02FC  00FF               	movwf	127
  1888  02FD  3080               	movlw	128
  1889  02FE  027F               	subwf	127,w
  1890  02FF  1D03               	skipz
  1891  0300  2B03               	goto	u3775
  1892  0301  300A               	movlw	10
  1893  0302  0269               	subwf	temp_Measurement@sample,w
  1894  0303                     u3775:	
  1895  0303  1803               	btfsc	3,0
  1896  0304  2BBA               	goto	l2648
  1897  0305                     l2638:	
  1898                           
  1899                           ;adc_Init.c: 31: rawData += adc.result;
  1900  0305  0877               	movf	_adc,w
  1901  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0308  07D4               	addwf	_rawData^(0+128),f
  1904  0309  1803               	skipnc
  1905  030A  0AD5               	incf	(_rawData+1)^(0+128),f
  1906  030B  0878               	movf	_adc+1,w
  1907  030C  07D5               	addwf	(_rawData+1)^(0+128),f
  1908                           
  1909                           ;adc_Init.c: 32: if (sample == 9) {
  1910  030D  3009               	movlw	9
  1911  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1912  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0310  0669               	xorwf	temp_Measurement@sample,w
  1914  0311  046A               	iorwf	temp_Measurement@sample+1,w
  1915  0312  1D03               	btfss	3,2
  1916  0313  2BA9               	goto	l2644
  1917                           
  1918                           ;adc_Init.c: 33: rawData = rawData / 11;
  1919  0314  300B               	movlw	11
  1920  0315  00A0               	movwf	___lwdiv@divisor
  1921  0316  3000               	movlw	0
  1922  0317  00A1               	movwf	___lwdiv@divisor+1
  1923  0318  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0319  1303               	bcf	3,6	;RP1=0, select bank1
  1925  031A  0855               	movf	(_rawData+1)^(0+128),w
  1926  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1927  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1928  031D  00A3               	movwf	___lwdiv@dividend+1
  1929  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1930  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0320  0854               	movf	_rawData^(0+128),w
  1932  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0323  00A2               	movwf	___lwdiv@dividend
  1935  0324  120A  158A  265F  120A  118A  	fcall	___lwdiv
  1936  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1937  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1938  032B  0821               	movf	?___lwdiv+1,w
  1939  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1940  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1941  032E  00D5               	movwf	(_rawData+1)^(0+128)
  1942  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0331  0820               	movf	?___lwdiv,w
  1945  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0334  00D4               	movwf	_rawData^(0+128)
  1948                           
  1949                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  1950  0335  0855               	movf	(_rawData+1)^(0+128),w
  1951  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0338  00A6               	movwf	___lwtoft@c+1
  1954  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1955  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1956  033B  0854               	movf	_rawData^(0+128),w
  1957  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1958  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1959  033E  00A5               	movwf	___lwtoft@c
  1960  033F  120A  158A  251E  120A  118A  	fcall	___lwtoft
  1961  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0346  0825               	movf	?___lwtoft,w
  1964  0347  00AC               	movwf	___ftmul@f2
  1965  0348  0826               	movf	?___lwtoft+1,w
  1966  0349  00AD               	movwf	___ftmul@f2+1
  1967  034A  0827               	movf	?___lwtoft+2,w
  1968  034B  00AE               	movwf	___ftmul@f2+2
  1969  034C  3040               	movlw	64
  1970  034D  00A9               	movwf	___ftmul@f1
  1971  034E  309C               	movlw	156
  1972  034F  00AA               	movwf	___ftmul@f1+1
  1973  0350  3045               	movlw	69
  1974  0351  00AB               	movwf	___ftmul@f1+2
  1975  0352  120A  118A  23BE  120A  118A  	fcall	___ftmul
  1976  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0359  0829               	movf	?___ftmul,w
  1979  035A  00BC               	movwf	___ftdiv@f1
  1980  035B  082A               	movf	?___ftmul+1,w
  1981  035C  00BD               	movwf	___ftdiv@f1+1
  1982  035D  082B               	movf	?___ftmul+2,w
  1983  035E  00BE               	movwf	___ftdiv@f1+2
  1984  035F  30C0               	movlw	192
  1985  0360  00B9               	movwf	___ftdiv@f2
  1986  0361  307F               	movlw	127
  1987  0362  00BA               	movwf	___ftdiv@f2+1
  1988  0363  3044               	movlw	68
  1989  0364  00BB               	movwf	___ftdiv@f2+2
  1990  0365  120A  118A  2491  120A  118A  	fcall	___ftdiv
  1991  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1992  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1993  036C  0839               	movf	?___ftdiv,w
  1994  036D  00CC               	movwf	___ftadd@f2
  1995  036E  083A               	movf	?___ftdiv+1,w
  1996  036F  00CD               	movwf	___ftadd@f2+1
  1997  0370  083B               	movf	?___ftdiv+2,w
  1998  0371  00CE               	movwf	___ftadd@f2+2
  1999  0372  3000               	movlw	0
  2000  0373  00C9               	movwf	___ftadd@f1
  2001  0374  30FA               	movlw	250
  2002  0375  00CA               	movwf	___ftadd@f1+1
  2003  0376  30C3               	movlw	195
  2004  0377  00CB               	movwf	___ftadd@f1+2
  2005  0378  120A  118A  21D3  120A  118A  	fcall	___ftadd
  2006  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2007  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2008  037F  0849               	movf	?___ftadd,w
  2009  0380  00E6               	movwf	_temp_Measurement$1512
  2010  0381  084A               	movf	?___ftadd+1,w
  2011  0382  00E7               	movwf	_temp_Measurement$1512+1
  2012  0383  084B               	movf	?___ftadd+2,w
  2013  0384  00E8               	movwf	_temp_Measurement$1512+2
  2014                           
  2015                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2016  0385  0866               	movf	_temp_Measurement$1512,w
  2017  0386  00BC               	movwf	___ftdiv@f1
  2018  0387  0867               	movf	_temp_Measurement$1512+1,w
  2019  0388  00BD               	movwf	___ftdiv@f1+1
  2020  0389  0868               	movf	_temp_Measurement$1512+2,w
  2021  038A  00BE               	movwf	___ftdiv@f1+2
  2022  038B  3000               	movlw	0
  2023  038C  00B9               	movwf	___ftdiv@f2
  2024  038D  3020               	movlw	32
  2025  038E  00BA               	movwf	___ftdiv@f2+1
  2026  038F  3041               	movlw	65
  2027  0390  00BB               	movwf	___ftdiv@f2+2
  2028  0391  120A  118A  2491  120A  118A  	fcall	___ftdiv
  2029  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0398  0839               	movf	?___ftdiv,w
  2032  0399  00D6               	movwf	___fttol@f1
  2033  039A  083A               	movf	?___ftdiv+1,w
  2034  039B  00D7               	movwf	___fttol@f1+1
  2035  039C  083B               	movf	?___ftdiv+2,w
  2036  039D  00D8               	movwf	___fttol@f1+2
  2037  039E  120A  118A  2549  120A  118A  	fcall	___fttol
  2038  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03A5  0856               	movf	?___fttol,w
  2041  03A6  00E4               	movwf	??_temp_Measurement
  2042  03A7  0864               	movf	??_temp_Measurement,w
  2043  03A8  00EE               	movwf	_temperature
  2044  03A9                     l2644:	
  2045  03A9  3001               	movlw	1
  2046  03AA  07E9               	addwf	temp_Measurement@sample,f
  2047  03AB  1803               	skipnc
  2048  03AC  0AEA               	incf	temp_Measurement@sample+1,f
  2049  03AD  3000               	movlw	0
  2050  03AE  07EA               	addwf	temp_Measurement@sample+1,f
  2051  03AF  086A               	movf	temp_Measurement@sample+1,w
  2052  03B0  3A80               	xorlw	128
  2053  03B1  00FF               	movwf	127
  2054  03B2  3080               	movlw	128
  2055  03B3  027F               	subwf	127,w
  2056  03B4  1D03               	skipz
  2057  03B5  2BB8               	goto	u3795
  2058  03B6  300A               	movlw	10
  2059  03B7  0269               	subwf	temp_Measurement@sample,w
  2060  03B8                     u3795:	
  2061  03B8  1C03               	skipc
  2062  03B9  2B05               	goto	l2638
  2063  03BA                     l2648:	
  2064                           
  2065                           ;adc_Init.c: 35: }
  2066                           ;adc_Init.c: 36: }
  2067                           ;adc_Init.c: 37: return temperature;
  2068  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2069  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2070  03BC  086E               	movf	_temperature,w
  2071  03BD  0008               	return
  2072  03BE                     __end_of_temp_Measurement:	
  2073                           
  2074                           	psect	text3
  2075  0D1E                     __ptext3:	
  2076 ;; *************** function ___lwtoft *****************
  2077 ;; Defined at:
  2078 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  c               2    5[BANK0 ] unsigned int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  3    5[BANK0 ] float 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       3       0       0       0
  2093 ;;      Locals:         0       0       0       0       0
  2094 ;;      Temps:          0       1       0       0       0
  2095 ;;      Totals:         0       4       0       0       0
  2096 ;;Total ram usage:        4 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    2
  2099 ;; This function calls:
  2100 ;;		___ftpack
  2101 ;; This function is called by:
  2102 ;;		_temp_Measurement
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function ___lwtoft
  2108  0D1E                     ___lwtoft:	
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2112  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0D20  0825               	movf	___lwtoft@c,w
  2115  0D21  00A0               	movwf	___ftpack@arg
  2116  0D22  0826               	movf	___lwtoft@c+1,w
  2117  0D23  00A1               	movwf	___ftpack@arg+1
  2118  0D24  01A2               	clrf	___ftpack@arg+2
  2119  0D25  308E               	movlw	142
  2120  0D26  00A8               	movwf	??___lwtoft
  2121  0D27  0828               	movf	??___lwtoft,w
  2122  0D28  00A3               	movwf	___ftpack@exp
  2123  0D29  01A4               	clrf	___ftpack@sign
  2124  0D2A  120A  118A  2646   	fcall	___ftpack
  2125  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0D2F  0820               	movf	?___ftpack,w
  2128  0D30  00A5               	movwf	?___lwtoft
  2129  0D31  0821               	movf	?___ftpack+1,w
  2130  0D32  00A6               	movwf	?___lwtoft+1
  2131  0D33  0822               	movf	?___ftpack+2,w
  2132  0D34  00A7               	movwf	?___lwtoft+2
  2133  0D35  0008               	return
  2134  0D36                     __end_of___lwtoft:	
  2135                           
  2136                           	psect	text4
  2137  0549                     __ptext4:	
  2138 ;; *************** function ___fttol *****************
  2139 ;; Defined at:
  2140 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  f1              3   54[BANK0 ] float 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  lval            4   63[BANK0 ] unsigned long 
  2145 ;;  exp1            1   67[BANK0 ] unsigned char 
  2146 ;;  sign1           1   62[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  4   54[BANK0 ] long 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       4       0       0       0
  2157 ;;      Locals:         0       6       0       0       0
  2158 ;;      Temps:          0       4       0       0       0
  2159 ;;      Totals:         0      14       0       0       0
  2160 ;;Total ram usage:       14 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_temp_Measurement
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function ___fttol
  2172  0549                     ___fttol:	
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2176  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2177  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2178  054B  0856               	movf	___fttol@f1,w
  2179  054C  00DA               	movwf	??___fttol
  2180  054D  0857               	movf	___fttol@f1+1,w
  2181  054E  00DB               	movwf	??___fttol+1
  2182  054F  0858               	movf	___fttol@f1+2,w
  2183  0550  00DC               	movwf	??___fttol+2
  2184  0551  1003               	clrc
  2185  0552  0D5B               	rlf	??___fttol+1,w
  2186  0553  0D5C               	rlf	??___fttol+2,w
  2187  0554  00DD               	movwf	??___fttol+3
  2188  0555  085D               	movf	??___fttol+3,w
  2189  0556  00E3               	movwf	___fttol@exp1
  2190  0557  0863               	movf	___fttol@exp1,w
  2191  0558  1D03               	btfss	3,2
  2192  0559  2D63               	goto	l1934
  2193  055A  3000               	movlw	0
  2194  055B  00D9               	movwf	?___fttol+3
  2195  055C  3000               	movlw	0
  2196  055D  00D8               	movwf	?___fttol+2
  2197  055E  3000               	movlw	0
  2198  055F  00D7               	movwf	?___fttol+1
  2199  0560  3000               	movlw	0
  2200  0561  00D6               	movwf	?___fttol
  2201  0562  0008               	return
  2202  0563                     l1934:	
  2203  0563  0856               	movf	___fttol@f1,w
  2204  0564  00DA               	movwf	??___fttol
  2205  0565  0857               	movf	___fttol@f1+1,w
  2206  0566  00DB               	movwf	??___fttol+1
  2207  0567  0858               	movf	___fttol@f1+2,w
  2208  0568  00DC               	movwf	??___fttol+2
  2209  0569  3017               	movlw	23
  2210  056A                     u2265:	
  2211  056A  1003               	clrc
  2212  056B  0CDC               	rrf	??___fttol+2,f
  2213  056C  0CDB               	rrf	??___fttol+1,f
  2214  056D  0CDA               	rrf	??___fttol,f
  2215  056E  3EFF               	addlw	-1
  2216  056F  1D03               	skipz
  2217  0570  2D6A               	goto	u2265
  2218  0571  085A               	movf	??___fttol,w
  2219  0572  00DD               	movwf	??___fttol+3
  2220  0573  085D               	movf	??___fttol+3,w
  2221  0574  00DE               	movwf	___fttol@sign1
  2222  0575  17D7               	bsf	___fttol@f1+1,7
  2223  0576  30FF               	movlw	255
  2224  0577  05D6               	andwf	___fttol@f1,f
  2225  0578  30FF               	movlw	255
  2226  0579  05D7               	andwf	___fttol@f1+1,f
  2227  057A  3000               	movlw	0
  2228  057B  05D8               	andwf	___fttol@f1+2,f
  2229  057C  0856               	movf	___fttol@f1,w
  2230  057D  00DF               	movwf	___fttol@lval
  2231  057E  0857               	movf	___fttol@f1+1,w
  2232  057F  00E0               	movwf	___fttol@lval+1
  2233  0580  0858               	movf	___fttol@f1+2,w
  2234  0581  00E1               	movwf	___fttol@lval+2
  2235  0582  01E2               	clrf	___fttol@lval+3
  2236  0583  308E               	movlw	142
  2237  0584  02E3               	subwf	___fttol@exp1,f
  2238  0585  1FE3               	btfss	___fttol@exp1,7
  2239  0586  2DA5               	goto	l1954
  2240  0587  0863               	movf	___fttol@exp1,w
  2241  0588  3A80               	xorlw	128
  2242  0589  3E8F               	addlw	143
  2243  058A  1803               	skipnc
  2244  058B  2D95               	goto	l1952
  2245  058C  3000               	movlw	0
  2246  058D  00D9               	movwf	?___fttol+3
  2247  058E  3000               	movlw	0
  2248  058F  00D8               	movwf	?___fttol+2
  2249  0590  3000               	movlw	0
  2250  0591  00D7               	movwf	?___fttol+1
  2251  0592  3000               	movlw	0
  2252  0593  00D6               	movwf	?___fttol
  2253  0594  0008               	return
  2254  0595                     l1952:	
  2255  0595  3001               	movlw	1
  2256  0596                     u2295:	
  2257  0596  1003               	clrc
  2258  0597  0CE2               	rrf	___fttol@lval+3,f
  2259  0598  0CE1               	rrf	___fttol@lval+2,f
  2260  0599  0CE0               	rrf	___fttol@lval+1,f
  2261  059A  0CDF               	rrf	___fttol@lval,f
  2262  059B  3EFF               	addlw	-1
  2263  059C  1D03               	skipz
  2264  059D  2D96               	goto	u2295
  2265  059E  3001               	movlw	1
  2266  059F  00DA               	movwf	??___fttol
  2267  05A0  085A               	movf	??___fttol,w
  2268  05A1  07E3               	addwf	___fttol@exp1,f
  2269  05A2  1903               	btfsc	3,2
  2270  05A3  2DC0               	goto	l1962
  2271  05A4  2D95               	goto	l1952
  2272  05A5                     l1954:	
  2273  05A5  3018               	movlw	24
  2274  05A6  0263               	subwf	___fttol@exp1,w
  2275  05A7  1C03               	skipc
  2276  05A8  2DBD               	goto	l747
  2277  05A9  3000               	movlw	0
  2278  05AA  00D9               	movwf	?___fttol+3
  2279  05AB  3000               	movlw	0
  2280  05AC  00D8               	movwf	?___fttol+2
  2281  05AD  3000               	movlw	0
  2282  05AE  00D7               	movwf	?___fttol+1
  2283  05AF  3000               	movlw	0
  2284  05B0  00D6               	movwf	?___fttol
  2285  05B1  0008               	return
  2286  05B2                     l1960:	
  2287  05B2  3001               	movlw	1
  2288  05B3  00DA               	movwf	??___fttol
  2289  05B4                     u2325:	
  2290  05B4  1003               	clrc
  2291  05B5  0DDF               	rlf	___fttol@lval,f
  2292  05B6  0DE0               	rlf	___fttol@lval+1,f
  2293  05B7  0DE1               	rlf	___fttol@lval+2,f
  2294  05B8  0DE2               	rlf	___fttol@lval+3,f
  2295  05B9  0BDA               	decfsz	??___fttol,f
  2296  05BA  2DB4               	goto	u2325
  2297  05BB  3001               	movlw	1
  2298  05BC  02E3               	subwf	___fttol@exp1,f
  2299  05BD                     l747:	
  2300  05BD  0863               	movf	___fttol@exp1,w
  2301  05BE  1D03               	btfss	3,2
  2302  05BF  2DB2               	goto	l1960
  2303  05C0                     l1962:	
  2304  05C0  085E               	movf	___fttol@sign1,w
  2305  05C1  1903               	btfsc	3,2
  2306  05C2  2DCE               	goto	l1966
  2307  05C3  09DF               	comf	___fttol@lval,f
  2308  05C4  09E0               	comf	___fttol@lval+1,f
  2309  05C5  09E1               	comf	___fttol@lval+2,f
  2310  05C6  09E2               	comf	___fttol@lval+3,f
  2311  05C7  0ADF               	incf	___fttol@lval,f
  2312  05C8  1903               	skipnz
  2313  05C9  0AE0               	incf	___fttol@lval+1,f
  2314  05CA  1903               	skipnz
  2315  05CB  0AE1               	incf	___fttol@lval+2,f
  2316  05CC  1903               	skipnz
  2317  05CD  0AE2               	incf	___fttol@lval+3,f
  2318  05CE                     l1966:	
  2319  05CE  0862               	movf	___fttol@lval+3,w
  2320  05CF  00D9               	movwf	?___fttol+3
  2321  05D0  0861               	movf	___fttol@lval+2,w
  2322  05D1  00D8               	movwf	?___fttol+2
  2323  05D2  0860               	movf	___fttol@lval+1,w
  2324  05D3  00D7               	movwf	?___fttol+1
  2325  05D4  085F               	movf	___fttol@lval,w
  2326  05D5  00D6               	movwf	?___fttol
  2327  05D6  0008               	return
  2328  05D7                     __end_of___fttol:	
  2329                           
  2330                           	psect	text5
  2331  03BE                     __ptext5:	
  2332 ;; *************** function ___ftmul *****************
  2333 ;; Defined at:
  2334 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  f1              3    9[BANK0 ] float 
  2337 ;;  f2              3   12[BANK0 ] float 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  2340 ;;  sign            1   24[BANK0 ] unsigned char 
  2341 ;;  cntr            1   23[BANK0 ] unsigned char 
  2342 ;;  exp             1   19[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  3    9[BANK0 ] float 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       6       0       0       0
  2353 ;;      Locals:         0       6       0       0       0
  2354 ;;      Temps:          0       4       0       0       0
  2355 ;;      Totals:         0      16       0       0       0
  2356 ;;Total ram usage:       16 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    2
  2359 ;; This function calls:
  2360 ;;		___ftpack
  2361 ;; This function is called by:
  2362 ;;		_temp_Measurement
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function ___ftmul
  2368  03BE                     ___ftmul:	
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2372  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2373  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2374  03C0  0829               	movf	___ftmul@f1,w
  2375  03C1  00AF               	movwf	??___ftmul
  2376  03C2  082A               	movf	___ftmul@f1+1,w
  2377  03C3  00B0               	movwf	??___ftmul+1
  2378  03C4  082B               	movf	___ftmul@f1+2,w
  2379  03C5  00B1               	movwf	??___ftmul+2
  2380  03C6  1003               	clrc
  2381  03C7  0D30               	rlf	??___ftmul+1,w
  2382  03C8  0D31               	rlf	??___ftmul+2,w
  2383  03C9  00B2               	movwf	??___ftmul+3
  2384  03CA  0832               	movf	??___ftmul+3,w
  2385  03CB  00B3               	movwf	___ftmul@exp
  2386  03CC  0833               	movf	___ftmul@exp,w
  2387  03CD  1D03               	btfss	3,2
  2388  03CE  2BD6               	goto	l2486
  2389  03CF  3000               	movlw	0
  2390  03D0  00A9               	movwf	?___ftmul
  2391  03D1  3000               	movlw	0
  2392  03D2  00AA               	movwf	?___ftmul+1
  2393  03D3  3000               	movlw	0
  2394  03D4  00AB               	movwf	?___ftmul+2
  2395  03D5  0008               	return
  2396  03D6                     l2486:	
  2397  03D6  082C               	movf	___ftmul@f2,w
  2398  03D7  00AF               	movwf	??___ftmul
  2399  03D8  082D               	movf	___ftmul@f2+1,w
  2400  03D9  00B0               	movwf	??___ftmul+1
  2401  03DA  082E               	movf	___ftmul@f2+2,w
  2402  03DB  00B1               	movwf	??___ftmul+2
  2403  03DC  1003               	clrc
  2404  03DD  0D30               	rlf	??___ftmul+1,w
  2405  03DE  0D31               	rlf	??___ftmul+2,w
  2406  03DF  00B2               	movwf	??___ftmul+3
  2407  03E0  0832               	movf	??___ftmul+3,w
  2408  03E1  00B8               	movwf	___ftmul@sign
  2409  03E2  0838               	movf	___ftmul@sign,w
  2410  03E3  1D03               	btfss	3,2
  2411  03E4  2BEC               	goto	l2492
  2412  03E5  3000               	movlw	0
  2413  03E6  00A9               	movwf	?___ftmul
  2414  03E7  3000               	movlw	0
  2415  03E8  00AA               	movwf	?___ftmul+1
  2416  03E9  3000               	movlw	0
  2417  03EA  00AB               	movwf	?___ftmul+2
  2418  03EB  0008               	return
  2419  03EC                     l2492:	
  2420  03EC  0838               	movf	___ftmul@sign,w
  2421  03ED  3E7B               	addlw	123
  2422  03EE  00AF               	movwf	??___ftmul
  2423  03EF  082F               	movf	??___ftmul,w
  2424  03F0  07B3               	addwf	___ftmul@exp,f
  2425  03F1  0829               	movf	___ftmul@f1,w
  2426  03F2  00AF               	movwf	??___ftmul
  2427  03F3  082A               	movf	___ftmul@f1+1,w
  2428  03F4  00B0               	movwf	??___ftmul+1
  2429  03F5  082B               	movf	___ftmul@f1+2,w
  2430  03F6  00B1               	movwf	??___ftmul+2
  2431  03F7  3010               	movlw	16
  2432  03F8                     u3445:	
  2433  03F8  1003               	clrc
  2434  03F9  0CB1               	rrf	??___ftmul+2,f
  2435  03FA  0CB0               	rrf	??___ftmul+1,f
  2436  03FB  0CAF               	rrf	??___ftmul,f
  2437  03FC  3EFF               	addlw	-1
  2438  03FD  1D03               	skipz
  2439  03FE  2BF8               	goto	u3445
  2440  03FF  082F               	movf	??___ftmul,w
  2441  0400  00B2               	movwf	??___ftmul+3
  2442  0401  0832               	movf	??___ftmul+3,w
  2443  0402  00B8               	movwf	___ftmul@sign
  2444  0403  082C               	movf	___ftmul@f2,w
  2445  0404  00AF               	movwf	??___ftmul
  2446  0405  082D               	movf	___ftmul@f2+1,w
  2447  0406  00B0               	movwf	??___ftmul+1
  2448  0407  082E               	movf	___ftmul@f2+2,w
  2449  0408  00B1               	movwf	??___ftmul+2
  2450  0409  3010               	movlw	16
  2451  040A                     u3455:	
  2452  040A  1003               	clrc
  2453  040B  0CB1               	rrf	??___ftmul+2,f
  2454  040C  0CB0               	rrf	??___ftmul+1,f
  2455  040D  0CAF               	rrf	??___ftmul,f
  2456  040E  3EFF               	addlw	-1
  2457  040F  1D03               	skipz
  2458  0410  2C0A               	goto	u3455
  2459  0411  082F               	movf	??___ftmul,w
  2460  0412  00B2               	movwf	??___ftmul+3
  2461  0413  0832               	movf	??___ftmul+3,w
  2462  0414  06B8               	xorwf	___ftmul@sign,f
  2463  0415  3080               	movlw	128
  2464  0416  00AF               	movwf	??___ftmul
  2465  0417  082F               	movf	??___ftmul,w
  2466  0418  05B8               	andwf	___ftmul@sign,f
  2467  0419  17AA               	bsf	___ftmul@f1+1,7
  2468  041A  17AD               	bsf	___ftmul@f2+1,7
  2469  041B  30FF               	movlw	255
  2470  041C  05AC               	andwf	___ftmul@f2,f
  2471  041D  30FF               	movlw	255
  2472  041E  05AD               	andwf	___ftmul@f2+1,f
  2473  041F  3000               	movlw	0
  2474  0420  05AE               	andwf	___ftmul@f2+2,f
  2475  0421  3000               	movlw	0
  2476  0422  00B4               	movwf	___ftmul@f3_as_product
  2477  0423  3000               	movlw	0
  2478  0424  00B5               	movwf	___ftmul@f3_as_product+1
  2479  0425  3000               	movlw	0
  2480  0426  00B6               	movwf	___ftmul@f3_as_product+2
  2481  0427  3007               	movlw	7
  2482  0428  00AF               	movwf	??___ftmul
  2483  0429  082F               	movf	??___ftmul,w
  2484  042A  00B7               	movwf	___ftmul@cntr
  2485  042B                     l2504:	
  2486  042B  1C29               	btfss	___ftmul@f1,0
  2487  042C  2C3B               	goto	l2508
  2488  042D  082C               	movf	___ftmul@f2,w
  2489  042E  07B4               	addwf	___ftmul@f3_as_product,f
  2490  042F  082D               	movf	___ftmul@f2+1,w
  2491  0430  1103               	clrz
  2492  0431  1803               	skipnc
  2493  0432  0A2D               	incf	___ftmul@f2+1,w
  2494  0433  1D03               	btfss	3,2
  2495  0434  07B5               	addwf	___ftmul@f3_as_product+1,f
  2496  0435  082E               	movf	___ftmul@f2+2,w
  2497  0436  1103               	clrz
  2498  0437  1803               	skipnc
  2499  0438  0A2E               	incf	___ftmul@f2+2,w
  2500  0439  1D03               	btfss	3,2
  2501  043A  07B6               	addwf	___ftmul@f3_as_product+2,f
  2502  043B                     l2508:	
  2503  043B  3001               	movlw	1
  2504  043C                     u3485:	
  2505  043C  1003               	clrc
  2506  043D  0CAB               	rrf	___ftmul@f1+2,f
  2507  043E  0CAA               	rrf	___ftmul@f1+1,f
  2508  043F  0CA9               	rrf	___ftmul@f1,f
  2509  0440  3EFF               	addlw	-1
  2510  0441  1D03               	skipz
  2511  0442  2C3C               	goto	u3485
  2512  0443  3001               	movlw	1
  2513  0444                     u3495:	
  2514  0444  1003               	clrc
  2515  0445  0DAC               	rlf	___ftmul@f2,f
  2516  0446  0DAD               	rlf	___ftmul@f2+1,f
  2517  0447  0DAE               	rlf	___ftmul@f2+2,f
  2518  0448  3EFF               	addlw	-1
  2519  0449  1D03               	skipz
  2520  044A  2C44               	goto	u3495
  2521  044B  3001               	movlw	1
  2522  044C  02B7               	subwf	___ftmul@cntr,f
  2523  044D  1D03               	btfss	3,2
  2524  044E  2C2B               	goto	l2504
  2525  044F  3009               	movlw	9
  2526  0450  00AF               	movwf	??___ftmul
  2527  0451  082F               	movf	??___ftmul,w
  2528  0452  00B7               	movwf	___ftmul@cntr
  2529  0453                     l2516:	
  2530  0453  1C29               	btfss	___ftmul@f1,0
  2531  0454  2C63               	goto	l2520
  2532  0455  082C               	movf	___ftmul@f2,w
  2533  0456  07B4               	addwf	___ftmul@f3_as_product,f
  2534  0457  082D               	movf	___ftmul@f2+1,w
  2535  0458  1103               	clrz
  2536  0459  1803               	skipnc
  2537  045A  0A2D               	incf	___ftmul@f2+1,w
  2538  045B  1D03               	btfss	3,2
  2539  045C  07B5               	addwf	___ftmul@f3_as_product+1,f
  2540  045D  082E               	movf	___ftmul@f2+2,w
  2541  045E  1103               	clrz
  2542  045F  1803               	skipnc
  2543  0460  0A2E               	incf	___ftmul@f2+2,w
  2544  0461  1D03               	btfss	3,2
  2545  0462  07B6               	addwf	___ftmul@f3_as_product+2,f
  2546  0463                     l2520:	
  2547  0463  3001               	movlw	1
  2548  0464                     u3535:	
  2549  0464  1003               	clrc
  2550  0465  0CAB               	rrf	___ftmul@f1+2,f
  2551  0466  0CAA               	rrf	___ftmul@f1+1,f
  2552  0467  0CA9               	rrf	___ftmul@f1,f
  2553  0468  3EFF               	addlw	-1
  2554  0469  1D03               	skipz
  2555  046A  2C64               	goto	u3535
  2556  046B  3001               	movlw	1
  2557  046C                     u3545:	
  2558  046C  1003               	clrc
  2559  046D  0CB6               	rrf	___ftmul@f3_as_product+2,f
  2560  046E  0CB5               	rrf	___ftmul@f3_as_product+1,f
  2561  046F  0CB4               	rrf	___ftmul@f3_as_product,f
  2562  0470  3EFF               	addlw	-1
  2563  0471  1D03               	skipz
  2564  0472  2C6C               	goto	u3545
  2565  0473  3001               	movlw	1
  2566  0474  02B7               	subwf	___ftmul@cntr,f
  2567  0475  1D03               	btfss	3,2
  2568  0476  2C53               	goto	l2516
  2569  0477  0834               	movf	___ftmul@f3_as_product,w
  2570  0478  00A0               	movwf	___ftpack@arg
  2571  0479  0835               	movf	___ftmul@f3_as_product+1,w
  2572  047A  00A1               	movwf	___ftpack@arg+1
  2573  047B  0836               	movf	___ftmul@f3_as_product+2,w
  2574  047C  00A2               	movwf	___ftpack@arg+2
  2575  047D  0833               	movf	___ftmul@exp,w
  2576  047E  00AF               	movwf	??___ftmul
  2577  047F  082F               	movf	??___ftmul,w
  2578  0480  00A3               	movwf	___ftpack@exp
  2579  0481  0838               	movf	___ftmul@sign,w
  2580  0482  00B0               	movwf	??___ftmul+1
  2581  0483  0830               	movf	??___ftmul+1,w
  2582  0484  00A4               	movwf	___ftpack@sign
  2583  0485  120A  118A  2646   	fcall	___ftpack
  2584  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2586  048A  0820               	movf	?___ftpack,w
  2587  048B  00A9               	movwf	?___ftmul
  2588  048C  0821               	movf	?___ftpack+1,w
  2589  048D  00AA               	movwf	?___ftmul+1
  2590  048E  0822               	movf	?___ftpack+2,w
  2591  048F  00AB               	movwf	?___ftmul+2
  2592  0490  0008               	return
  2593  0491                     __end_of___ftmul:	
  2594                           
  2595                           	psect	text6
  2596  0491                     __ptext6:	
  2597 ;; *************** function ___ftdiv *****************
  2598 ;; Defined at:
  2599 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  f2              3   25[BANK0 ] float 
  2602 ;;  f1              3   28[BANK0 ] float 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  f3              3   36[BANK0 ] float 
  2605 ;;  sign            1   40[BANK0 ] unsigned char 
  2606 ;;  exp             1   39[BANK0 ] unsigned char 
  2607 ;;  cntr            1   35[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  3   25[BANK0 ] float 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       6       0       0       0
  2618 ;;      Locals:         0       6       0       0       0
  2619 ;;      Temps:          0       4       0       0       0
  2620 ;;      Totals:         0      16       0       0       0
  2621 ;;Total ram usage:       16 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    2
  2624 ;; This function calls:
  2625 ;;		___ftpack
  2626 ;; This function is called by:
  2627 ;;		_temp_Measurement
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function ___ftdiv
  2633  0491                     ___ftdiv:	
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2637  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0493  083C               	movf	___ftdiv@f1,w
  2640  0494  00BF               	movwf	??___ftdiv
  2641  0495  083D               	movf	___ftdiv@f1+1,w
  2642  0496  00C0               	movwf	??___ftdiv+1
  2643  0497  083E               	movf	___ftdiv@f1+2,w
  2644  0498  00C1               	movwf	??___ftdiv+2
  2645  0499  1003               	clrc
  2646  049A  0D40               	rlf	??___ftdiv+1,w
  2647  049B  0D41               	rlf	??___ftdiv+2,w
  2648  049C  00C2               	movwf	??___ftdiv+3
  2649  049D  0842               	movf	??___ftdiv+3,w
  2650  049E  00C7               	movwf	___ftdiv@exp
  2651  049F  0847               	movf	___ftdiv@exp,w
  2652  04A0  1D03               	btfss	3,2
  2653  04A1  2CA9               	goto	l2444
  2654  04A2  3000               	movlw	0
  2655  04A3  00B9               	movwf	?___ftdiv
  2656  04A4  3000               	movlw	0
  2657  04A5  00BA               	movwf	?___ftdiv+1
  2658  04A6  3000               	movlw	0
  2659  04A7  00BB               	movwf	?___ftdiv+2
  2660  04A8  0008               	return
  2661  04A9                     l2444:	
  2662  04A9  0839               	movf	___ftdiv@f2,w
  2663  04AA  00BF               	movwf	??___ftdiv
  2664  04AB  083A               	movf	___ftdiv@f2+1,w
  2665  04AC  00C0               	movwf	??___ftdiv+1
  2666  04AD  083B               	movf	___ftdiv@f2+2,w
  2667  04AE  00C1               	movwf	??___ftdiv+2
  2668  04AF  1003               	clrc
  2669  04B0  0D40               	rlf	??___ftdiv+1,w
  2670  04B1  0D41               	rlf	??___ftdiv+2,w
  2671  04B2  00C2               	movwf	??___ftdiv+3
  2672  04B3  0842               	movf	??___ftdiv+3,w
  2673  04B4  00C8               	movwf	___ftdiv@sign
  2674  04B5  0848               	movf	___ftdiv@sign,w
  2675  04B6  1D03               	btfss	3,2
  2676  04B7  2CBF               	goto	l2450
  2677  04B8  3000               	movlw	0
  2678  04B9  00B9               	movwf	?___ftdiv
  2679  04BA  3000               	movlw	0
  2680  04BB  00BA               	movwf	?___ftdiv+1
  2681  04BC  3000               	movlw	0
  2682  04BD  00BB               	movwf	?___ftdiv+2
  2683  04BE  0008               	return
  2684  04BF                     l2450:	
  2685  04BF  3000               	movlw	0
  2686  04C0  00C4               	movwf	___ftdiv@f3
  2687  04C1  3000               	movlw	0
  2688  04C2  00C5               	movwf	___ftdiv@f3+1
  2689  04C3  3000               	movlw	0
  2690  04C4  00C6               	movwf	___ftdiv@f3+2
  2691  04C5  3089               	movlw	137
  2692  04C6  0748               	addwf	___ftdiv@sign,w
  2693  04C7  00BF               	movwf	??___ftdiv
  2694  04C8  083F               	movf	??___ftdiv,w
  2695  04C9  02C7               	subwf	___ftdiv@exp,f
  2696  04CA  083C               	movf	___ftdiv@f1,w
  2697  04CB  00BF               	movwf	??___ftdiv
  2698  04CC  083D               	movf	___ftdiv@f1+1,w
  2699  04CD  00C0               	movwf	??___ftdiv+1
  2700  04CE  083E               	movf	___ftdiv@f1+2,w
  2701  04CF  00C1               	movwf	??___ftdiv+2
  2702  04D0  3010               	movlw	16
  2703  04D1                     u3365:	
  2704  04D1  1003               	clrc
  2705  04D2  0CC1               	rrf	??___ftdiv+2,f
  2706  04D3  0CC0               	rrf	??___ftdiv+1,f
  2707  04D4  0CBF               	rrf	??___ftdiv,f
  2708  04D5  3EFF               	addlw	-1
  2709  04D6  1D03               	skipz
  2710  04D7  2CD1               	goto	u3365
  2711  04D8  083F               	movf	??___ftdiv,w
  2712  04D9  00C2               	movwf	??___ftdiv+3
  2713  04DA  0842               	movf	??___ftdiv+3,w
  2714  04DB  00C8               	movwf	___ftdiv@sign
  2715  04DC  0839               	movf	___ftdiv@f2,w
  2716  04DD  00BF               	movwf	??___ftdiv
  2717  04DE  083A               	movf	___ftdiv@f2+1,w
  2718  04DF  00C0               	movwf	??___ftdiv+1
  2719  04E0  083B               	movf	___ftdiv@f2+2,w
  2720  04E1  00C1               	movwf	??___ftdiv+2
  2721  04E2  3010               	movlw	16
  2722  04E3                     u3375:	
  2723  04E3  1003               	clrc
  2724  04E4  0CC1               	rrf	??___ftdiv+2,f
  2725  04E5  0CC0               	rrf	??___ftdiv+1,f
  2726  04E6  0CBF               	rrf	??___ftdiv,f
  2727  04E7  3EFF               	addlw	-1
  2728  04E8  1D03               	skipz
  2729  04E9  2CE3               	goto	u3375
  2730  04EA  083F               	movf	??___ftdiv,w
  2731  04EB  00C2               	movwf	??___ftdiv+3
  2732  04EC  0842               	movf	??___ftdiv+3,w
  2733  04ED  06C8               	xorwf	___ftdiv@sign,f
  2734  04EE  3080               	movlw	128
  2735  04EF  00BF               	movwf	??___ftdiv
  2736  04F0  083F               	movf	??___ftdiv,w
  2737  04F1  05C8               	andwf	___ftdiv@sign,f
  2738  04F2  17BD               	bsf	___ftdiv@f1+1,7
  2739  04F3  30FF               	movlw	255
  2740  04F4  05BC               	andwf	___ftdiv@f1,f
  2741  04F5  30FF               	movlw	255
  2742  04F6  05BD               	andwf	___ftdiv@f1+1,f
  2743  04F7  3000               	movlw	0
  2744  04F8  05BE               	andwf	___ftdiv@f1+2,f
  2745  04F9  17BA               	bsf	___ftdiv@f2+1,7
  2746  04FA  30FF               	movlw	255
  2747  04FB  05B9               	andwf	___ftdiv@f2,f
  2748  04FC  30FF               	movlw	255
  2749  04FD  05BA               	andwf	___ftdiv@f2+1,f
  2750  04FE  3000               	movlw	0
  2751  04FF  05BB               	andwf	___ftdiv@f2+2,f
  2752  0500  3018               	movlw	24
  2753  0501  00BF               	movwf	??___ftdiv
  2754  0502  083F               	movf	??___ftdiv,w
  2755  0503  00C3               	movwf	___ftdiv@cntr
  2756  0504                     l2464:	
  2757  0504  3001               	movlw	1
  2758  0505                     u3385:	
  2759  0505  1003               	clrc
  2760  0506  0DC4               	rlf	___ftdiv@f3,f
  2761  0507  0DC5               	rlf	___ftdiv@f3+1,f
  2762  0508  0DC6               	rlf	___ftdiv@f3+2,f
  2763  0509  3EFF               	addlw	-1
  2764  050A  1D03               	skipz
  2765  050B  2D05               	goto	u3385
  2766  050C  083B               	movf	___ftdiv@f2+2,w
  2767  050D  023E               	subwf	___ftdiv@f1+2,w
  2768  050E  1D03               	skipz
  2769  050F  2D16               	goto	u3395
  2770  0510  083A               	movf	___ftdiv@f2+1,w
  2771  0511  023D               	subwf	___ftdiv@f1+1,w
  2772  0512  1D03               	skipz
  2773  0513  2D16               	goto	u3395
  2774  0514  0839               	movf	___ftdiv@f2,w
  2775  0515  023C               	subwf	___ftdiv@f1,w
  2776  0516                     u3395:	
  2777  0516  1C03               	skipc
  2778  0517  2D23               	goto	l2472
  2779  0518  0839               	movf	___ftdiv@f2,w
  2780  0519  02BC               	subwf	___ftdiv@f1,f
  2781  051A  083A               	movf	___ftdiv@f2+1,w
  2782  051B  1C03               	skipc
  2783  051C  0F3A               	incfsz	___ftdiv@f2+1,w
  2784  051D  02BD               	subwf	___ftdiv@f1+1,f
  2785  051E  083B               	movf	___ftdiv@f2+2,w
  2786  051F  1C03               	skipc
  2787  0520  0A3B               	incf	___ftdiv@f2+2,w
  2788  0521  02BE               	subwf	___ftdiv@f1+2,f
  2789  0522  1444               	bsf	___ftdiv@f3,0
  2790  0523                     l2472:	
  2791  0523  3001               	movlw	1
  2792  0524                     u3405:	
  2793  0524  1003               	clrc
  2794  0525  0DBC               	rlf	___ftdiv@f1,f
  2795  0526  0DBD               	rlf	___ftdiv@f1+1,f
  2796  0527  0DBE               	rlf	___ftdiv@f1+2,f
  2797  0528  3EFF               	addlw	-1
  2798  0529  1D03               	skipz
  2799  052A  2D24               	goto	u3405
  2800  052B  3001               	movlw	1
  2801  052C  02C3               	subwf	___ftdiv@cntr,f
  2802  052D  1D03               	btfss	3,2
  2803  052E  2D04               	goto	l2464
  2804  052F  0844               	movf	___ftdiv@f3,w
  2805  0530  00A0               	movwf	___ftpack@arg
  2806  0531  0845               	movf	___ftdiv@f3+1,w
  2807  0532  00A1               	movwf	___ftpack@arg+1
  2808  0533  0846               	movf	___ftdiv@f3+2,w
  2809  0534  00A2               	movwf	___ftpack@arg+2
  2810  0535  0847               	movf	___ftdiv@exp,w
  2811  0536  00BF               	movwf	??___ftdiv
  2812  0537  083F               	movf	??___ftdiv,w
  2813  0538  00A3               	movwf	___ftpack@exp
  2814  0539  0848               	movf	___ftdiv@sign,w
  2815  053A  00C0               	movwf	??___ftdiv+1
  2816  053B  0840               	movf	??___ftdiv+1,w
  2817  053C  00A4               	movwf	___ftpack@sign
  2818  053D  120A  118A  2646   	fcall	___ftpack
  2819  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0542  0820               	movf	?___ftpack,w
  2822  0543  00B9               	movwf	?___ftdiv
  2823  0544  0821               	movf	?___ftpack+1,w
  2824  0545  00BA               	movwf	?___ftdiv+1
  2825  0546  0822               	movf	?___ftpack+2,w
  2826  0547  00BB               	movwf	?___ftdiv+2
  2827  0548  0008               	return
  2828  0549                     __end_of___ftdiv:	
  2829                           
  2830                           	psect	text7
  2831  01D3                     __ptext7:	
  2832 ;; *************** function ___ftadd *****************
  2833 ;; Defined at:
  2834 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  f1              3   41[BANK0 ] float 
  2837 ;;  f2              3   44[BANK0 ] float 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  exp1            1   53[BANK0 ] unsigned char 
  2840 ;;  exp2            1   52[BANK0 ] unsigned char 
  2841 ;;  sign            1   51[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  3   41[BANK0 ] float 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       6       0       0       0
  2852 ;;      Locals:         0       3       0       0       0
  2853 ;;      Temps:          0       4       0       0       0
  2854 ;;      Totals:         0      13       0       0       0
  2855 ;;Total ram usage:       13 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		___ftpack
  2860 ;; This function is called by:
  2861 ;;		_temp_Measurement
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function ___ftadd
  2867  01D3                     ___ftadd:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2871  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2872  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2873  01D5  0849               	movf	___ftadd@f1,w
  2874  01D6  00CF               	movwf	??___ftadd
  2875  01D7  084A               	movf	___ftadd@f1+1,w
  2876  01D8  00D0               	movwf	??___ftadd+1
  2877  01D9  084B               	movf	___ftadd@f1+2,w
  2878  01DA  00D1               	movwf	??___ftadd+2
  2879  01DB  1003               	clrc
  2880  01DC  0D50               	rlf	??___ftadd+1,w
  2881  01DD  0D51               	rlf	??___ftadd+2,w
  2882  01DE  00D2               	movwf	??___ftadd+3
  2883  01DF  0852               	movf	??___ftadd+3,w
  2884  01E0  00D5               	movwf	___ftadd@exp1
  2885  01E1  084C               	movf	___ftadd@f2,w
  2886  01E2  00CF               	movwf	??___ftadd
  2887  01E3  084D               	movf	___ftadd@f2+1,w
  2888  01E4  00D0               	movwf	??___ftadd+1
  2889  01E5  084E               	movf	___ftadd@f2+2,w
  2890  01E6  00D1               	movwf	??___ftadd+2
  2891  01E7  1003               	clrc
  2892  01E8  0D50               	rlf	??___ftadd+1,w
  2893  01E9  0D51               	rlf	??___ftadd+2,w
  2894  01EA  00D2               	movwf	??___ftadd+3
  2895  01EB  0852               	movf	??___ftadd+3,w
  2896  01EC  00D4               	movwf	___ftadd@exp2
  2897  01ED  0855               	movf	___ftadd@exp1,w
  2898  01EE  1903               	btfsc	3,2
  2899  01EF  29FC               	goto	l2374
  2900  01F0  0854               	movf	___ftadd@exp2,w
  2901  01F1  0255               	subwf	___ftadd@exp1,w
  2902  01F2  1803               	skipnc
  2903  01F3  2A03               	goto	l2378
  2904  01F4  0355               	decf	___ftadd@exp1,w
  2905  01F5  3AFF               	xorlw	255
  2906  01F6  0754               	addwf	___ftadd@exp2,w
  2907  01F7  00CF               	movwf	??___ftadd
  2908  01F8  3019               	movlw	25
  2909  01F9  024F               	subwf	??___ftadd,w
  2910  01FA  1C03               	skipc
  2911  01FB  2A03               	goto	l2378
  2912  01FC                     l2374:	
  2913  01FC  084C               	movf	___ftadd@f2,w
  2914  01FD  00C9               	movwf	?___ftadd
  2915  01FE  084D               	movf	___ftadd@f2+1,w
  2916  01FF  00CA               	movwf	?___ftadd+1
  2917  0200  084E               	movf	___ftadd@f2+2,w
  2918  0201  00CB               	movwf	?___ftadd+2
  2919  0202  0008               	return
  2920  0203                     l2378:	
  2921  0203  0854               	movf	___ftadd@exp2,w
  2922  0204  1903               	btfsc	3,2
  2923  0205  0008               	return
  2924  0206  0855               	movf	___ftadd@exp1,w
  2925  0207  0254               	subwf	___ftadd@exp2,w
  2926  0208  1803               	skipnc
  2927  0209  2A12               	goto	l2384
  2928  020A  0354               	decf	___ftadd@exp2,w
  2929  020B  3AFF               	xorlw	255
  2930  020C  0755               	addwf	___ftadd@exp1,w
  2931  020D  00CF               	movwf	??___ftadd
  2932  020E  3019               	movlw	25
  2933  020F  024F               	subwf	??___ftadd,w
  2934  0210  1803               	btfsc	3,0
  2935  0211  0008               	return
  2936  0212                     l2384:	
  2937  0212  3006               	movlw	6
  2938  0213  00CF               	movwf	??___ftadd
  2939  0214  084F               	movf	??___ftadd,w
  2940  0215  00D3               	movwf	___ftadd@sign
  2941  0216  1BCB               	btfsc	___ftadd@f1+2,7
  2942  0217  17D3               	bsf	___ftadd@sign,7
  2943  0218  1BCE               	btfsc	___ftadd@f2+2,7
  2944  0219  1753               	bsf	___ftadd@sign,6
  2945  021A  17CA               	bsf	___ftadd@f1+1,7
  2946  021B  30FF               	movlw	255
  2947  021C  05C9               	andwf	___ftadd@f1,f
  2948  021D  30FF               	movlw	255
  2949  021E  05CA               	andwf	___ftadd@f1+1,f
  2950  021F  3000               	movlw	0
  2951  0220  05CB               	andwf	___ftadd@f1+2,f
  2952  0221  17CD               	bsf	___ftadd@f2+1,7
  2953  0222  30FF               	movlw	255
  2954  0223  05CC               	andwf	___ftadd@f2,f
  2955  0224  30FF               	movlw	255
  2956  0225  05CD               	andwf	___ftadd@f2+1,f
  2957  0226  3000               	movlw	0
  2958  0227  05CE               	andwf	___ftadd@f2+2,f
  2959  0228  0854               	movf	___ftadd@exp2,w
  2960  0229  0255               	subwf	___ftadd@exp1,w
  2961  022A  1803               	skipnc
  2962  022B  2A52               	goto	l2406
  2963  022C                     l2396:	
  2964  022C  3001               	movlw	1
  2965  022D                     u3195:	
  2966  022D  1003               	clrc
  2967  022E  0DCC               	rlf	___ftadd@f2,f
  2968  022F  0DCD               	rlf	___ftadd@f2+1,f
  2969  0230  0DCE               	rlf	___ftadd@f2+2,f
  2970  0231  3EFF               	addlw	-1
  2971  0232  1D03               	skipz
  2972  0233  2A2D               	goto	u3195
  2973  0234  3001               	movlw	1
  2974  0235  02D4               	subwf	___ftadd@exp2,f
  2975  0236  0854               	movf	___ftadd@exp2,w
  2976  0237  0655               	xorwf	___ftadd@exp1,w
  2977  0238  1903               	skipnz
  2978  0239  2A4D               	goto	l2404
  2979  023A  3001               	movlw	1
  2980  023B  02D3               	subwf	___ftadd@sign,f
  2981  023C  0853               	movf	___ftadd@sign,w
  2982  023D  3907               	andlw	7
  2983  023E  1903               	btfsc	3,2
  2984  023F  2A4D               	goto	l2404
  2985  0240  2A2C               	goto	l2396
  2986  0241                     l2402:	
  2987  0241  3001               	movlw	1
  2988  0242                     u3225:	
  2989  0242  1003               	clrc
  2990  0243  0CCB               	rrf	___ftadd@f1+2,f
  2991  0244  0CCA               	rrf	___ftadd@f1+1,f
  2992  0245  0CC9               	rrf	___ftadd@f1,f
  2993  0246  3EFF               	addlw	-1
  2994  0247  1D03               	skipz
  2995  0248  2A42               	goto	u3225
  2996  0249  3001               	movlw	1
  2997  024A  00CF               	movwf	??___ftadd
  2998  024B  084F               	movf	??___ftadd,w
  2999  024C  07D5               	addwf	___ftadd@exp1,f
  3000  024D                     l2404:	
  3001  024D  0855               	movf	___ftadd@exp1,w
  3002  024E  0654               	xorwf	___ftadd@exp2,w
  3003  024F  1903               	btfsc	3,2
  3004  0250  2A7B               	goto	l687
  3005  0251  2A41               	goto	l2402
  3006  0252                     l2406:	
  3007  0252  0855               	movf	___ftadd@exp1,w
  3008  0253  0254               	subwf	___ftadd@exp2,w
  3009  0254  1803               	skipnc
  3010  0255  2A7B               	goto	l687
  3011  0256                     l2408:	
  3012  0256  3001               	movlw	1
  3013  0257                     u3255:	
  3014  0257  1003               	clrc
  3015  0258  0DC9               	rlf	___ftadd@f1,f
  3016  0259  0DCA               	rlf	___ftadd@f1+1,f
  3017  025A  0DCB               	rlf	___ftadd@f1+2,f
  3018  025B  3EFF               	addlw	-1
  3019  025C  1D03               	skipz
  3020  025D  2A57               	goto	u3255
  3021  025E  3001               	movlw	1
  3022  025F  02D5               	subwf	___ftadd@exp1,f
  3023  0260  0854               	movf	___ftadd@exp2,w
  3024  0261  0655               	xorwf	___ftadd@exp1,w
  3025  0262  1903               	skipnz
  3026  0263  2A77               	goto	l2416
  3027  0264  3001               	movlw	1
  3028  0265  02D3               	subwf	___ftadd@sign,f
  3029  0266  0853               	movf	___ftadd@sign,w
  3030  0267  3907               	andlw	7
  3031  0268  1903               	btfsc	3,2
  3032  0269  2A77               	goto	l2416
  3033  026A  2A56               	goto	l2408
  3034  026B                     l2414:	
  3035  026B  3001               	movlw	1
  3036  026C                     u3285:	
  3037  026C  1003               	clrc
  3038  026D  0CCE               	rrf	___ftadd@f2+2,f
  3039  026E  0CCD               	rrf	___ftadd@f2+1,f
  3040  026F  0CCC               	rrf	___ftadd@f2,f
  3041  0270  3EFF               	addlw	-1
  3042  0271  1D03               	skipz
  3043  0272  2A6C               	goto	u3285
  3044  0273  3001               	movlw	1
  3045  0274  00CF               	movwf	??___ftadd
  3046  0275  084F               	movf	??___ftadd,w
  3047  0276  07D4               	addwf	___ftadd@exp2,f
  3048  0277                     l2416:	
  3049  0277  0855               	movf	___ftadd@exp1,w
  3050  0278  0654               	xorwf	___ftadd@exp2,w
  3051  0279  1D03               	skipz
  3052  027A  2A6B               	goto	l2414
  3053  027B                     l687:	
  3054  027B  1FD3               	btfss	___ftadd@sign,7
  3055  027C  2A8D               	goto	l2420
  3056  027D  30FF               	movlw	255
  3057  027E  06C9               	xorwf	___ftadd@f1,f
  3058  027F  30FF               	movlw	255
  3059  0280  06CA               	xorwf	___ftadd@f1+1,f
  3060  0281  30FF               	movlw	255
  3061  0282  06CB               	xorwf	___ftadd@f1+2,f
  3062  0283  3001               	movlw	1
  3063  0284  07C9               	addwf	___ftadd@f1,f
  3064  0285  3000               	movlw	0
  3065  0286  1803               	skipnc
  3066  0287  3001               	movlw	1
  3067  0288  07CA               	addwf	___ftadd@f1+1,f
  3068  0289  3000               	movlw	0
  3069  028A  1803               	skipnc
  3070  028B  3001               	movlw	1
  3071  028C  07CB               	addwf	___ftadd@f1+2,f
  3072  028D                     l2420:	
  3073  028D  1F53               	btfss	___ftadd@sign,6
  3074  028E  2A9F               	goto	l2424
  3075  028F  30FF               	movlw	255
  3076  0290  06CC               	xorwf	___ftadd@f2,f
  3077  0291  30FF               	movlw	255
  3078  0292  06CD               	xorwf	___ftadd@f2+1,f
  3079  0293  30FF               	movlw	255
  3080  0294  06CE               	xorwf	___ftadd@f2+2,f
  3081  0295  3001               	movlw	1
  3082  0296  07CC               	addwf	___ftadd@f2,f
  3083  0297  3000               	movlw	0
  3084  0298  1803               	skipnc
  3085  0299  3001               	movlw	1
  3086  029A  07CD               	addwf	___ftadd@f2+1,f
  3087  029B  3000               	movlw	0
  3088  029C  1803               	skipnc
  3089  029D  3001               	movlw	1
  3090  029E  07CE               	addwf	___ftadd@f2+2,f
  3091  029F                     l2424:	
  3092  029F  01D3               	clrf	___ftadd@sign
  3093  02A0  0849               	movf	___ftadd@f1,w
  3094  02A1  07CC               	addwf	___ftadd@f2,f
  3095  02A2  084A               	movf	___ftadd@f1+1,w
  3096  02A3  1103               	clrz
  3097  02A4  1803               	skipnc
  3098  02A5  0A4A               	incf	___ftadd@f1+1,w
  3099  02A6  1D03               	btfss	3,2
  3100  02A7  07CD               	addwf	___ftadd@f2+1,f
  3101  02A8  084B               	movf	___ftadd@f1+2,w
  3102  02A9  1103               	clrz
  3103  02AA  1803               	skipnc
  3104  02AB  0A4B               	incf	___ftadd@f1+2,w
  3105  02AC  1D03               	btfss	3,2
  3106  02AD  07CE               	addwf	___ftadd@f2+2,f
  3107  02AE  1FCE               	btfss	___ftadd@f2+2,7
  3108  02AF  2AC2               	goto	l2434
  3109  02B0  30FF               	movlw	255
  3110  02B1  06CC               	xorwf	___ftadd@f2,f
  3111  02B2  30FF               	movlw	255
  3112  02B3  06CD               	xorwf	___ftadd@f2+1,f
  3113  02B4  30FF               	movlw	255
  3114  02B5  06CE               	xorwf	___ftadd@f2+2,f
  3115  02B6  3001               	movlw	1
  3116  02B7  07CC               	addwf	___ftadd@f2,f
  3117  02B8  3000               	movlw	0
  3118  02B9  1803               	skipnc
  3119  02BA  3001               	movlw	1
  3120  02BB  07CD               	addwf	___ftadd@f2+1,f
  3121  02BC  3000               	movlw	0
  3122  02BD  1803               	skipnc
  3123  02BE  3001               	movlw	1
  3124  02BF  07CE               	addwf	___ftadd@f2+2,f
  3125  02C0  01D3               	clrf	___ftadd@sign
  3126  02C1  0AD3               	incf	___ftadd@sign,f
  3127  02C2                     l2434:	
  3128  02C2  084C               	movf	___ftadd@f2,w
  3129  02C3  00A0               	movwf	___ftpack@arg
  3130  02C4  084D               	movf	___ftadd@f2+1,w
  3131  02C5  00A1               	movwf	___ftpack@arg+1
  3132  02C6  084E               	movf	___ftadd@f2+2,w
  3133  02C7  00A2               	movwf	___ftpack@arg+2
  3134  02C8  0855               	movf	___ftadd@exp1,w
  3135  02C9  00CF               	movwf	??___ftadd
  3136  02CA  084F               	movf	??___ftadd,w
  3137  02CB  00A3               	movwf	___ftpack@exp
  3138  02CC  0853               	movf	___ftadd@sign,w
  3139  02CD  00D0               	movwf	??___ftadd+1
  3140  02CE  0850               	movf	??___ftadd+1,w
  3141  02CF  00A4               	movwf	___ftpack@sign
  3142  02D0  120A  118A  2646   	fcall	___ftpack
  3143  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3144  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3145  02D5  0820               	movf	?___ftpack,w
  3146  02D6  00C9               	movwf	?___ftadd
  3147  02D7  0821               	movf	?___ftpack+1,w
  3148  02D8  00CA               	movwf	?___ftadd+1
  3149  02D9  0822               	movf	?___ftpack+2,w
  3150  02DA  00CB               	movwf	?___ftadd+2
  3151  02DB  0008               	return
  3152  02DC                     __end_of___ftadd:	
  3153                           
  3154                           	psect	text8
  3155  0646                     __ptext8:	
  3156 ;; *************** function ___ftpack *****************
  3157 ;; Defined at:
  3158 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  arg             3    0[BANK0 ] unsigned um
  3161 ;;  exp             1    3[BANK0 ] unsigned char 
  3162 ;;  sign            1    4[BANK0 ] unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  3    0[BANK0 ] float 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3174 ;;      Params:         0       5       0       0       0
  3175 ;;      Locals:         0       0       0       0       0
  3176 ;;      Temps:          3       0       0       0       0
  3177 ;;      Totals:         3       5       0       0       0
  3178 ;;Total ram usage:        8 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    1
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		___ftadd
  3185 ;;		___ftdiv
  3186 ;;		___ftmul
  3187 ;;		___lwtoft
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function ___ftpack
  3193  0646                     ___ftpack:	
  3194                           
  3195                           ;incstack = 0
  3196                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3197  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0648  0823               	movf	___ftpack@exp,w
  3200  0649  1903               	btfsc	3,2
  3201  064A  2E50               	goto	l2282
  3202  064B  0822               	movf	___ftpack@arg+2,w
  3203  064C  0421               	iorwf	___ftpack@arg+1,w
  3204  064D  0420               	iorwf	___ftpack@arg,w
  3205  064E  1D03               	skipz
  3206  064F  2E63               	goto	l2288
  3207  0650                     l2282:	
  3208  0650  3000               	movlw	0
  3209  0651  00A0               	movwf	?___ftpack
  3210  0652  3000               	movlw	0
  3211  0653  00A1               	movwf	?___ftpack+1
  3212  0654  3000               	movlw	0
  3213  0655  00A2               	movwf	?___ftpack+2
  3214  0656  0008               	return
  3215  0657                     l2286:	
  3216  0657  3001               	movlw	1
  3217  0658  00F4               	movwf	??___ftpack
  3218  0659  0874               	movf	??___ftpack,w
  3219  065A  07A3               	addwf	___ftpack@exp,f
  3220  065B  3001               	movlw	1
  3221  065C                     u2905:	
  3222  065C  1003               	clrc
  3223  065D  0CA2               	rrf	___ftpack@arg+2,f
  3224  065E  0CA1               	rrf	___ftpack@arg+1,f
  3225  065F  0CA0               	rrf	___ftpack@arg,f
  3226  0660  3EFF               	addlw	-1
  3227  0661  1D03               	skipz
  3228  0662  2E5C               	goto	u2905
  3229  0663                     l2288:	
  3230  0663  30FE               	movlw	254
  3231  0664  0522               	andwf	___ftpack@arg+2,w
  3232  0665  1903               	btfsc	3,2
  3233  0666  2E7E               	goto	l656
  3234  0667  2E57               	goto	l2286
  3235  0668                     l2290:	
  3236  0668  3001               	movlw	1
  3237  0669  00F4               	movwf	??___ftpack
  3238  066A  0874               	movf	??___ftpack,w
  3239  066B  07A3               	addwf	___ftpack@exp,f
  3240  066C  3001               	movlw	1
  3241  066D  07A0               	addwf	___ftpack@arg,f
  3242  066E  3000               	movlw	0
  3243  066F  1803               	skipnc
  3244  0670  3001               	movlw	1
  3245  0671  07A1               	addwf	___ftpack@arg+1,f
  3246  0672  3000               	movlw	0
  3247  0673  1803               	skipnc
  3248  0674  3001               	movlw	1
  3249  0675  07A2               	addwf	___ftpack@arg+2,f
  3250  0676  3001               	movlw	1
  3251  0677                     u2925:	
  3252  0677  1003               	clrc
  3253  0678  0CA2               	rrf	___ftpack@arg+2,f
  3254  0679  0CA1               	rrf	___ftpack@arg+1,f
  3255  067A  0CA0               	rrf	___ftpack@arg,f
  3256  067B  3EFF               	addlw	-1
  3257  067C  1D03               	skipz
  3258  067D  2E77               	goto	u2925
  3259  067E                     l656:	
  3260  067E  30FF               	movlw	255
  3261  067F  0522               	andwf	___ftpack@arg+2,w
  3262  0680  1903               	btfsc	3,2
  3263  0681  2E8D               	goto	l2298
  3264  0682  2E68               	goto	l2290
  3265  0683                     l2296:	
  3266  0683  3001               	movlw	1
  3267  0684  02A3               	subwf	___ftpack@exp,f
  3268  0685  3001               	movlw	1
  3269  0686                     u2945:	
  3270  0686  1003               	clrc
  3271  0687  0DA0               	rlf	___ftpack@arg,f
  3272  0688  0DA1               	rlf	___ftpack@arg+1,f
  3273  0689  0DA2               	rlf	___ftpack@arg+2,f
  3274  068A  3EFF               	addlw	-1
  3275  068B  1D03               	skipz
  3276  068C  2E86               	goto	u2945
  3277  068D                     l2298:	
  3278  068D  1BA1               	btfsc	___ftpack@arg+1,7
  3279  068E  2E93               	goto	l663
  3280  068F  3002               	movlw	2
  3281  0690  0223               	subwf	___ftpack@exp,w
  3282  0691  1803               	skipnc
  3283  0692  2E83               	goto	l2296
  3284  0693                     l663:	
  3285  0693  1823               	btfsc	___ftpack@exp,0
  3286  0694  2E9B               	goto	l664
  3287  0695  30FF               	movlw	255
  3288  0696  05A0               	andwf	___ftpack@arg,f
  3289  0697  307F               	movlw	127
  3290  0698  05A1               	andwf	___ftpack@arg+1,f
  3291  0699  30FF               	movlw	255
  3292  069A  05A2               	andwf	___ftpack@arg+2,f
  3293  069B                     l664:	
  3294  069B  1003               	clrc
  3295  069C  0CA3               	rrf	___ftpack@exp,f
  3296  069D  0823               	movf	___ftpack@exp,w
  3297  069E  00F4               	movwf	??___ftpack
  3298  069F  01F5               	clrf	??___ftpack+1
  3299  06A0  01F6               	clrf	??___ftpack+2
  3300  06A1  3010               	movlw	16
  3301  06A2                     u2985:	
  3302  06A2  1003               	clrc
  3303  06A3  0DF4               	rlf	??___ftpack,f
  3304  06A4  0DF5               	rlf	??___ftpack+1,f
  3305  06A5  0DF6               	rlf	??___ftpack+2,f
  3306  06A6  3EFF               	addlw	-1
  3307  06A7  1D03               	skipz
  3308  06A8  2EA2               	goto	u2985
  3309  06A9  0874               	movf	??___ftpack,w
  3310  06AA  04A0               	iorwf	___ftpack@arg,f
  3311  06AB  0875               	movf	??___ftpack+1,w
  3312  06AC  04A1               	iorwf	___ftpack@arg+1,f
  3313  06AD  0876               	movf	??___ftpack+2,w
  3314  06AE  04A2               	iorwf	___ftpack@arg+2,f
  3315  06AF  0824               	movf	___ftpack@sign,w
  3316  06B0  1903               	btfsc	3,2
  3317  06B1  0008               	return
  3318  06B2  17A2               	bsf	___ftpack@arg+2,7
  3319  06B3  0008               	return
  3320  06B4                     __end_of___ftpack:	
  3321                           
  3322                           	psect	text9
  3323  0033                     __ptext9:	
  3324 ;; *************** function _sprintf *****************
  3325 ;; Defined at:
  3326 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  sp              1    wreg     PTR unsigned char 
  3329 ;;		 -> sTemperature(2), 
  3330 ;;  f               1   75[BANK0 ] PTR const unsigned char 
  3331 ;;		 -> STR_1(4), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  sp              1    8[BANK1 ] PTR unsigned char 
  3334 ;;		 -> sTemperature(2), 
  3335 ;;  tmpval          4    0        struct .
  3336 ;;  width           2    9[BANK1 ] int 
  3337 ;;  val             2    6[BANK1 ] unsigned int 
  3338 ;;  cp              2    0        PTR const unsigned char 
  3339 ;;  len             2    0        unsigned int 
  3340 ;;  c               1   11[BANK1 ] char 
  3341 ;;  flag            1    5[BANK1 ] unsigned char 
  3342 ;;  prec            1    4[BANK1 ] char 
  3343 ;;  ap              1    3[BANK1 ] PTR void [1]
  3344 ;;		 -> ?_sprintf(2), 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2   75[BANK0 ] int 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       3       0       0       0
  3355 ;;      Locals:         0       0       9       0       0
  3356 ;;      Temps:          0       0       3       0       0
  3357 ;;      Totals:         0       3      12       0       0
  3358 ;;Total ram usage:       15 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		___lwdiv
  3363 ;;		___lwmod
  3364 ;;		___wmul
  3365 ;;		_isdigit
  3366 ;; This function is called by:
  3367 ;;		_temp_Display
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _sprintf
  3373  0033                     _sprintf:	
  3374                           
  3375                           ;incstack = 0
  3376                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3377                           ;sprintf@sp stored from wreg
  3378  0033  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0034  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0035  00A8               	movwf	sprintf@sp^(0+128)
  3381                           
  3382                           ;doprnt.c: 494: va_list ap;
  3383                           ;doprnt.c: 499: signed char c;
  3384                           ;doprnt.c: 501: int width;
  3385                           ;doprnt.c: 506: signed char prec;
  3386                           ;doprnt.c: 508: unsigned char flag;
  3387                           ;doprnt.c: 523: union {
  3388                           ;doprnt.c: 524: unsigned long vd;
  3389                           ;doprnt.c: 525: double integ;
  3390                           ;doprnt.c: 526: } tmpval;
  3391                           ;doprnt.c: 528: unsigned int val;
  3392                           ;doprnt.c: 529: unsigned len;
  3393                           ;doprnt.c: 530: const char * cp;
  3394                           ;doprnt.c: 533: *ap = __va_start();
  3395  0036  306C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3396  0037  00A0               	movwf	??_sprintf^(0+128)
  3397  0038  0820               	movf	??_sprintf^(0+128),w
  3398  0039  00A3               	movwf	sprintf@ap^(0+128)
  3399  003A                     l2734:	
  3400                           ;doprnt.c: 536: while(c = *f++) {
  3401                           
  3402  003A  3001               	movlw	1
  3403  003B  1283               	bcf	3,5	;RP0=0, select bank0
  3404  003C  1303               	bcf	3,6	;RP1=0, select bank0
  3405  003D  07EB               	addwf	sprintf@f,f
  3406  003E  30FF               	movlw	-1
  3407  003F  076B               	addwf	sprintf@f,w
  3408  0040  0084               	movwf	4
  3409  0041  120A  158A  2000  120A  118A  	fcall	stringdir
  3410  0046  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0047  1303               	bcf	3,6	;RP1=0, select bank1
  3412  0048  00A0               	movwf	??_sprintf^(0+128)
  3413  0049  0820               	movf	??_sprintf^(0+128),w
  3414  004A  00AB               	movwf	sprintf@c^(0+128)
  3415  004B  082B               	movf	sprintf@c^(0+128),w
  3416  004C  1903               	btfsc	3,2
  3417  004D  29CC               	goto	l2736
  3418                           
  3419                           ;doprnt.c: 538: if(c != '%')
  3420  004E  3025               	movlw	37
  3421  004F  062B               	xorwf	sprintf@c^(0+128),w
  3422  0050  1903               	btfsc	3,2
  3423  0051  285E               	goto	l2660
  3424                           
  3425                           ;doprnt.c: 540: {
  3426                           ;doprnt.c: 541: ((*sp++ = (c)));
  3427  0052  082B               	movf	sprintf@c^(0+128),w
  3428  0053  00A0               	movwf	??_sprintf^(0+128)
  3429  0054  0828               	movf	sprintf@sp^(0+128),w
  3430  0055  0084               	movwf	4
  3431  0056  0820               	movf	??_sprintf^(0+128),w
  3432  0057  1383               	bcf	3,7	;select IRP bank0
  3433  0058  0080               	movwf	0
  3434  0059  3001               	movlw	1
  3435  005A  00A0               	movwf	??_sprintf^(0+128)
  3436  005B  0820               	movf	??_sprintf^(0+128),w
  3437  005C  07A8               	addwf	sprintf@sp^(0+128),f
  3438                           
  3439                           ;doprnt.c: 542: continue;
  3440  005D  283A               	goto	l2734
  3441  005E                     l2660:	
  3442                           
  3443                           ;doprnt.c: 543: }
  3444                           ;doprnt.c: 546: width = 0;
  3445  005E  01A9               	clrf	sprintf@width^(0+128)
  3446  005F  01AA               	clrf	(sprintf@width+1)^(0+128)
  3447                           
  3448                           ;doprnt.c: 548: flag = 0;
  3449  0060  01A5               	clrf	sprintf@flag^(0+128)
  3450                           
  3451                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3452  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0063  086B               	movf	sprintf@f,w
  3455  0064  0084               	movwf	4
  3456  0065  120A  158A  2000  120A  118A  	fcall	stringdir
  3457  006A  120A  158A  24CA  120A  118A  	fcall	_isdigit
  3458  006F  1C03               	btfss	3,0
  3459  0070  28C3               	goto	l2676
  3460                           
  3461                           ;doprnt.c: 598: width = 0;
  3462  0071  1683               	bsf	3,5	;RP0=1, select bank1
  3463  0072  1303               	bcf	3,6	;RP1=0, select bank1
  3464  0073  01A9               	clrf	sprintf@width^(0+128)
  3465  0074  01AA               	clrf	(sprintf@width+1)^(0+128)
  3466  0075                     l2666:	
  3467                           ;doprnt.c: 599: do {
  3468                           
  3469                           
  3470                           ;doprnt.c: 600: width *= 10;
  3471  0075  300A               	movlw	10
  3472  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0078  00A0               	movwf	___wmul@multiplier
  3475  0079  3000               	movlw	0
  3476  007A  00A1               	movwf	___wmul@multiplier+1
  3477  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3478  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3479  007D  082A               	movf	(sprintf@width+1)^(0+128),w
  3480  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3481  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0080  00A3               	movwf	___wmul@multiplicand+1
  3483  0081  1683               	bsf	3,5	;RP0=1, select bank1
  3484  0082  1303               	bcf	3,6	;RP1=0, select bank1
  3485  0083  0829               	movf	sprintf@width^(0+128),w
  3486  0084  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0085  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0086  00A2               	movwf	___wmul@multiplicand
  3489  0087  120A  158A  25A6  120A  118A  	fcall	___wmul
  3490  008C  1283               	bcf	3,5	;RP0=0, select bank0
  3491  008D  1303               	bcf	3,6	;RP1=0, select bank0
  3492  008E  0821               	movf	?___wmul+1,w
  3493  008F  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0090  1303               	bcf	3,6	;RP1=0, select bank1
  3495  0091  00AA               	movwf	(sprintf@width+1)^(0+128)
  3496  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0094  0820               	movf	?___wmul,w
  3499  0095  1683               	bsf	3,5	;RP0=1, select bank1
  3500  0096  1303               	bcf	3,6	;RP1=0, select bank1
  3501  0097  00A9               	movwf	sprintf@width^(0+128)
  3502                           
  3503                           ;doprnt.c: 601: width += *f++ - '0';
  3504  0098  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0099  1303               	bcf	3,6	;RP1=0, select bank0
  3506  009A  086B               	movf	sprintf@f,w
  3507  009B  0084               	movwf	4
  3508  009C  120A  158A  2000  120A  118A  	fcall	stringdir
  3509  00A1  3ED0               	addlw	208
  3510  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3511  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  3512  00A4  00A0               	movwf	??_sprintf^(0+128)
  3513  00A5  30FF               	movlw	255
  3514  00A6  1803               	skipnc
  3515  00A7  3000               	movlw	0
  3516  00A8  00A1               	movwf	(??_sprintf^(0+128)+1)
  3517  00A9  0820               	movf	??_sprintf^(0+128),w
  3518  00AA  07A9               	addwf	sprintf@width^(0+128),f
  3519  00AB  1803               	skipnc
  3520  00AC  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3521  00AD  0821               	movf	(??_sprintf+1)^(0+128),w
  3522  00AE  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3523  00AF  3001               	movlw	1
  3524  00B0  00A0               	movwf	??_sprintf^(0+128)
  3525  00B1  0820               	movf	??_sprintf^(0+128),w
  3526  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3527  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3528  00B4  07EB               	addwf	sprintf@f,f
  3529                           
  3530                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3531  00B5  086B               	movf	sprintf@f,w
  3532  00B6  0084               	movwf	4
  3533  00B7  120A  158A  2000  120A  118A  	fcall	stringdir
  3534  00BC  120A  158A  24CA  120A  118A  	fcall	_isdigit
  3535  00C1  1803               	btfsc	3,0
  3536  00C2  2875               	goto	l2666
  3537  00C3                     l2676:	
  3538                           ;doprnt.c: 822: }
  3539                           
  3540                           ;doprnt.c: 813: continue;
  3541                           
  3542                           ;doprnt.c: 802: default:
  3543                           
  3544                           ;doprnt.c: 698: case 'i':
  3545                           ;doprnt.c: 699: break;
  3546                           
  3547                           ;doprnt.c: 697: case 'd':
  3548                           
  3549                           ;doprnt.c: 638: goto alldone;
  3550                           
  3551                           ;doprnt.c: 637: case 0:
  3552                           
  3553                           ;doprnt.c: 608: }
  3554                           ;doprnt.c: 635: switch(c = *f++) {
  3555                           
  3556  00C3  3001               	movlw	1
  3557  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3558  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3559  00C6  07EB               	addwf	sprintf@f,f
  3560  00C7  30FF               	movlw	-1
  3561  00C8  076B               	addwf	sprintf@f,w
  3562  00C9  0084               	movwf	4
  3563  00CA  120A  158A  2000  120A  118A  	fcall	stringdir
  3564  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  3565  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  3566  00D1  00AB               	movwf	sprintf@c^(0+128)
  3567                           
  3568                           ; Switch size 1, requested type "space"
  3569                           ; Number of cases is 3, Range of values is 0 to 105
  3570                           ; switch strategies available:
  3571                           ; Name         Instructions Cycles
  3572                           ; simple_byte           10     6 (average)
  3573                           ; jumptable            260     6 (fixed)
  3574                           ;	Chosen strategy is simple_byte
  3575  00D2  3A00               	xorlw	0	; case 0
  3576  00D3  1903               	skipnz
  3577  00D4  29CC               	goto	l2736
  3578  00D5  3A64               	xorlw	100	; case 100
  3579  00D6  1903               	skipnz
  3580  00D7  28DC               	goto	l2678
  3581  00D8  3A0D               	xorlw	13	; case 105
  3582  00D9  1903               	skipnz
  3583  00DA  28DC               	goto	l2678
  3584  00DB  283A               	goto	l2734
  3585  00DC                     l2678:	
  3586                           
  3587                           ;doprnt.c: 1253: {
  3588                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3589  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3590  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  3591  00DE  0823               	movf	sprintf@ap^(0+128),w
  3592  00DF  0084               	movwf	4
  3593  00E0  1383               	bcf	3,7	;select IRP bank0
  3594  00E1  0800               	movf	0,w
  3595  00E2  00A6               	movwf	sprintf@val^(0+128)
  3596  00E3  0A84               	incf	4,f
  3597  00E4  0800               	movf	0,w
  3598  00E5  00A7               	movwf	(sprintf@val+1)^(0+128)
  3599  00E6  3002               	movlw	2
  3600  00E7  00A0               	movwf	??_sprintf^(0+128)
  3601  00E8  0820               	movf	??_sprintf^(0+128),w
  3602  00E9  07A3               	addwf	sprintf@ap^(0+128),f
  3603                           
  3604                           ;doprnt.c: 1261: if((int)val < 0) {
  3605  00EA  1FA7               	btfss	(sprintf@val+1)^(0+128),7
  3606  00EB  28F5               	goto	l2688
  3607                           
  3608                           ;doprnt.c: 1262: flag |= 0x03;
  3609  00EC  3003               	movlw	3
  3610  00ED  00A0               	movwf	??_sprintf^(0+128)
  3611  00EE  0820               	movf	??_sprintf^(0+128),w
  3612  00EF  04A5               	iorwf	sprintf@flag^(0+128),f
  3613                           
  3614                           ;doprnt.c: 1263: val = -val;
  3615  00F0  09A6               	comf	sprintf@val^(0+128),f
  3616  00F1  09A7               	comf	(sprintf@val+1)^(0+128),f
  3617  00F2  0AA6               	incf	sprintf@val^(0+128),f
  3618  00F3  1903               	skipnz
  3619  00F4  0AA7               	incf	(sprintf@val+1)^(0+128),f
  3620  00F5                     l2688:	
  3621                           
  3622                           ;doprnt.c: 1264: }
  3623                           ;doprnt.c: 1266: }
  3624                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3625  00F5  01AB               	clrf	sprintf@c^(0+128)
  3626  00F6  0AAB               	incf	sprintf@c^(0+128),f
  3627  00F7  3005               	movlw	5
  3628  00F8  062B               	xorwf	sprintf@c^(0+128),w
  3629  00F9  1903               	btfsc	3,2
  3630  00FA  291C               	goto	l2700
  3631  00FB                     l2694:	
  3632                           
  3633                           ;doprnt.c: 1306: if(val < dpowers[c])
  3634  00FB  082B               	movf	sprintf@c^(0+128),w
  3635  00FC  00A0               	movwf	??_sprintf^(0+128)
  3636  00FD  0720               	addwf	??_sprintf^(0+128),w
  3637  00FE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3638  00FF  0084               	movwf	4
  3639  0100  120A  158A  2000  120A  118A  	fcall	stringdir
  3640  0105  00A1               	movwf	(??_sprintf+1)^(0+128)
  3641  0106  120A  158A  2000  120A  118A  	fcall	stringdir
  3642  010B  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3643  010C  0822               	movf	(??_sprintf+2)^(0+128),w
  3644  010D  0227               	subwf	(sprintf@val+1)^(0+128),w
  3645  010E  1D03               	skipz
  3646  010F  2912               	goto	u3855
  3647  0110  0821               	movf	(??_sprintf+1)^(0+128),w
  3648  0111  0226               	subwf	sprintf@val^(0+128),w
  3649  0112                     u3855:	
  3650  0112  1C03               	btfss	3,0
  3651  0113  291C               	goto	l2700
  3652                           
  3653                           ;doprnt.c: 1307: break;
  3654  0114  3001               	movlw	1
  3655  0115  00A0               	movwf	??_sprintf^(0+128)
  3656  0116  0820               	movf	??_sprintf^(0+128),w
  3657  0117  07AB               	addwf	sprintf@c^(0+128),f
  3658  0118  3005               	movlw	5
  3659  0119  062B               	xorwf	sprintf@c^(0+128),w
  3660  011A  1D03               	btfss	3,2
  3661  011B  28FB               	goto	l2694
  3662  011C                     l2700:	
  3663                           
  3664                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3665  011C  0829               	movf	sprintf@width^(0+128),w
  3666  011D  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3667  011E  1903               	btfsc	3,2
  3668  011F  292A               	goto	l400
  3669  0120  0825               	movf	sprintf@flag^(0+128),w
  3670  0121  3903               	andlw	3
  3671  0122  1903               	btfsc	3,2
  3672  0123  292A               	goto	l400
  3673                           
  3674                           ;doprnt.c: 1346: width--;
  3675  0124  30FF               	movlw	255
  3676  0125  07A9               	addwf	sprintf@width^(0+128),f
  3677  0126  1803               	skipnc
  3678  0127  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3679  0128  30FF               	movlw	255
  3680  0129  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3681  012A                     l400:	
  3682                           
  3683                           ;doprnt.c: 1381: if(width > c)
  3684  012A  082B               	movf	sprintf@c^(0+128),w
  3685  012B  00A0               	movwf	??_sprintf^(0+128)
  3686  012C  01A1               	clrf	(??_sprintf^(0+128)+1)
  3687  012D  1BA0               	btfsc	??_sprintf^(0+128),7
  3688  012E  03A1               	decf	(??_sprintf^(0+128)+1),f
  3689  012F  0821               	movf	(??_sprintf+1)^(0+128),w
  3690  0130  3A80               	xorlw	128
  3691  0131  00A2               	movwf	(??_sprintf+2)^(0+128)
  3692  0132  082A               	movf	(sprintf@width+1)^(0+128),w
  3693  0133  3A80               	xorlw	128
  3694  0134  0222               	subwf	(??_sprintf+2)^(0+128),w
  3695  0135  1D03               	skipz
  3696  0136  2939               	goto	u3895
  3697  0137  0829               	movf	sprintf@width^(0+128),w
  3698  0138  0220               	subwf	??_sprintf^(0+128),w
  3699  0139                     u3895:	
  3700  0139  1803               	skipnc
  3701  013A  2949               	goto	l2708
  3702                           
  3703                           ;doprnt.c: 1382: width -= c;
  3704  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3705  013C  1303               	bcf	3,6	;RP1=0, select bank1
  3706  013D  082B               	movf	sprintf@c^(0+128),w
  3707  013E  00A0               	movwf	??_sprintf^(0+128)
  3708  013F  01A1               	clrf	(??_sprintf^(0+128)+1)
  3709  0140  1BA0               	btfsc	??_sprintf^(0+128),7
  3710  0141  03A1               	decf	(??_sprintf^(0+128)+1),f
  3711  0142  0820               	movf	??_sprintf^(0+128),w
  3712  0143  02A9               	subwf	sprintf@width^(0+128),f
  3713  0144  0821               	movf	(??_sprintf+1)^(0+128),w
  3714  0145  1C03               	skipc
  3715  0146  03AA               	decf	(sprintf@width+1)^(0+128),f
  3716  0147  02AA               	subwf	(sprintf@width+1)^(0+128),f
  3717  0148  294D               	goto	l2710
  3718  0149                     l2708:	
  3719                           
  3720                           ;doprnt.c: 1383: else
  3721                           ;doprnt.c: 1384: width = 0;
  3722  0149  1683               	bsf	3,5	;RP0=1, select bank1
  3723  014A  1303               	bcf	3,6	;RP1=0, select bank1
  3724  014B  01A9               	clrf	sprintf@width^(0+128)
  3725  014C  01AA               	clrf	(sprintf@width+1)^(0+128)
  3726  014D                     l2710:	
  3727                           
  3728                           ;doprnt.c: 1422: {
  3729                           ;doprnt.c: 1424: if(width
  3730                           ;doprnt.c: 1428: )
  3731  014D  0829               	movf	sprintf@width^(0+128),w
  3732  014E  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3733  014F  1903               	btfsc	3,2
  3734  0150  2966               	goto	l2718
  3735  0151                     l2712:	
  3736                           ;doprnt.c: 1429: do
  3737                           
  3738                           
  3739                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3740  0151  3020               	movlw	32
  3741  0152  00A0               	movwf	??_sprintf^(0+128)
  3742  0153  0828               	movf	sprintf@sp^(0+128),w
  3743  0154  0084               	movwf	4
  3744  0155  0820               	movf	??_sprintf^(0+128),w
  3745  0156  1383               	bcf	3,7	;select IRP bank0
  3746  0157  0080               	movwf	0
  3747  0158  3001               	movlw	1
  3748  0159  00A0               	movwf	??_sprintf^(0+128)
  3749  015A  0820               	movf	??_sprintf^(0+128),w
  3750  015B  07A8               	addwf	sprintf@sp^(0+128),f
  3751                           
  3752                           ;doprnt.c: 1431: while(--width);
  3753  015C  30FF               	movlw	255
  3754  015D  07A9               	addwf	sprintf@width^(0+128),f
  3755  015E  1803               	skipnc
  3756  015F  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3757  0160  30FF               	movlw	255
  3758  0161  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3759  0162  0829               	movf	sprintf@width^(0+128),w
  3760  0163  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3761  0164  1D03               	btfss	3,2
  3762  0165  2951               	goto	l2712
  3763  0166                     l2718:	
  3764                           
  3765                           ;doprnt.c: 1438: if(flag & 0x03)
  3766  0166  0825               	movf	sprintf@flag^(0+128),w
  3767  0167  3903               	andlw	3
  3768  0168  1903               	btfsc	3,2
  3769  0169  2975               	goto	l2724
  3770                           
  3771                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3772  016A  302D               	movlw	45
  3773  016B  00A0               	movwf	??_sprintf^(0+128)
  3774  016C  0828               	movf	sprintf@sp^(0+128),w
  3775  016D  0084               	movwf	4
  3776  016E  0820               	movf	??_sprintf^(0+128),w
  3777  016F  1383               	bcf	3,7	;select IRP bank0
  3778  0170  0080               	movwf	0
  3779  0171  3001               	movlw	1
  3780  0172  00A0               	movwf	??_sprintf^(0+128)
  3781  0173  0820               	movf	??_sprintf^(0+128),w
  3782  0174  07A8               	addwf	sprintf@sp^(0+128),f
  3783  0175                     l2724:	
  3784                           
  3785                           ;doprnt.c: 1469: }
  3786                           ;doprnt.c: 1472: prec = c;
  3787  0175  082B               	movf	sprintf@c^(0+128),w
  3788  0176  00A0               	movwf	??_sprintf^(0+128)
  3789  0177  0820               	movf	??_sprintf^(0+128),w
  3790  0178  00A4               	movwf	sprintf@prec^(0+128)
  3791  0179                     l2732:	
  3792                           ;doprnt.c: 1474: while(prec--) {
  3793                           
  3794  0179  30FF               	movlw	255
  3795  017A  00A0               	movwf	??_sprintf^(0+128)
  3796  017B  0820               	movf	??_sprintf^(0+128),w
  3797  017C  07A4               	addwf	sprintf@prec^(0+128),f
  3798  017D  0A24               	incf	sprintf@prec^(0+128),w
  3799  017E  1903               	btfsc	3,2
  3800  017F  283A               	goto	l2734
  3801                           
  3802                           ;doprnt.c: 1478: {
  3803                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3804  0180  300A               	movlw	10
  3805  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0183  00A7               	movwf	___lwmod@divisor
  3808  0184  3000               	movlw	0
  3809  0185  00A8               	movwf	___lwmod@divisor+1
  3810  0186  1683               	bsf	3,5	;RP0=1, select bank1
  3811  0187  1303               	bcf	3,6	;RP1=0, select bank1
  3812  0188  0824               	movf	sprintf@prec^(0+128),w
  3813  0189  00A0               	movwf	??_sprintf^(0+128)
  3814  018A  0720               	addwf	??_sprintf^(0+128),w
  3815  018B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3816  018C  0084               	movwf	4
  3817  018D  120A  158A  2000  120A  118A  	fcall	stringdir
  3818  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0194  00A0               	movwf	___lwdiv@divisor
  3821  0195  120A  158A  2000  120A  118A  	fcall	stringdir
  3822  019A  00A1               	movwf	___lwdiv@divisor+1
  3823  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3824  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3825  019D  0827               	movf	(sprintf@val+1)^(0+128),w
  3826  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3827  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3828  01A0  00A3               	movwf	___lwdiv@dividend+1
  3829  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  3830  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  3831  01A3  0826               	movf	sprintf@val^(0+128),w
  3832  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3833  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3834  01A6  00A2               	movwf	___lwdiv@dividend
  3835  01A7  120A  158A  265F  120A  118A  	fcall	___lwdiv
  3836  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3837  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3838  01AE  0821               	movf	?___lwdiv+1,w
  3839  01AF  00AA               	movwf	___lwmod@dividend+1
  3840  01B0  0820               	movf	?___lwdiv,w
  3841  01B1  00A9               	movwf	___lwmod@dividend
  3842  01B2  120A  158A  25F4  120A  118A  	fcall	___lwmod
  3843  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3844  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3845  01B9  0827               	movf	?___lwmod,w
  3846  01BA  3E30               	addlw	48
  3847  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3848  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3849  01BD  00A1               	movwf	(??_sprintf+1)^(0+128)
  3850  01BE  0821               	movf	(??_sprintf+1)^(0+128),w
  3851  01BF  00AB               	movwf	sprintf@c^(0+128)
  3852                           
  3853                           ;doprnt.c: 1523: }
  3854                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3855  01C0  082B               	movf	sprintf@c^(0+128),w
  3856  01C1  00A0               	movwf	??_sprintf^(0+128)
  3857  01C2  0828               	movf	sprintf@sp^(0+128),w
  3858  01C3  0084               	movwf	4
  3859  01C4  0820               	movf	??_sprintf^(0+128),w
  3860  01C5  1383               	bcf	3,7	;select IRP bank0
  3861  01C6  0080               	movwf	0
  3862  01C7  3001               	movlw	1
  3863  01C8  00A0               	movwf	??_sprintf^(0+128)
  3864  01C9  0820               	movf	??_sprintf^(0+128),w
  3865  01CA  07A8               	addwf	sprintf@sp^(0+128),f
  3866  01CB  2979               	goto	l2732
  3867  01CC                     l2736:	
  3868                           ;doprnt.c: 1525: }
  3869                           ;doprnt.c: 1533: }
  3870                           ;doprnt.c: 1535: alldone:
  3871                           
  3872                           
  3873                           ;doprnt.c: 1538: *sp = 0;
  3874  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  3875  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  3876  01CE  0828               	movf	sprintf@sp^(0+128),w
  3877  01CF  0084               	movwf	4
  3878  01D0  1383               	bcf	3,7	;select IRP bank0
  3879  01D1  0180               	clrf	0
  3880  01D2  0008               	return
  3881  01D3                     __end_of_sprintf:	
  3882                           ;doprnt.c: 1540: return 0;
  3883                           ;	Return value of _sprintf is never used
  3884                           
  3885                           
  3886                           	psect	text10
  3887  0CCA                     __ptext10:	
  3888 ;; *************** function _isdigit *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  c               1    wreg     unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  c               1    5[COMMON] unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;		None               void
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         2       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_sprintf
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _isdigit
  3920  0CCA                     _isdigit:	
  3921                           
  3922                           ;incstack = 0
  3923                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3924                           ;isdigit@c stored from wreg
  3925  0CCA  00F5               	movwf	isdigit@c
  3926  0CCB  01F4               	clrf	_isdigit$1267
  3927  0CCC  303A               	movlw	58
  3928  0CCD  0275               	subwf	isdigit@c,w
  3929  0CCE  1803               	skipnc
  3930  0CCF  2CD6               	goto	l1734
  3931  0CD0  3030               	movlw	48
  3932  0CD1  0275               	subwf	isdigit@c,w
  3933  0CD2  1C03               	skipc
  3934  0CD3  2CD6               	goto	l1734
  3935  0CD4  01F4               	clrf	_isdigit$1267
  3936  0CD5  0AF4               	incf	_isdigit$1267,f
  3937  0CD6                     l1734:	
  3938  0CD6  0C74               	rrf	_isdigit$1267,w
  3939  0CD7  0008               	return
  3940  0CD8                     __end_of_isdigit:	
  3941                           
  3942                           	psect	text11
  3943  0DA6                     __ptext11:	
  3944 ;; *************** function ___wmul *****************
  3945 ;; Defined at:
  3946 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3949 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  product         2    4[COMMON] unsigned int 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  2    0[BANK0 ] unsigned int 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       4       0       0       0
  3962 ;;      Locals:         2       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         2       4       0       0       0
  3965 ;;Total ram usage:        6 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_sprintf
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function ___wmul
  3977  0DA6                     ___wmul:	
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3981  0DA6  01F4               	clrf	___wmul@product
  3982  0DA7  01F5               	clrf	___wmul@product+1
  3983  0DA8                     l2342:	
  3984  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0DAA  1C20               	btfss	___wmul@multiplier,0
  3987  0DAB  2DB2               	goto	l495
  3988  0DAC  0822               	movf	___wmul@multiplicand,w
  3989  0DAD  07F4               	addwf	___wmul@product,f
  3990  0DAE  1803               	skipnc
  3991  0DAF  0AF5               	incf	___wmul@product+1,f
  3992  0DB0  0823               	movf	___wmul@multiplicand+1,w
  3993  0DB1  07F5               	addwf	___wmul@product+1,f
  3994  0DB2                     l495:	
  3995  0DB2  3001               	movlw	1
  3996  0DB3                     u3025:	
  3997  0DB3  1003               	clrc
  3998  0DB4  0DA2               	rlf	___wmul@multiplicand,f
  3999  0DB5  0DA3               	rlf	___wmul@multiplicand+1,f
  4000  0DB6  3EFF               	addlw	-1
  4001  0DB7  1D03               	skipz
  4002  0DB8  2DB3               	goto	u3025
  4003  0DB9  3001               	movlw	1
  4004  0DBA                     u3035:	
  4005  0DBA  1003               	clrc
  4006  0DBB  0CA1               	rrf	___wmul@multiplier+1,f
  4007  0DBC  0CA0               	rrf	___wmul@multiplier,f
  4008  0DBD  3EFF               	addlw	-1
  4009  0DBE  1D03               	skipz
  4010  0DBF  2DBA               	goto	u3035
  4011  0DC0  0820               	movf	___wmul@multiplier,w
  4012  0DC1  0421               	iorwf	___wmul@multiplier+1,w
  4013  0DC2  1D03               	btfss	3,2
  4014  0DC3  2DA8               	goto	l2342
  4015  0DC4  0875               	movf	___wmul@product+1,w
  4016  0DC5  00A1               	movwf	?___wmul+1
  4017  0DC6  0874               	movf	___wmul@product,w
  4018  0DC7  00A0               	movwf	?___wmul
  4019  0DC8  0008               	return
  4020  0DC9                     __end_of___wmul:	
  4021                           
  4022                           	psect	text12
  4023  0DF4                     __ptext12:	
  4024 ;; *************** function ___lwmod *****************
  4025 ;; Defined at:
  4026 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  divisor         2    7[BANK0 ] unsigned int 
  4029 ;;  dividend        2    9[BANK0 ] unsigned int 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  counter         1    6[COMMON] unsigned char 
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  2    7[BANK0 ] unsigned int 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2, status,0
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/0
  4038 ;;		On exit  : 0/0
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       4       0       0       0
  4042 ;;      Locals:         1       0       0       0       0
  4043 ;;      Temps:          1       0       0       0       0
  4044 ;;      Totals:         2       4       0       0       0
  4045 ;;Total ram usage:        6 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_sprintf
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           
  4056                           ;psect for function ___lwmod
  4057  0DF4                     ___lwmod:	
  4058                           
  4059                           ;incstack = 0
  4060                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4061  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0DF6  0827               	movf	___lwmod@divisor,w
  4064  0DF7  0428               	iorwf	___lwmod@divisor+1,w
  4065  0DF8  1903               	btfsc	3,2
  4066  0DF9  2E23               	goto	l2574
  4067  0DFA  01F6               	clrf	___lwmod@counter
  4068  0DFB  0AF6               	incf	___lwmod@counter,f
  4069  0DFC                     l2564:	
  4070  0DFC  1BA8               	btfsc	___lwmod@divisor+1,7
  4071  0DFD  2E0A               	goto	l2566
  4072  0DFE  3001               	movlw	1
  4073  0DFF                     u3645:	
  4074  0DFF  1003               	clrc
  4075  0E00  0DA7               	rlf	___lwmod@divisor,f
  4076  0E01  0DA8               	rlf	___lwmod@divisor+1,f
  4077  0E02  3EFF               	addlw	-1
  4078  0E03  1D03               	skipz
  4079  0E04  2DFF               	goto	u3645
  4080  0E05  3001               	movlw	1
  4081  0E06  00F5               	movwf	??___lwmod
  4082  0E07  0875               	movf	??___lwmod,w
  4083  0E08  07F6               	addwf	___lwmod@counter,f
  4084  0E09  2DFC               	goto	l2564
  4085  0E0A                     l2566:	
  4086  0E0A  0828               	movf	___lwmod@divisor+1,w
  4087  0E0B  022A               	subwf	___lwmod@dividend+1,w
  4088  0E0C  1D03               	skipz
  4089  0E0D  2E10               	goto	u3665
  4090  0E0E  0827               	movf	___lwmod@divisor,w
  4091  0E0F  0229               	subwf	___lwmod@dividend,w
  4092  0E10                     u3665:	
  4093  0E10  1C03               	skipc
  4094  0E11  2E18               	goto	l2570
  4095  0E12  0827               	movf	___lwmod@divisor,w
  4096  0E13  02A9               	subwf	___lwmod@dividend,f
  4097  0E14  0828               	movf	___lwmod@divisor+1,w
  4098  0E15  1C03               	skipc
  4099  0E16  03AA               	decf	___lwmod@dividend+1,f
  4100  0E17  02AA               	subwf	___lwmod@dividend+1,f
  4101  0E18                     l2570:	
  4102  0E18  3001               	movlw	1
  4103  0E19                     u3675:	
  4104  0E19  1003               	clrc
  4105  0E1A  0CA8               	rrf	___lwmod@divisor+1,f
  4106  0E1B  0CA7               	rrf	___lwmod@divisor,f
  4107  0E1C  3EFF               	addlw	-1
  4108  0E1D  1D03               	skipz
  4109  0E1E  2E19               	goto	u3675
  4110  0E1F  3001               	movlw	1
  4111  0E20  02F6               	subwf	___lwmod@counter,f
  4112  0E21  1D03               	btfss	3,2
  4113  0E22  2E0A               	goto	l2566
  4114  0E23                     l2574:	
  4115  0E23  082A               	movf	___lwmod@dividend+1,w
  4116  0E24  00A8               	movwf	?___lwmod+1
  4117  0E25  0829               	movf	___lwmod@dividend,w
  4118  0E26  00A7               	movwf	?___lwmod
  4119  0E27  0008               	return
  4120  0E28                     __end_of___lwmod:	
  4121                           
  4122                           	psect	text13
  4123  0E5F                     __ptext13:	
  4124 ;; *************** function ___lwdiv *****************
  4125 ;; Defined at:
  4126 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  divisor         2    0[BANK0 ] unsigned int 
  4129 ;;  dividend        2    2[BANK0 ] unsigned int 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  quotient        2    5[BANK0 ] unsigned int 
  4132 ;;  counter         1    4[BANK0 ] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    0[BANK0 ] unsigned int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       4       0       0       0
  4143 ;;      Locals:         0       3       0       0       0
  4144 ;;      Temps:          1       0       0       0       0
  4145 ;;      Totals:         1       7       0       0       0
  4146 ;;Total ram usage:        8 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_temp_Measurement
  4153 ;;		_sprintf
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function ___lwdiv
  4159  0E5F                     ___lwdiv:	
  4160                           
  4161                           ;incstack = 0
  4162                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4163  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4165  0E61  01A5               	clrf	___lwdiv@quotient
  4166  0E62  01A6               	clrf	___lwdiv@quotient+1
  4167  0E63  0820               	movf	___lwdiv@divisor,w
  4168  0E64  0421               	iorwf	___lwdiv@divisor+1,w
  4169  0E65  1903               	btfsc	3,2
  4170  0E66  2E98               	goto	l2552
  4171  0E67  01A4               	clrf	___lwdiv@counter
  4172  0E68  0AA4               	incf	___lwdiv@counter,f
  4173  0E69                     l2540:	
  4174  0E69  1BA1               	btfsc	___lwdiv@divisor+1,7
  4175  0E6A  2E77               	goto	l2542
  4176  0E6B  3001               	movlw	1
  4177  0E6C                     u3575:	
  4178  0E6C  1003               	clrc
  4179  0E6D  0DA0               	rlf	___lwdiv@divisor,f
  4180  0E6E  0DA1               	rlf	___lwdiv@divisor+1,f
  4181  0E6F  3EFF               	addlw	-1
  4182  0E70  1D03               	skipz
  4183  0E71  2E6C               	goto	u3575
  4184  0E72  3001               	movlw	1
  4185  0E73  00F4               	movwf	??___lwdiv
  4186  0E74  0874               	movf	??___lwdiv,w
  4187  0E75  07A4               	addwf	___lwdiv@counter,f
  4188  0E76  2E69               	goto	l2540
  4189  0E77                     l2542:	
  4190  0E77  3001               	movlw	1
  4191  0E78                     u3595:	
  4192  0E78  1003               	clrc
  4193  0E79  0DA5               	rlf	___lwdiv@quotient,f
  4194  0E7A  0DA6               	rlf	___lwdiv@quotient+1,f
  4195  0E7B  3EFF               	addlw	-1
  4196  0E7C  1D03               	skipz
  4197  0E7D  2E78               	goto	u3595
  4198  0E7E  0821               	movf	___lwdiv@divisor+1,w
  4199  0E7F  0223               	subwf	___lwdiv@dividend+1,w
  4200  0E80  1D03               	skipz
  4201  0E81  2E84               	goto	u3605
  4202  0E82  0820               	movf	___lwdiv@divisor,w
  4203  0E83  0222               	subwf	___lwdiv@dividend,w
  4204  0E84                     u3605:	
  4205  0E84  1C03               	skipc
  4206  0E85  2E8D               	goto	l2548
  4207  0E86  0820               	movf	___lwdiv@divisor,w
  4208  0E87  02A2               	subwf	___lwdiv@dividend,f
  4209  0E88  0821               	movf	___lwdiv@divisor+1,w
  4210  0E89  1C03               	skipc
  4211  0E8A  03A3               	decf	___lwdiv@dividend+1,f
  4212  0E8B  02A3               	subwf	___lwdiv@dividend+1,f
  4213  0E8C  1425               	bsf	___lwdiv@quotient,0
  4214  0E8D                     l2548:	
  4215  0E8D  3001               	movlw	1
  4216  0E8E                     u3615:	
  4217  0E8E  1003               	clrc
  4218  0E8F  0CA1               	rrf	___lwdiv@divisor+1,f
  4219  0E90  0CA0               	rrf	___lwdiv@divisor,f
  4220  0E91  3EFF               	addlw	-1
  4221  0E92  1D03               	skipz
  4222  0E93  2E8E               	goto	u3615
  4223  0E94  3001               	movlw	1
  4224  0E95  02A4               	subwf	___lwdiv@counter,f
  4225  0E96  1D03               	btfss	3,2
  4226  0E97  2E77               	goto	l2542
  4227  0E98                     l2552:	
  4228  0E98  0826               	movf	___lwdiv@quotient+1,w
  4229  0E99  00A1               	movwf	?___lwdiv+1
  4230  0E9A  0825               	movf	___lwdiv@quotient,w
  4231  0E9B  00A0               	movwf	?___lwdiv
  4232  0E9C  0008               	return
  4233  0E9D                     __end_of___lwdiv:	
  4234                           
  4235                           	psect	text14
  4236  0D83                     __ptext14:	
  4237 ;; *************** function _Lcd_write *****************
  4238 ;; Defined at:
  4239 ;;		line 95 in file "lcd_Config.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  string          1    wreg     PTR unsigned char 
  4242 ;;		 -> sTemperature(2), temp_Display@TEMP(13), 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;  string          1    5[BANK0 ] PTR unsigned char 
  4245 ;;		 -> sTemperature(2), temp_Display@TEMP(13), 
  4246 ;;  i               2    3[BANK0 ] int 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       0       0       0       0
  4257 ;;      Locals:         0       3       0       0       0
  4258 ;;      Temps:          1       0       0       0       0
  4259 ;;      Totals:         1       3       0       0       0
  4260 ;;Total ram usage:        4 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		_Lcd_Write_Char
  4265 ;; This function is called by:
  4266 ;;		_temp_Display
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _Lcd_write
  4272  0D83                     _Lcd_write:	
  4273                           
  4274                           ;incstack = 0
  4275                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4276                           ;Lcd_write@string stored from wreg
  4277  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0D85  00A5               	movwf	Lcd_write@string
  4280                           
  4281                           ;lcd_Config.c: 96: int i;
  4282                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4283  0D86  01A3               	clrf	Lcd_write@i
  4284  0D87  01A4               	clrf	Lcd_write@i+1
  4285  0D88                     l2624:	
  4286  0D88  0823               	movf	Lcd_write@i,w
  4287  0D89  0725               	addwf	Lcd_write@string,w
  4288  0D8A  00F6               	movwf	??_Lcd_write
  4289  0D8B  0876               	movf	??_Lcd_write,w
  4290  0D8C  0084               	movwf	4
  4291  0D8D  1383               	bcf	3,7	;select IRP bank0
  4292  0D8E  0800               	movf	0,w
  4293  0D8F  1903               	btfsc	3,2
  4294  0D90  0008               	return
  4295                           
  4296                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4297  0D91  0823               	movf	Lcd_write@i,w
  4298  0D92  0725               	addwf	Lcd_write@string,w
  4299  0D93  00F6               	movwf	??_Lcd_write
  4300  0D94  0876               	movf	??_Lcd_write,w
  4301  0D95  0084               	movwf	4
  4302  0D96  1383               	bcf	3,7	;select IRP bank0
  4303  0D97  0800               	movf	0,w
  4304  0D98  120A  158A  2628  120A  158A  	fcall	_Lcd_Write_Char
  4305  0D9D  3001               	movlw	1
  4306  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  4308  0DA0  07A3               	addwf	Lcd_write@i,f
  4309  0DA1  1803               	skipnc
  4310  0DA2  0AA4               	incf	Lcd_write@i+1,f
  4311  0DA3  3000               	movlw	0
  4312  0DA4  07A4               	addwf	Lcd_write@i+1,f
  4313  0DA5  2D88               	goto	l2624
  4314  0DA6                     __end_of_Lcd_write:	
  4315                           
  4316                           	psect	text15
  4317  0E28                     __ptext15:	
  4318 ;; *************** function _Lcd_Write_Char *****************
  4319 ;; Defined at:
  4320 ;;		line 80 in file "lcd_Config.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  a               1    wreg     unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  a               1    2[BANK0 ] unsigned char 
  4325 ;;  y               1    1[BANK0 ] unsigned char 
  4326 ;;  temp            1    0[BANK0 ] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       0       0       0       0
  4337 ;;      Locals:         0       3       0       0       0
  4338 ;;      Temps:          1       0       0       0       0
  4339 ;;      Totals:         1       3       0       0       0
  4340 ;;Total ram usage:        4 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		_Lcd_Port
  4345 ;; This function is called by:
  4346 ;;		_Lcd_write
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           
  4351                           ;psect for function _Lcd_Write_Char
  4352  0E28                     _Lcd_Write_Char:	
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4356                           ;Lcd_Write_Char@a stored from wreg
  4357  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  4358  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  4359  0E2A  00A2               	movwf	Lcd_Write_Char@a
  4360                           
  4361                           ;lcd_Config.c: 81: char temp, y;
  4362                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4363  0E2B  0822               	movf	Lcd_Write_Char@a,w
  4364  0E2C  390F               	andlw	15
  4365  0E2D  00F5               	movwf	??_Lcd_Write_Char
  4366  0E2E  0875               	movf	??_Lcd_Write_Char,w
  4367  0E2F  00A0               	movwf	Lcd_Write_Char@temp
  4368                           
  4369                           ;lcd_Config.c: 83: y = a & 0xF0;
  4370  0E30  0822               	movf	Lcd_Write_Char@a,w
  4371  0E31  39F0               	andlw	240
  4372  0E32  00F5               	movwf	??_Lcd_Write_Char
  4373  0E33  0875               	movf	??_Lcd_Write_Char,w
  4374  0E34  00A1               	movwf	Lcd_Write_Char@y
  4375                           
  4376                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4377  0E35  1686               	bsf	6,5	;volatile
  4378                           
  4379                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4380  0E36  0821               	movf	Lcd_Write_Char@y,w
  4381  0E37  00F5               	movwf	??_Lcd_Write_Char
  4382  0E38  3004               	movlw	4
  4383  0E39                     u3005:	
  4384  0E39  1003               	clrc
  4385  0E3A  0CF5               	rrf	??_Lcd_Write_Char,f
  4386  0E3B  3EFF               	addlw	-1
  4387  0E3C  1D03               	skipz
  4388  0E3D  2E39               	goto	u3005
  4389  0E3E  0875               	movf	??_Lcd_Write_Char,w
  4390  0E3F  120A  158A  254F  120A  158A  	fcall	_Lcd_Port
  4391                           
  4392                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4393  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0E46  1606               	bsf	6,4	;volatile
  4396                           
  4397                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4398  0E47  300D               	movlw	13
  4399  0E48  00F5               	movwf	??_Lcd_Write_Char
  4400  0E49                     u3977:	
  4401  0E49  0BF5               	decfsz	??_Lcd_Write_Char,f
  4402  0E4A  2E49               	goto	u3977
  4403                           
  4404                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4405  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0E4D  1206               	bcf	6,4	;volatile
  4408                           
  4409                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4410  0E4E  0820               	movf	Lcd_Write_Char@temp,w
  4411  0E4F  120A  158A  254F  120A  158A  	fcall	_Lcd_Port
  4412                           
  4413                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4414  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0E56  1606               	bsf	6,4	;volatile
  4417                           
  4418                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4419  0E57  300D               	movlw	13
  4420  0E58  00F5               	movwf	??_Lcd_Write_Char
  4421  0E59                     u3987:	
  4422  0E59  0BF5               	decfsz	??_Lcd_Write_Char,f
  4423  0E5A  2E59               	goto	u3987
  4424                           
  4425                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4426  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  4427  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  4428  0E5D  1206               	bcf	6,4	;volatile
  4429  0E5E  0008               	return
  4430  0E5F                     __end_of_Lcd_Write_Char:	
  4431                           
  4432                           	psect	text16
  4433  0FAE                     __ptext16:	
  4434 ;; *************** function _Lcd_Set_Cursor *****************
  4435 ;; Defined at:
  4436 ;;		line 45 in file "lcd_Config.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  raw             1    wreg     unsigned char 
  4439 ;;  column          1    1[BANK0 ] unsigned char 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  raw             1    4[BANK0 ] unsigned char 
  4442 ;;  temp            1    7[BANK0 ] unsigned char 
  4443 ;;  y               1    6[BANK0 ] unsigned char 
  4444 ;;  z               1    5[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0, pclath, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4454 ;;      Params:         0       1       0       0       0
  4455 ;;      Locals:         0       4       0       0       0
  4456 ;;      Temps:          0       2       0       0       0
  4457 ;;      Totals:         0       7       0       0       0
  4458 ;;Total ram usage:        7 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    3
  4461 ;; This function calls:
  4462 ;;		_Lcd_Cmd
  4463 ;; This function is called by:
  4464 ;;		_temp_Display
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _Lcd_Set_Cursor
  4470  0FAE                     _Lcd_Set_Cursor:	
  4471                           
  4472                           ;incstack = 0
  4473                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4474                           ;Lcd_Set_Cursor@raw stored from wreg
  4475  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0FB0  00A4               	movwf	Lcd_Set_Cursor@raw
  4478                           
  4479                           ;lcd_Config.c: 46: char temp, z, y;
  4480                           ;lcd_Config.c: 47: if (raw == 1) {
  4481  0FB1  0324               	decf	Lcd_Set_Cursor@raw,w
  4482  0FB2  1D03               	btfss	3,2
  4483  0FB3  2FD7               	goto	l2608
  4484                           
  4485                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4486  0FB4  0821               	movf	Lcd_Set_Cursor@column,w
  4487  0FB5  3E7F               	addlw	127
  4488  0FB6  00A2               	movwf	??_Lcd_Set_Cursor
  4489  0FB7  0822               	movf	??_Lcd_Set_Cursor,w
  4490  0FB8  00A7               	movwf	Lcd_Set_Cursor@temp
  4491                           
  4492                           ;lcd_Config.c: 49: z = temp >> 4;
  4493  0FB9  0827               	movf	Lcd_Set_Cursor@temp,w
  4494  0FBA  00A2               	movwf	??_Lcd_Set_Cursor
  4495  0FBB  3004               	movlw	4
  4496  0FBC                     u3725:	
  4497  0FBC  1003               	clrc
  4498  0FBD  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4499  0FBE  3EFF               	addlw	-1
  4500  0FBF  1D03               	skipz
  4501  0FC0  2FBC               	goto	u3725
  4502  0FC1  0822               	movf	??_Lcd_Set_Cursor,w
  4503  0FC2  00A3               	movwf	??_Lcd_Set_Cursor+1
  4504  0FC3  0823               	movf	??_Lcd_Set_Cursor+1,w
  4505  0FC4  00A5               	movwf	Lcd_Set_Cursor@z
  4506                           
  4507                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4508  0FC5  0827               	movf	Lcd_Set_Cursor@temp,w
  4509  0FC6  390F               	andlw	15
  4510  0FC7  00A2               	movwf	??_Lcd_Set_Cursor
  4511  0FC8  0822               	movf	??_Lcd_Set_Cursor,w
  4512  0FC9  00A6               	movwf	Lcd_Set_Cursor@y
  4513                           
  4514                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4515  0FCA  0825               	movf	Lcd_Set_Cursor@z,w
  4516  0FCB  120A  158A  2569  120A  158A  	fcall	_Lcd_Cmd
  4517                           
  4518                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4519  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4520  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4521  0FD2  0826               	movf	Lcd_Set_Cursor@y,w
  4522  0FD3  120A  158A  2569   	fcall	_Lcd_Cmd
  4523                           
  4524                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4525  0FD6  0008               	return
  4526  0FD7                     l2608:	
  4527  0FD7  3002               	movlw	2
  4528  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0FDA  0624               	xorwf	Lcd_Set_Cursor@raw,w
  4531  0FDB  1D03               	btfss	3,2
  4532  0FDC  0008               	return
  4533                           
  4534                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4535  0FDD  0821               	movf	Lcd_Set_Cursor@column,w
  4536  0FDE  3EBF               	addlw	191
  4537  0FDF  00A2               	movwf	??_Lcd_Set_Cursor
  4538  0FE0  0822               	movf	??_Lcd_Set_Cursor,w
  4539  0FE1  00A7               	movwf	Lcd_Set_Cursor@temp
  4540                           
  4541                           ;lcd_Config.c: 55: z = temp >> 4;
  4542  0FE2  0827               	movf	Lcd_Set_Cursor@temp,w
  4543  0FE3  00A2               	movwf	??_Lcd_Set_Cursor
  4544  0FE4  3004               	movlw	4
  4545  0FE5                     u3745:	
  4546  0FE5  1003               	clrc
  4547  0FE6  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4548  0FE7  3EFF               	addlw	-1
  4549  0FE8  1D03               	skipz
  4550  0FE9  2FE5               	goto	u3745
  4551  0FEA  0822               	movf	??_Lcd_Set_Cursor,w
  4552  0FEB  00A3               	movwf	??_Lcd_Set_Cursor+1
  4553  0FEC  0823               	movf	??_Lcd_Set_Cursor+1,w
  4554  0FED  00A5               	movwf	Lcd_Set_Cursor@z
  4555                           
  4556                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4557  0FEE  0827               	movf	Lcd_Set_Cursor@temp,w
  4558  0FEF  390F               	andlw	15
  4559  0FF0  00A2               	movwf	??_Lcd_Set_Cursor
  4560  0FF1  0822               	movf	??_Lcd_Set_Cursor,w
  4561  0FF2  00A6               	movwf	Lcd_Set_Cursor@y
  4562                           
  4563                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  4564  0FF3  0825               	movf	Lcd_Set_Cursor@z,w
  4565  0FF4  120A  158A  2569  120A  158A  	fcall	_Lcd_Cmd
  4566                           
  4567                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  4568  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4569  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4570  0FFB  0826               	movf	Lcd_Set_Cursor@y,w
  4571  0FFC  120A  158A  2569   	fcall	_Lcd_Cmd
  4572  0FFF  0008               	return
  4573  1000                     __end_of_Lcd_Set_Cursor:	
  4574                           
  4575                           	psect	text17
  4576  0F63                     __ptext17:	
  4577 ;; *************** function _system_Initialize *****************
  4578 ;; Defined at:
  4579 ;;		line 10 in file "SYST_Init.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    4
  4600 ;; This function calls:
  4601 ;;		_ADC_Init
  4602 ;;		_Interrupt_Init
  4603 ;;		_Lcd_Init
  4604 ;;		_Oscillator_Init
  4605 ;;		_PWM_DutyCycle
  4606 ;;		_PWM_Init
  4607 ;;		_SPI_Init
  4608 ;;		_TMR0_Init
  4609 ;;		_UART_Init
  4610 ;;		_pinManager
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _system_Initialize
  4618  0F63                     _system_Initialize:	
  4619                           
  4620                           ;SYST_Init.c: 11: Oscillator_Init();
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4624  0F63  120A  118A  27FB  120A  158A  	fcall	_Oscillator_Init
  4625                           
  4626                           ;SYST_Init.c: 12: Interrupt_Init();
  4627  0F68  120A  158A  24D8  120A  158A  	fcall	_Interrupt_Init
  4628                           
  4629                           ;SYST_Init.c: 13: pinManager();
  4630  0F6D  120A  118A  27D0  120A  158A  	fcall	_pinManager
  4631                           
  4632                           ;SYST_Init.c: 14: Lcd_Init();
  4633  0F72  120A  118A  26B4  120A  158A  	fcall	_Lcd_Init
  4634                           
  4635                           ;SYST_Init.c: 15: ADC_Init();
  4636  0F77  120A  158A  2536  120A  158A  	fcall	_ADC_Init
  4637                           
  4638                           ;SYST_Init.c: 16: TMR0_Init();
  4639  0F7C  120A  158A  24E7  120A  158A  	fcall	_TMR0_Init
  4640                           
  4641                           ;SYST_Init.c: 17: PWM_Init(10000);
  4642  0F81  3000               	movlw	0
  4643  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4644  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4645  0F84  00BC               	movwf	PWM_Init@iFrequency+3
  4646  0F85  3000               	movlw	0
  4647  0F86  00BB               	movwf	PWM_Init@iFrequency+2
  4648  0F87  3027               	movlw	39
  4649  0F88  00BA               	movwf	PWM_Init@iFrequency+1
  4650  0F89  3010               	movlw	16
  4651  0F8A  00B9               	movwf	PWM_Init@iFrequency
  4652  0F8B  120A  158A  271E  120A  158A  	fcall	_PWM_Init
  4653                           
  4654                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  4655  0F90  3000               	movlw	0
  4656  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0F93  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  4659  0F94  3000               	movlw	0
  4660  0F95  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  4661  0F96  3000               	movlw	0
  4662  0F97  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  4663  0F98  3046               	movlw	70
  4664  0F99  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  4665  0F9A  120A  118A  25D7  120A  158A  	fcall	_PWM_DutyCycle
  4666                           
  4667                           ;SYST_Init.c: 19: SPI_Init();
  4668  0F9F  120A  158A  24BD  120A  158A  	fcall	_SPI_Init
  4669                           
  4670                           ;SYST_Init.c: 20: UART_Init(9600);
  4671  0FA4  3080               	movlw	128
  4672  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0FA7  00B9               	movwf	UART_Init@baudRate
  4675  0FA8  3025               	movlw	37
  4676  0FA9  00BA               	movwf	UART_Init@baudRate+1
  4677  0FAA  120A  158A  269D   	fcall	_UART_Init
  4678  0FAD  0008               	return
  4679  0FAE                     __end_of_system_Initialize:	
  4680                           
  4681                           	psect	text18
  4682  07D0                     __ptext18:	
  4683 ;; *************** function _pinManager *****************
  4684 ;; Defined at:
  4685 ;;		line 19 in file "pin_Manager.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		status,2
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_system_Initialize
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _pinManager
  4715  07D0                     _pinManager:	
  4716                           
  4717                           ;pin_Manager.c: 21: TRISD = 0;
  4718                           
  4719                           ;incstack = 0
  4720                           ; Regs used in _pinManager: [status,2]
  4721  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4722  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4723  07D2  0188               	clrf	8	;volatile
  4724                           
  4725                           ;pin_Manager.c: 23: ANSELH = 0;
  4726  07D3  1683               	bsf	3,5	;RP0=1, select bank3
  4727  07D4  1703               	bsf	3,6	;RP1=1, select bank3
  4728  07D5  0189               	clrf	9	;volatile
  4729                           
  4730                           ;pin_Manager.c: 24: TRISB = 0;
  4731  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  4732  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  4733  07D8  0186               	clrf	6	;volatile
  4734                           
  4735                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  4736  07D9  1706               	bsf	6,6	;volatile
  4737                           
  4738                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  4739  07DA  1786               	bsf	6,7	;volatile
  4740                           
  4741                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  4742  07DB  1107               	bcf	7,2	;volatile
  4743                           
  4744                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  4745  07DC  1683               	bsf	3,5	;RP0=1, select bank3
  4746  07DD  1703               	bsf	3,6	;RP1=1, select bank3
  4747  07DE  1088               	bcf	8,1	;volatile
  4748                           
  4749                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  4750  07DF  1108               	bcf	8,2	;volatile
  4751                           
  4752                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  4753  07E0  1188               	bcf	8,3	;volatile
  4754                           
  4755                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  4756  07E1  1208               	bcf	8,4	;volatile
  4757                           
  4758                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  4759  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  4760  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  4761  07E4  1085               	bcf	5,1	;volatile
  4762                           
  4763                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  4764  07E5  1105               	bcf	5,2	;volatile
  4765                           
  4766                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  4767  07E6  1185               	bcf	5,3	;volatile
  4768                           
  4769                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  4770  07E7  1205               	bcf	5,4	;volatile
  4771                           
  4772                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  4773  07E8  1683               	bsf	3,5	;RP0=1, select bank3
  4774  07E9  1703               	bsf	3,6	;RP1=1, select bank3
  4775  07EA  1408               	bsf	8,0	;volatile
  4776                           
  4777                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  4778  07EB  1288               	bcf	8,5	;volatile
  4779                           
  4780                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  4781  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4782  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  4783  07EE  1405               	bsf	5,0	;volatile
  4784                           
  4785                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  4786  07EF  1287               	bcf	7,5	;volatile
  4787                           
  4788                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  4789  07F0  1607               	bsf	7,4	;volatile
  4790                           
  4791                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  4792  07F1  1285               	bcf	5,5	;volatile
  4793                           
  4794                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  4795  07F2  1187               	bcf	7,3	;volatile
  4796                           
  4797                           ;pin_Manager.c: 51: PORTA = 0;
  4798  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4799  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4800  07F5  0185               	clrf	5	;volatile
  4801                           
  4802                           ;pin_Manager.c: 52: PORTB = 0;
  4803  07F6  0186               	clrf	6	;volatile
  4804                           
  4805                           ;pin_Manager.c: 53: PORTC = 0;
  4806  07F7  0187               	clrf	7	;volatile
  4807                           
  4808                           ;pin_Manager.c: 54: PORTD = 0;
  4809  07F8  0188               	clrf	8	;volatile
  4810                           
  4811                           ;pin_Manager.c: 55: PORTE = 0;
  4812  07F9  0189               	clrf	9	;volatile
  4813  07FA  0008               	return
  4814  07FB                     __end_of_pinManager:	
  4815                           
  4816                           	psect	text19
  4817  0E9D                     __ptext19:	
  4818 ;; *************** function _UART_Init *****************
  4819 ;; Defined at:
  4820 ;;		line 10 in file "uart_Init.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  baudRate        2   25[BANK0 ] unsigned int 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       2       0       0       0
  4835 ;;      Locals:         0       0       0       0       0
  4836 ;;      Temps:          0       4       0       0       0
  4837 ;;      Totals:         0       6       0       0       0
  4838 ;;Total ram usage:        6 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    2
  4841 ;; This function calls:
  4842 ;;		___lldiv
  4843 ;; This function is called by:
  4844 ;;		_system_Initialize
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _UART_Init
  4850  0E9D                     _UART_Init:	
  4851                           
  4852                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4856  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  4857  0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  4858  0E9F  1707               	bsf	7,6	;volatile
  4859                           
  4860                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  4861  0EA0  1787               	bsf	7,7	;volatile
  4862                           
  4863                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  4864  0EA1  1698               	bsf	24,5	;volatile
  4865                           
  4866                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  4867  0EA2  1218               	bcf	24,4	;volatile
  4868                           
  4869                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  4870  0EA3  1318               	bcf	24,6	;volatile
  4871                           
  4872                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  4873  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  4874  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  4875  0EA6  1798               	bsf	24,7	;volatile
  4876                           
  4877                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  4878  0EA7  1618               	bsf	24,4	;volatile
  4879                           
  4880                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  4881  0EA8  1318               	bcf	24,6	;volatile
  4882                           
  4883                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  4884  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  4885  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  4886  0EAB  1518               	bsf	24,2	;volatile
  4887                           
  4888                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  4889  0EAC  1683               	bsf	3,5	;RP0=1, select bank3
  4890  0EAD  1703               	bsf	3,6	;RP1=1, select bank3
  4891  0EAE  1187               	bcf	7,3	;volatile
  4892                           
  4893                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  4894  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0EB1  0839               	movf	UART_Init@baudRate,w
  4897  0EB2  00AC               	movwf	___lldiv@divisor
  4898  0EB3  083A               	movf	UART_Init@baudRate+1,w
  4899  0EB4  00AD               	movwf	___lldiv@divisor+1
  4900  0EB5  01AE               	clrf	___lldiv@divisor+2
  4901  0EB6  01AF               	clrf	___lldiv@divisor+3
  4902  0EB7  3000               	movlw	0
  4903  0EB8  00B3               	movwf	___lldiv@dividend+3
  4904  0EB9  303D               	movlw	61
  4905  0EBA  00B2               	movwf	___lldiv@dividend+2
  4906  0EBB  3009               	movlw	9
  4907  0EBC  00B1               	movwf	___lldiv@dividend+1
  4908  0EBD  3000               	movlw	0
  4909  0EBE  00B0               	movwf	___lldiv@dividend
  4910  0EBF  120A  118A  2715  120A  158A  	fcall	___lldiv
  4911  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0EC6  082C               	movf	?___lldiv,w
  4914  0EC7  00BB               	movwf	??_UART_Init
  4915  0EC8  082D               	movf	?___lldiv+1,w
  4916  0EC9  00BC               	movwf	??_UART_Init+1
  4917  0ECA  082E               	movf	?___lldiv+2,w
  4918  0ECB  00BD               	movwf	??_UART_Init+2
  4919  0ECC  082F               	movf	?___lldiv+3,w
  4920  0ECD  00BE               	movwf	??_UART_Init+3
  4921  0ECE  3004               	movlw	4
  4922  0ECF                     u2585:	
  4923  0ECF  1003               	clrc
  4924  0ED0  0CBE               	rrf	??_UART_Init+3,f
  4925  0ED1  0CBD               	rrf	??_UART_Init+2,f
  4926  0ED2  0CBC               	rrf	??_UART_Init+1,f
  4927  0ED3  0CBB               	rrf	??_UART_Init,f
  4928  0ED4  3EFF               	addlw	-1
  4929  0ED5  1D03               	skipz
  4930  0ED6  2ECF               	goto	u2585
  4931  0ED7  083B               	movf	??_UART_Init,w
  4932  0ED8  3EFF               	addlw	255
  4933  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  4934  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  4935  0EDB  0099               	movwf	25	;volatile
  4936  0EDC  0008               	return
  4937  0EDD                     __end_of_UART_Init:	
  4938                           
  4939                           	psect	text20
  4940  0CE7                     __ptext20:	
  4941 ;; *************** function _TMR0_Init *****************
  4942 ;; Defined at:
  4943 ;;		line 19 in file "timer_Init.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4957 ;;      Params:         0       0       0       0       0
  4958 ;;      Locals:         0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0
  4960 ;;      Totals:         0       0       0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_system_Initialize
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _TMR0_Init
  4973  0CE7                     _TMR0_Init:	
  4974                           
  4975                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  4979  0CE7  168B               	bsf	11,5	;volatile
  4980                           
  4981                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  4982  0CE8  110B               	bcf	11,2	;volatile
  4983                           
  4984                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  4985  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  4986  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  4987  0CEB  1281               	bcf	1,5	;volatile
  4988                           
  4989                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  4990  0CEC  1181               	bcf	1,3	;volatile
  4991                           
  4992                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  4993  0CED  0801               	movf	1,w	;volatile
  4994  0CEE  39F8               	andlw	-8
  4995  0CEF  3805               	iorlw	5
  4996  0CF0  0081               	movwf	1	;volatile
  4997                           
  4998                           ;timer_Init.c: 26: TMR0 = 100;
  4999  0CF1  3064               	movlw	100
  5000  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  5001  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  5002  0CF4  0081               	movwf	1	;volatile
  5003  0CF5  0008               	return
  5004  0CF6                     __end_of_TMR0_Init:	
  5005                           
  5006                           	psect	text21
  5007  0CBD                     __ptext21:	
  5008 ;; *************** function _SPI_Init *****************
  5009 ;; Defined at:
  5010 ;;		line 10 in file "spi_Init.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5024 ;;      Params:         0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0
  5027 ;;      Totals:         0       0       0       0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_system_Initialize
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _SPI_Init
  5040  0CBD                     _SPI_Init:	
  5041                           
  5042                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5046  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0CBF  1694               	bsf	20,5	;volatile
  5049                           
  5050                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5051  0CC0  30F0               	movlw	-16
  5052  0CC1  0594               	andwf	20,f	;volatile
  5053                           
  5054                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5055  0CC2  1394               	bcf	20,7	;volatile
  5056                           
  5057                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5058  0CC3  1683               	bsf	3,5	;RP0=1, select bank1
  5059  0CC4  1303               	bcf	3,6	;RP1=0, select bank1
  5060  0CC5  158C               	bsf	12,3	;volatile
  5061                           
  5062                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5063  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  5064  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  5065  0CC8  118C               	bcf	12,3	;volatile
  5066  0CC9  0008               	return
  5067  0CCA                     __end_of_SPI_Init:	
  5068                           
  5069                           	psect	text22
  5070  0F1E                     __ptext22:	
  5071 ;; *************** function _PWM_Init *****************
  5072 ;; Defined at:
  5073 ;;		line 15 in file "pwm_Init.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       4       0       0       0
  5088 ;;      Locals:         0       0       0       0       0
  5089 ;;      Temps:          0       4       0       0       0
  5090 ;;      Totals:         0       8       0       0       0
  5091 ;;Total ram usage:        8 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    2
  5094 ;; This function calls:
  5095 ;;		___lldiv
  5096 ;; This function is called by:
  5097 ;;		_system_Initialize
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _PWM_Init
  5103  0F1E                     _PWM_Init:	
  5104                           
  5105                           ;pwm_Init.c: 16: TRISCbits.TRISC2 = 1;
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5109  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0F20  1507               	bsf	7,2	;volatile
  5112                           
  5113                           ;pwm_Init.c: 18: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5114  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0F23  0839               	movf	PWM_Init@iFrequency,w
  5117  0F24  00BD               	movwf	??_PWM_Init
  5118  0F25  083A               	movf	PWM_Init@iFrequency+1,w
  5119  0F26  00BE               	movwf	??_PWM_Init+1
  5120  0F27  083B               	movf	PWM_Init@iFrequency+2,w
  5121  0F28  00BF               	movwf	??_PWM_Init+2
  5122  0F29  083C               	movf	PWM_Init@iFrequency+3,w
  5123  0F2A  00C0               	movwf	??_PWM_Init+3
  5124  0F2B  3002               	movlw	2
  5125  0F2C                     u2555:	
  5126  0F2C  1003               	clrc
  5127  0F2D  0DBD               	rlf	??_PWM_Init,f
  5128  0F2E  0DBE               	rlf	??_PWM_Init+1,f
  5129  0F2F  0DBF               	rlf	??_PWM_Init+2,f
  5130  0F30  0DC0               	rlf	??_PWM_Init+3,f
  5131  0F31  3EFF               	addlw	-1
  5132  0F32  1D03               	skipz
  5133  0F33  2F2C               	goto	u2555
  5134  0F34  0840               	movf	??_PWM_Init+3,w
  5135  0F35  00AF               	movwf	___lldiv@divisor+3
  5136  0F36  083F               	movf	??_PWM_Init+2,w
  5137  0F37  00AE               	movwf	___lldiv@divisor+2
  5138  0F38  083E               	movf	??_PWM_Init+1,w
  5139  0F39  00AD               	movwf	___lldiv@divisor+1
  5140  0F3A  083D               	movf	??_PWM_Init,w
  5141  0F3B  00AC               	movwf	___lldiv@divisor
  5142  0F3C  3000               	movlw	0
  5143  0F3D  00B3               	movwf	___lldiv@dividend+3
  5144  0F3E  303D               	movlw	61
  5145  0F3F  00B2               	movwf	___lldiv@dividend+2
  5146  0F40  3009               	movlw	9
  5147  0F41  00B1               	movwf	___lldiv@dividend+1
  5148  0F42  3000               	movlw	0
  5149  0F43  00B0               	movwf	___lldiv@dividend
  5150  0F44  120A  118A  2715   	fcall	___lldiv
  5151  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0F49  082C               	movf	?___lldiv,w
  5154  0F4A  3EFF               	addlw	255
  5155  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  5156  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  5157  0F4D  0092               	movwf	18	;volatile
  5158                           
  5159                           ;pwm_Init.c: 19: CCP1CONbits.P1M = 0b00;
  5160  0F4E  303F               	movlw	-193
  5161  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5162  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5163  0F51  0597               	andwf	23,f	;volatile
  5164                           
  5165                           ;pwm_Init.c: 20: CCP1CONbits.CCP1M = 0b1100;
  5166  0F52  0817               	movf	23,w	;volatile
  5167  0F53  39F0               	andlw	-16
  5168  0F54  380C               	iorlw	12
  5169  0F55  0097               	movwf	23	;volatile
  5170                           
  5171                           ;pwm_Init.c: 21: CCP1CONbits.DC1B = 0b00;
  5172  0F56  30CF               	movlw	-49
  5173  0F57  0597               	andwf	23,f	;volatile
  5174                           
  5175                           ;pwm_Init.c: 22: CCPR1L = 0x00;
  5176  0F58  0195               	clrf	21	;volatile
  5177                           
  5178                           ;pwm_Init.c: 24: PIR1bits.TMR2IF = 0;
  5179  0F59  108C               	bcf	12,1	;volatile
  5180                           
  5181                           ;pwm_Init.c: 25: T2CONbits.TOUTPS = 0b0000;
  5182  0F5A  3087               	movlw	-121
  5183  0F5B  0592               	andwf	18,f	;volatile
  5184                           
  5185                           ;pwm_Init.c: 26: T2CONbits.T2CKPS = 0b00;
  5186  0F5C  30FC               	movlw	-4
  5187  0F5D  0592               	andwf	18,f	;volatile
  5188                           
  5189                           ;pwm_Init.c: 27: T2CONbits.TMR2ON = 1;
  5190  0F5E  1512               	bsf	18,2	;volatile
  5191                           
  5192                           ;pwm_Init.c: 28: TRISCbits.TRISC2 = 0;
  5193  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5194  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  5195  0F61  1107               	bcf	7,2	;volatile
  5196  0F62  0008               	return
  5197  0F63                     __end_of_PWM_Init:	
  5198                           
  5199                           	psect	text23
  5200  05D7                     __ptext23:	
  5201 ;; *************** function _PWM_DutyCycle *****************
  5202 ;; Defined at:
  5203 ;;		line 32 in file "pwm_Init.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, pclath, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5217 ;;      Params:         0       4       0       0       0
  5218 ;;      Locals:         0       0       0       0       0
  5219 ;;      Temps:          0       4       0       0       0
  5220 ;;      Totals:         0       8       0       0       0
  5221 ;;Total ram usage:        8 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		___lldiv
  5226 ;;		___lmul
  5227 ;; This function is called by:
  5228 ;;		_system_Initialize
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _PWM_DutyCycle
  5234  05D7                     _PWM_DutyCycle:	
  5235                           
  5236                           ;pwm_Init.c: 36: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5237                           
  5238                           ;incstack = 0
  5239                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5240  05D7  3000               	movlw	0
  5241  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  5242  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  5243  05DA  00AF               	movwf	___lldiv@divisor+3
  5244  05DB  3000               	movlw	0
  5245  05DC  00AE               	movwf	___lldiv@divisor+2
  5246  05DD  3000               	movlw	0
  5247  05DE  00AD               	movwf	___lldiv@divisor+1
  5248  05DF  3064               	movlw	100
  5249  05E0  00AC               	movwf	___lldiv@divisor
  5250  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  5251  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  5252  05E3  0812               	movf	18,w	;volatile
  5253  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  5254  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  5255  05E6  00BD               	movwf	??_PWM_DutyCycle
  5256  05E7  01BE               	clrf	??_PWM_DutyCycle+1
  5257  05E8  1003               	clrc
  5258  05E9  0DBD               	rlf	??_PWM_DutyCycle,f
  5259  05EA  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5260  05EB  1003               	clrc
  5261  05EC  0DBD               	rlf	??_PWM_DutyCycle,f
  5262  05ED  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5263  05EE  083D               	movf	??_PWM_DutyCycle,w
  5264  05EF  3E04               	addlw	4
  5265  05F0  00A0               	movwf	___lmul@multiplier
  5266  05F1  083E               	movf	??_PWM_DutyCycle+1,w
  5267  05F2  1803               	skipnc
  5268  05F3  3E01               	addlw	1
  5269  05F4  3E00               	addlw	0
  5270  05F5  00A1               	movwf	___lmul@multiplier+1
  5271  05F6  01A2               	clrf	___lmul@multiplier+2
  5272  05F7  1BA1               	btfsc	___lmul@multiplier+1,7
  5273  05F8  03A2               	decf	___lmul@multiplier+2,f
  5274  05F9  0822               	movf	___lmul@multiplier+2,w
  5275  05FA  00A3               	movwf	___lmul@multiplier+3
  5276  05FB  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5277  05FC  00A7               	movwf	___lmul@multiplicand+3
  5278  05FD  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5279  05FE  00A6               	movwf	___lmul@multiplicand+2
  5280  05FF  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5281  0600  00A5               	movwf	___lmul@multiplicand+1
  5282  0601  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5283  0602  00A4               	movwf	___lmul@multiplicand
  5284  0603  120A  158A  26DD  120A  118A  	fcall	___lmul
  5285  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0609  1303               	bcf	3,6	;RP1=0, select bank0
  5287  060A  0823               	movf	?___lmul+3,w
  5288  060B  00B3               	movwf	___lldiv@dividend+3
  5289  060C  0822               	movf	?___lmul+2,w
  5290  060D  00B2               	movwf	___lldiv@dividend+2
  5291  060E  0821               	movf	?___lmul+1,w
  5292  060F  00B1               	movwf	___lldiv@dividend+1
  5293  0610  0820               	movf	?___lmul,w
  5294  0611  00B0               	movwf	___lldiv@dividend
  5295  0612  120A  118A  2715  120A  118A  	fcall	___lldiv
  5296  0617  1283               	bcf	3,5	;RP0=0, select bank0
  5297  0618  1303               	bcf	3,6	;RP1=0, select bank0
  5298  0619  082F               	movf	?___lldiv+3,w
  5299  061A  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5300  061B  082E               	movf	?___lldiv+2,w
  5301  061C  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5302  061D  082D               	movf	?___lldiv+1,w
  5303  061E  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5304  061F  082C               	movf	?___lldiv,w
  5305  0620  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5306                           
  5307                           ;pwm_Init.c: 37: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5308  0621  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5309  0622  00BD               	movwf	??_PWM_DutyCycle
  5310  0623  3003               	movlw	3
  5311  0624                     u3695:	
  5312  0624  1003               	clrc
  5313  0625  0DBD               	rlf	??_PWM_DutyCycle,f
  5314  0626  3EFF               	addlw	-1
  5315  0627  1D03               	skipz
  5316  0628  2E24               	goto	u3695
  5317  0629  1003               	clrc
  5318  062A  0D3D               	rlf	??_PWM_DutyCycle,w
  5319  062B  00BE               	movwf	??_PWM_DutyCycle+1
  5320  062C  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5321  062D  0817               	movf	23,w	;volatile
  5322  062E  063E               	xorwf	??_PWM_DutyCycle+1,w
  5323  062F  39CF               	andlw	-49
  5324  0630  063E               	xorwf	??_PWM_DutyCycle+1,w
  5325  0631  0097               	movwf	23	;volatile
  5326                           
  5327                           ;pwm_Init.c: 38: CCPR1L = (iDutyCycle >> 2);
  5328  0632  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5329  0633  00BD               	movwf	??_PWM_DutyCycle
  5330  0634  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5331  0635  00BE               	movwf	??_PWM_DutyCycle+1
  5332  0636  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5333  0637  00BF               	movwf	??_PWM_DutyCycle+2
  5334  0638  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5335  0639  00C0               	movwf	??_PWM_DutyCycle+3
  5336  063A  3002               	movlw	2
  5337  063B                     u3705:	
  5338  063B  1003               	clrc
  5339  063C  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5340  063D  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5341  063E  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5342  063F  0CBD               	rrf	??_PWM_DutyCycle,f
  5343  0640  3EFF               	addlw	-1
  5344  0641  1D03               	skipz
  5345  0642  2E3B               	goto	u3705
  5346  0643  083D               	movf	??_PWM_DutyCycle,w
  5347  0644  0095               	movwf	21	;volatile
  5348  0645  0008               	return
  5349  0646                     __end_of_PWM_DutyCycle:	
  5350                           
  5351                           	psect	text24
  5352  0EDD                     __ptext24:	
  5353 ;; *************** function ___lmul *****************
  5354 ;; Defined at:
  5355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5358 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  product         4    8[BANK0 ] unsigned long 
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  4    0[BANK0 ] unsigned long 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5370 ;;      Params:         0       8       0       0       0
  5371 ;;      Locals:         0       4       0       0       0
  5372 ;;      Temps:          1       0       0       0       0
  5373 ;;      Totals:         1      12       0       0       0
  5374 ;;Total ram usage:       13 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_PWM_DutyCycle
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function ___lmul
  5386  0EDD                     ___lmul:	
  5387                           
  5388                           ;incstack = 0
  5389                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5390  0EDD  3000               	movlw	0
  5391  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0EE0  00AB               	movwf	___lmul@product+3
  5394  0EE1  3000               	movlw	0
  5395  0EE2  00AA               	movwf	___lmul@product+2
  5396  0EE3  3000               	movlw	0
  5397  0EE4  00A9               	movwf	___lmul@product+1
  5398  0EE5  3000               	movlw	0
  5399  0EE6  00A8               	movwf	___lmul@product
  5400  0EE7                     l2356:	
  5401  0EE7  1C20               	btfss	___lmul@multiplier,0
  5402  0EE8  2EFD               	goto	l2360
  5403  0EE9  0824               	movf	___lmul@multiplicand,w
  5404  0EEA  07A8               	addwf	___lmul@product,f
  5405  0EEB  0825               	movf	___lmul@multiplicand+1,w
  5406  0EEC  1103               	clrz
  5407  0EED  1803               	skipnc
  5408  0EEE  3E01               	addlw	1
  5409  0EEF  1D03               	btfss	3,2
  5410  0EF0  07A9               	addwf	___lmul@product+1,f
  5411  0EF1  0826               	movf	___lmul@multiplicand+2,w
  5412  0EF2  1103               	clrz
  5413  0EF3  1803               	skipnc
  5414  0EF4  3E01               	addlw	1
  5415  0EF5  1D03               	btfss	3,2
  5416  0EF6  07AA               	addwf	___lmul@product+2,f
  5417  0EF7  0827               	movf	___lmul@multiplicand+3,w
  5418  0EF8  1103               	clrz
  5419  0EF9  1803               	skipnc
  5420  0EFA  3E01               	addlw	1
  5421  0EFB  1D03               	btfss	3,2
  5422  0EFC  07AB               	addwf	___lmul@product+3,f
  5423  0EFD                     l2360:	
  5424  0EFD  3001               	movlw	1
  5425  0EFE  00F4               	movwf	??___lmul
  5426  0EFF                     u3075:	
  5427  0EFF  1003               	clrc
  5428  0F00  0DA4               	rlf	___lmul@multiplicand,f
  5429  0F01  0DA5               	rlf	___lmul@multiplicand+1,f
  5430  0F02  0DA6               	rlf	___lmul@multiplicand+2,f
  5431  0F03  0DA7               	rlf	___lmul@multiplicand+3,f
  5432  0F04  0BF4               	decfsz	??___lmul,f
  5433  0F05  2EFF               	goto	u3075
  5434  0F06  3001               	movlw	1
  5435  0F07                     u3085:	
  5436  0F07  1003               	clrc
  5437  0F08  0CA3               	rrf	___lmul@multiplier+3,f
  5438  0F09  0CA2               	rrf	___lmul@multiplier+2,f
  5439  0F0A  0CA1               	rrf	___lmul@multiplier+1,f
  5440  0F0B  0CA0               	rrf	___lmul@multiplier,f
  5441  0F0C  3EFF               	addlw	-1
  5442  0F0D  1D03               	skipz
  5443  0F0E  2F07               	goto	u3085
  5444  0F0F  0823               	movf	___lmul@multiplier+3,w
  5445  0F10  0422               	iorwf	___lmul@multiplier+2,w
  5446  0F11  0421               	iorwf	___lmul@multiplier+1,w
  5447  0F12  0420               	iorwf	___lmul@multiplier,w
  5448  0F13  1D03               	skipz
  5449  0F14  2EE7               	goto	l2356
  5450  0F15  082B               	movf	___lmul@product+3,w
  5451  0F16  00A3               	movwf	?___lmul+3
  5452  0F17  082A               	movf	___lmul@product+2,w
  5453  0F18  00A2               	movwf	?___lmul+2
  5454  0F19  0829               	movf	___lmul@product+1,w
  5455  0F1A  00A1               	movwf	?___lmul+1
  5456  0F1B  0828               	movf	___lmul@product,w
  5457  0F1C  00A0               	movwf	?___lmul
  5458  0F1D  0008               	return
  5459  0F1E                     __end_of___lmul:	
  5460                           
  5461                           	psect	text25
  5462  0715                     __ptext25:	
  5463 ;; *************** function ___lldiv *****************
  5464 ;; Defined at:
  5465 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  divisor         4   12[BANK0 ] unsigned long 
  5468 ;;  dividend        4   16[BANK0 ] unsigned long 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  quotient        4   20[BANK0 ] unsigned long 
  5471 ;;  counter         1   24[BANK0 ] unsigned char 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  4   12[BANK0 ] unsigned long 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5481 ;;      Params:         0       8       0       0       0
  5482 ;;      Locals:         0       5       0       0       0
  5483 ;;      Temps:          1       0       0       0       0
  5484 ;;      Totals:         1      13       0       0       0
  5485 ;;Total ram usage:       14 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_PWM_Init
  5492 ;;		_PWM_DutyCycle
  5493 ;;		_UART_Init
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function ___lldiv
  5499  0715                     ___lldiv:	
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5503  0715  3000               	movlw	0
  5504  0716  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0717  1303               	bcf	3,6	;RP1=0, select bank0
  5506  0718  00B7               	movwf	___lldiv@quotient+3
  5507  0719  3000               	movlw	0
  5508  071A  00B6               	movwf	___lldiv@quotient+2
  5509  071B  3000               	movlw	0
  5510  071C  00B5               	movwf	___lldiv@quotient+1
  5511  071D  3000               	movlw	0
  5512  071E  00B4               	movwf	___lldiv@quotient
  5513  071F  082F               	movf	___lldiv@divisor+3,w
  5514  0720  042E               	iorwf	___lldiv@divisor+2,w
  5515  0721  042D               	iorwf	___lldiv@divisor+1,w
  5516  0722  042C               	iorwf	___lldiv@divisor,w
  5517  0723  1903               	skipnz
  5518  0724  2F6C               	goto	l1990
  5519  0725  01B8               	clrf	___lldiv@counter
  5520  0726  0AB8               	incf	___lldiv@counter,f
  5521  0727                     l1976:	
  5522  0727  1BAF               	btfsc	___lldiv@divisor+3,7
  5523  0728  2F37               	goto	l1978
  5524  0729  3001               	movlw	1
  5525  072A  00F5               	movwf	??___lldiv
  5526  072B                     u2365:	
  5527  072B  1003               	clrc
  5528  072C  0DAC               	rlf	___lldiv@divisor,f
  5529  072D  0DAD               	rlf	___lldiv@divisor+1,f
  5530  072E  0DAE               	rlf	___lldiv@divisor+2,f
  5531  072F  0DAF               	rlf	___lldiv@divisor+3,f
  5532  0730  0BF5               	decfsz	??___lldiv,f
  5533  0731  2F2B               	goto	u2365
  5534  0732  3001               	movlw	1
  5535  0733  00F5               	movwf	??___lldiv
  5536  0734  0875               	movf	??___lldiv,w
  5537  0735  07B8               	addwf	___lldiv@counter,f
  5538  0736  2F27               	goto	l1976
  5539  0737                     l1978:	
  5540  0737  3001               	movlw	1
  5541  0738  00F5               	movwf	??___lldiv
  5542  0739                     u2385:	
  5543  0739  1003               	clrc
  5544  073A  0DB4               	rlf	___lldiv@quotient,f
  5545  073B  0DB5               	rlf	___lldiv@quotient+1,f
  5546  073C  0DB6               	rlf	___lldiv@quotient+2,f
  5547  073D  0DB7               	rlf	___lldiv@quotient+3,f
  5548  073E  0BF5               	decfsz	??___lldiv,f
  5549  073F  2F39               	goto	u2385
  5550  0740  082F               	movf	___lldiv@divisor+3,w
  5551  0741  0233               	subwf	___lldiv@dividend+3,w
  5552  0742  1D03               	skipz
  5553  0743  2F4E               	goto	u2395
  5554  0744  082E               	movf	___lldiv@divisor+2,w
  5555  0745  0232               	subwf	___lldiv@dividend+2,w
  5556  0746  1D03               	skipz
  5557  0747  2F4E               	goto	u2395
  5558  0748  082D               	movf	___lldiv@divisor+1,w
  5559  0749  0231               	subwf	___lldiv@dividend+1,w
  5560  074A  1D03               	skipz
  5561  074B  2F4E               	goto	u2395
  5562  074C  082C               	movf	___lldiv@divisor,w
  5563  074D  0230               	subwf	___lldiv@dividend,w
  5564  074E                     u2395:	
  5565  074E  1C03               	skipc
  5566  074F  2F5F               	goto	l1986
  5567  0750  082C               	movf	___lldiv@divisor,w
  5568  0751  02B0               	subwf	___lldiv@dividend,f
  5569  0752  082D               	movf	___lldiv@divisor+1,w
  5570  0753  1C03               	skipc
  5571  0754  0F2D               	incfsz	___lldiv@divisor+1,w
  5572  0755  02B1               	subwf	___lldiv@dividend+1,f
  5573  0756  082E               	movf	___lldiv@divisor+2,w
  5574  0757  1C03               	skipc
  5575  0758  0F2E               	incfsz	___lldiv@divisor+2,w
  5576  0759  02B2               	subwf	___lldiv@dividend+2,f
  5577  075A  082F               	movf	___lldiv@divisor+3,w
  5578  075B  1C03               	skipc
  5579  075C  0F2F               	incfsz	___lldiv@divisor+3,w
  5580  075D  02B3               	subwf	___lldiv@dividend+3,f
  5581  075E  1434               	bsf	___lldiv@quotient,0
  5582  075F                     l1986:	
  5583  075F  3001               	movlw	1
  5584  0760                     u2405:	
  5585  0760  1003               	clrc
  5586  0761  0CAF               	rrf	___lldiv@divisor+3,f
  5587  0762  0CAE               	rrf	___lldiv@divisor+2,f
  5588  0763  0CAD               	rrf	___lldiv@divisor+1,f
  5589  0764  0CAC               	rrf	___lldiv@divisor,f
  5590  0765  3EFF               	addlw	-1
  5591  0766  1D03               	skipz
  5592  0767  2F60               	goto	u2405
  5593  0768  3001               	movlw	1
  5594  0769  02B8               	subwf	___lldiv@counter,f
  5595  076A  1D03               	btfss	3,2
  5596  076B  2F37               	goto	l1978
  5597  076C                     l1990:	
  5598  076C  0837               	movf	___lldiv@quotient+3,w
  5599  076D  00AF               	movwf	?___lldiv+3
  5600  076E  0836               	movf	___lldiv@quotient+2,w
  5601  076F  00AE               	movwf	?___lldiv+2
  5602  0770  0835               	movf	___lldiv@quotient+1,w
  5603  0771  00AD               	movwf	?___lldiv+1
  5604  0772  0834               	movf	___lldiv@quotient,w
  5605  0773  00AC               	movwf	?___lldiv
  5606  0774  0008               	return
  5607  0775                     __end_of___lldiv:	
  5608                           
  5609                           	psect	text26
  5610  07FB                     __ptext26:	
  5611 ;; *************** function _Oscillator_Init *****************
  5612 ;; Defined at:
  5613 ;;		line 23 in file "SYST_Init.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		status,2
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5627 ;;      Params:         0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0
  5630 ;;      Totals:         0       0       0       0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_system_Initialize
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function _Oscillator_Init
  5643  07FB                     _Oscillator_Init:	
  5644                           
  5645                           ;SYST_Init.c: 24: OSCCON = 0x00;
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _Oscillator_Init: [status,2]
  5649  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  5650  07FC  1303               	bcf	3,6	;RP1=0, select bank1
  5651  07FD  018F               	clrf	15	;volatile
  5652                           
  5653                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  5654  07FE  0190               	clrf	16	;volatile
  5655  07FF  0008               	return
  5656  0800                     __end_of_Oscillator_Init:	
  5657                           
  5658                           	psect	text27
  5659  06B4                     __ptext27:	
  5660 ;; *************** function _Lcd_Init *****************
  5661 ;; Defined at:
  5662 ;;		line 62 in file "lcd_Config.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5676 ;;      Params:         0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0
  5678 ;;      Temps:          0       2       0       0       0
  5679 ;;      Totals:         0       2       0       0       0
  5680 ;;Total ram usage:        2 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    3
  5683 ;; This function calls:
  5684 ;;		_Lcd_Cmd
  5685 ;;		_Lcd_Port
  5686 ;; This function is called by:
  5687 ;;		_system_Initialize
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _Lcd_Init
  5693  06B4                     _Lcd_Init:	
  5694                           
  5695                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  5696                           
  5697                           ;incstack = 0
  5698                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5699  06B4  3000               	movlw	0
  5700  06B5  120A  158A  254F  120A  118A  	fcall	_Lcd_Port
  5701                           
  5702                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  5703  06BA  301A               	movlw	26
  5704  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  5705  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  5706  06BD  00A2               	movwf	??_Lcd_Init+1
  5707  06BE  30F7               	movlw	247
  5708  06BF  00A1               	movwf	??_Lcd_Init
  5709  06C0                     u3997:	
  5710  06C0  0BA1               	decfsz	??_Lcd_Init,f
  5711  06C1  2EC0               	goto	u3997
  5712  06C2  0BA2               	decfsz	??_Lcd_Init+1,f
  5713  06C3  2EC0               	goto	u3997
  5714  06C4  2EC5               	nop2
  5715                           
  5716                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  5717  06C5  3003               	movlw	3
  5718  06C6  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5719                           
  5720                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  5721  06CB  3007               	movlw	7
  5722  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  5723  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  5724  06CE  00A2               	movwf	??_Lcd_Init+1
  5725  06CF  307C               	movlw	124
  5726  06D0  00A1               	movwf	??_Lcd_Init
  5727  06D1                     u4007:	
  5728  06D1  0BA1               	decfsz	??_Lcd_Init,f
  5729  06D2  2ED1               	goto	u4007
  5730  06D3  0BA2               	decfsz	??_Lcd_Init+1,f
  5731  06D4  2ED1               	goto	u4007
  5732  06D5  0000               	nop
  5733                           
  5734                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  5735  06D6  3003               	movlw	3
  5736  06D7  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5737                           
  5738                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  5739  06DC  300F               	movlw	15
  5740  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  5741  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  5742  06DF  00A2               	movwf	??_Lcd_Init+1
  5743  06E0  3047               	movlw	71
  5744  06E1  00A1               	movwf	??_Lcd_Init
  5745  06E2                     u4017:	
  5746  06E2  0BA1               	decfsz	??_Lcd_Init,f
  5747  06E3  2EE2               	goto	u4017
  5748  06E4  0BA2               	decfsz	??_Lcd_Init+1,f
  5749  06E5  2EE2               	goto	u4017
  5750                           
  5751                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  5752  06E6  3003               	movlw	3
  5753  06E7  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5754                           
  5755                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  5756  06EC  3002               	movlw	2
  5757  06ED  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5758                           
  5759                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  5760  06F2  3002               	movlw	2
  5761  06F3  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5762                           
  5763                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  5764  06F8  3008               	movlw	8
  5765  06F9  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5766                           
  5767                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  5768  06FE  3000               	movlw	0
  5769  06FF  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5770                           
  5771                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  5772  0704  300C               	movlw	12
  5773  0705  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5774                           
  5775                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  5776  070A  3000               	movlw	0
  5777  070B  120A  158A  2569  120A  118A  	fcall	_Lcd_Cmd
  5778                           
  5779                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  5780  0710  3006               	movlw	6
  5781  0711  120A  158A  2569   	fcall	_Lcd_Cmd
  5782  0714  0008               	return
  5783  0715                     __end_of_Lcd_Init:	
  5784                           
  5785                           	psect	text28
  5786  0D69                     __ptext28:	
  5787 ;; *************** function _Lcd_Cmd *****************
  5788 ;; Defined at:
  5789 ;;		line 32 in file "lcd_Config.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  a               1    wreg     unsigned char 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  a               1    0[BANK0 ] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0, pclath, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       0       0       0       0
  5804 ;;      Locals:         0       1       0       0       0
  5805 ;;      Temps:          2       0       0       0       0
  5806 ;;      Totals:         2       1       0       0       0
  5807 ;;Total ram usage:        3 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    2
  5810 ;; This function calls:
  5811 ;;		_Lcd_Port
  5812 ;; This function is called by:
  5813 ;;		_Lcd_Set_Cursor
  5814 ;;		_Lcd_Init
  5815 ;;		_Lcd_Clear
  5816 ;;		_Lcd_Shift_Right
  5817 ;;		_Lcd_Shift_Left
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           
  5822                           ;psect for function _Lcd_Cmd
  5823  0D69                     _Lcd_Cmd:	
  5824                           
  5825                           ;incstack = 0
  5826                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5827                           ;Lcd_Cmd@a stored from wreg
  5828  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0D6B  00A0               	movwf	Lcd_Cmd@a
  5831                           
  5832                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  5833  0D6C  1286               	bcf	6,5	;volatile
  5834                           
  5835                           ;lcd_Config.c: 34: Lcd_Port(a);
  5836  0D6D  0820               	movf	Lcd_Cmd@a,w
  5837  0D6E  120A  158A  254F  120A  158A  	fcall	_Lcd_Port
  5838                           
  5839                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  5840  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0D75  1606               	bsf	6,4	;volatile
  5843                           
  5844                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  5845  0D76  3006               	movlw	6
  5846  0D77  00F6               	movwf	??_Lcd_Cmd+1
  5847  0D78  3030               	movlw	48
  5848  0D79  00F5               	movwf	??_Lcd_Cmd
  5849  0D7A                     u4027:	
  5850  0D7A  0BF5               	decfsz	??_Lcd_Cmd,f
  5851  0D7B  2D7A               	goto	u4027
  5852  0D7C  0BF6               	decfsz	??_Lcd_Cmd+1,f
  5853  0D7D  2D7A               	goto	u4027
  5854  0D7E  0000               	nop
  5855                           
  5856                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  5857  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0D81  1206               	bcf	6,4	;volatile
  5860  0D82  0008               	return
  5861  0D83                     __end_of_Lcd_Cmd:	
  5862                           
  5863                           	psect	text29
  5864  0D4F                     __ptext29:	
  5865 ;; *************** function _Lcd_Port *****************
  5866 ;; Defined at:
  5867 ;;		line 10 in file "lcd_Config.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  a               1    wreg     unsigned char 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  a               1    4[COMMON] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5881 ;;      Params:         0       0       0       0       0
  5882 ;;      Locals:         1       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0
  5884 ;;      Totals:         1       0       0       0       0
  5885 ;;Total ram usage:        1 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    1
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_Lcd_Cmd
  5892 ;;		_Lcd_Init
  5893 ;;		_Lcd_Write_Char
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _Lcd_Port
  5899  0D4F                     _Lcd_Port:	
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _Lcd_Port: [wreg]
  5903                           ;Lcd_Port@a stored from wreg
  5904  0D4F  00F4               	movwf	Lcd_Port@a
  5905                           
  5906                           ;lcd_Config.c: 11: if (a & 1)
  5907  0D50  1C74               	btfss	Lcd_Port@a,0
  5908  0D51  2D56               	goto	l108
  5909                           
  5910                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  5911  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0D54  1586               	bsf	6,3	;volatile
  5914  0D55  2D59               	goto	l109
  5915  0D56                     l108:	
  5916                           
  5917                           ;lcd_Config.c: 13: else
  5918                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  5919  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  5920  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  5921  0D58  1186               	bcf	6,3	;volatile
  5922  0D59                     l109:	
  5923                           
  5924                           ;lcd_Config.c: 16: if (a & 2)
  5925  0D59  1CF4               	btfss	Lcd_Port@a,1
  5926  0D5A  2D5D               	goto	l110
  5927                           
  5928                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  5929  0D5B  1506               	bsf	6,2	;volatile
  5930  0D5C  2D5E               	goto	l111
  5931  0D5D                     l110:	
  5932                           
  5933                           ;lcd_Config.c: 18: else
  5934                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  5935  0D5D  1106               	bcf	6,2	;volatile
  5936  0D5E                     l111:	
  5937                           
  5938                           ;lcd_Config.c: 21: if (a & 4)
  5939  0D5E  1D74               	btfss	Lcd_Port@a,2
  5940  0D5F  2D62               	goto	l112
  5941                           
  5942                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  5943  0D60  1486               	bsf	6,1	;volatile
  5944  0D61  2D63               	goto	l113
  5945  0D62                     l112:	
  5946                           
  5947                           ;lcd_Config.c: 23: else
  5948                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  5949  0D62  1086               	bcf	6,1	;volatile
  5950  0D63                     l113:	
  5951                           
  5952                           ;lcd_Config.c: 26: if (a & 8)
  5953  0D63  1DF4               	btfss	Lcd_Port@a,3
  5954  0D64  2D67               	goto	l114
  5955                           
  5956                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  5957  0D65  1406               	bsf	6,0	;volatile
  5958  0D66  0008               	return
  5959  0D67                     l114:	
  5960                           
  5961                           ;lcd_Config.c: 28: else
  5962                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  5963  0D67  1006               	bcf	6,0	;volatile
  5964  0D68  0008               	return
  5965  0D69                     __end_of_Lcd_Port:	
  5966                           
  5967                           	psect	text30
  5968  0CD8                     __ptext30:	
  5969 ;; *************** function _Interrupt_Init *****************
  5970 ;; Defined at:
  5971 ;;		line 10 in file "interrupt_Init.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		None
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_system_Initialize
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _Interrupt_Init
  6001  0CD8                     _Interrupt_Init:	
  6002                           
  6003                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6004                           
  6005                           ;incstack = 0
  6006                           ; Regs used in _Interrupt_Init: []
  6007  0CD8  178B               	bsf	11,7	;volatile
  6008                           
  6009                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6010  0CD9  170B               	bsf	11,6	;volatile
  6011                           
  6012                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6013  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  6015  0CDC  170C               	bsf	12,6	;volatile
  6016                           
  6017                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6018  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0CDF  130C               	bcf	12,6	;volatile
  6021                           
  6022                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6023  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  6024  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  6025  0CE2  168C               	bsf	12,5	;volatile
  6026                           
  6027                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6028  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  6030  0CE5  128C               	bcf	12,5	;volatile
  6031  0CE6  0008               	return
  6032  0CE7                     __end_of_Interrupt_Init:	
  6033                           
  6034                           	psect	text31
  6035  0D36                     __ptext31:	
  6036 ;; *************** function _ADC_Init *****************
  6037 ;; Defined at:
  6038 ;;		line 13 in file "adc_Init.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0
  6055 ;;      Totals:         0       0       0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    1
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_system_Initialize
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           
  6067                           ;psect for function _ADC_Init
  6068  0D36                     _ADC_Init:	
  6069                           
  6070                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6074  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  6075  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  6076  0D38  081F               	movf	31,w	;volatile
  6077  0D39  393F               	andlw	-193
  6078  0D3A  3840               	iorlw	64
  6079  0D3B  009F               	movwf	31	;volatile
  6080                           
  6081                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6082  0D3C  30C3               	movlw	-61
  6083  0D3D  059F               	andwf	31,f	;volatile
  6084                           
  6085                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6086  0D3E  109F               	bcf	31,1	;volatile
  6087  0D3F  1C9F               	btfss	31,1	;volatile
  6088  0D40  2D45               	goto	u1050
  6089  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6090  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6091  0D43  149F               	bsf	31,1	;volatile
  6092  0D44  2D48               	goto	l1328
  6093  0D45                     u1050:	
  6094  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  6095  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  6096  0D47  109F               	bcf	31,1	;volatile
  6097  0D48                     l1328:	
  6098                           
  6099                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6100  0D48  141F               	bsf	31,0	;volatile
  6101                           
  6102                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6103  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  6104  0D4A  1303               	bcf	3,6	;RP1=0, select bank1
  6105  0D4B  179F               	bsf	31,7	;volatile
  6106                           
  6107                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6108  0D4C  121F               	bcf	31,4	;volatile
  6109                           
  6110                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6111  0D4D  129F               	bcf	31,5	;volatile
  6112  0D4E  0008               	return
  6113  0D4F                     __end_of_ADC_Init:	
  6114                           
  6115                           	psect	text32
  6116  0DC9                     __ptext32:	
  6117 ;; *************** function _ISR *****************
  6118 ;; Defined at:
  6119 ;;		line 22 in file "interrupt_Init.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		None
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6133 ;;      Params:         0       0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0
  6135 ;;      Temps:          4       0       0       0       0
  6136 ;;      Totals:         4       0       0       0       0
  6137 ;;Total ram usage:        4 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		Interrupt level 1
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _ISR
  6148  0DC9                     _ISR:	
  6149                           
  6150                           ;interrupt_Init.c: 23: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  6151  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  6152  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  6153  0DCB  1E8C               	btfss	12,5	;volatile
  6154  0DCC  2DD2               	goto	i1l219
  6155  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0DCF  1E8C               	btfss	12,5	;volatile
  6158  0DD0  2DD2               	goto	i1l219
  6159                           
  6160                           ;interrupt_Init.c: 24: PIR1bits.RCIF = 0;
  6161  0DD1  128C               	bcf	12,5	;volatile
  6162  0DD2                     i1l219:	
  6163                           
  6164                           ;interrupt_Init.c: 25: }
  6165                           ;interrupt_Init.c: 26: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  6166  0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  6167  0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  6168  0DD4  1F0C               	btfss	12,6	;volatile
  6169  0DD5  2DDB               	goto	i1l220
  6170  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  6171  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  6172  0DD8  1F0C               	btfss	12,6	;volatile
  6173  0DD9  2DDB               	goto	i1l220
  6174                           
  6175                           ;interrupt_Init.c: 27: PIR1bits.ADIF = 0;
  6176  0DDA  130C               	bcf	12,6	;volatile
  6177  0DDB                     i1l220:	
  6178                           
  6179                           ;interrupt_Init.c: 28: }
  6180                           ;interrupt_Init.c: 29: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  6181  0DDB  1A8B               	btfsc	11,5	;volatile
  6182  0DDC  1D0B               	btfss	11,2	;volatile
  6183  0DDD  2DDF               	goto	i1l221
  6184                           
  6185                           ;interrupt_Init.c: 30: INTCONbits.T0IF = 0;
  6186  0DDE  110B               	bcf	11,2	;volatile
  6187  0DDF                     i1l221:	
  6188                           
  6189                           ;interrupt_Init.c: 31: }
  6190                           ;interrupt_Init.c: 32: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  6191  0DDF  1683               	bsf	3,5	;RP0=1, select bank1
  6192  0DE0  1303               	bcf	3,6	;RP1=0, select bank1
  6193  0DE1  1D8C               	btfss	12,3	;volatile
  6194  0DE2  2DE8               	goto	i1l223
  6195  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0DE5  1D8C               	btfss	12,3	;volatile
  6198  0DE6  2DE8               	goto	i1l223
  6199                           
  6200                           ;interrupt_Init.c: 33: PIR1bits.SSPIF = 0;
  6201  0DE7  118C               	bcf	12,3	;volatile
  6202  0DE8                     i1l223:	
  6203  0DE8  0873               	movf	??_ISR+3,w
  6204  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0DEA  00FF               	movwf	127
  6206  0DEB  0872               	movf	??_ISR+2,w
  6207  0DEC  008A               	movwf	10
  6208  0DED  0871               	movf	??_ISR+1,w
  6209  0DEE  0084               	movwf	4
  6210  0DEF  0E70               	swapf	??_ISR^(0+-128),w
  6211  0DF0  0083               	movwf	3
  6212  0DF1  0EFE               	swapf	126,f
  6213  0DF2  0E7E               	swapf	126,w
  6214  0DF3  0009               	retfie
  6215  0DF4                     __end_of_ISR:	
  6216  007E                     btemp	set	126	;btemp
  6217  007E                     wtemp0	set	126
  6218                           
  6219                           	psect	intentry
  6220  0004                     __pintentry:	
  6221                           ;incstack = 0
  6222                           ; Regs used in _ISR: []
  6223                           
  6224  0004                     interrupt_function:	
  6225  007E                     saved_w	set	btemp
  6226  0004  00FE               	movwf	btemp
  6227  0005  0E03               	swapf	3,w
  6228  0006  00F0               	movwf	??_ISR
  6229  0007  0804               	movf	4,w
  6230  0008  00F1               	movwf	??_ISR+1
  6231  0009  080A               	movf	10,w
  6232  000A  00F2               	movwf	??_ISR+2
  6233  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6234  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6235  000D  087F               	movf	btemp+1,w
  6236  000E  00F3               	movwf	??_ISR+3
  6237  000F  120A  158A  2DC9   	ljmp	_ISR


Data Sizes:
    Strings     4
    Constant    10
    Data        23
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     78      79
    BANK1            80     29      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_write@string	PTR unsigned char  size(1) Largest target is 13
		 -> sTemperature(BANK1[2]), temp_Display@TEMP(BANK1[13]), 


Critical Paths under _main in COMMON

    _temp_Display->_Lcd_write
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _temp_Display->_sprintf
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20064
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                        17    17      0   17512
                                             12 BANK1     17    17      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13825
                                             68 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             54 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                              9 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             25 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2498
                                             75 BANK0      3     0      3
                                              0 BANK1     12    12      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            4     4      0     450
                                              6 COMMON     1     1      0
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              1 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1D      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      93      12        0.0%
ABS                  0      0      93       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 16 17:16:19 2019

          ??_Interrupt_Init 0074      __size_of_PWM_DutyCycle 006F                           pc 0002  
               __CFG_CP$OFF 0000                          fsr 0004         ___wmul@multiplicand 0022  
              ___ftadd@exp1 0055                ___ftadd@exp2 0054                 __CFG_LVP$ON 0000  
              ___ftadd@sign 0053                         l110 0D5D                         l111 0D5E  
                       l112 0D62                         l113 0D63                         l114 0D67  
                       l108 0D56                         l109 0D59                         l400 012A  
                       l186 02EA                         l495 0DB2                         l663 0693  
                       l664 069B                         l656 067E                         l747 05BD  
                       l687 027B                         _PR2 0092                __CFG_CPD$OFF 0000  
                       _ISR 0DC9                         _adc 0077                         fsr0 0004  
                       indf 0000                __CFG_IESO$ON 0000                __CFG_FOSC$HS 0000  
                      ?_ISR 0070                ___ftdiv@cntr 0043                ___ftdiv@sign 0048  
                      l1328 0D48                        l2402 0241                        l2420 028D  
                      l2404 024D                        l2342 0DA8                        l2414 026B  
                      l2406 0252                        l2360 0EFD                        l2424 029F  
                      l2416 0277                        l2408 0256                        l2520 0463  
                      l2504 042B                        l2290 0668                        l2282 0650  
                      l2434 02C2                        l2450 04BF                        l2356 0EE7  
                      l2540 0E69                        l2700 011C                        l2444 04A9  
                      l2516 0453                        l2508 043B                        l2542 0E77  
                      l1734 0CD6                        l2710 014D                        l2286 0657  
                      l2374 01FC                        l2608 0FD7                        l2624 0D88  
                      l2552 0E98                        l2712 0151                        l2296 0683  
                      l2288 0663                        l2384 0212                        l2472 0523  
                      l2464 0504                        l2570 0E18                        l2298 068D  
                      l2378 0203                        l2548 0E8D                        l2564 0DFC  
                      l2732 0179                        l2724 0175                        l2708 0149  
                      l2660 005E                        l2396 022C                        l2492 03EC  
                      l2644 03A9                        l2566 0E0A                        l2574 0E23  
                      l2718 0166                        l2734 003A                        l2486 03D6  
                      l1934 0563                        l2638 0305                        l2736 01CC  
                      l1960 05B2                        l1952 0595                        l2648 03BA  
                      l2666 0075                        l1962 05C0                        l1954 05A5  
                      l2770 0CB7                        l2676 00C3                        l1990 076C  
                      l2694 00FB                        l2678 00DC                        l1966 05CE  
                      l1976 0727                        l2688 00F5                        l1986 075F  
                      l1978 0737                        STR_1 0810                        u1050 0D45  
                      u3005 0E39                        u3025 0DB3                        u3035 0DBA  
                      u2405 0760                        u2325 05B4                        u4007 06D1  
                      u4017 06E2                        u3225 0242                        u2265 056A  
                      u4027 0D7A                        u3075 0EFF                        u2365 072B  
                      u3085 0F07                        u3405 0524                        u3255 0257  
                      u2295 0596                        u2385 0739                        u2395 074E  
                      u2555 0F2C                        u3195 022D                        u3605 0E84  
                      u3285 026C                        u3365 04D1                        u3445 03F8  
                      u3615 0E8E                        u3375 04E3                        u3535 0464  
                      u3455 040A                        u3705 063B                        u2585 0ECF  
                      u2905 065C                        u3385 0505                        u3545 046C  
                      u3395 0516                        u3725 0FBC                        u3645 0DFF  
                      u2925 0677                        u3485 043C                        u3575 0E6C  
                      u3495 0444                        u3745 0FE5                        u3665 0E10  
                      u2945 0686                        u3595 0E78                        u3675 0E19  
                      u3950 077F                        u3695 0624                        u3855 0112  
                      u3775 0303                        u2985 06A2                        u3795 03B8  
                      u3895 0139                        u3967 02E2                        u3977 0E49  
                      u3987 0E59                        u3997 06C0                        _TMR0 0001  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 0CB2  
              ___ftpack@arg 0020                ___ftpack@exp 0023                        btemp 007E  
          __end_of_ADC_Init 0D4F                        start 0012       _temp_Measurement$1512 0066  
           __end_of_Lcd_Cmd 0D83               __CFG_MCLRE$ON 0000                ___ftmul@cntr 0037  
              ___ftmul@sign 0038           ??_Oscillator_Init 0074                       ??_ISR 0070  
              ___fttol@exp1 0063                ___fttol@lval 005F                       ?_main 0070  
           __end_of___ftadd 02DC               __CFG_WDTE$OFF 0000             __end_of___ftdiv 0549  
           __end_of___lldiv 0775             __end_of___ftmul 0491             __end_of___fttol 05D7  
           __end_of___lwdiv 0E9D                       i1l220 0DDB                       i1l221 0DDF  
                     i1l223 0DE8                       i1l219 0DD2             __end_of___lwmod 0E28  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009     __size_of_Lcd_Set_Cursor 0052                       _TRISB 0086  
                     _TRISD 0088                       _TXREG 0019         ___lmul@multiplicand 0024  
        __size_of_UART_Init 0040          __size_of_TMR0_Init 000F               _PWM_DutyCycle 05D7  
           __end_of_dpowers 0810             __end_of_isdigit 0CD8               ___ftpack@sign 0024  
          __end_of_SPI_Init 0CCA              __CFG_BOREN$OFF 0000                       pclath 000A  
          __end_of_PWM_Init 0F63                       status 0003                       wtemp0 007E  
           __end_of_sprintf 01D3            __end_of_Lcd_Init 0715            __end_of_Lcd_Port 0D69  
           __initialization 0015                __end_of_main 0CBD                      ??_main 0077  
             ___fttol@sign1 005E              ?_PWM_DutyCycle 0039          __size_of_Lcd_write 0023  
                    _ADRESH 001E                      _ADRESL 009E                      _CCPR1L 0015  
          __end_of___ftpack 06B4                      _ANSELH 0189            __end_of___lwtoft 0D36  
                    _OSCCON 008F                   ??_Lcd_Cmd 0075     __size_of_Lcd_Write_Char 0037  
                    _SSPBUF 0013              __CFG_PWRTE$OFF 0000           __end_of_UART_Init 0EDD  
         __end_of_TMR0_Init 0CF6                      ___lmul 0EDD                      ___wmul 0DA6  
                 ??___ftadd 004F                   ??___ftdiv 003F                   ??___lldiv 0075  
                 ??___ftmul 002F                   ??___fttol 005A                   ??___lwdiv 0074  
                 ??___lwmod 0075       ___ftmul@f3_as_product 0034           ?_temp_Measurement 0070  
                 ??_isdigit 0074                   ?_ADC_Init 0070                      saved_w 007E  
        ??_temp_Measurement 0064                   ??_sprintf 00A0             Lcd_Set_Cursor@y 0026  
           Lcd_Set_Cursor@z 0025     __end_of__initialization 002F                  ___ftadd@f1 0049  
                ___ftadd@f2 004C                  ___ftdiv@f1 003C                  ___ftdiv@f2 0039  
                ___ftdiv@f3 0044                  ___ftmul@f1 0029                  ___ftmul@f2 002C  
                ___fttol@f1 0056              __pcstackCOMMON 0070                __pidataBANK1 0D07  
         __end_of_Lcd_write 0DA6                   ?_SPI_Init 0070                  ___lwtoft@c 0025  
                 ?_PWM_Init 0039              _Lcd_Set_Cursor 0FAE             ??_PWM_DutyCycle 003D  
            _OPTION_REGbits 0081                  ??_ADC_Init 0074                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                sprintf@width 00A9                  __pbssBANK0 006E  
                __pbssBANK1 00D4             _Oscillator_Init 07FB                  __pmaintext 0CB2  
                   ?___lmul 0020                     ?___wmul 0020                  __pintentry 0004  
            ___lmul@product 0028                   ?___ftpack 0020      __end_of_Lcd_Set_Cursor 1000  
                ??_SPI_Init 0074                  ??_PWM_Init 003D                   ?___lwtoft 0025  
                   _GO_DONE 00F9                     _OSCTUNE 0090                  ??_Lcd_Init 0021  
                ??_Lcd_Port 0074                  __stringtab 0800              _Lcd_Write_Char 0E28  
                   _Lcd_Cmd 0D69               ?_temp_Display 0070             __size_of___lmul 0041  
                   ___ftadd 01D3                     ___ftdiv 0491                     ___lldiv 0715  
           __size_of___wmul 0023                     ___ftmul 03BE                     ___fttol 0549  
                   ___lwdiv 0E5F                     ___lwmod 0DF4                  ??___ftpack 0074  
                 _ANSELbits 0188             ?_Lcd_Set_Cursor 0021                     __ptext1 0775  
                   __ptext2 02DC                     __ptext3 0D1E                     __ptext4 0549  
                   __ptext5 03BE                     __ptext6 0491                     __ptext7 01D3  
                   __ptext8 0646                     __ptext9 0033                     _g_state 0079  
                ??___lwtoft 0028                  _pinManager 07D0                __size_of_ISR 002B  
                   _dpowers 0806                   _T2CONbits 0012                     _rawData 00D4  
   __size_of_Interrupt_Init 000F                     _isdigit 0CCA     __end_of_Oscillator_Init 0800  
                   _sprintf 0033      __end_of_Lcd_Write_Char 0E5F        end_of_initialization 002F  
            ??_temp_Display 00AC             ___lldiv@divisor 002C            temp_Display@TEMP 00B0  
           ___lldiv@counter 0038                   _RCSTAbits 0018                   Lcd_Port@a 0074  
                 _UART_Init 0E9D                   _TMR0_Init 0CE7                   _PORTAbits 0005  
                 _PORTBbits 0006                   _TRISAbits 0085                   _TRISBbits 0086  
                 _TRISCbits 0087          PWM_Init@iFrequency 0039           _system_Initialize 0F63  
         __size_of_ADC_Init 0019          ?_system_Initialize 0070             ?_Lcd_Write_Char 0070  
               _CCP1CONbits 0017                 ___ftdiv@exp 0047   __size_of_temp_Measurement 00E2  
                 _TXSTAbits 0098                _sTemperature 00D8         ??_system_Initialize 0077  
               ___ftmul@exp 0033              __end_of___lmul 0F1E              __end_of___wmul 0DC9  
                ?_UART_Init 0039                 _BAUDCTLbits 0187                  ?_TMR0_Init 0070  
                 _Lcd_write 0D83                 ?_pinManager 0070   __end_of_system_Initialize 0FAE  
         __size_of_SPI_Init 000D           __size_of_PWM_Init 0045         start_initialization 0015  
          ?_Oscillator_Init 0070                 __end_of_ISR 0DF4           __size_of_Lcd_Init 0061  
         __size_of_Lcd_Port 001A                    ??___lmul 0074                    ??___wmul 0074  
                init_fetch0 0CF6                 __pdataBANK1 00BD             Lcd_Write_Char@a 0022  
           Lcd_Write_Char@y 0021               _segment_Array 00CA        __end_of_temp_Display 07D0  
                ?_Lcd_write 0070      temp_Measurement@sample 0069              _Interrupt_Init 0CD8  
         __size_of___ftpack 006E                 __pbssCOMMON 0077                   ___latbits 0002  
         __size_of___lwtoft 0018               __pcstackBANK0 0020               __pcstackBANK1 00A0  
     __end_of_PWM_DutyCycle 0646                _isdigit$1267 0074                    ?_Lcd_Cmd 0070  
               sprintf@flag 00A5                 sprintf@prec 00A4         __size_of_pinManager 002B  
          ___lwdiv@dividend 0022            ??_Lcd_Set_Cursor 0022                    ?___ftadd 0049  
                  ?___ftdiv 0039                    ?___lldiv 002C                    ?___ftmul 0029  
                  ?___fttol 0056                    ?___lwdiv 0020                    ?___lwmod 0027  
               ??_UART_Init 003B      __end_of_Interrupt_Init 0CE7                 ??_TMR0_Init 0074  
                 __pstrings 0800  __size_of_system_Initialize 004B                    ?_isdigit 0070  
           Lcd_write@string 0025                    _ADC_Init 0D36     PWM_DutyCycle@iDutyCycle 0039  
          ___lwdiv@quotient 0025                    ?_sprintf 006B           interrupt_function 0004  
            ___wmul@product 0074            _temp_Measurement 02DC                    _PIE1bits 008C  
                  Lcd_Cmd@a 0020                    _PIR1bits 000C           UART_Init@baudRate 0039  
                  _SPI_Init 0CBD             ?_Interrupt_Init 0070                 ??_Lcd_write 0076  
                _ADCON0bits 001F                 __stringbase 0805                  _ADCON1bits 009F  
                  _PWM_Init 0F1E           ___wmul@multiplier 0020            ??_Lcd_Write_Char 0075  
                  _Lcd_Init 06B4                    _Lcd_Port 0D4F           ___lmul@multiplier 0020  
      Lcd_Set_Cursor@column 0021            __size_of_Lcd_Cmd 001A       __size_of_temp_Display 005B  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___lldiv 0060  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 0646          __end_of__stringtab 0806  
              ??_pinManager 0074                    ___lwtoft 0D1E                  sprintf@val 00A6  
          __size_of_isdigit 000E             ___lwdiv@divisor 0020             ___lwdiv@counter 0024  
                  __ptext10 0CCA                    __ptext11 0DA6                    __ptext20 0CE7  
                  __ptext12 0DF4                    __ptext21 0CBD                    __ptext13 0E5F  
                  __ptext30 0CD8                    __ptext22 0F1E                    __ptext14 0D83  
                  __ptext31 0D36                    __ptext23 05D7                    __ptext15 0E28  
                  __ptext32 0DC9                    __ptext24 0EDD                    __ptext16 0FAE  
                  __ptext25 0715                    __ptext17 0F63                    __ptext26 07FB  
                  __ptext18 07D0                    __ptext27 06B4                    __ptext19 0E9D  
                  __ptext28 0D69                    __ptext29 0D4F           __CFG_BOR4V$BOR40V 0000  
          __size_of_sprintf 01A0               __size_of_main 000B                _temp_Display 0775  
        __end_of_pinManager 07FB                  _INTCONbits 000B                    init_ram0 0CFA  
                  isdigit@c 0075          Lcd_Write_Char@temp 0020                    intlevel1 0000  
                 sprintf@ap 00A3                   sprintf@sp 00A8           temp_Display@F2019 00BD  
  __size_of_Oscillator_Init 0005            ___lwmod@dividend 0029            ___lldiv@dividend 0030  
                 stringcode 0800          Lcd_Set_Cursor@temp 0027    __end_of_temp_Measurement 03BE  
               _temperature 006E                    sprintf@c 00AB                    sprintf@f 006B  
          ___lldiv@quotient 0034             ___lwmod@divisor 0027            _segment_Variable 00D6  
           ___lwmod@counter 0076                    stringdir 0800                    stringtab 0800  
         Lcd_Set_Cursor@raw 0024                  Lcd_write@i 0023                  _SSPCONbits 0014  
