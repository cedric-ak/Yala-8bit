

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jul 22 00:13:51 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 1.45
    59                           ; Generated 16/11/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0088                     	;# 
   522  0089                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0094                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  0105                     	;# 
   546  0107                     	;# 
   547  0108                     	;# 
   548  0109                     	;# 
   549  010C                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  010F                     	;# 
   554  0185                     	;# 
   555  0187                     	;# 
   556  0188                     	;# 
   557  0189                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0088                     	;# 
   600  0089                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  008F                     	;# 
   605  0090                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0093                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  0105                     	;# 
   624  0107                     	;# 
   625  0108                     	;# 
   626  0109                     	;# 
   627  010C                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  0185                     	;# 
   633  0187                     	;# 
   634  0188                     	;# 
   635  0189                     	;# 
   636  018C                     	;# 
   637  018D                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0014                     	;# 
   660  0015                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001B                     	;# 
   669  001C                     	;# 
   670  001D                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  0081                     	;# 
   674  0085                     	;# 
   675  0086                     	;# 
   676  0087                     	;# 
   677  0088                     	;# 
   678  0089                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  008F                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0093                     	;# 
   687  0093                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  009F                     	;# 
   701  0105                     	;# 
   702  0107                     	;# 
   703  0108                     	;# 
   704  0109                     	;# 
   705  010C                     	;# 
   706  010C                     	;# 
   707  010D                     	;# 
   708  010E                     	;# 
   709  010F                     	;# 
   710  0185                     	;# 
   711  0187                     	;# 
   712  0188                     	;# 
   713  0189                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000E                     	;# 
   732  000F                     	;# 
   733  0010                     	;# 
   734  0011                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0014                     	;# 
   738  0015                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0017                     	;# 
   742  0018                     	;# 
   743  0019                     	;# 
   744  001A                     	;# 
   745  001B                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  0088                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  008F                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  0105                     	;# 
   780  0107                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0185                     	;# 
   789  0187                     	;# 
   790  0188                     	;# 
   791  0189                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0008                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0088                     	;# 
   834  0089                     	;# 
   835  008C                     	;# 
   836  008D                     	;# 
   837  008E                     	;# 
   838  008F                     	;# 
   839  0090                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0093                     	;# 
   845  0094                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  009F                     	;# 
   857  0105                     	;# 
   858  0107                     	;# 
   859  0108                     	;# 
   860  0109                     	;# 
   861  010C                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  010F                     	;# 
   866  0185                     	;# 
   867  0187                     	;# 
   868  0188                     	;# 
   869  0189                     	;# 
   870  018C                     	;# 
   871  018D                     	;# 
   872  0000                     	;# 
   873  0001                     	;# 
   874  0002                     	;# 
   875  0003                     	;# 
   876  0004                     	;# 
   877  0005                     	;# 
   878  0006                     	;# 
   879  0007                     	;# 
   880  0008                     	;# 
   881  0009                     	;# 
   882  000A                     	;# 
   883  000B                     	;# 
   884  000C                     	;# 
   885  000D                     	;# 
   886  000E                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001D                     	;# 
   905  001E                     	;# 
   906  001F                     	;# 
   907  0081                     	;# 
   908  0085                     	;# 
   909  0086                     	;# 
   910  0087                     	;# 
   911  0088                     	;# 
   912  0089                     	;# 
   913  008C                     	;# 
   914  008D                     	;# 
   915  008E                     	;# 
   916  008F                     	;# 
   917  0090                     	;# 
   918  0091                     	;# 
   919  0092                     	;# 
   920  0093                     	;# 
   921  0093                     	;# 
   922  0093                     	;# 
   923  0094                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009C                     	;# 
   932  009D                     	;# 
   933  009E                     	;# 
   934  009F                     	;# 
   935  0105                     	;# 
   936  0107                     	;# 
   937  0108                     	;# 
   938  0109                     	;# 
   939  010C                     	;# 
   940  010C                     	;# 
   941  010D                     	;# 
   942  010E                     	;# 
   943  010F                     	;# 
   944  0185                     	;# 
   945  0187                     	;# 
   946  0188                     	;# 
   947  0189                     	;# 
   948  018C                     	;# 
   949  018D                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000D                     	;# 
   964  000E                     	;# 
   965  000E                     	;# 
   966  000F                     	;# 
   967  0010                     	;# 
   968  0011                     	;# 
   969  0012                     	;# 
   970  0013                     	;# 
   971  0014                     	;# 
   972  0015                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001D                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  0081                     	;# 
   986  0085                     	;# 
   987  0086                     	;# 
   988  0087                     	;# 
   989  0088                     	;# 
   990  0089                     	;# 
   991  008C                     	;# 
   992  008D                     	;# 
   993  008E                     	;# 
   994  008F                     	;# 
   995  0090                     	;# 
   996  0091                     	;# 
   997  0092                     	;# 
   998  0093                     	;# 
   999  0093                     	;# 
  1000  0093                     	;# 
  1001  0094                     	;# 
  1002  0095                     	;# 
  1003  0096                     	;# 
  1004  0097                     	;# 
  1005  0098                     	;# 
  1006  0099                     	;# 
  1007  009A                     	;# 
  1008  009B                     	;# 
  1009  009C                     	;# 
  1010  009D                     	;# 
  1011  009E                     	;# 
  1012  009F                     	;# 
  1013  0105                     	;# 
  1014  0107                     	;# 
  1015  0108                     	;# 
  1016  0109                     	;# 
  1017  010C                     	;# 
  1018  010C                     	;# 
  1019  010D                     	;# 
  1020  010E                     	;# 
  1021  010F                     	;# 
  1022  0185                     	;# 
  1023  0187                     	;# 
  1024  0188                     	;# 
  1025  0189                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  0000                     	;# 
  1029  0001                     	;# 
  1030  0002                     	;# 
  1031  0003                     	;# 
  1032  0004                     	;# 
  1033  0005                     	;# 
  1034  0006                     	;# 
  1035  0007                     	;# 
  1036  0008                     	;# 
  1037  0009                     	;# 
  1038  000A                     	;# 
  1039  000B                     	;# 
  1040  000C                     	;# 
  1041  000D                     	;# 
  1042  000E                     	;# 
  1043  000E                     	;# 
  1044  000F                     	;# 
  1045  0010                     	;# 
  1046  0011                     	;# 
  1047  0012                     	;# 
  1048  0013                     	;# 
  1049  0014                     	;# 
  1050  0015                     	;# 
  1051  0015                     	;# 
  1052  0016                     	;# 
  1053  0017                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  001B                     	;# 
  1058  001B                     	;# 
  1059  001C                     	;# 
  1060  001D                     	;# 
  1061  001E                     	;# 
  1062  001F                     	;# 
  1063  0081                     	;# 
  1064  0085                     	;# 
  1065  0086                     	;# 
  1066  0087                     	;# 
  1067  0088                     	;# 
  1068  0089                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  008E                     	;# 
  1072  008F                     	;# 
  1073  0090                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0093                     	;# 
  1077  0093                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0097                     	;# 
  1083  0098                     	;# 
  1084  0099                     	;# 
  1085  009A                     	;# 
  1086  009B                     	;# 
  1087  009C                     	;# 
  1088  009D                     	;# 
  1089  009E                     	;# 
  1090  009F                     	;# 
  1091  0105                     	;# 
  1092  0107                     	;# 
  1093  0108                     	;# 
  1094  0109                     	;# 
  1095  010C                     	;# 
  1096  010C                     	;# 
  1097  010D                     	;# 
  1098  010E                     	;# 
  1099  010F                     	;# 
  1100  0185                     	;# 
  1101  0187                     	;# 
  1102  0188                     	;# 
  1103  0189                     	;# 
  1104  018C                     	;# 
  1105  018D                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000D                     	;# 
  1120  000E                     	;# 
  1121  000E                     	;# 
  1122  000F                     	;# 
  1123  0010                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0013                     	;# 
  1127  0014                     	;# 
  1128  0015                     	;# 
  1129  0015                     	;# 
  1130  0016                     	;# 
  1131  0017                     	;# 
  1132  0018                     	;# 
  1133  0019                     	;# 
  1134  001A                     	;# 
  1135  001B                     	;# 
  1136  001B                     	;# 
  1137  001C                     	;# 
  1138  001D                     	;# 
  1139  001E                     	;# 
  1140  001F                     	;# 
  1141  0081                     	;# 
  1142  0085                     	;# 
  1143  0086                     	;# 
  1144  0087                     	;# 
  1145  0088                     	;# 
  1146  0089                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0093                     	;# 
  1156  0093                     	;# 
  1157  0094                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0097                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009A                     	;# 
  1164  009B                     	;# 
  1165  009C                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  009F                     	;# 
  1169  0105                     	;# 
  1170  0107                     	;# 
  1171  0108                     	;# 
  1172  0109                     	;# 
  1173  010C                     	;# 
  1174  010C                     	;# 
  1175  010D                     	;# 
  1176  010E                     	;# 
  1177  010F                     	;# 
  1178  0185                     	;# 
  1179  0187                     	;# 
  1180  0188                     	;# 
  1181  0189                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184                           
  1185                           	psect	idataCOMMON
  1186  07FC                     __pidataCOMMON:	
  1187                           
  1188                           ;initializer for _student_Number
  1189  07FC  3418               	retlw	low ((STR_1-__stringbase)| (0+32768))
  1190                           
  1191                           	psect	idataBANK1
  1192  0BDD                     __pidataBANK1:	
  1193                           
  1194                           ;initializer for _segment_Array
  1195  0BDD  343F               	retlw	63
  1196  0BDE  3406               	retlw	6
  1197  0BDF  345B               	retlw	91
  1198  0BE0  344F               	retlw	79
  1199  0BE1  3466               	retlw	102
  1200  0BE2  346D               	retlw	109
  1201  0BE3  347D               	retlw	125
  1202  0BE4  3407               	retlw	7
  1203  0BE5  347F               	retlw	127
  1204  0BE6  346F               	retlw	111
  1205                           
  1206                           ;initializer for _student_Name
  1207  0BE7  3422               	retlw	low ((STR_2-__stringbase)| (0+32768))
  1208                           
  1209                           	psect	strings
  1210  0800                     __pstrings:	
  1211  0800                     stringtab:	
  1212  0800                     __stringtab:	
  1213                           
  1214                           ;	String table - string pointers are 1 byte each
  1215  0800  1BFF               	btfsc	btemp+1,7
  1216  0801  280A               	ljmp	stringcode
  1217  0802  1383               	bcf	3,7
  1218  0803  187F               	btfsc	btemp+1,0
  1219  0804  1783               	bsf	3,7
  1220  0805  0800               	movf	0,w
  1221  0806  0A84               	incf	4,f
  1222  0807  1903               	skipnz
  1223  0808  0AFF               	incf	btemp+1,f
  1224  0809  0008               	return
  1225  080A                     stringcode:	
  1226  080A                     stringdir:	
  1227  080A  3008               	movlw	high stringdir
  1228  080B  008A               	movwf	10
  1229  080C  0804               	movf	4,w
  1230  080D  0A84               	incf	4,f
  1231  080E  0782               	addwf	2,f
  1232  080F                     __stringbase:	
  1233  080F  3400               	retlw	0
  1234  0810                     __end_of__stringtab:	
  1235  0810                     _dpowers:	
  1236  0810  3401               	retlw	1
  1237  0811  3400               	retlw	0
  1238  0812  340A               	retlw	10
  1239  0813  3400               	retlw	0
  1240  0814  3464               	retlw	100
  1241  0815  3400               	retlw	0
  1242  0816  34E8               	retlw	232
  1243  0817  3403               	retlw	3
  1244  0818  3410               	retlw	16
  1245  0819  3427               	retlw	39
  1246  081A                     __end_of_dpowers:	
  1247  0001                     _TMR0	set	1
  1248  001A                     _RCREG	set	26
  1249  0019                     _TXREG	set	25
  1250  0018                     _RCSTAbits	set	24
  1251  0014                     _SSPCONbits	set	20
  1252  0005                     _PORTAbits	set	5
  1253  0012                     _T2CONbits	set	18
  1254  0015                     _CCPR1L	set	21
  1255  0017                     _CCP1CONbits	set	23
  1256  000B                     _INTCONbits	set	11
  1257  001E                     _ADRESH	set	30
  1258  001F                     _ADCON0bits	set	31
  1259  0009                     _PORTE	set	9
  1260  0008                     _PORTD	set	8
  1261  0007                     _PORTC	set	7
  1262  0006                     _PORTB	set	6
  1263  0005                     _PORTA	set	5
  1264  0006                     _PORTBbits	set	6
  1265  000C                     _PIR1bits	set	12
  1266  0013                     _SSPBUF	set	19
  1267  00F9                     _GO_DONE	set	249
  1268  0081                     _OPTION_REGbits	set	129
  1269  0099                     _SPBRG	set	153
  1270  0092                     _PR2	set	146
  1271  008C                     _PIE1bits	set	140
  1272  009E                     _ADRESL	set	158
  1273  009F                     _ADCON1bits	set	159
  1274  0090                     _OSCTUNE	set	144
  1275  008F                     _OSCCON	set	143
  1276  0085                     _TRISAbits	set	133
  1277  0087                     _TRISCbits	set	135
  1278  0086                     _TRISBbits	set	134
  1279  0086                     _TRISB	set	134
  1280  0088                     _TRISD	set	136
  1281  0098                     _TXSTAbits	set	152
  1282  010C                     _EEDATA	set	268
  1283  010D                     _EEADR	set	269
  1284  018D                     _EECON2	set	397
  1285  018C                     _EECON1bits	set	396
  1286  0187                     _BAUDCTLbits	set	391
  1287  0188                     _ANSELbits	set	392
  1288  0189                     _ANSELH	set	393
  1289  081A                     STR_3:	
  1290  081A  3454               	retlw	84	;'T'
  1291  081B  3465               	retlw	101	;'e'
  1292  081C  346D               	retlw	109	;'m'
  1293  081D  3470               	retlw	112	;'p'
  1294  081E  3465               	retlw	101	;'e'
  1295  081F  3472               	retlw	114	;'r'
  1296  0820  3461               	retlw	97	;'a'
  1297  0821  3474               	retlw	116	;'t'
  1298  0822  3475               	retlw	117	;'u'
  1299  0823  3472               	retlw	114	;'r'
  1300  0824  3465               	retlw	101	;'e'
  1301  0825  343A               	retlw	58	;':'
  1302  0826  3400               	retlw	0
  1303  0827                     STR_1:	
  1304  0827  3432               	retlw	50	;'2'
  1305  0828  3430               	retlw	48	;'0'
  1306  0829  3431               	retlw	49	;'1'
  1307  082A  3431               	retlw	49	;'1'
  1308  082B  3434               	retlw	52	;'4'
  1309  082C  3437               	retlw	55	;'7'
  1310  082D  3432               	retlw	50	;'2'
  1311  082E  3439               	retlw	57	;'9'
  1312  082F  3436               	retlw	54	;'6'
  1313  0830  3400               	retlw	0
  1314  0831                     STR_2:	
  1315  0831  3441               	retlw	65	;'A'
  1316  0832  346B               	retlw	107	;'k'
  1317  0833  3469               	retlw	105	;'i'
  1318  0834  346C               	retlw	108	;'l'
  1319  0835  3469               	retlw	105	;'i'
  1320  0836  346D               	retlw	109	;'m'
  1321  0837  3461               	retlw	97	;'a'
  1322  0838  346C               	retlw	108	;'l'
  1323  0839  3469               	retlw	105	;'i'
  1324  083A  3400               	retlw	0
  1325  083B                     STR_4:	
  1326  083B  3425               	retlw	37	;'%'
  1327  083C  3433               	retlw	51	;'3'
  1328  083D  3464               	retlw	100	;'d'
  1329  083E  3400               	retlw	0
  1330                           
  1331                           ; #config settings
  1332  0000                     
  1333                           	psect	cinit
  1334  0015                     start_initialization:	
  1335  0015                     __initialization:	
  1336                           
  1337                           ; Initialize objects allocated to BANK1
  1338  0015  1383               	bcf	3,7	;select IRP bank0
  1339  0016  30BD               	movlw	low (__pdataBANK1+11)
  1340  0017  00FD               	movwf	btemp+-1
  1341  0018  300B               	movlw	high __pidataBANK1
  1342  0019  00FE               	movwf	btemp
  1343  001A  30DD               	movlw	low __pidataBANK1
  1344  001B  00FF               	movwf	btemp+1
  1345  001C  30B2               	movlw	low __pdataBANK1
  1346  001D  0084               	movwf	4
  1347  001E  120A  158A  2433  120A  118A  	fcall	init_ram0
  1348                           
  1349                           ; Initialize objects allocated to COMMON
  1350  0023  120A  118A  27FC   	fcall	__pidataCOMMON	;fetch initializer
  1351  0026  00F9               	movwf	__pdataCOMMON& (0+127)
  1352                           
  1353                           ; Clear objects allocated to BANK1
  1354  0027  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0028  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0029  01BD               	clrf	__pbssBANK1& (0+127)
  1357  002A  01BE               	clrf	(__pbssBANK1+1)& (0+127)
  1358  002B  01BF               	clrf	(__pbssBANK1+2)& (0+127)
  1359  002C  01C0               	clrf	(__pbssBANK1+3)& (0+127)
  1360  002D  01C1               	clrf	(__pbssBANK1+4)& (0+127)
  1361  002E  01C2               	clrf	(__pbssBANK1+5)& (0+127)
  1362  002F  01C3               	clrf	(__pbssBANK1+6)& (0+127)
  1363  0030  01C4               	clrf	(__pbssBANK1+7)& (0+127)
  1364                           
  1365                           ; Clear objects allocated to BANK0
  1366  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0033  01EE               	clrf	__pbssBANK0& (0+127)
  1369                           
  1370                           ; Clear objects allocated to COMMON
  1371  0034  01F6               	clrf	__pbssCOMMON& (0+127)
  1372  0035  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1373  0036  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1374  0037                     end_of_initialization:	
  1375                           ;End of C runtime variable initialization code
  1376                           
  1377  0037                     __end_of__initialization:	
  1378  0037  0183               	clrf	3
  1379  0038  120A  158A  2D04   	ljmp	_main	;jump to C main() function
  1380                           
  1381                           	psect	bssCOMMON
  1382  0076                     __pbssCOMMON:	
  1383  0076                     _temperature:	
  1384  0076                     	ds	1
  1385  0077                     _data_TransferComplete:	
  1386  0077                     	ds	1
  1387  0078                     _g_state:	
  1388  0078                     	ds	1
  1389                           
  1390                           	psect	dataCOMMON
  1391  0079                     __pdataCOMMON:	
  1392  0079                     _student_Number:	
  1393  0079                     	ds	1
  1394                           
  1395                           	psect	bssBANK0
  1396  006E                     __pbssBANK0:	
  1397  006E                     _dataBuffer:	
  1398  006E                     	ds	1
  1399                           
  1400                           	psect	bssBANK1
  1401  00BD                     __pbssBANK1:	
  1402  00BD                     _rawData:	
  1403  00BD                     	ds	2
  1404  00BF                     _segment_Variable:	
  1405  00BF                     	ds	2
  1406  00C1                     _adc:	
  1407  00C1                     	ds	2
  1408  00C3                     _sTemperature:	
  1409  00C3                     	ds	2
  1410                           
  1411                           	psect	dataBANK1
  1412  00B2                     __pdataBANK1:	
  1413  00B2                     _segment_Array:	
  1414  00B2                     	ds	10
  1415  00BC                     _student_Name:	
  1416  00BC                     	ds	1
  1417                           
  1418                           	psect	inittext
  1419  0C2F                     init_fetch0:	
  1420                           ;	Called with low address in FSR and high address in W
  1421                           
  1422  0C2F  087E               	movf	126,w
  1423  0C30  008A               	movwf	10
  1424  0C31  087F               	movf	127,w
  1425  0C32  0082               	movwf	2
  1426  0C33                     init_ram0:	
  1427                           ;Called with:
  1428                           ;	high address of idata address in btemp 
  1429                           ;	low address of idata address in btemp+1 
  1430                           ;	low address of data in FSR
  1431                           ;	high address + 1 of data in btemp-1
  1432                           
  1433  0C33  242F  120A  158A   	fcall	init_fetch0
  1434  0C36  0080               	movwf	0
  1435  0C37  0A84               	incf	4,f
  1436  0C38  0804               	movf	4,w
  1437  0C39  067D               	xorwf	125,w
  1438  0C3A  1903               	btfsc	3,2
  1439  0C3B  3400               	retlw	0
  1440  0C3C  0AFF               	incf	127,f
  1441  0C3D  1903               	btfsc	3,2
  1442  0C3E  0AFE               	incf	126,f
  1443  0C3F  2C33               	goto	init_ram0
  1444                           
  1445                           	psect	cstackBANK1
  1446  00A0                     __pcstackBANK1:	
  1447  00A0                     ?_sprintf:	
  1448  00A0                     sprintf@f:	
  1449                           ; 2 bytes @ 0x0
  1450                           
  1451                           
  1452                           ; 1 bytes @ 0x0
  1453  00A0                     	ds	3
  1454  00A3                     ??_sprintf:	
  1455                           
  1456                           ; 1 bytes @ 0x3
  1457  00A3                     	ds	3
  1458  00A6                     sprintf@ap:	
  1459                           
  1460                           ; 1 bytes @ 0x6
  1461  00A6                     	ds	1
  1462  00A7                     sprintf@prec:	
  1463                           
  1464                           ; 1 bytes @ 0x7
  1465  00A7                     	ds	1
  1466  00A8                     sprintf@flag:	
  1467                           
  1468                           ; 1 bytes @ 0x8
  1469  00A8                     	ds	1
  1470  00A9                     sprintf@val:	
  1471                           
  1472                           ; 2 bytes @ 0x9
  1473  00A9                     	ds	2
  1474  00AB                     sprintf@sp:	
  1475                           
  1476                           ; 1 bytes @ 0xB
  1477  00AB                     	ds	1
  1478  00AC                     sprintf@width:	
  1479                           
  1480                           ; 2 bytes @ 0xC
  1481  00AC                     	ds	2
  1482  00AE                     sprintf@c:	
  1483                           
  1484                           ; 1 bytes @ 0xE
  1485  00AE                     	ds	1
  1486  00AF                     ??_temp_Display:	
  1487                           
  1488                           ; 1 bytes @ 0xF
  1489  00AF                     	ds	3
  1490                           
  1491                           	psect	cstackCOMMON
  1492  0070                     __pcstackCOMMON:	
  1493  0070                     ?_isdigit:	
  1494  0070                     ?_system_Initialize:	
  1495                           ; 1 bit 
  1496                           
  1497  0070                     ?_temp_Display:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_Ass_2:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_Oscillator_Init:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_Interrupt_Init:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_Lcd_Init:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_ADC_Init:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_TMR0_Init:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_SPI_Init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_ASS_1:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_pinManager:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_Lcd_Port:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_Lcd_Cmd:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_Lcd_Write_Char:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_temp_Measurement:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_ISR:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ??_ISR:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_main:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548                           
  1549                           ; 2 bytes @ 0x0
  1550  0070                     	ds	4
  1551  0074                     ??_Ass_2:	
  1552  0074                     ??_Oscillator_Init:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0074                     ??_Interrupt_Init:	
  1556                           ; 1 bytes @ 0x4
  1557                           
  1558  0074                     ??_ADC_Init:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561  0074                     ??_TMR0_Init:	
  1562                           ; 1 bytes @ 0x4
  1563                           
  1564  0074                     ??_SPI_Init:	
  1565                           ; 1 bytes @ 0x4
  1566                           
  1567  0074                     ??_isdigit:	
  1568                           ; 1 bytes @ 0x4
  1569                           
  1570  0074                     ??_pinManager:	
  1571                           ; 1 bytes @ 0x4
  1572                           
  1573  0074                     ??_Lcd_Port:	
  1574                           ; 1 bytes @ 0x4
  1575                           
  1576  0074                     ?_UART_Write_char:	
  1577                           ; 1 bytes @ 0x4
  1578                           
  1579  0074                     ??___wmul:	
  1580                           ; 1 bytes @ 0x4
  1581                           
  1582  0074                     ??___lmul:	
  1583                           ; 1 bytes @ 0x4
  1584                           
  1585  0074                     ??___lwdiv:	
  1586                           ; 1 bytes @ 0x4
  1587                           
  1588  0074                     ??___lwtoft:	
  1589                           ; 1 bytes @ 0x4
  1590                           
  1591  0074                     ?_UART_Read:	
  1592                           ; 1 bytes @ 0x4
  1593                           
  1594  0074                     Lcd_Port@a:	
  1595                           ; 2 bytes @ 0x4
  1596                           
  1597  0074                     _isdigit$1446:	
  1598                           ; 1 bytes @ 0x4
  1599                           
  1600  0074                     UART_Write_char@iData:	
  1601                           ; 1 bytes @ 0x4
  1602                           
  1603  0074                     ___wmul@product:	
  1604                           ; 2 bytes @ 0x4
  1605                           
  1606                           
  1607                           ; 2 bytes @ 0x4
  1608  0074                     	ds	1
  1609  0075                     ??_Lcd_Write_Char:	
  1610  0075                     ??___lldiv:	
  1611                           ; 1 bytes @ 0x5
  1612                           
  1613  0075                     ??___lwmod:	
  1614                           ; 1 bytes @ 0x5
  1615                           
  1616  0075                     Lcd_Cmd@a:	
  1617                           ; 1 bytes @ 0x5
  1618                           
  1619  0075                     isdigit@c:	
  1620                           ; 1 bytes @ 0x5
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x5
  1624  0075                     	ds	1
  1625  0076                     ??_system_Initialize:	
  1626  0076                     ??_main:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629  0076                     ??_UART_Write_char:	
  1630                           ; 1 bytes @ 0x6
  1631                           
  1632                           
  1633                           	psect	cstackBANK0
  1634  0020                     __pcstackBANK0:	
  1635                           ; 1 bytes @ 0x6
  1636                           
  1637  0020                     ??_UART_Read:	
  1638  0020                     ?_UART_Write_String:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0020                     ??_Lcd_Cmd:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0020                     ?___wmul:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0020                     ?___lwdiv:	
  1648                           ; 2 bytes @ 0x0
  1649                           
  1650  0020                     ?___ftpack:	
  1651                           ; 2 bytes @ 0x0
  1652                           
  1653  0020                     ?___lmul:	
  1654                           ; 3 bytes @ 0x0
  1655                           
  1656  0020                     Lcd_Write_Char@temp:	
  1657                           ; 4 bytes @ 0x0
  1658                           
  1659  0020                     UART_Write_String@cText:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0020                     ___wmul@multiplier:	
  1663                           ; 2 bytes @ 0x0
  1664                           
  1665  0020                     ___lwdiv@divisor:	
  1666                           ; 2 bytes @ 0x0
  1667                           
  1668  0020                     ___ftpack@arg:	
  1669                           ; 2 bytes @ 0x0
  1670                           
  1671  0020                     ___lmul@multiplier:	
  1672                           ; 3 bytes @ 0x0
  1673                           
  1674                           
  1675                           ; 4 bytes @ 0x0
  1676  0020                     	ds	1
  1677  0021                     Lcd_Write_Char@y:	
  1678                           
  1679                           ; 1 bytes @ 0x1
  1680  0021                     	ds	1
  1681  0022                     ??_UART_Write_String:	
  1682  0022                     ??_Lcd_Init:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0022                     ?_Lcd_Set_Cursor:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0022                     Lcd_Set_Cursor@column:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0022                     Lcd_Write_Char@a:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0022                     ___wmul@multiplicand:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0022                     ___lwdiv@dividend:	
  1698                           ; 2 bytes @ 0x2
  1699                           
  1700                           
  1701                           ; 2 bytes @ 0x2
  1702  0022                     	ds	1
  1703  0023                     ??_Lcd_Set_Cursor:	
  1704  0023                     ?_Lcd_write:	
  1705                           ; 1 bytes @ 0x3
  1706                           
  1707  0023                     ___ftpack@exp:	
  1708                           ; 1 bytes @ 0x3
  1709                           
  1710  0023                     Lcd_write@string:	
  1711                           ; 1 bytes @ 0x3
  1712                           
  1713                           
  1714                           ; 2 bytes @ 0x3
  1715  0023                     	ds	1
  1716  0024                     ___ftpack@sign:	
  1717  0024                     ___lwdiv@counter:	
  1718                           ; 1 bytes @ 0x4
  1719                           
  1720  0024                     ___lmul@multiplicand:	
  1721                           ; 1 bytes @ 0x4
  1722                           
  1723                           
  1724                           ; 4 bytes @ 0x4
  1725  0024                     	ds	1
  1726  0025                     ??___ftpack:	
  1727  0025                     ??_Lcd_write:	
  1728                           ; 1 bytes @ 0x5
  1729                           
  1730  0025                     Lcd_Set_Cursor@raw:	
  1731                           ; 1 bytes @ 0x5
  1732                           
  1733  0025                     ___lwdiv@quotient:	
  1734                           ; 1 bytes @ 0x5
  1735                           
  1736                           
  1737                           ; 2 bytes @ 0x5
  1738  0025                     	ds	1
  1739  0026                     Lcd_Set_Cursor@z:	
  1740  0026                     UART_Write_String@iSize:	
  1741                           ; 1 bytes @ 0x6
  1742                           
  1743                           
  1744                           ; 2 bytes @ 0x6
  1745  0026                     	ds	1
  1746  0027                     ?___lwmod:	
  1747  0027                     Lcd_Set_Cursor@y:	
  1748                           ; 2 bytes @ 0x7
  1749                           
  1750  0027                     ___lwmod@divisor:	
  1751                           ; 1 bytes @ 0x7
  1752                           
  1753                           
  1754                           ; 2 bytes @ 0x7
  1755  0027                     	ds	1
  1756  0028                     ??_ASS_1:	
  1757  0028                     ?___lwtoft:	
  1758                           ; 1 bytes @ 0x8
  1759                           
  1760  0028                     Lcd_Set_Cursor@temp:	
  1761                           ; 3 bytes @ 0x8
  1762                           
  1763  0028                     Lcd_write@i:	
  1764                           ; 1 bytes @ 0x8
  1765                           
  1766  0028                     ___lwtoft@c:	
  1767                           ; 2 bytes @ 0x8
  1768                           
  1769  0028                     ___lmul@product:	
  1770                           ; 2 bytes @ 0x8
  1771                           
  1772                           
  1773                           ; 4 bytes @ 0x8
  1774  0028                     	ds	1
  1775  0029                     ___lwmod@dividend:	
  1776                           
  1777                           ; 2 bytes @ 0x9
  1778  0029                     	ds	2
  1779  002B                     ?___ftmul:	
  1780  002B                     ___lwmod@counter:	
  1781                           ; 3 bytes @ 0xB
  1782                           
  1783  002B                     ___ftmul@f1:	
  1784                           ; 1 bytes @ 0xB
  1785                           
  1786                           
  1787                           ; 3 bytes @ 0xB
  1788  002B                     	ds	1
  1789  002C                     ?___lldiv:	
  1790  002C                     ___lldiv@divisor:	
  1791                           ; 4 bytes @ 0xC
  1792                           
  1793                           
  1794                           ; 4 bytes @ 0xC
  1795  002C                     	ds	2
  1796  002E                     ASS_1@bSize:	
  1797  002E                     ___ftmul@f2:	
  1798                           ; 2 bytes @ 0xE
  1799                           
  1800                           
  1801                           ; 3 bytes @ 0xE
  1802  002E                     	ds	2
  1803  0030                     ASS_1@bSize_145:	
  1804  0030                     ___lldiv@dividend:	
  1805                           ; 2 bytes @ 0x10
  1806                           
  1807                           
  1808                           ; 4 bytes @ 0x10
  1809  0030                     	ds	1
  1810  0031                     ??___ftmul:	
  1811                           
  1812                           ; 1 bytes @ 0x11
  1813  0031                     	ds	3
  1814  0034                     ___lldiv@quotient:	
  1815                           
  1816                           ; 4 bytes @ 0x14
  1817  0034                     	ds	1
  1818  0035                     ___ftmul@exp:	
  1819                           
  1820                           ; 1 bytes @ 0x15
  1821  0035                     	ds	1
  1822  0036                     ___ftmul@f3_as_product:	
  1823                           
  1824                           ; 3 bytes @ 0x16
  1825  0036                     	ds	2
  1826  0038                     ___lldiv@counter:	
  1827                           
  1828                           ; 1 bytes @ 0x18
  1829  0038                     	ds	1
  1830  0039                     ?_PWM_Init:	
  1831  0039                     ?_PWM_DutyCycle:	
  1832                           ; 1 bytes @ 0x19
  1833                           
  1834  0039                     ?_UART_Init:	
  1835                           ; 1 bytes @ 0x19
  1836                           
  1837  0039                     ___ftmul@cntr:	
  1838                           ; 1 bytes @ 0x19
  1839                           
  1840  0039                     UART_Init@baudRate:	
  1841                           ; 1 bytes @ 0x19
  1842                           
  1843  0039                     PWM_Init@iFrequency:	
  1844                           ; 2 bytes @ 0x19
  1845                           
  1846  0039                     PWM_DutyCycle@iDutyCycle:	
  1847                           ; 4 bytes @ 0x19
  1848                           
  1849                           
  1850                           ; 4 bytes @ 0x19
  1851  0039                     	ds	1
  1852  003A                     ___ftmul@sign:	
  1853                           
  1854                           ; 1 bytes @ 0x1A
  1855  003A                     	ds	1
  1856  003B                     ??_UART_Init:	
  1857  003B                     ?___ftdiv:	
  1858                           ; 1 bytes @ 0x1B
  1859                           
  1860  003B                     ___ftdiv@f2:	
  1861                           ; 3 bytes @ 0x1B
  1862                           
  1863                           
  1864                           ; 3 bytes @ 0x1B
  1865  003B                     	ds	2
  1866  003D                     ??_PWM_Init:	
  1867  003D                     ??_PWM_DutyCycle:	
  1868                           ; 1 bytes @ 0x1D
  1869                           
  1870                           
  1871                           ; 1 bytes @ 0x1D
  1872  003D                     	ds	1
  1873  003E                     ___ftdiv@f1:	
  1874                           
  1875                           ; 3 bytes @ 0x1E
  1876  003E                     	ds	3
  1877  0041                     ??___ftdiv:	
  1878                           
  1879                           ; 1 bytes @ 0x21
  1880  0041                     	ds	4
  1881  0045                     ___ftdiv@cntr:	
  1882                           
  1883                           ; 1 bytes @ 0x25
  1884  0045                     	ds	1
  1885  0046                     ___ftdiv@f3:	
  1886                           
  1887                           ; 3 bytes @ 0x26
  1888  0046                     	ds	3
  1889  0049                     ___ftdiv@exp:	
  1890                           
  1891                           ; 1 bytes @ 0x29
  1892  0049                     	ds	1
  1893  004A                     ___ftdiv@sign:	
  1894                           
  1895                           ; 1 bytes @ 0x2A
  1896  004A                     	ds	1
  1897  004B                     ?___ftadd:	
  1898  004B                     ___ftadd@f1:	
  1899                           ; 3 bytes @ 0x2B
  1900                           
  1901                           
  1902                           ; 3 bytes @ 0x2B
  1903  004B                     	ds	3
  1904  004E                     ___ftadd@f2:	
  1905                           
  1906                           ; 3 bytes @ 0x2E
  1907  004E                     	ds	3
  1908  0051                     ??___ftadd:	
  1909                           
  1910                           ; 1 bytes @ 0x31
  1911  0051                     	ds	4
  1912  0055                     ___ftadd@sign:	
  1913                           
  1914                           ; 1 bytes @ 0x35
  1915  0055                     	ds	1
  1916  0056                     ___ftadd@exp2:	
  1917                           
  1918                           ; 1 bytes @ 0x36
  1919  0056                     	ds	1
  1920  0057                     ___ftadd@exp1:	
  1921                           
  1922                           ; 1 bytes @ 0x37
  1923  0057                     	ds	1
  1924  0058                     ?___fttol:	
  1925  0058                     ___fttol@f1:	
  1926                           ; 4 bytes @ 0x38
  1927                           
  1928                           
  1929                           ; 3 bytes @ 0x38
  1930  0058                     	ds	4
  1931  005C                     ??___fttol:	
  1932                           
  1933                           ; 1 bytes @ 0x3C
  1934  005C                     	ds	4
  1935  0060                     ___fttol@sign1:	
  1936                           
  1937                           ; 1 bytes @ 0x40
  1938  0060                     	ds	1
  1939  0061                     ___fttol@lval:	
  1940                           
  1941                           ; 4 bytes @ 0x41
  1942  0061                     	ds	4
  1943  0065                     ___fttol@exp1:	
  1944                           
  1945                           ; 1 bytes @ 0x45
  1946  0065                     	ds	1
  1947  0066                     ??_temp_Measurement:	
  1948                           
  1949                           ; 1 bytes @ 0x46
  1950  0066                     	ds	2
  1951  0068                     _temp_Measurement$1694:	
  1952                           
  1953                           ; 3 bytes @ 0x48
  1954  0068                     	ds	3
  1955  006B                     temp_Measurement@sample:	
  1956                           
  1957                           ; 2 bytes @ 0x4B
  1958  006B                     	ds	2
  1959  006D                     temp_Display@TEMP:	
  1960                           
  1961                           ; 1 bytes @ 0x4D
  1962  006D                     	ds	1
  1963                           
  1964                           	psect	maintext
  1965  0D04                     __pmaintext:	
  1966 ;;
  1967 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1968 ;;
  1969 ;; *************** function _main *****************
  1970 ;; Defined at:
  1971 ;;		line 11 in file "main.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2   59[None  ] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : B00/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels required when called:    5
  1991 ;; This function calls:
  1992 ;;		_ASS_1
  1993 ;;		_Ass_2
  1994 ;;		_system_Initialize
  1995 ;;		_temp_Display
  1996 ;; This function is called by:
  1997 ;;		Startup code after reset
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _main
  2003  0D04                     _main:	
  2004                           
  2005                           ;main.c: 13: system_Initialize();
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2009  0D04  120A  158A  2715  120A  158A  	fcall	_system_Initialize
  2010                           
  2011                           ;main.c: 18: switch(g_state){
  2012  0D09  2D15               	goto	l2997
  2013  0D0A                     l2999:	
  2014                           ;main.c: 19: case ASSIGNMENT_1:
  2015                           
  2016                           
  2017                           ;main.c: 20: ASS_1();
  2018  0D0A  120A  118A  26B6  120A  158A  	fcall	_ASS_1
  2019                           
  2020                           ;main.c: 21: break;
  2021  0D0F  2D15               	goto	l2997
  2022  0D10                     l3001:	
  2023                           ;main.c: 23: case ASSIGNMENT_2:
  2024                           
  2025                           
  2026                           ;main.c: 24: Ass_2();
  2027  0D10  120A  118A  27FD  120A  158A  	fcall	_Ass_2
  2028  0D15                     l2997:	
  2029                           ;main.c: 15: while (1) {
  2030                           
  2031                           ;main.c: 42: }
  2032                           
  2033                           ;main.c: 40: break;
  2034                           
  2035                           ;main.c: 38: case ASSIGNMENT_7:
  2036                           
  2037                           ;main.c: 36: break;
  2038                           
  2039                           ;main.c: 34: case ASSIGNMENT_6:
  2040                           
  2041                           ;main.c: 32: break;
  2042                           
  2043                           ;main.c: 30: case ASSIGNMENT_5:
  2044                           
  2045                           ;main.c: 29: break;
  2046                           
  2047                           ;main.c: 27: case ASSIGNMENT_3:
  2048                           
  2049                           ;main.c: 25: break;
  2050                           
  2051                           
  2052                           ;main.c: 16: temp_Display();
  2053  0D15  120A  158A  2760  120A  158A  	fcall	_temp_Display
  2054  0D1A  0878               	movf	_g_state,w
  2055                           
  2056                           ; Switch size 1, requested type "space"
  2057                           ; Number of cases is 6, Range of values is 0 to 6
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte           19    10 (average)
  2061                           ; direct_byte           29     8 (fixed)
  2062                           ; jumptable            260     6 (fixed)
  2063                           ;	Chosen strategy is simple_byte
  2064  0D1B  3A00               	xorlw	0	; case 0
  2065  0D1C  1903               	skipnz
  2066  0D1D  2D0A               	goto	l2999
  2067  0D1E  3A01               	xorlw	1	; case 1
  2068  0D1F  1903               	skipnz
  2069  0D20  2D10               	goto	l3001
  2070  0D21  3A03               	xorlw	3	; case 2
  2071  0D22  1903               	skipnz
  2072  0D23  2D15               	goto	l2997
  2073  0D24  3A06               	xorlw	6	; case 4
  2074  0D25  1903               	skipnz
  2075  0D26  2D15               	goto	l2997
  2076  0D27  3A01               	xorlw	1	; case 5
  2077  0D28  1903               	skipnz
  2078  0D29  2D15               	goto	l2997
  2079  0D2A  3A03               	xorlw	3	; case 6
  2080  0D2B  1903               	skipnz
  2081  0D2C  2D15               	goto	l2997
  2082  0D2D  2D15               	goto	l2997
  2083  0D2E  2D15               	goto	l2997
  2084  0D2F                     __end_of_main:	
  2085                           ;main.c: 43: }
  2086                           ;main.c: 44: return;
  2087                           
  2088                           
  2089                           	psect	text1
  2090  0F60                     __ptext1:	
  2091 ;; *************** function _temp_Display *****************
  2092 ;; Defined at:
  2093 ;;		line 40 in file "adc_Init.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  TEMP            1   77[BANK0 ] PTR unsigned char 
  2098 ;;		 -> STR_3(13), 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       1       0       0       0
  2110 ;;      Temps:          0       0       3       0       0
  2111 ;;      Totals:         0       1       3       0       0
  2112 ;;Total ram usage:        4 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    4
  2115 ;; This function calls:
  2116 ;;		_Lcd_Set_Cursor
  2117 ;;		_Lcd_write
  2118 ;;		_sprintf
  2119 ;;		_temp_Measurement
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _temp_Display
  2127  0F60                     _temp_Display:	
  2128                           
  2129                           ;adc_Init.c: 41: char *TEMP = "Temperature:";
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2133  0F60  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2134  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  2135  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  2136  0F63  00AF               	movwf	??_temp_Display^(0+128)
  2137  0F64  082F               	movf	??_temp_Display^(0+128),w
  2138  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0F67  00ED               	movwf	temp_Display@TEMP
  2141                           
  2142                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  2143  0F68  01A2               	clrf	Lcd_Set_Cursor@column
  2144  0F69  0AA2               	incf	Lcd_Set_Cursor@column,f
  2145  0F6A  3001               	movlw	1
  2146  0F6B  120A  158A  27AE  120A  158A  	fcall	_Lcd_Set_Cursor
  2147                           
  2148                           ;adc_Init.c: 43: Lcd_write(TEMP);
  2149  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0F72  086D               	movf	temp_Display@TEMP,w
  2152  0F73  00A3               	movwf	Lcd_write@string
  2153  0F74  3000               	movlw	0
  2154  0F75  1D03               	btfss	3,2
  2155  0F76  3080               	movlw	128
  2156  0F77  00A4               	movwf	Lcd_write@string+1
  2157  0F78  120A  158A  268F  120A  158A  	fcall	_Lcd_write
  2158                           
  2159                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  2160  0F7D  302C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2161  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0F80  00AF               	movwf	??_temp_Display^(0+128)
  2164  0F81  082F               	movf	??_temp_Display^(0+128),w
  2165  0F82  00A0               	movwf	sprintf@f^(0+128)
  2166  0F83  120A  118A  22D8  120A  158A  	fcall	_temp_Measurement
  2167  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0F8A  00B0               	movwf	(??_temp_Display+1)^(0+128)
  2170  0F8B  01B1               	clrf	((??_temp_Display+1)^(0+128)+1)
  2171  0F8C  0830               	movf	(??_temp_Display+1)^(0+128),w
  2172  0F8D  00A1               	movwf	(?_sprintf^(0+128)+1)
  2173  0F8E  0831               	movf	(??_temp_Display+2)^(0+128),w
  2174  0F8F  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2175  0F90  30C3               	movlw	(low (_sTemperature| 0))& (0+255)
  2176  0F91  120A  118A  203B  120A  158A  	fcall	_sprintf
  2177                           
  2178                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof("Temperature:"));
  2179  0F96  300D               	movlw	13
  2180  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0F99  00AF               	movwf	??_temp_Display^(0+128)
  2183  0F9A  082F               	movf	??_temp_Display^(0+128),w
  2184  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0F9D  00A2               	movwf	Lcd_Set_Cursor@column
  2187  0F9E  3001               	movlw	1
  2188  0F9F  120A  158A  27AE  120A  158A  	fcall	_Lcd_Set_Cursor
  2189                           
  2190                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  2191  0FA4  30C3               	movlw	(low (_sTemperature| 0))& (0+255)
  2192  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0FA7  00A3               	movwf	Lcd_write@string
  2195  0FA8  3000               	movlw	0
  2196  0FA9  00A4               	movwf	Lcd_write@string+1
  2197  0FAA  120A  158A  268F   	fcall	_Lcd_write
  2198  0FAD  0008               	return
  2199  0FAE                     __end_of_temp_Display:	
  2200                           
  2201                           	psect	text2
  2202  02D8                     __ptext2:	
  2203 ;; *************** function _temp_Measurement *****************
  2204 ;; Defined at:
  2205 ;;		line 24 in file "adc_Init.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  sample          2   75[BANK0 ] int 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      unsigned char 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       0       0       0       0
  2220 ;;      Locals:         0       5       0       0       0
  2221 ;;      Temps:          0       2       0       0       0
  2222 ;;      Totals:         0       7       0       0       0
  2223 ;;Total ram usage:        7 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    3
  2226 ;; This function calls:
  2227 ;;		___ftadd
  2228 ;;		___ftdiv
  2229 ;;		___ftmul
  2230 ;;		___fttol
  2231 ;;		___lwdiv
  2232 ;;		___lwtoft
  2233 ;; This function is called by:
  2234 ;;		_temp_Display
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _temp_Measurement
  2240  02D8                     _temp_Measurement:	
  2241                           
  2242                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2246  02D8  3007               	movlw	7
  2247  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2248  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2249  02DB  00E7               	movwf	??_temp_Measurement+1
  2250  02DC  307C               	movlw	124
  2251  02DD  00E6               	movwf	??_temp_Measurement
  2252  02DE                     u4217:	
  2253  02DE  0BE6               	decfsz	??_temp_Measurement,f
  2254  02DF  2ADE               	goto	u4217
  2255  02E0  0BE7               	decfsz	??_temp_Measurement+1,f
  2256  02E1  2ADE               	goto	u4217
  2257  02E2  0000               	nop
  2258                           
  2259                           ;adc_Init.c: 26: GO_DONE = 1;
  2260  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2261  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2262  02E5  149F               	bsf	31,1	;volatile
  2263  02E6                     l237:	
  2264                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  2265                           
  2266  02E6  1F0C               	btfss	12,6	;volatile
  2267  02E7  2AE6               	goto	l237
  2268                           
  2269                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  2270  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2271  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2272  02EA  081E               	movf	30,w	;volatile
  2273  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2274  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2275  02ED  00E6               	movwf	??_temp_Measurement
  2276  02EE  0866               	movf	??_temp_Measurement,w
  2277  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2278  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2279  02F1  00C1               	movwf	_adc^(0+128)
  2280                           
  2281                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  2282  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2283  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2284  02F4  081E               	movf	30,w	;volatile
  2285  02F5  00E6               	movwf	??_temp_Measurement
  2286  02F6  0866               	movf	??_temp_Measurement,w
  2287  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2288  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2289  02F9  00C2               	movwf	(_adc^(0+128)+1)
  2290                           
  2291                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  2292  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2293  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2294  02FC  01EB               	clrf	temp_Measurement@sample
  2295  02FD  01EC               	clrf	temp_Measurement@sample+1
  2296  02FE  086C               	movf	temp_Measurement@sample+1,w
  2297  02FF  3A80               	xorlw	128
  2298  0300  00FF               	movwf	127
  2299  0301  3080               	movlw	128
  2300  0302  027F               	subwf	127,w
  2301  0303  1D03               	skipz
  2302  0304  2B07               	goto	u3965
  2303  0305  300A               	movlw	10
  2304  0306  026B               	subwf	temp_Measurement@sample,w
  2305  0307                     u3965:	
  2306  0307  1803               	btfsc	3,0
  2307  0308  2BBE               	goto	l2849
  2308  0309                     l2839:	
  2309                           
  2310                           ;adc_Init.c: 31: rawData += adc.result;
  2311  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2312  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2313  030B  0841               	movf	_adc^(0+128),w
  2314  030C  07BD               	addwf	_rawData^(0+128),f
  2315  030D  1803               	skipnc
  2316  030E  0ABE               	incf	(_rawData+1)^(0+128),f
  2317  030F  0842               	movf	(_adc+1)^(0+128),w
  2318  0310  07BE               	addwf	(_rawData+1)^(0+128),f
  2319                           
  2320                           ;adc_Init.c: 32: if (sample == 9) {
  2321  0311  3009               	movlw	9
  2322  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0314  066B               	xorwf	temp_Measurement@sample,w
  2325  0315  046C               	iorwf	temp_Measurement@sample+1,w
  2326  0316  1D03               	btfss	3,2
  2327  0317  2BAD               	goto	l2845
  2328                           
  2329                           ;adc_Init.c: 33: rawData = rawData / 11;
  2330  0318  300B               	movlw	11
  2331  0319  00A0               	movwf	___lwdiv@divisor
  2332  031A  3000               	movlw	0
  2333  031B  00A1               	movwf	___lwdiv@divisor+1
  2334  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2335  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2336  031E  083E               	movf	(_rawData+1)^(0+128),w
  2337  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0321  00A3               	movwf	___lwdiv@dividend+1
  2340  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2342  0324  083D               	movf	_rawData^(0+128),w
  2343  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0327  00A2               	movwf	___lwdiv@dividend
  2346  0328  120A  158A  25D0  120A  118A  	fcall	___lwdiv
  2347  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2348  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2349  032F  0821               	movf	?___lwdiv+1,w
  2350  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0332  00BE               	movwf	(_rawData+1)^(0+128)
  2353  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0335  0820               	movf	?___lwdiv,w
  2356  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0338  00BD               	movwf	_rawData^(0+128)
  2359                           
  2360                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2361  0339  083E               	movf	(_rawData+1)^(0+128),w
  2362  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2363  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2364  033C  00A9               	movwf	___lwtoft@c+1
  2365  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2366  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2367  033F  083D               	movf	_rawData^(0+128),w
  2368  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0342  00A8               	movwf	___lwtoft@c
  2371  0343  120A  158A  2440  120A  118A  	fcall	___lwtoft
  2372  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2374  034A  0828               	movf	?___lwtoft,w
  2375  034B  00AE               	movwf	___ftmul@f2
  2376  034C  0829               	movf	?___lwtoft+1,w
  2377  034D  00AF               	movwf	___ftmul@f2+1
  2378  034E  082A               	movf	?___lwtoft+2,w
  2379  034F  00B0               	movwf	___ftmul@f2+2
  2380  0350  3040               	movlw	64
  2381  0351  00AB               	movwf	___ftmul@f1
  2382  0352  309C               	movlw	156
  2383  0353  00AC               	movwf	___ftmul@f1+1
  2384  0354  3045               	movlw	69
  2385  0355  00AD               	movwf	___ftmul@f1+2
  2386  0356  120A  118A  23C0  120A  118A  	fcall	___ftmul
  2387  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2388  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2389  035D  082B               	movf	?___ftmul,w
  2390  035E  00BE               	movwf	___ftdiv@f1
  2391  035F  082C               	movf	?___ftmul+1,w
  2392  0360  00BF               	movwf	___ftdiv@f1+1
  2393  0361  082D               	movf	?___ftmul+2,w
  2394  0362  00C0               	movwf	___ftdiv@f1+2
  2395  0363  30C0               	movlw	192
  2396  0364  00BB               	movwf	___ftdiv@f2
  2397  0365  307F               	movlw	127
  2398  0366  00BC               	movwf	___ftdiv@f2+1
  2399  0367  3044               	movlw	68
  2400  0368  00BD               	movwf	___ftdiv@f2+2
  2401  0369  120A  118A  2493  120A  118A  	fcall	___ftdiv
  2402  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2403  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0370  083B               	movf	?___ftdiv,w
  2405  0371  00CE               	movwf	___ftadd@f2
  2406  0372  083C               	movf	?___ftdiv+1,w
  2407  0373  00CF               	movwf	___ftadd@f2+1
  2408  0374  083D               	movf	?___ftdiv+2,w
  2409  0375  00D0               	movwf	___ftadd@f2+2
  2410  0376  3000               	movlw	0
  2411  0377  00CB               	movwf	___ftadd@f1
  2412  0378  30FA               	movlw	250
  2413  0379  00CC               	movwf	___ftadd@f1+1
  2414  037A  30C3               	movlw	195
  2415  037B  00CD               	movwf	___ftadd@f1+2
  2416  037C  120A  118A  21CF  120A  118A  	fcall	___ftadd
  2417  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0383  084B               	movf	?___ftadd,w
  2420  0384  00E8               	movwf	_temp_Measurement$1694
  2421  0385  084C               	movf	?___ftadd+1,w
  2422  0386  00E9               	movwf	_temp_Measurement$1694+1
  2423  0387  084D               	movf	?___ftadd+2,w
  2424  0388  00EA               	movwf	_temp_Measurement$1694+2
  2425                           
  2426                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2427  0389  0868               	movf	_temp_Measurement$1694,w
  2428  038A  00BE               	movwf	___ftdiv@f1
  2429  038B  0869               	movf	_temp_Measurement$1694+1,w
  2430  038C  00BF               	movwf	___ftdiv@f1+1
  2431  038D  086A               	movf	_temp_Measurement$1694+2,w
  2432  038E  00C0               	movwf	___ftdiv@f1+2
  2433  038F  3000               	movlw	0
  2434  0390  00BB               	movwf	___ftdiv@f2
  2435  0391  3020               	movlw	32
  2436  0392  00BC               	movwf	___ftdiv@f2+1
  2437  0393  3041               	movlw	65
  2438  0394  00BD               	movwf	___ftdiv@f2+2
  2439  0395  120A  118A  2493  120A  118A  	fcall	___ftdiv
  2440  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2441  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2442  039C  083B               	movf	?___ftdiv,w
  2443  039D  00D8               	movwf	___fttol@f1
  2444  039E  083C               	movf	?___ftdiv+1,w
  2445  039F  00D9               	movwf	___fttol@f1+1
  2446  03A0  083D               	movf	?___ftdiv+2,w
  2447  03A1  00DA               	movwf	___fttol@f1+2
  2448  03A2  120A  118A  254B  120A  118A  	fcall	___fttol
  2449  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2450  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2451  03A9  0858               	movf	?___fttol,w
  2452  03AA  00E6               	movwf	??_temp_Measurement
  2453  03AB  0866               	movf	??_temp_Measurement,w
  2454  03AC  00F6               	movwf	_temperature
  2455  03AD                     l2845:	
  2456  03AD  3001               	movlw	1
  2457  03AE  07EB               	addwf	temp_Measurement@sample,f
  2458  03AF  1803               	skipnc
  2459  03B0  0AEC               	incf	temp_Measurement@sample+1,f
  2460  03B1  3000               	movlw	0
  2461  03B2  07EC               	addwf	temp_Measurement@sample+1,f
  2462  03B3  086C               	movf	temp_Measurement@sample+1,w
  2463  03B4  3A80               	xorlw	128
  2464  03B5  00FF               	movwf	127
  2465  03B6  3080               	movlw	128
  2466  03B7  027F               	subwf	127,w
  2467  03B8  1D03               	skipz
  2468  03B9  2BBC               	goto	u3985
  2469  03BA  300A               	movlw	10
  2470  03BB  026B               	subwf	temp_Measurement@sample,w
  2471  03BC                     u3985:	
  2472  03BC  1C03               	skipc
  2473  03BD  2B09               	goto	l2839
  2474  03BE                     l2849:	
  2475                           
  2476                           ;adc_Init.c: 35: }
  2477                           ;adc_Init.c: 36: }
  2478                           ;adc_Init.c: 37: return temperature;
  2479  03BE  0876               	movf	_temperature,w
  2480  03BF  0008               	return
  2481  03C0                     __end_of_temp_Measurement:	
  2482                           
  2483                           	psect	text3
  2484  0C40                     __ptext3:	
  2485 ;; *************** function ___lwtoft *****************
  2486 ;; Defined at:
  2487 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  c               2    8[BANK0 ] unsigned int 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  3    8[BANK0 ] float 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       3       0       0       0
  2502 ;;      Locals:         0       0       0       0       0
  2503 ;;      Temps:          1       0       0       0       0
  2504 ;;      Totals:         1       3       0       0       0
  2505 ;;Total ram usage:        4 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		___ftpack
  2510 ;; This function is called by:
  2511 ;;		_temp_Measurement
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function ___lwtoft
  2517  0C40                     ___lwtoft:	
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2521  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0C42  0828               	movf	___lwtoft@c,w
  2524  0C43  00A0               	movwf	___ftpack@arg
  2525  0C44  0829               	movf	___lwtoft@c+1,w
  2526  0C45  00A1               	movwf	___ftpack@arg+1
  2527  0C46  01A2               	clrf	___ftpack@arg+2
  2528  0C47  308E               	movlw	142
  2529  0C48  00F4               	movwf	??___lwtoft
  2530  0C49  0874               	movf	??___lwtoft,w
  2531  0C4A  00A3               	movwf	___ftpack@exp
  2532  0C4B  01A4               	clrf	___ftpack@sign
  2533  0C4C  120A  118A  2648   	fcall	___ftpack
  2534  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  2535  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  2536  0C51  0820               	movf	?___ftpack,w
  2537  0C52  00A8               	movwf	?___lwtoft
  2538  0C53  0821               	movf	?___ftpack+1,w
  2539  0C54  00A9               	movwf	?___lwtoft+1
  2540  0C55  0822               	movf	?___ftpack+2,w
  2541  0C56  00AA               	movwf	?___lwtoft+2
  2542  0C57  0008               	return
  2543  0C58                     __end_of___lwtoft:	
  2544                           
  2545                           	psect	text4
  2546  054B                     __ptext4:	
  2547 ;; *************** function ___fttol *****************
  2548 ;; Defined at:
  2549 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  f1              3   56[BANK0 ] float 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  lval            4   65[BANK0 ] unsigned long 
  2554 ;;  exp1            1   69[BANK0 ] unsigned char 
  2555 ;;  sign1           1   64[BANK0 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  4   56[BANK0 ] long 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       4       0       0       0
  2566 ;;      Locals:         0       6       0       0       0
  2567 ;;      Temps:          0       4       0       0       0
  2568 ;;      Totals:         0      14       0       0       0
  2569 ;;Total ram usage:       14 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_temp_Measurement
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function ___fttol
  2581  054B                     ___fttol:	
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2585  054B  1283               	bcf	3,5	;RP0=0, select bank0
  2586  054C  1303               	bcf	3,6	;RP1=0, select bank0
  2587  054D  0858               	movf	___fttol@f1,w
  2588  054E  00DC               	movwf	??___fttol
  2589  054F  0859               	movf	___fttol@f1+1,w
  2590  0550  00DD               	movwf	??___fttol+1
  2591  0551  085A               	movf	___fttol@f1+2,w
  2592  0552  00DE               	movwf	??___fttol+2
  2593  0553  1003               	clrc
  2594  0554  0D5D               	rlf	??___fttol+1,w
  2595  0555  0D5E               	rlf	??___fttol+2,w
  2596  0556  00DF               	movwf	??___fttol+3
  2597  0557  085F               	movf	??___fttol+3,w
  2598  0558  00E5               	movwf	___fttol@exp1
  2599  0559  0865               	movf	___fttol@exp1,w
  2600  055A  1D03               	btfss	3,2
  2601  055B  2D65               	goto	l2091
  2602  055C  3000               	movlw	0
  2603  055D  00DB               	movwf	?___fttol+3
  2604  055E  3000               	movlw	0
  2605  055F  00DA               	movwf	?___fttol+2
  2606  0560  3000               	movlw	0
  2607  0561  00D9               	movwf	?___fttol+1
  2608  0562  3000               	movlw	0
  2609  0563  00D8               	movwf	?___fttol
  2610  0564  0008               	return
  2611  0565                     l2091:	
  2612  0565  0858               	movf	___fttol@f1,w
  2613  0566  00DC               	movwf	??___fttol
  2614  0567  0859               	movf	___fttol@f1+1,w
  2615  0568  00DD               	movwf	??___fttol+1
  2616  0569  085A               	movf	___fttol@f1+2,w
  2617  056A  00DE               	movwf	??___fttol+2
  2618  056B  3017               	movlw	23
  2619  056C                     u2365:	
  2620  056C  1003               	clrc
  2621  056D  0CDE               	rrf	??___fttol+2,f
  2622  056E  0CDD               	rrf	??___fttol+1,f
  2623  056F  0CDC               	rrf	??___fttol,f
  2624  0570  3EFF               	addlw	-1
  2625  0571  1D03               	skipz
  2626  0572  2D6C               	goto	u2365
  2627  0573  085C               	movf	??___fttol,w
  2628  0574  00DF               	movwf	??___fttol+3
  2629  0575  085F               	movf	??___fttol+3,w
  2630  0576  00E0               	movwf	___fttol@sign1
  2631  0577  17D9               	bsf	___fttol@f1+1,7
  2632  0578  30FF               	movlw	255
  2633  0579  05D8               	andwf	___fttol@f1,f
  2634  057A  30FF               	movlw	255
  2635  057B  05D9               	andwf	___fttol@f1+1,f
  2636  057C  3000               	movlw	0
  2637  057D  05DA               	andwf	___fttol@f1+2,f
  2638  057E  0858               	movf	___fttol@f1,w
  2639  057F  00E1               	movwf	___fttol@lval
  2640  0580  0859               	movf	___fttol@f1+1,w
  2641  0581  00E2               	movwf	___fttol@lval+1
  2642  0582  085A               	movf	___fttol@f1+2,w
  2643  0583  00E3               	movwf	___fttol@lval+2
  2644  0584  01E4               	clrf	___fttol@lval+3
  2645  0585  308E               	movlw	142
  2646  0586  02E5               	subwf	___fttol@exp1,f
  2647  0587  1FE5               	btfss	___fttol@exp1,7
  2648  0588  2DA7               	goto	l2111
  2649  0589  0865               	movf	___fttol@exp1,w
  2650  058A  3A80               	xorlw	128
  2651  058B  3E8F               	addlw	143
  2652  058C  1803               	skipnc
  2653  058D  2D97               	goto	l2109
  2654  058E  3000               	movlw	0
  2655  058F  00DB               	movwf	?___fttol+3
  2656  0590  3000               	movlw	0
  2657  0591  00DA               	movwf	?___fttol+2
  2658  0592  3000               	movlw	0
  2659  0593  00D9               	movwf	?___fttol+1
  2660  0594  3000               	movlw	0
  2661  0595  00D8               	movwf	?___fttol
  2662  0596  0008               	return
  2663  0597                     l2109:	
  2664  0597  3001               	movlw	1
  2665  0598                     u2395:	
  2666  0598  1003               	clrc
  2667  0599  0CE4               	rrf	___fttol@lval+3,f
  2668  059A  0CE3               	rrf	___fttol@lval+2,f
  2669  059B  0CE2               	rrf	___fttol@lval+1,f
  2670  059C  0CE1               	rrf	___fttol@lval,f
  2671  059D  3EFF               	addlw	-1
  2672  059E  1D03               	skipz
  2673  059F  2D98               	goto	u2395
  2674  05A0  3001               	movlw	1
  2675  05A1  00DC               	movwf	??___fttol
  2676  05A2  085C               	movf	??___fttol,w
  2677  05A3  07E5               	addwf	___fttol@exp1,f
  2678  05A4  1903               	btfsc	3,2
  2679  05A5  2DC2               	goto	l2119
  2680  05A6  2D97               	goto	l2109
  2681  05A7                     l2111:	
  2682  05A7  3018               	movlw	24
  2683  05A8  0265               	subwf	___fttol@exp1,w
  2684  05A9  1C03               	skipc
  2685  05AA  2DBF               	goto	l836
  2686  05AB  3000               	movlw	0
  2687  05AC  00DB               	movwf	?___fttol+3
  2688  05AD  3000               	movlw	0
  2689  05AE  00DA               	movwf	?___fttol+2
  2690  05AF  3000               	movlw	0
  2691  05B0  00D9               	movwf	?___fttol+1
  2692  05B1  3000               	movlw	0
  2693  05B2  00D8               	movwf	?___fttol
  2694  05B3  0008               	return
  2695  05B4                     l2117:	
  2696  05B4  3001               	movlw	1
  2697  05B5  00DC               	movwf	??___fttol
  2698  05B6                     u2425:	
  2699  05B6  1003               	clrc
  2700  05B7  0DE1               	rlf	___fttol@lval,f
  2701  05B8  0DE2               	rlf	___fttol@lval+1,f
  2702  05B9  0DE3               	rlf	___fttol@lval+2,f
  2703  05BA  0DE4               	rlf	___fttol@lval+3,f
  2704  05BB  0BDC               	decfsz	??___fttol,f
  2705  05BC  2DB6               	goto	u2425
  2706  05BD  3001               	movlw	1
  2707  05BE  02E5               	subwf	___fttol@exp1,f
  2708  05BF                     l836:	
  2709  05BF  0865               	movf	___fttol@exp1,w
  2710  05C0  1D03               	btfss	3,2
  2711  05C1  2DB4               	goto	l2117
  2712  05C2                     l2119:	
  2713  05C2  0860               	movf	___fttol@sign1,w
  2714  05C3  1903               	btfsc	3,2
  2715  05C4  2DD0               	goto	l2123
  2716  05C5  09E1               	comf	___fttol@lval,f
  2717  05C6  09E2               	comf	___fttol@lval+1,f
  2718  05C7  09E3               	comf	___fttol@lval+2,f
  2719  05C8  09E4               	comf	___fttol@lval+3,f
  2720  05C9  0AE1               	incf	___fttol@lval,f
  2721  05CA  1903               	skipnz
  2722  05CB  0AE2               	incf	___fttol@lval+1,f
  2723  05CC  1903               	skipnz
  2724  05CD  0AE3               	incf	___fttol@lval+2,f
  2725  05CE  1903               	skipnz
  2726  05CF  0AE4               	incf	___fttol@lval+3,f
  2727  05D0                     l2123:	
  2728  05D0  0864               	movf	___fttol@lval+3,w
  2729  05D1  00DB               	movwf	?___fttol+3
  2730  05D2  0863               	movf	___fttol@lval+2,w
  2731  05D3  00DA               	movwf	?___fttol+2
  2732  05D4  0862               	movf	___fttol@lval+1,w
  2733  05D5  00D9               	movwf	?___fttol+1
  2734  05D6  0861               	movf	___fttol@lval,w
  2735  05D7  00D8               	movwf	?___fttol
  2736  05D8  0008               	return
  2737  05D9                     __end_of___fttol:	
  2738                           
  2739                           	psect	text5
  2740  03C0                     __ptext5:	
  2741 ;; *************** function ___ftmul *****************
  2742 ;; Defined at:
  2743 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  f1              3   11[BANK0 ] float 
  2746 ;;  f2              3   14[BANK0 ] float 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  2749 ;;  sign            1   26[BANK0 ] unsigned char 
  2750 ;;  cntr            1   25[BANK0 ] unsigned char 
  2751 ;;  exp             1   21[BANK0 ] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  3   11[BANK0 ] float 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2761 ;;      Params:         0       6       0       0       0
  2762 ;;      Locals:         0       6       0       0       0
  2763 ;;      Temps:          0       4       0       0       0
  2764 ;;      Totals:         0      16       0       0       0
  2765 ;;Total ram usage:       16 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    2
  2768 ;; This function calls:
  2769 ;;		___ftpack
  2770 ;; This function is called by:
  2771 ;;		_temp_Measurement
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function ___ftmul
  2777  03C0                     ___ftmul:	
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2781  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2782  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2783  03C2  082B               	movf	___ftmul@f1,w
  2784  03C3  00B1               	movwf	??___ftmul
  2785  03C4  082C               	movf	___ftmul@f1+1,w
  2786  03C5  00B2               	movwf	??___ftmul+1
  2787  03C6  082D               	movf	___ftmul@f1+2,w
  2788  03C7  00B3               	movwf	??___ftmul+2
  2789  03C8  1003               	clrc
  2790  03C9  0D32               	rlf	??___ftmul+1,w
  2791  03CA  0D33               	rlf	??___ftmul+2,w
  2792  03CB  00B4               	movwf	??___ftmul+3
  2793  03CC  0834               	movf	??___ftmul+3,w
  2794  03CD  00B5               	movwf	___ftmul@exp
  2795  03CE  0835               	movf	___ftmul@exp,w
  2796  03CF  1D03               	btfss	3,2
  2797  03D0  2BD8               	goto	l2695
  2798  03D1  3000               	movlw	0
  2799  03D2  00AB               	movwf	?___ftmul
  2800  03D3  3000               	movlw	0
  2801  03D4  00AC               	movwf	?___ftmul+1
  2802  03D5  3000               	movlw	0
  2803  03D6  00AD               	movwf	?___ftmul+2
  2804  03D7  0008               	return
  2805  03D8                     l2695:	
  2806  03D8  082E               	movf	___ftmul@f2,w
  2807  03D9  00B1               	movwf	??___ftmul
  2808  03DA  082F               	movf	___ftmul@f2+1,w
  2809  03DB  00B2               	movwf	??___ftmul+1
  2810  03DC  0830               	movf	___ftmul@f2+2,w
  2811  03DD  00B3               	movwf	??___ftmul+2
  2812  03DE  1003               	clrc
  2813  03DF  0D32               	rlf	??___ftmul+1,w
  2814  03E0  0D33               	rlf	??___ftmul+2,w
  2815  03E1  00B4               	movwf	??___ftmul+3
  2816  03E2  0834               	movf	??___ftmul+3,w
  2817  03E3  00BA               	movwf	___ftmul@sign
  2818  03E4  083A               	movf	___ftmul@sign,w
  2819  03E5  1D03               	btfss	3,2
  2820  03E6  2BEE               	goto	l2701
  2821  03E7  3000               	movlw	0
  2822  03E8  00AB               	movwf	?___ftmul
  2823  03E9  3000               	movlw	0
  2824  03EA  00AC               	movwf	?___ftmul+1
  2825  03EB  3000               	movlw	0
  2826  03EC  00AD               	movwf	?___ftmul+2
  2827  03ED  0008               	return
  2828  03EE                     l2701:	
  2829  03EE  083A               	movf	___ftmul@sign,w
  2830  03EF  3E7B               	addlw	123
  2831  03F0  00B1               	movwf	??___ftmul
  2832  03F1  0831               	movf	??___ftmul,w
  2833  03F2  07B5               	addwf	___ftmul@exp,f
  2834  03F3  082B               	movf	___ftmul@f1,w
  2835  03F4  00B1               	movwf	??___ftmul
  2836  03F5  082C               	movf	___ftmul@f1+1,w
  2837  03F6  00B2               	movwf	??___ftmul+1
  2838  03F7  082D               	movf	___ftmul@f1+2,w
  2839  03F8  00B3               	movwf	??___ftmul+2
  2840  03F9  3010               	movlw	16
  2841  03FA                     u3655:	
  2842  03FA  1003               	clrc
  2843  03FB  0CB3               	rrf	??___ftmul+2,f
  2844  03FC  0CB2               	rrf	??___ftmul+1,f
  2845  03FD  0CB1               	rrf	??___ftmul,f
  2846  03FE  3EFF               	addlw	-1
  2847  03FF  1D03               	skipz
  2848  0400  2BFA               	goto	u3655
  2849  0401  0831               	movf	??___ftmul,w
  2850  0402  00B4               	movwf	??___ftmul+3
  2851  0403  0834               	movf	??___ftmul+3,w
  2852  0404  00BA               	movwf	___ftmul@sign
  2853  0405  082E               	movf	___ftmul@f2,w
  2854  0406  00B1               	movwf	??___ftmul
  2855  0407  082F               	movf	___ftmul@f2+1,w
  2856  0408  00B2               	movwf	??___ftmul+1
  2857  0409  0830               	movf	___ftmul@f2+2,w
  2858  040A  00B3               	movwf	??___ftmul+2
  2859  040B  3010               	movlw	16
  2860  040C                     u3665:	
  2861  040C  1003               	clrc
  2862  040D  0CB3               	rrf	??___ftmul+2,f
  2863  040E  0CB2               	rrf	??___ftmul+1,f
  2864  040F  0CB1               	rrf	??___ftmul,f
  2865  0410  3EFF               	addlw	-1
  2866  0411  1D03               	skipz
  2867  0412  2C0C               	goto	u3665
  2868  0413  0831               	movf	??___ftmul,w
  2869  0414  00B4               	movwf	??___ftmul+3
  2870  0415  0834               	movf	??___ftmul+3,w
  2871  0416  06BA               	xorwf	___ftmul@sign,f
  2872  0417  3080               	movlw	128
  2873  0418  00B1               	movwf	??___ftmul
  2874  0419  0831               	movf	??___ftmul,w
  2875  041A  05BA               	andwf	___ftmul@sign,f
  2876  041B  17AC               	bsf	___ftmul@f1+1,7
  2877  041C  17AF               	bsf	___ftmul@f2+1,7
  2878  041D  30FF               	movlw	255
  2879  041E  05AE               	andwf	___ftmul@f2,f
  2880  041F  30FF               	movlw	255
  2881  0420  05AF               	andwf	___ftmul@f2+1,f
  2882  0421  3000               	movlw	0
  2883  0422  05B0               	andwf	___ftmul@f2+2,f
  2884  0423  3000               	movlw	0
  2885  0424  00B6               	movwf	___ftmul@f3_as_product
  2886  0425  3000               	movlw	0
  2887  0426  00B7               	movwf	___ftmul@f3_as_product+1
  2888  0427  3000               	movlw	0
  2889  0428  00B8               	movwf	___ftmul@f3_as_product+2
  2890  0429  3007               	movlw	7
  2891  042A  00B1               	movwf	??___ftmul
  2892  042B  0831               	movf	??___ftmul,w
  2893  042C  00B9               	movwf	___ftmul@cntr
  2894  042D                     l2713:	
  2895  042D  1C2B               	btfss	___ftmul@f1,0
  2896  042E  2C3D               	goto	l2717
  2897  042F  082E               	movf	___ftmul@f2,w
  2898  0430  07B6               	addwf	___ftmul@f3_as_product,f
  2899  0431  082F               	movf	___ftmul@f2+1,w
  2900  0432  1103               	clrz
  2901  0433  1803               	skipnc
  2902  0434  0A2F               	incf	___ftmul@f2+1,w
  2903  0435  1D03               	btfss	3,2
  2904  0436  07B7               	addwf	___ftmul@f3_as_product+1,f
  2905  0437  0830               	movf	___ftmul@f2+2,w
  2906  0438  1103               	clrz
  2907  0439  1803               	skipnc
  2908  043A  0A30               	incf	___ftmul@f2+2,w
  2909  043B  1D03               	btfss	3,2
  2910  043C  07B8               	addwf	___ftmul@f3_as_product+2,f
  2911  043D                     l2717:	
  2912  043D  3001               	movlw	1
  2913  043E                     u3695:	
  2914  043E  1003               	clrc
  2915  043F  0CAD               	rrf	___ftmul@f1+2,f
  2916  0440  0CAC               	rrf	___ftmul@f1+1,f
  2917  0441  0CAB               	rrf	___ftmul@f1,f
  2918  0442  3EFF               	addlw	-1
  2919  0443  1D03               	skipz
  2920  0444  2C3E               	goto	u3695
  2921  0445  3001               	movlw	1
  2922  0446                     u3705:	
  2923  0446  1003               	clrc
  2924  0447  0DAE               	rlf	___ftmul@f2,f
  2925  0448  0DAF               	rlf	___ftmul@f2+1,f
  2926  0449  0DB0               	rlf	___ftmul@f2+2,f
  2927  044A  3EFF               	addlw	-1
  2928  044B  1D03               	skipz
  2929  044C  2C46               	goto	u3705
  2930  044D  3001               	movlw	1
  2931  044E  02B9               	subwf	___ftmul@cntr,f
  2932  044F  1D03               	btfss	3,2
  2933  0450  2C2D               	goto	l2713
  2934  0451  3009               	movlw	9
  2935  0452  00B1               	movwf	??___ftmul
  2936  0453  0831               	movf	??___ftmul,w
  2937  0454  00B9               	movwf	___ftmul@cntr
  2938  0455                     l2725:	
  2939  0455  1C2B               	btfss	___ftmul@f1,0
  2940  0456  2C65               	goto	l2729
  2941  0457  082E               	movf	___ftmul@f2,w
  2942  0458  07B6               	addwf	___ftmul@f3_as_product,f
  2943  0459  082F               	movf	___ftmul@f2+1,w
  2944  045A  1103               	clrz
  2945  045B  1803               	skipnc
  2946  045C  0A2F               	incf	___ftmul@f2+1,w
  2947  045D  1D03               	btfss	3,2
  2948  045E  07B7               	addwf	___ftmul@f3_as_product+1,f
  2949  045F  0830               	movf	___ftmul@f2+2,w
  2950  0460  1103               	clrz
  2951  0461  1803               	skipnc
  2952  0462  0A30               	incf	___ftmul@f2+2,w
  2953  0463  1D03               	btfss	3,2
  2954  0464  07B8               	addwf	___ftmul@f3_as_product+2,f
  2955  0465                     l2729:	
  2956  0465  3001               	movlw	1
  2957  0466                     u3745:	
  2958  0466  1003               	clrc
  2959  0467  0CAD               	rrf	___ftmul@f1+2,f
  2960  0468  0CAC               	rrf	___ftmul@f1+1,f
  2961  0469  0CAB               	rrf	___ftmul@f1,f
  2962  046A  3EFF               	addlw	-1
  2963  046B  1D03               	skipz
  2964  046C  2C66               	goto	u3745
  2965  046D  3001               	movlw	1
  2966  046E                     u3755:	
  2967  046E  1003               	clrc
  2968  046F  0CB8               	rrf	___ftmul@f3_as_product+2,f
  2969  0470  0CB7               	rrf	___ftmul@f3_as_product+1,f
  2970  0471  0CB6               	rrf	___ftmul@f3_as_product,f
  2971  0472  3EFF               	addlw	-1
  2972  0473  1D03               	skipz
  2973  0474  2C6E               	goto	u3755
  2974  0475  3001               	movlw	1
  2975  0476  02B9               	subwf	___ftmul@cntr,f
  2976  0477  1D03               	btfss	3,2
  2977  0478  2C55               	goto	l2725
  2978  0479  0836               	movf	___ftmul@f3_as_product,w
  2979  047A  00A0               	movwf	___ftpack@arg
  2980  047B  0837               	movf	___ftmul@f3_as_product+1,w
  2981  047C  00A1               	movwf	___ftpack@arg+1
  2982  047D  0838               	movf	___ftmul@f3_as_product+2,w
  2983  047E  00A2               	movwf	___ftpack@arg+2
  2984  047F  0835               	movf	___ftmul@exp,w
  2985  0480  00B1               	movwf	??___ftmul
  2986  0481  0831               	movf	??___ftmul,w
  2987  0482  00A3               	movwf	___ftpack@exp
  2988  0483  083A               	movf	___ftmul@sign,w
  2989  0484  00B2               	movwf	??___ftmul+1
  2990  0485  0832               	movf	??___ftmul+1,w
  2991  0486  00A4               	movwf	___ftpack@sign
  2992  0487  120A  118A  2648   	fcall	___ftpack
  2993  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2994  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2995  048C  0820               	movf	?___ftpack,w
  2996  048D  00AB               	movwf	?___ftmul
  2997  048E  0821               	movf	?___ftpack+1,w
  2998  048F  00AC               	movwf	?___ftmul+1
  2999  0490  0822               	movf	?___ftpack+2,w
  3000  0491  00AD               	movwf	?___ftmul+2
  3001  0492  0008               	return
  3002  0493                     __end_of___ftmul:	
  3003                           
  3004                           	psect	text6
  3005  0493                     __ptext6:	
  3006 ;; *************** function ___ftdiv *****************
  3007 ;; Defined at:
  3008 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  f2              3   27[BANK0 ] float 
  3011 ;;  f1              3   30[BANK0 ] float 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  f3              3   38[BANK0 ] float 
  3014 ;;  sign            1   42[BANK0 ] unsigned char 
  3015 ;;  exp             1   41[BANK0 ] unsigned char 
  3016 ;;  cntr            1   37[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  3   27[BANK0 ] float 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       6       0       0       0
  3027 ;;      Locals:         0       6       0       0       0
  3028 ;;      Temps:          0       4       0       0       0
  3029 ;;      Totals:         0      16       0       0       0
  3030 ;;Total ram usage:       16 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    2
  3033 ;; This function calls:
  3034 ;;		___ftpack
  3035 ;; This function is called by:
  3036 ;;		_temp_Measurement
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function ___ftdiv
  3042  0493                     ___ftdiv:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3046  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0495  083E               	movf	___ftdiv@f1,w
  3049  0496  00C1               	movwf	??___ftdiv
  3050  0497  083F               	movf	___ftdiv@f1+1,w
  3051  0498  00C2               	movwf	??___ftdiv+1
  3052  0499  0840               	movf	___ftdiv@f1+2,w
  3053  049A  00C3               	movwf	??___ftdiv+2
  3054  049B  1003               	clrc
  3055  049C  0D42               	rlf	??___ftdiv+1,w
  3056  049D  0D43               	rlf	??___ftdiv+2,w
  3057  049E  00C4               	movwf	??___ftdiv+3
  3058  049F  0844               	movf	??___ftdiv+3,w
  3059  04A0  00C9               	movwf	___ftdiv@exp
  3060  04A1  0849               	movf	___ftdiv@exp,w
  3061  04A2  1D03               	btfss	3,2
  3062  04A3  2CAB               	goto	l2653
  3063  04A4  3000               	movlw	0
  3064  04A5  00BB               	movwf	?___ftdiv
  3065  04A6  3000               	movlw	0
  3066  04A7  00BC               	movwf	?___ftdiv+1
  3067  04A8  3000               	movlw	0
  3068  04A9  00BD               	movwf	?___ftdiv+2
  3069  04AA  0008               	return
  3070  04AB                     l2653:	
  3071  04AB  083B               	movf	___ftdiv@f2,w
  3072  04AC  00C1               	movwf	??___ftdiv
  3073  04AD  083C               	movf	___ftdiv@f2+1,w
  3074  04AE  00C2               	movwf	??___ftdiv+1
  3075  04AF  083D               	movf	___ftdiv@f2+2,w
  3076  04B0  00C3               	movwf	??___ftdiv+2
  3077  04B1  1003               	clrc
  3078  04B2  0D42               	rlf	??___ftdiv+1,w
  3079  04B3  0D43               	rlf	??___ftdiv+2,w
  3080  04B4  00C4               	movwf	??___ftdiv+3
  3081  04B5  0844               	movf	??___ftdiv+3,w
  3082  04B6  00CA               	movwf	___ftdiv@sign
  3083  04B7  084A               	movf	___ftdiv@sign,w
  3084  04B8  1D03               	btfss	3,2
  3085  04B9  2CC1               	goto	l2659
  3086  04BA  3000               	movlw	0
  3087  04BB  00BB               	movwf	?___ftdiv
  3088  04BC  3000               	movlw	0
  3089  04BD  00BC               	movwf	?___ftdiv+1
  3090  04BE  3000               	movlw	0
  3091  04BF  00BD               	movwf	?___ftdiv+2
  3092  04C0  0008               	return
  3093  04C1                     l2659:	
  3094  04C1  3000               	movlw	0
  3095  04C2  00C6               	movwf	___ftdiv@f3
  3096  04C3  3000               	movlw	0
  3097  04C4  00C7               	movwf	___ftdiv@f3+1
  3098  04C5  3000               	movlw	0
  3099  04C6  00C8               	movwf	___ftdiv@f3+2
  3100  04C7  3089               	movlw	137
  3101  04C8  074A               	addwf	___ftdiv@sign,w
  3102  04C9  00C1               	movwf	??___ftdiv
  3103  04CA  0841               	movf	??___ftdiv,w
  3104  04CB  02C9               	subwf	___ftdiv@exp,f
  3105  04CC  083E               	movf	___ftdiv@f1,w
  3106  04CD  00C1               	movwf	??___ftdiv
  3107  04CE  083F               	movf	___ftdiv@f1+1,w
  3108  04CF  00C2               	movwf	??___ftdiv+1
  3109  04D0  0840               	movf	___ftdiv@f1+2,w
  3110  04D1  00C3               	movwf	??___ftdiv+2
  3111  04D2  3010               	movlw	16
  3112  04D3                     u3575:	
  3113  04D3  1003               	clrc
  3114  04D4  0CC3               	rrf	??___ftdiv+2,f
  3115  04D5  0CC2               	rrf	??___ftdiv+1,f
  3116  04D6  0CC1               	rrf	??___ftdiv,f
  3117  04D7  3EFF               	addlw	-1
  3118  04D8  1D03               	skipz
  3119  04D9  2CD3               	goto	u3575
  3120  04DA  0841               	movf	??___ftdiv,w
  3121  04DB  00C4               	movwf	??___ftdiv+3
  3122  04DC  0844               	movf	??___ftdiv+3,w
  3123  04DD  00CA               	movwf	___ftdiv@sign
  3124  04DE  083B               	movf	___ftdiv@f2,w
  3125  04DF  00C1               	movwf	??___ftdiv
  3126  04E0  083C               	movf	___ftdiv@f2+1,w
  3127  04E1  00C2               	movwf	??___ftdiv+1
  3128  04E2  083D               	movf	___ftdiv@f2+2,w
  3129  04E3  00C3               	movwf	??___ftdiv+2
  3130  04E4  3010               	movlw	16
  3131  04E5                     u3585:	
  3132  04E5  1003               	clrc
  3133  04E6  0CC3               	rrf	??___ftdiv+2,f
  3134  04E7  0CC2               	rrf	??___ftdiv+1,f
  3135  04E8  0CC1               	rrf	??___ftdiv,f
  3136  04E9  3EFF               	addlw	-1
  3137  04EA  1D03               	skipz
  3138  04EB  2CE5               	goto	u3585
  3139  04EC  0841               	movf	??___ftdiv,w
  3140  04ED  00C4               	movwf	??___ftdiv+3
  3141  04EE  0844               	movf	??___ftdiv+3,w
  3142  04EF  06CA               	xorwf	___ftdiv@sign,f
  3143  04F0  3080               	movlw	128
  3144  04F1  00C1               	movwf	??___ftdiv
  3145  04F2  0841               	movf	??___ftdiv,w
  3146  04F3  05CA               	andwf	___ftdiv@sign,f
  3147  04F4  17BF               	bsf	___ftdiv@f1+1,7
  3148  04F5  30FF               	movlw	255
  3149  04F6  05BE               	andwf	___ftdiv@f1,f
  3150  04F7  30FF               	movlw	255
  3151  04F8  05BF               	andwf	___ftdiv@f1+1,f
  3152  04F9  3000               	movlw	0
  3153  04FA  05C0               	andwf	___ftdiv@f1+2,f
  3154  04FB  17BC               	bsf	___ftdiv@f2+1,7
  3155  04FC  30FF               	movlw	255
  3156  04FD  05BB               	andwf	___ftdiv@f2,f
  3157  04FE  30FF               	movlw	255
  3158  04FF  05BC               	andwf	___ftdiv@f2+1,f
  3159  0500  3000               	movlw	0
  3160  0501  05BD               	andwf	___ftdiv@f2+2,f
  3161  0502  3018               	movlw	24
  3162  0503  00C1               	movwf	??___ftdiv
  3163  0504  0841               	movf	??___ftdiv,w
  3164  0505  00C5               	movwf	___ftdiv@cntr
  3165  0506                     l2673:	
  3166  0506  3001               	movlw	1
  3167  0507                     u3595:	
  3168  0507  1003               	clrc
  3169  0508  0DC6               	rlf	___ftdiv@f3,f
  3170  0509  0DC7               	rlf	___ftdiv@f3+1,f
  3171  050A  0DC8               	rlf	___ftdiv@f3+2,f
  3172  050B  3EFF               	addlw	-1
  3173  050C  1D03               	skipz
  3174  050D  2D07               	goto	u3595
  3175  050E  083D               	movf	___ftdiv@f2+2,w
  3176  050F  0240               	subwf	___ftdiv@f1+2,w
  3177  0510  1D03               	skipz
  3178  0511  2D18               	goto	u3605
  3179  0512  083C               	movf	___ftdiv@f2+1,w
  3180  0513  023F               	subwf	___ftdiv@f1+1,w
  3181  0514  1D03               	skipz
  3182  0515  2D18               	goto	u3605
  3183  0516  083B               	movf	___ftdiv@f2,w
  3184  0517  023E               	subwf	___ftdiv@f1,w
  3185  0518                     u3605:	
  3186  0518  1C03               	skipc
  3187  0519  2D25               	goto	l2681
  3188  051A  083B               	movf	___ftdiv@f2,w
  3189  051B  02BE               	subwf	___ftdiv@f1,f
  3190  051C  083C               	movf	___ftdiv@f2+1,w
  3191  051D  1C03               	skipc
  3192  051E  0F3C               	incfsz	___ftdiv@f2+1,w
  3193  051F  02BF               	subwf	___ftdiv@f1+1,f
  3194  0520  083D               	movf	___ftdiv@f2+2,w
  3195  0521  1C03               	skipc
  3196  0522  0A3D               	incf	___ftdiv@f2+2,w
  3197  0523  02C0               	subwf	___ftdiv@f1+2,f
  3198  0524  1446               	bsf	___ftdiv@f3,0
  3199  0525                     l2681:	
  3200  0525  3001               	movlw	1
  3201  0526                     u3615:	
  3202  0526  1003               	clrc
  3203  0527  0DBE               	rlf	___ftdiv@f1,f
  3204  0528  0DBF               	rlf	___ftdiv@f1+1,f
  3205  0529  0DC0               	rlf	___ftdiv@f1+2,f
  3206  052A  3EFF               	addlw	-1
  3207  052B  1D03               	skipz
  3208  052C  2D26               	goto	u3615
  3209  052D  3001               	movlw	1
  3210  052E  02C5               	subwf	___ftdiv@cntr,f
  3211  052F  1D03               	btfss	3,2
  3212  0530  2D06               	goto	l2673
  3213  0531  0846               	movf	___ftdiv@f3,w
  3214  0532  00A0               	movwf	___ftpack@arg
  3215  0533  0847               	movf	___ftdiv@f3+1,w
  3216  0534  00A1               	movwf	___ftpack@arg+1
  3217  0535  0848               	movf	___ftdiv@f3+2,w
  3218  0536  00A2               	movwf	___ftpack@arg+2
  3219  0537  0849               	movf	___ftdiv@exp,w
  3220  0538  00C1               	movwf	??___ftdiv
  3221  0539  0841               	movf	??___ftdiv,w
  3222  053A  00A3               	movwf	___ftpack@exp
  3223  053B  084A               	movf	___ftdiv@sign,w
  3224  053C  00C2               	movwf	??___ftdiv+1
  3225  053D  0842               	movf	??___ftdiv+1,w
  3226  053E  00A4               	movwf	___ftpack@sign
  3227  053F  120A  118A  2648   	fcall	___ftpack
  3228  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0544  0820               	movf	?___ftpack,w
  3231  0545  00BB               	movwf	?___ftdiv
  3232  0546  0821               	movf	?___ftpack+1,w
  3233  0547  00BC               	movwf	?___ftdiv+1
  3234  0548  0822               	movf	?___ftpack+2,w
  3235  0549  00BD               	movwf	?___ftdiv+2
  3236  054A  0008               	return
  3237  054B                     __end_of___ftdiv:	
  3238                           
  3239                           	psect	text7
  3240  01CF                     __ptext7:	
  3241 ;; *************** function ___ftadd *****************
  3242 ;; Defined at:
  3243 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  f1              3   43[BANK0 ] float 
  3246 ;;  f2              3   46[BANK0 ] float 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  exp1            1   55[BANK0 ] unsigned char 
  3249 ;;  exp2            1   54[BANK0 ] unsigned char 
  3250 ;;  sign            1   53[BANK0 ] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  3   43[BANK0 ] float 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       6       0       0       0
  3261 ;;      Locals:         0       3       0       0       0
  3262 ;;      Temps:          0       4       0       0       0
  3263 ;;      Totals:         0      13       0       0       0
  3264 ;;Total ram usage:       13 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    2
  3267 ;; This function calls:
  3268 ;;		___ftpack
  3269 ;; This function is called by:
  3270 ;;		_temp_Measurement
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function ___ftadd
  3276  01CF                     ___ftadd:	
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3280  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3281  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3282  01D1  084B               	movf	___ftadd@f1,w
  3283  01D2  00D1               	movwf	??___ftadd
  3284  01D3  084C               	movf	___ftadd@f1+1,w
  3285  01D4  00D2               	movwf	??___ftadd+1
  3286  01D5  084D               	movf	___ftadd@f1+2,w
  3287  01D6  00D3               	movwf	??___ftadd+2
  3288  01D7  1003               	clrc
  3289  01D8  0D52               	rlf	??___ftadd+1,w
  3290  01D9  0D53               	rlf	??___ftadd+2,w
  3291  01DA  00D4               	movwf	??___ftadd+3
  3292  01DB  0854               	movf	??___ftadd+3,w
  3293  01DC  00D7               	movwf	___ftadd@exp1
  3294  01DD  084E               	movf	___ftadd@f2,w
  3295  01DE  00D1               	movwf	??___ftadd
  3296  01DF  084F               	movf	___ftadd@f2+1,w
  3297  01E0  00D2               	movwf	??___ftadd+1
  3298  01E1  0850               	movf	___ftadd@f2+2,w
  3299  01E2  00D3               	movwf	??___ftadd+2
  3300  01E3  1003               	clrc
  3301  01E4  0D52               	rlf	??___ftadd+1,w
  3302  01E5  0D53               	rlf	??___ftadd+2,w
  3303  01E6  00D4               	movwf	??___ftadd+3
  3304  01E7  0854               	movf	??___ftadd+3,w
  3305  01E8  00D6               	movwf	___ftadd@exp2
  3306  01E9  0857               	movf	___ftadd@exp1,w
  3307  01EA  1903               	btfsc	3,2
  3308  01EB  29F8               	goto	l2583
  3309  01EC  0856               	movf	___ftadd@exp2,w
  3310  01ED  0257               	subwf	___ftadd@exp1,w
  3311  01EE  1803               	skipnc
  3312  01EF  29FF               	goto	l2587
  3313  01F0  0357               	decf	___ftadd@exp1,w
  3314  01F1  3AFF               	xorlw	255
  3315  01F2  0756               	addwf	___ftadd@exp2,w
  3316  01F3  00D1               	movwf	??___ftadd
  3317  01F4  3019               	movlw	25
  3318  01F5  0251               	subwf	??___ftadd,w
  3319  01F6  1C03               	skipc
  3320  01F7  29FF               	goto	l2587
  3321  01F8                     l2583:	
  3322  01F8  084E               	movf	___ftadd@f2,w
  3323  01F9  00CB               	movwf	?___ftadd
  3324  01FA  084F               	movf	___ftadd@f2+1,w
  3325  01FB  00CC               	movwf	?___ftadd+1
  3326  01FC  0850               	movf	___ftadd@f2+2,w
  3327  01FD  00CD               	movwf	?___ftadd+2
  3328  01FE  0008               	return
  3329  01FF                     l2587:	
  3330  01FF  0856               	movf	___ftadd@exp2,w
  3331  0200  1903               	btfsc	3,2
  3332  0201  0008               	return
  3333  0202  0857               	movf	___ftadd@exp1,w
  3334  0203  0256               	subwf	___ftadd@exp2,w
  3335  0204  1803               	skipnc
  3336  0205  2A0E               	goto	l2593
  3337  0206  0356               	decf	___ftadd@exp2,w
  3338  0207  3AFF               	xorlw	255
  3339  0208  0757               	addwf	___ftadd@exp1,w
  3340  0209  00D1               	movwf	??___ftadd
  3341  020A  3019               	movlw	25
  3342  020B  0251               	subwf	??___ftadd,w
  3343  020C  1803               	btfsc	3,0
  3344  020D  0008               	return
  3345  020E                     l2593:	
  3346  020E  3006               	movlw	6
  3347  020F  00D1               	movwf	??___ftadd
  3348  0210  0851               	movf	??___ftadd,w
  3349  0211  00D5               	movwf	___ftadd@sign
  3350  0212  1BCD               	btfsc	___ftadd@f1+2,7
  3351  0213  17D5               	bsf	___ftadd@sign,7
  3352  0214  1BD0               	btfsc	___ftadd@f2+2,7
  3353  0215  1755               	bsf	___ftadd@sign,6
  3354  0216  17CC               	bsf	___ftadd@f1+1,7
  3355  0217  30FF               	movlw	255
  3356  0218  05CB               	andwf	___ftadd@f1,f
  3357  0219  30FF               	movlw	255
  3358  021A  05CC               	andwf	___ftadd@f1+1,f
  3359  021B  3000               	movlw	0
  3360  021C  05CD               	andwf	___ftadd@f1+2,f
  3361  021D  17CF               	bsf	___ftadd@f2+1,7
  3362  021E  30FF               	movlw	255
  3363  021F  05CE               	andwf	___ftadd@f2,f
  3364  0220  30FF               	movlw	255
  3365  0221  05CF               	andwf	___ftadd@f2+1,f
  3366  0222  3000               	movlw	0
  3367  0223  05D0               	andwf	___ftadd@f2+2,f
  3368  0224  0856               	movf	___ftadd@exp2,w
  3369  0225  0257               	subwf	___ftadd@exp1,w
  3370  0226  1803               	skipnc
  3371  0227  2A4E               	goto	l2615
  3372  0228                     l2605:	
  3373  0228  3001               	movlw	1
  3374  0229                     u3405:	
  3375  0229  1003               	clrc
  3376  022A  0DCE               	rlf	___ftadd@f2,f
  3377  022B  0DCF               	rlf	___ftadd@f2+1,f
  3378  022C  0DD0               	rlf	___ftadd@f2+2,f
  3379  022D  3EFF               	addlw	-1
  3380  022E  1D03               	skipz
  3381  022F  2A29               	goto	u3405
  3382  0230  3001               	movlw	1
  3383  0231  02D6               	subwf	___ftadd@exp2,f
  3384  0232  0856               	movf	___ftadd@exp2,w
  3385  0233  0657               	xorwf	___ftadd@exp1,w
  3386  0234  1903               	skipnz
  3387  0235  2A49               	goto	l2613
  3388  0236  3001               	movlw	1
  3389  0237  02D5               	subwf	___ftadd@sign,f
  3390  0238  0855               	movf	___ftadd@sign,w
  3391  0239  3907               	andlw	7
  3392  023A  1903               	btfsc	3,2
  3393  023B  2A49               	goto	l2613
  3394  023C  2A28               	goto	l2605
  3395  023D                     l2611:	
  3396  023D  3001               	movlw	1
  3397  023E                     u3435:	
  3398  023E  1003               	clrc
  3399  023F  0CCD               	rrf	___ftadd@f1+2,f
  3400  0240  0CCC               	rrf	___ftadd@f1+1,f
  3401  0241  0CCB               	rrf	___ftadd@f1,f
  3402  0242  3EFF               	addlw	-1
  3403  0243  1D03               	skipz
  3404  0244  2A3E               	goto	u3435
  3405  0245  3001               	movlw	1
  3406  0246  00D1               	movwf	??___ftadd
  3407  0247  0851               	movf	??___ftadd,w
  3408  0248  07D7               	addwf	___ftadd@exp1,f
  3409  0249                     l2613:	
  3410  0249  0857               	movf	___ftadd@exp1,w
  3411  024A  0656               	xorwf	___ftadd@exp2,w
  3412  024B  1903               	btfsc	3,2
  3413  024C  2A77               	goto	l776
  3414  024D  2A3D               	goto	l2611
  3415  024E                     l2615:	
  3416  024E  0857               	movf	___ftadd@exp1,w
  3417  024F  0256               	subwf	___ftadd@exp2,w
  3418  0250  1803               	skipnc
  3419  0251  2A77               	goto	l776
  3420  0252                     l2617:	
  3421  0252  3001               	movlw	1
  3422  0253                     u3465:	
  3423  0253  1003               	clrc
  3424  0254  0DCB               	rlf	___ftadd@f1,f
  3425  0255  0DCC               	rlf	___ftadd@f1+1,f
  3426  0256  0DCD               	rlf	___ftadd@f1+2,f
  3427  0257  3EFF               	addlw	-1
  3428  0258  1D03               	skipz
  3429  0259  2A53               	goto	u3465
  3430  025A  3001               	movlw	1
  3431  025B  02D7               	subwf	___ftadd@exp1,f
  3432  025C  0856               	movf	___ftadd@exp2,w
  3433  025D  0657               	xorwf	___ftadd@exp1,w
  3434  025E  1903               	skipnz
  3435  025F  2A73               	goto	l2625
  3436  0260  3001               	movlw	1
  3437  0261  02D5               	subwf	___ftadd@sign,f
  3438  0262  0855               	movf	___ftadd@sign,w
  3439  0263  3907               	andlw	7
  3440  0264  1903               	btfsc	3,2
  3441  0265  2A73               	goto	l2625
  3442  0266  2A52               	goto	l2617
  3443  0267                     l2623:	
  3444  0267  3001               	movlw	1
  3445  0268                     u3495:	
  3446  0268  1003               	clrc
  3447  0269  0CD0               	rrf	___ftadd@f2+2,f
  3448  026A  0CCF               	rrf	___ftadd@f2+1,f
  3449  026B  0CCE               	rrf	___ftadd@f2,f
  3450  026C  3EFF               	addlw	-1
  3451  026D  1D03               	skipz
  3452  026E  2A68               	goto	u3495
  3453  026F  3001               	movlw	1
  3454  0270  00D1               	movwf	??___ftadd
  3455  0271  0851               	movf	??___ftadd,w
  3456  0272  07D6               	addwf	___ftadd@exp2,f
  3457  0273                     l2625:	
  3458  0273  0857               	movf	___ftadd@exp1,w
  3459  0274  0656               	xorwf	___ftadd@exp2,w
  3460  0275  1D03               	skipz
  3461  0276  2A67               	goto	l2623
  3462  0277                     l776:	
  3463  0277  1FD5               	btfss	___ftadd@sign,7
  3464  0278  2A89               	goto	l2629
  3465  0279  30FF               	movlw	255
  3466  027A  06CB               	xorwf	___ftadd@f1,f
  3467  027B  30FF               	movlw	255
  3468  027C  06CC               	xorwf	___ftadd@f1+1,f
  3469  027D  30FF               	movlw	255
  3470  027E  06CD               	xorwf	___ftadd@f1+2,f
  3471  027F  3001               	movlw	1
  3472  0280  07CB               	addwf	___ftadd@f1,f
  3473  0281  3000               	movlw	0
  3474  0282  1803               	skipnc
  3475  0283  3001               	movlw	1
  3476  0284  07CC               	addwf	___ftadd@f1+1,f
  3477  0285  3000               	movlw	0
  3478  0286  1803               	skipnc
  3479  0287  3001               	movlw	1
  3480  0288  07CD               	addwf	___ftadd@f1+2,f
  3481  0289                     l2629:	
  3482  0289  1F55               	btfss	___ftadd@sign,6
  3483  028A  2A9B               	goto	l2633
  3484  028B  30FF               	movlw	255
  3485  028C  06CE               	xorwf	___ftadd@f2,f
  3486  028D  30FF               	movlw	255
  3487  028E  06CF               	xorwf	___ftadd@f2+1,f
  3488  028F  30FF               	movlw	255
  3489  0290  06D0               	xorwf	___ftadd@f2+2,f
  3490  0291  3001               	movlw	1
  3491  0292  07CE               	addwf	___ftadd@f2,f
  3492  0293  3000               	movlw	0
  3493  0294  1803               	skipnc
  3494  0295  3001               	movlw	1
  3495  0296  07CF               	addwf	___ftadd@f2+1,f
  3496  0297  3000               	movlw	0
  3497  0298  1803               	skipnc
  3498  0299  3001               	movlw	1
  3499  029A  07D0               	addwf	___ftadd@f2+2,f
  3500  029B                     l2633:	
  3501  029B  01D5               	clrf	___ftadd@sign
  3502  029C  084B               	movf	___ftadd@f1,w
  3503  029D  07CE               	addwf	___ftadd@f2,f
  3504  029E  084C               	movf	___ftadd@f1+1,w
  3505  029F  1103               	clrz
  3506  02A0  1803               	skipnc
  3507  02A1  0A4C               	incf	___ftadd@f1+1,w
  3508  02A2  1D03               	btfss	3,2
  3509  02A3  07CF               	addwf	___ftadd@f2+1,f
  3510  02A4  084D               	movf	___ftadd@f1+2,w
  3511  02A5  1103               	clrz
  3512  02A6  1803               	skipnc
  3513  02A7  0A4D               	incf	___ftadd@f1+2,w
  3514  02A8  1D03               	btfss	3,2
  3515  02A9  07D0               	addwf	___ftadd@f2+2,f
  3516  02AA  1FD0               	btfss	___ftadd@f2+2,7
  3517  02AB  2ABE               	goto	l2643
  3518  02AC  30FF               	movlw	255
  3519  02AD  06CE               	xorwf	___ftadd@f2,f
  3520  02AE  30FF               	movlw	255
  3521  02AF  06CF               	xorwf	___ftadd@f2+1,f
  3522  02B0  30FF               	movlw	255
  3523  02B1  06D0               	xorwf	___ftadd@f2+2,f
  3524  02B2  3001               	movlw	1
  3525  02B3  07CE               	addwf	___ftadd@f2,f
  3526  02B4  3000               	movlw	0
  3527  02B5  1803               	skipnc
  3528  02B6  3001               	movlw	1
  3529  02B7  07CF               	addwf	___ftadd@f2+1,f
  3530  02B8  3000               	movlw	0
  3531  02B9  1803               	skipnc
  3532  02BA  3001               	movlw	1
  3533  02BB  07D0               	addwf	___ftadd@f2+2,f
  3534  02BC  01D5               	clrf	___ftadd@sign
  3535  02BD  0AD5               	incf	___ftadd@sign,f
  3536  02BE                     l2643:	
  3537  02BE  084E               	movf	___ftadd@f2,w
  3538  02BF  00A0               	movwf	___ftpack@arg
  3539  02C0  084F               	movf	___ftadd@f2+1,w
  3540  02C1  00A1               	movwf	___ftpack@arg+1
  3541  02C2  0850               	movf	___ftadd@f2+2,w
  3542  02C3  00A2               	movwf	___ftpack@arg+2
  3543  02C4  0857               	movf	___ftadd@exp1,w
  3544  02C5  00D1               	movwf	??___ftadd
  3545  02C6  0851               	movf	??___ftadd,w
  3546  02C7  00A3               	movwf	___ftpack@exp
  3547  02C8  0855               	movf	___ftadd@sign,w
  3548  02C9  00D2               	movwf	??___ftadd+1
  3549  02CA  0852               	movf	??___ftadd+1,w
  3550  02CB  00A4               	movwf	___ftpack@sign
  3551  02CC  120A  118A  2648   	fcall	___ftpack
  3552  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3553  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3554  02D1  0820               	movf	?___ftpack,w
  3555  02D2  00CB               	movwf	?___ftadd
  3556  02D3  0821               	movf	?___ftpack+1,w
  3557  02D4  00CC               	movwf	?___ftadd+1
  3558  02D5  0822               	movf	?___ftpack+2,w
  3559  02D6  00CD               	movwf	?___ftadd+2
  3560  02D7  0008               	return
  3561  02D8                     __end_of___ftadd:	
  3562                           
  3563                           	psect	text8
  3564  0648                     __ptext8:	
  3565 ;; *************** function ___ftpack *****************
  3566 ;; Defined at:
  3567 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  arg             3    0[BANK0 ] unsigned um
  3570 ;;  exp             1    3[BANK0 ] unsigned char 
  3571 ;;  sign            1    4[BANK0 ] unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  3    0[BANK0 ] float 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       5       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          0       3       0       0       0
  3586 ;;      Totals:         0       8       0       0       0
  3587 ;;Total ram usage:        8 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		___ftadd
  3594 ;;		___ftdiv
  3595 ;;		___ftmul
  3596 ;;		___lwtoft
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function ___ftpack
  3602  0648                     ___ftpack:	
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3606  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3608  064A  0823               	movf	___ftpack@exp,w
  3609  064B  1903               	btfsc	3,2
  3610  064C  2E52               	goto	l2487
  3611  064D  0822               	movf	___ftpack@arg+2,w
  3612  064E  0421               	iorwf	___ftpack@arg+1,w
  3613  064F  0420               	iorwf	___ftpack@arg,w
  3614  0650  1D03               	skipz
  3615  0651  2E65               	goto	l2493
  3616  0652                     l2487:	
  3617  0652  3000               	movlw	0
  3618  0653  00A0               	movwf	?___ftpack
  3619  0654  3000               	movlw	0
  3620  0655  00A1               	movwf	?___ftpack+1
  3621  0656  3000               	movlw	0
  3622  0657  00A2               	movwf	?___ftpack+2
  3623  0658  0008               	return
  3624  0659                     l2491:	
  3625  0659  3001               	movlw	1
  3626  065A  00A5               	movwf	??___ftpack
  3627  065B  0825               	movf	??___ftpack,w
  3628  065C  07A3               	addwf	___ftpack@exp,f
  3629  065D  3001               	movlw	1
  3630  065E                     u3105:	
  3631  065E  1003               	clrc
  3632  065F  0CA2               	rrf	___ftpack@arg+2,f
  3633  0660  0CA1               	rrf	___ftpack@arg+1,f
  3634  0661  0CA0               	rrf	___ftpack@arg,f
  3635  0662  3EFF               	addlw	-1
  3636  0663  1D03               	skipz
  3637  0664  2E5E               	goto	u3105
  3638  0665                     l2493:	
  3639  0665  30FE               	movlw	254
  3640  0666  0522               	andwf	___ftpack@arg+2,w
  3641  0667  1903               	btfsc	3,2
  3642  0668  2E80               	goto	l745
  3643  0669  2E59               	goto	l2491
  3644  066A                     l2495:	
  3645  066A  3001               	movlw	1
  3646  066B  00A5               	movwf	??___ftpack
  3647  066C  0825               	movf	??___ftpack,w
  3648  066D  07A3               	addwf	___ftpack@exp,f
  3649  066E  3001               	movlw	1
  3650  066F  07A0               	addwf	___ftpack@arg,f
  3651  0670  3000               	movlw	0
  3652  0671  1803               	skipnc
  3653  0672  3001               	movlw	1
  3654  0673  07A1               	addwf	___ftpack@arg+1,f
  3655  0674  3000               	movlw	0
  3656  0675  1803               	skipnc
  3657  0676  3001               	movlw	1
  3658  0677  07A2               	addwf	___ftpack@arg+2,f
  3659  0678  3001               	movlw	1
  3660  0679                     u3125:	
  3661  0679  1003               	clrc
  3662  067A  0CA2               	rrf	___ftpack@arg+2,f
  3663  067B  0CA1               	rrf	___ftpack@arg+1,f
  3664  067C  0CA0               	rrf	___ftpack@arg,f
  3665  067D  3EFF               	addlw	-1
  3666  067E  1D03               	skipz
  3667  067F  2E79               	goto	u3125
  3668  0680                     l745:	
  3669  0680  30FF               	movlw	255
  3670  0681  0522               	andwf	___ftpack@arg+2,w
  3671  0682  1903               	btfsc	3,2
  3672  0683  2E8F               	goto	l2503
  3673  0684  2E6A               	goto	l2495
  3674  0685                     l2501:	
  3675  0685  3001               	movlw	1
  3676  0686  02A3               	subwf	___ftpack@exp,f
  3677  0687  3001               	movlw	1
  3678  0688                     u3145:	
  3679  0688  1003               	clrc
  3680  0689  0DA0               	rlf	___ftpack@arg,f
  3681  068A  0DA1               	rlf	___ftpack@arg+1,f
  3682  068B  0DA2               	rlf	___ftpack@arg+2,f
  3683  068C  3EFF               	addlw	-1
  3684  068D  1D03               	skipz
  3685  068E  2E88               	goto	u3145
  3686  068F                     l2503:	
  3687  068F  1BA1               	btfsc	___ftpack@arg+1,7
  3688  0690  2E95               	goto	l752
  3689  0691  3002               	movlw	2
  3690  0692  0223               	subwf	___ftpack@exp,w
  3691  0693  1803               	skipnc
  3692  0694  2E85               	goto	l2501
  3693  0695                     l752:	
  3694  0695  1823               	btfsc	___ftpack@exp,0
  3695  0696  2E9D               	goto	l753
  3696  0697  30FF               	movlw	255
  3697  0698  05A0               	andwf	___ftpack@arg,f
  3698  0699  307F               	movlw	127
  3699  069A  05A1               	andwf	___ftpack@arg+1,f
  3700  069B  30FF               	movlw	255
  3701  069C  05A2               	andwf	___ftpack@arg+2,f
  3702  069D                     l753:	
  3703  069D  1003               	clrc
  3704  069E  0CA3               	rrf	___ftpack@exp,f
  3705  069F  0823               	movf	___ftpack@exp,w
  3706  06A0  00A5               	movwf	??___ftpack
  3707  06A1  01A6               	clrf	??___ftpack+1
  3708  06A2  01A7               	clrf	??___ftpack+2
  3709  06A3  3010               	movlw	16
  3710  06A4                     u3185:	
  3711  06A4  1003               	clrc
  3712  06A5  0DA5               	rlf	??___ftpack,f
  3713  06A6  0DA6               	rlf	??___ftpack+1,f
  3714  06A7  0DA7               	rlf	??___ftpack+2,f
  3715  06A8  3EFF               	addlw	-1
  3716  06A9  1D03               	skipz
  3717  06AA  2EA4               	goto	u3185
  3718  06AB  0825               	movf	??___ftpack,w
  3719  06AC  04A0               	iorwf	___ftpack@arg,f
  3720  06AD  0826               	movf	??___ftpack+1,w
  3721  06AE  04A1               	iorwf	___ftpack@arg+1,f
  3722  06AF  0827               	movf	??___ftpack+2,w
  3723  06B0  04A2               	iorwf	___ftpack@arg+2,f
  3724  06B1  0824               	movf	___ftpack@sign,w
  3725  06B2  1903               	btfsc	3,2
  3726  06B3  0008               	return
  3727  06B4  17A2               	bsf	___ftpack@arg+2,7
  3728  06B5  0008               	return
  3729  06B6                     __end_of___ftpack:	
  3730                           
  3731                           	psect	text9
  3732  003B                     __ptext9:	
  3733 ;; *************** function _sprintf *****************
  3734 ;; Defined at:
  3735 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  sp              1    wreg     PTR unsigned char 
  3738 ;;		 -> sTemperature(2), 
  3739 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  3740 ;;		 -> STR_4(4), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  sp              1   11[BANK1 ] PTR unsigned char 
  3743 ;;		 -> sTemperature(2), 
  3744 ;;  tmpval          4    0        struct .
  3745 ;;  width           2   12[BANK1 ] int 
  3746 ;;  val             2    9[BANK1 ] unsigned int 
  3747 ;;  cp              2    0        PTR const unsigned char 
  3748 ;;  len             2    0        unsigned int 
  3749 ;;  c               1   14[BANK1 ] char 
  3750 ;;  flag            1    8[BANK1 ] unsigned char 
  3751 ;;  prec            1    7[BANK1 ] char 
  3752 ;;  ap              1    6[BANK1 ] PTR void [1]
  3753 ;;		 -> ?_sprintf(2), 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    0[BANK1 ] int 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       3       0       0
  3764 ;;      Locals:         0       0       9       0       0
  3765 ;;      Temps:          0       0       3       0       0
  3766 ;;      Totals:         0       0      15       0       0
  3767 ;;Total ram usage:       15 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    2
  3770 ;; This function calls:
  3771 ;;		___lwdiv
  3772 ;;		___lwmod
  3773 ;;		___wmul
  3774 ;;		_isdigit
  3775 ;; This function is called by:
  3776 ;;		_temp_Display
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _sprintf
  3782  003B                     _sprintf:	
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3786                           ;sprintf@sp stored from wreg
  3787  003B  1683               	bsf	3,5	;RP0=1, select bank1
  3788  003C  1303               	bcf	3,6	;RP1=0, select bank1
  3789  003D  00AB               	movwf	sprintf@sp^(0+128)
  3790                           
  3791                           ;doprnt.c: 494: va_list ap;
  3792                           ;doprnt.c: 499: signed char c;
  3793                           ;doprnt.c: 501: int width;
  3794                           ;doprnt.c: 506: signed char prec;
  3795                           ;doprnt.c: 508: unsigned char flag;
  3796                           ;doprnt.c: 523: union {
  3797                           ;doprnt.c: 524: unsigned long vd;
  3798                           ;doprnt.c: 525: double integ;
  3799                           ;doprnt.c: 526: } tmpval;
  3800                           ;doprnt.c: 528: unsigned int val;
  3801                           ;doprnt.c: 529: unsigned len;
  3802                           ;doprnt.c: 530: const char * cp;
  3803                           ;doprnt.c: 533: *ap = __va_start();
  3804  003E  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3805  003F  00A3               	movwf	??_sprintf^(0+128)
  3806  0040  0823               	movf	??_sprintf^(0+128),w
  3807  0041  00A6               	movwf	sprintf@ap^(0+128)
  3808  0042                     l2935:	
  3809                           ;doprnt.c: 536: while(c = *f++) {
  3810                           
  3811  0042  3001               	movlw	1
  3812  0043  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0044  1303               	bcf	3,6	;RP1=0, select bank1
  3814  0045  07A0               	addwf	sprintf@f^(0+128),f
  3815  0046  30FF               	movlw	-1
  3816  0047  0720               	addwf	sprintf@f^(0+128),w
  3817  0048  0084               	movwf	4
  3818  0049  120A  158A  200A  120A  118A  	fcall	stringdir
  3819  004E  00A3               	movwf	??_sprintf^(0+128)
  3820  004F  0823               	movf	??_sprintf^(0+128),w
  3821  0050  00AE               	movwf	sprintf@c^(0+128)
  3822  0051  082E               	movf	sprintf@c^(0+128),w
  3823  0052  1903               	btfsc	3,2
  3824  0053  29C8               	goto	l2937
  3825                           
  3826                           ;doprnt.c: 538: if(c != '%')
  3827  0054  3025               	movlw	37
  3828  0055  062E               	xorwf	sprintf@c^(0+128),w
  3829  0056  1903               	btfsc	3,2
  3830  0057  2864               	goto	l2861
  3831                           
  3832                           ;doprnt.c: 540: {
  3833                           ;doprnt.c: 541: ((*sp++ = (c)));
  3834  0058  082E               	movf	sprintf@c^(0+128),w
  3835  0059  00A3               	movwf	??_sprintf^(0+128)
  3836  005A  082B               	movf	sprintf@sp^(0+128),w
  3837  005B  0084               	movwf	4
  3838  005C  0823               	movf	??_sprintf^(0+128),w
  3839  005D  1383               	bcf	3,7	;select IRP bank0
  3840  005E  0080               	movwf	0
  3841  005F  3001               	movlw	1
  3842  0060  00A3               	movwf	??_sprintf^(0+128)
  3843  0061  0823               	movf	??_sprintf^(0+128),w
  3844  0062  07AB               	addwf	sprintf@sp^(0+128),f
  3845                           
  3846                           ;doprnt.c: 542: continue;
  3847  0063  2842               	goto	l2935
  3848  0064                     l2861:	
  3849                           
  3850                           ;doprnt.c: 543: }
  3851                           ;doprnt.c: 546: width = 0;
  3852  0064  01AC               	clrf	sprintf@width^(0+128)
  3853  0065  01AD               	clrf	(sprintf@width+1)^(0+128)
  3854                           
  3855                           ;doprnt.c: 548: flag = 0;
  3856  0066  01A8               	clrf	sprintf@flag^(0+128)
  3857                           
  3858                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3859  0067  0820               	movf	sprintf@f^(0+128),w
  3860  0068  0084               	movwf	4
  3861  0069  120A  158A  200A  120A  118A  	fcall	stringdir
  3862  006E  120A  158A  2403  120A  118A  	fcall	_isdigit
  3863  0073  1C03               	btfss	3,0
  3864  0074  28C1               	goto	l2877
  3865                           
  3866                           ;doprnt.c: 598: width = 0;
  3867  0075  1683               	bsf	3,5	;RP0=1, select bank1
  3868  0076  1303               	bcf	3,6	;RP1=0, select bank1
  3869  0077  01AC               	clrf	sprintf@width^(0+128)
  3870  0078  01AD               	clrf	(sprintf@width+1)^(0+128)
  3871  0079                     l2867:	
  3872                           ;doprnt.c: 599: do {
  3873                           
  3874                           
  3875                           ;doprnt.c: 600: width *= 10;
  3876  0079  300A               	movlw	10
  3877  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3878  007B  1303               	bcf	3,6	;RP1=0, select bank0
  3879  007C  00A0               	movwf	___wmul@multiplier
  3880  007D  3000               	movlw	0
  3881  007E  00A1               	movwf	___wmul@multiplier+1
  3882  007F  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0080  1303               	bcf	3,6	;RP1=0, select bank1
  3884  0081  082D               	movf	(sprintf@width+1)^(0+128),w
  3885  0082  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0083  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0084  00A3               	movwf	___wmul@multiplicand+1
  3888  0085  1683               	bsf	3,5	;RP0=1, select bank1
  3889  0086  1303               	bcf	3,6	;RP1=0, select bank1
  3890  0087  082C               	movf	sprintf@width^(0+128),w
  3891  0088  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0089  1303               	bcf	3,6	;RP1=0, select bank0
  3893  008A  00A2               	movwf	___wmul@multiplicand
  3894  008B  120A  158A  248B  120A  118A  	fcall	___wmul
  3895  0090  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0091  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0092  0821               	movf	?___wmul+1,w
  3898  0093  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0094  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0095  00AD               	movwf	(sprintf@width+1)^(0+128)
  3901  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0097  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0098  0820               	movf	?___wmul,w
  3904  0099  1683               	bsf	3,5	;RP0=1, select bank1
  3905  009A  1303               	bcf	3,6	;RP1=0, select bank1
  3906  009B  00AC               	movwf	sprintf@width^(0+128)
  3907                           
  3908                           ;doprnt.c: 601: width += *f++ - '0';
  3909  009C  0820               	movf	sprintf@f^(0+128),w
  3910  009D  0084               	movwf	4
  3911  009E  120A  158A  200A  120A  118A  	fcall	stringdir
  3912  00A3  3ED0               	addlw	208
  3913  00A4  00A3               	movwf	??_sprintf^(0+128)
  3914  00A5  30FF               	movlw	255
  3915  00A6  1803               	skipnc
  3916  00A7  3000               	movlw	0
  3917  00A8  00A4               	movwf	(??_sprintf^(0+128)+1)
  3918  00A9  0823               	movf	??_sprintf^(0+128),w
  3919  00AA  07AC               	addwf	sprintf@width^(0+128),f
  3920  00AB  1803               	skipnc
  3921  00AC  0AAD               	incf	(sprintf@width+1)^(0+128),f
  3922  00AD  0824               	movf	(??_sprintf+1)^(0+128),w
  3923  00AE  07AD               	addwf	(sprintf@width+1)^(0+128),f
  3924  00AF  3001               	movlw	1
  3925  00B0  00A3               	movwf	??_sprintf^(0+128)
  3926  00B1  0823               	movf	??_sprintf^(0+128),w
  3927  00B2  07A0               	addwf	sprintf@f^(0+128),f
  3928                           
  3929                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3930  00B3  0820               	movf	sprintf@f^(0+128),w
  3931  00B4  0084               	movwf	4
  3932  00B5  120A  158A  200A  120A  118A  	fcall	stringdir
  3933  00BA  120A  158A  2403  120A  118A  	fcall	_isdigit
  3934  00BF  1803               	btfsc	3,0
  3935  00C0  2879               	goto	l2867
  3936  00C1                     l2877:	
  3937                           ;doprnt.c: 822: }
  3938                           
  3939                           ;doprnt.c: 813: continue;
  3940                           
  3941                           ;doprnt.c: 802: default:
  3942                           
  3943                           ;doprnt.c: 698: case 'i':
  3944                           ;doprnt.c: 699: break;
  3945                           
  3946                           ;doprnt.c: 697: case 'd':
  3947                           
  3948                           ;doprnt.c: 638: goto alldone;
  3949                           
  3950                           ;doprnt.c: 637: case 0:
  3951                           
  3952                           ;doprnt.c: 608: }
  3953                           ;doprnt.c: 635: switch(c = *f++) {
  3954                           
  3955  00C1  3001               	movlw	1
  3956  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  3957  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  3958  00C4  07A0               	addwf	sprintf@f^(0+128),f
  3959  00C5  30FF               	movlw	-1
  3960  00C6  0720               	addwf	sprintf@f^(0+128),w
  3961  00C7  0084               	movwf	4
  3962  00C8  120A  158A  200A  120A  118A  	fcall	stringdir
  3963  00CD  00AE               	movwf	sprintf@c^(0+128)
  3964                           
  3965                           ; Switch size 1, requested type "space"
  3966                           ; Number of cases is 3, Range of values is 0 to 105
  3967                           ; switch strategies available:
  3968                           ; Name         Instructions Cycles
  3969                           ; simple_byte           10     6 (average)
  3970                           ; jumptable            260     6 (fixed)
  3971                           ;	Chosen strategy is simple_byte
  3972  00CE  3A00               	xorlw	0	; case 0
  3973  00CF  1903               	skipnz
  3974  00D0  29C8               	goto	l2937
  3975  00D1  3A64               	xorlw	100	; case 100
  3976  00D2  1903               	skipnz
  3977  00D3  28D8               	goto	l2879
  3978  00D4  3A0D               	xorlw	13	; case 105
  3979  00D5  1903               	skipnz
  3980  00D6  28D8               	goto	l2879
  3981  00D7  2842               	goto	l2935
  3982  00D8                     l2879:	
  3983                           
  3984                           ;doprnt.c: 1253: {
  3985                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3986  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  3987  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  3988  00DA  0826               	movf	sprintf@ap^(0+128),w
  3989  00DB  0084               	movwf	4
  3990  00DC  1383               	bcf	3,7	;select IRP bank0
  3991  00DD  0800               	movf	0,w
  3992  00DE  00A9               	movwf	sprintf@val^(0+128)
  3993  00DF  0A84               	incf	4,f
  3994  00E0  0800               	movf	0,w
  3995  00E1  00AA               	movwf	(sprintf@val+1)^(0+128)
  3996  00E2  3002               	movlw	2
  3997  00E3  00A3               	movwf	??_sprintf^(0+128)
  3998  00E4  0823               	movf	??_sprintf^(0+128),w
  3999  00E5  07A6               	addwf	sprintf@ap^(0+128),f
  4000                           
  4001                           ;doprnt.c: 1261: if((int)val < 0) {
  4002  00E6  1FAA               	btfss	(sprintf@val+1)^(0+128),7
  4003  00E7  28F1               	goto	l2889
  4004                           
  4005                           ;doprnt.c: 1262: flag |= 0x03;
  4006  00E8  3003               	movlw	3
  4007  00E9  00A3               	movwf	??_sprintf^(0+128)
  4008  00EA  0823               	movf	??_sprintf^(0+128),w
  4009  00EB  04A8               	iorwf	sprintf@flag^(0+128),f
  4010                           
  4011                           ;doprnt.c: 1263: val = -val;
  4012  00EC  09A9               	comf	sprintf@val^(0+128),f
  4013  00ED  09AA               	comf	(sprintf@val+1)^(0+128),f
  4014  00EE  0AA9               	incf	sprintf@val^(0+128),f
  4015  00EF  1903               	skipnz
  4016  00F0  0AAA               	incf	(sprintf@val+1)^(0+128),f
  4017  00F1                     l2889:	
  4018                           
  4019                           ;doprnt.c: 1264: }
  4020                           ;doprnt.c: 1266: }
  4021                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4022  00F1  01AE               	clrf	sprintf@c^(0+128)
  4023  00F2  0AAE               	incf	sprintf@c^(0+128),f
  4024  00F3  3005               	movlw	5
  4025  00F4  062E               	xorwf	sprintf@c^(0+128),w
  4026  00F5  1903               	btfsc	3,2
  4027  00F6  2918               	goto	l2901
  4028  00F7                     l2895:	
  4029                           
  4030                           ;doprnt.c: 1306: if(val < dpowers[c])
  4031  00F7  082E               	movf	sprintf@c^(0+128),w
  4032  00F8  00A3               	movwf	??_sprintf^(0+128)
  4033  00F9  0723               	addwf	??_sprintf^(0+128),w
  4034  00FA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4035  00FB  0084               	movwf	4
  4036  00FC  120A  158A  200A  120A  118A  	fcall	stringdir
  4037  0101  00A4               	movwf	(??_sprintf+1)^(0+128)
  4038  0102  120A  158A  200A  120A  118A  	fcall	stringdir
  4039  0107  00A5               	movwf	((??_sprintf+1)^(0+128)+1)
  4040  0108  0825               	movf	(??_sprintf+2)^(0+128),w
  4041  0109  022A               	subwf	(sprintf@val+1)^(0+128),w
  4042  010A  1D03               	skipz
  4043  010B  290E               	goto	u4045
  4044  010C  0824               	movf	(??_sprintf+1)^(0+128),w
  4045  010D  0229               	subwf	sprintf@val^(0+128),w
  4046  010E                     u4045:	
  4047  010E  1C03               	btfss	3,0
  4048  010F  2918               	goto	l2901
  4049                           
  4050                           ;doprnt.c: 1307: break;
  4051  0110  3001               	movlw	1
  4052  0111  00A3               	movwf	??_sprintf^(0+128)
  4053  0112  0823               	movf	??_sprintf^(0+128),w
  4054  0113  07AE               	addwf	sprintf@c^(0+128),f
  4055  0114  3005               	movlw	5
  4056  0115  062E               	xorwf	sprintf@c^(0+128),w
  4057  0116  1D03               	btfss	3,2
  4058  0117  28F7               	goto	l2895
  4059  0118                     l2901:	
  4060                           
  4061                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4062  0118  082C               	movf	sprintf@width^(0+128),w
  4063  0119  042D               	iorwf	(sprintf@width+1)^(0+128),w
  4064  011A  1903               	btfsc	3,2
  4065  011B  2926               	goto	l489
  4066  011C  0828               	movf	sprintf@flag^(0+128),w
  4067  011D  3903               	andlw	3
  4068  011E  1903               	btfsc	3,2
  4069  011F  2926               	goto	l489
  4070                           
  4071                           ;doprnt.c: 1346: width--;
  4072  0120  30FF               	movlw	255
  4073  0121  07AC               	addwf	sprintf@width^(0+128),f
  4074  0122  1803               	skipnc
  4075  0123  0AAD               	incf	(sprintf@width+1)^(0+128),f
  4076  0124  30FF               	movlw	255
  4077  0125  07AD               	addwf	(sprintf@width+1)^(0+128),f
  4078  0126                     l489:	
  4079                           
  4080                           ;doprnt.c: 1381: if(width > c)
  4081  0126  082E               	movf	sprintf@c^(0+128),w
  4082  0127  00A3               	movwf	??_sprintf^(0+128)
  4083  0128  01A4               	clrf	(??_sprintf^(0+128)+1)
  4084  0129  1BA3               	btfsc	??_sprintf^(0+128),7
  4085  012A  03A4               	decf	(??_sprintf^(0+128)+1),f
  4086  012B  0824               	movf	(??_sprintf+1)^(0+128),w
  4087  012C  3A80               	xorlw	128
  4088  012D  00A5               	movwf	(??_sprintf+2)^(0+128)
  4089  012E  082D               	movf	(sprintf@width+1)^(0+128),w
  4090  012F  3A80               	xorlw	128
  4091  0130  0225               	subwf	(??_sprintf+2)^(0+128),w
  4092  0131  1D03               	skipz
  4093  0132  2935               	goto	u4085
  4094  0133  082C               	movf	sprintf@width^(0+128),w
  4095  0134  0223               	subwf	??_sprintf^(0+128),w
  4096  0135                     u4085:	
  4097  0135  1803               	skipnc
  4098  0136  2945               	goto	l2909
  4099                           
  4100                           ;doprnt.c: 1382: width -= c;
  4101  0137  1683               	bsf	3,5	;RP0=1, select bank1
  4102  0138  1303               	bcf	3,6	;RP1=0, select bank1
  4103  0139  082E               	movf	sprintf@c^(0+128),w
  4104  013A  00A3               	movwf	??_sprintf^(0+128)
  4105  013B  01A4               	clrf	(??_sprintf^(0+128)+1)
  4106  013C  1BA3               	btfsc	??_sprintf^(0+128),7
  4107  013D  03A4               	decf	(??_sprintf^(0+128)+1),f
  4108  013E  0823               	movf	??_sprintf^(0+128),w
  4109  013F  02AC               	subwf	sprintf@width^(0+128),f
  4110  0140  0824               	movf	(??_sprintf+1)^(0+128),w
  4111  0141  1C03               	skipc
  4112  0142  03AD               	decf	(sprintf@width+1)^(0+128),f
  4113  0143  02AD               	subwf	(sprintf@width+1)^(0+128),f
  4114  0144  2949               	goto	l2911
  4115  0145                     l2909:	
  4116                           
  4117                           ;doprnt.c: 1383: else
  4118                           ;doprnt.c: 1384: width = 0;
  4119  0145  1683               	bsf	3,5	;RP0=1, select bank1
  4120  0146  1303               	bcf	3,6	;RP1=0, select bank1
  4121  0147  01AC               	clrf	sprintf@width^(0+128)
  4122  0148  01AD               	clrf	(sprintf@width+1)^(0+128)
  4123  0149                     l2911:	
  4124                           
  4125                           ;doprnt.c: 1422: {
  4126                           ;doprnt.c: 1424: if(width
  4127                           ;doprnt.c: 1428: )
  4128  0149  082C               	movf	sprintf@width^(0+128),w
  4129  014A  042D               	iorwf	(sprintf@width+1)^(0+128),w
  4130  014B  1903               	btfsc	3,2
  4131  014C  2962               	goto	l2919
  4132  014D                     l2913:	
  4133                           ;doprnt.c: 1429: do
  4134                           
  4135                           
  4136                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4137  014D  3020               	movlw	32
  4138  014E  00A3               	movwf	??_sprintf^(0+128)
  4139  014F  082B               	movf	sprintf@sp^(0+128),w
  4140  0150  0084               	movwf	4
  4141  0151  0823               	movf	??_sprintf^(0+128),w
  4142  0152  1383               	bcf	3,7	;select IRP bank0
  4143  0153  0080               	movwf	0
  4144  0154  3001               	movlw	1
  4145  0155  00A3               	movwf	??_sprintf^(0+128)
  4146  0156  0823               	movf	??_sprintf^(0+128),w
  4147  0157  07AB               	addwf	sprintf@sp^(0+128),f
  4148                           
  4149                           ;doprnt.c: 1431: while(--width);
  4150  0158  30FF               	movlw	255
  4151  0159  07AC               	addwf	sprintf@width^(0+128),f
  4152  015A  1803               	skipnc
  4153  015B  0AAD               	incf	(sprintf@width+1)^(0+128),f
  4154  015C  30FF               	movlw	255
  4155  015D  07AD               	addwf	(sprintf@width+1)^(0+128),f
  4156  015E  082C               	movf	sprintf@width^(0+128),w
  4157  015F  042D               	iorwf	(sprintf@width+1)^(0+128),w
  4158  0160  1D03               	btfss	3,2
  4159  0161  294D               	goto	l2913
  4160  0162                     l2919:	
  4161                           
  4162                           ;doprnt.c: 1438: if(flag & 0x03)
  4163  0162  0828               	movf	sprintf@flag^(0+128),w
  4164  0163  3903               	andlw	3
  4165  0164  1903               	btfsc	3,2
  4166  0165  2971               	goto	l2925
  4167                           
  4168                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4169  0166  302D               	movlw	45
  4170  0167  00A3               	movwf	??_sprintf^(0+128)
  4171  0168  082B               	movf	sprintf@sp^(0+128),w
  4172  0169  0084               	movwf	4
  4173  016A  0823               	movf	??_sprintf^(0+128),w
  4174  016B  1383               	bcf	3,7	;select IRP bank0
  4175  016C  0080               	movwf	0
  4176  016D  3001               	movlw	1
  4177  016E  00A3               	movwf	??_sprintf^(0+128)
  4178  016F  0823               	movf	??_sprintf^(0+128),w
  4179  0170  07AB               	addwf	sprintf@sp^(0+128),f
  4180  0171                     l2925:	
  4181                           
  4182                           ;doprnt.c: 1469: }
  4183                           ;doprnt.c: 1472: prec = c;
  4184  0171  082E               	movf	sprintf@c^(0+128),w
  4185  0172  00A3               	movwf	??_sprintf^(0+128)
  4186  0173  0823               	movf	??_sprintf^(0+128),w
  4187  0174  00A7               	movwf	sprintf@prec^(0+128)
  4188  0175                     l2933:	
  4189                           ;doprnt.c: 1474: while(prec--) {
  4190                           
  4191  0175  30FF               	movlw	255
  4192  0176  00A3               	movwf	??_sprintf^(0+128)
  4193  0177  0823               	movf	??_sprintf^(0+128),w
  4194  0178  07A7               	addwf	sprintf@prec^(0+128),f
  4195  0179  0A27               	incf	sprintf@prec^(0+128),w
  4196  017A  1903               	btfsc	3,2
  4197  017B  2842               	goto	l2935
  4198                           
  4199                           ;doprnt.c: 1478: {
  4200                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4201  017C  300A               	movlw	10
  4202  017D  1283               	bcf	3,5	;RP0=0, select bank0
  4203  017E  1303               	bcf	3,6	;RP1=0, select bank0
  4204  017F  00A7               	movwf	___lwmod@divisor
  4205  0180  3000               	movlw	0
  4206  0181  00A8               	movwf	___lwmod@divisor+1
  4207  0182  1683               	bsf	3,5	;RP0=1, select bank1
  4208  0183  1303               	bcf	3,6	;RP1=0, select bank1
  4209  0184  0827               	movf	sprintf@prec^(0+128),w
  4210  0185  00A3               	movwf	??_sprintf^(0+128)
  4211  0186  0723               	addwf	??_sprintf^(0+128),w
  4212  0187  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4213  0188  0084               	movwf	4
  4214  0189  120A  158A  200A  120A  118A  	fcall	stringdir
  4215  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4216  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0190  00A0               	movwf	___lwdiv@divisor
  4218  0191  120A  158A  200A  120A  118A  	fcall	stringdir
  4219  0196  00A1               	movwf	___lwdiv@divisor+1
  4220  0197  1683               	bsf	3,5	;RP0=1, select bank1
  4221  0198  1303               	bcf	3,6	;RP1=0, select bank1
  4222  0199  082A               	movf	(sprintf@val+1)^(0+128),w
  4223  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4224  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4225  019C  00A3               	movwf	___lwdiv@dividend+1
  4226  019D  1683               	bsf	3,5	;RP0=1, select bank1
  4227  019E  1303               	bcf	3,6	;RP1=0, select bank1
  4228  019F  0829               	movf	sprintf@val^(0+128),w
  4229  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4230  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4231  01A2  00A2               	movwf	___lwdiv@dividend
  4232  01A3  120A  158A  25D0  120A  118A  	fcall	___lwdiv
  4233  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  4234  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  4235  01AA  0821               	movf	?___lwdiv+1,w
  4236  01AB  00AA               	movwf	___lwmod@dividend+1
  4237  01AC  0820               	movf	?___lwdiv,w
  4238  01AD  00A9               	movwf	___lwmod@dividend
  4239  01AE  120A  158A  252F  120A  118A  	fcall	___lwmod
  4240  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4241  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4242  01B5  0827               	movf	?___lwmod,w
  4243  01B6  3E30               	addlw	48
  4244  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  4245  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  4246  01B9  00A4               	movwf	(??_sprintf+1)^(0+128)
  4247  01BA  0824               	movf	(??_sprintf+1)^(0+128),w
  4248  01BB  00AE               	movwf	sprintf@c^(0+128)
  4249                           
  4250                           ;doprnt.c: 1523: }
  4251                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4252  01BC  082E               	movf	sprintf@c^(0+128),w
  4253  01BD  00A3               	movwf	??_sprintf^(0+128)
  4254  01BE  082B               	movf	sprintf@sp^(0+128),w
  4255  01BF  0084               	movwf	4
  4256  01C0  0823               	movf	??_sprintf^(0+128),w
  4257  01C1  1383               	bcf	3,7	;select IRP bank0
  4258  01C2  0080               	movwf	0
  4259  01C3  3001               	movlw	1
  4260  01C4  00A3               	movwf	??_sprintf^(0+128)
  4261  01C5  0823               	movf	??_sprintf^(0+128),w
  4262  01C6  07AB               	addwf	sprintf@sp^(0+128),f
  4263  01C7  2975               	goto	l2933
  4264  01C8                     l2937:	
  4265                           ;doprnt.c: 1525: }
  4266                           ;doprnt.c: 1533: }
  4267                           ;doprnt.c: 1535: alldone:
  4268                           
  4269                           
  4270                           ;doprnt.c: 1538: *sp = 0;
  4271  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  4272  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  4273  01CA  082B               	movf	sprintf@sp^(0+128),w
  4274  01CB  0084               	movwf	4
  4275  01CC  1383               	bcf	3,7	;select IRP bank0
  4276  01CD  0180               	clrf	0
  4277  01CE  0008               	return
  4278  01CF                     __end_of_sprintf:	
  4279                           ;doprnt.c: 1540: return 0;
  4280                           ;	Return value of _sprintf is never used
  4281                           
  4282                           
  4283                           	psect	text10
  4284  0C03                     __ptext10:	
  4285 ;; *************** function _isdigit *****************
  4286 ;; Defined at:
  4287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  c               1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  c               1    5[COMMON] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;		None               void
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         2       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0
  4304 ;;      Totals:         2       0       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    1
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_sprintf
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _isdigit
  4317  0C03                     _isdigit:	
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4321                           ;isdigit@c stored from wreg
  4322  0C03  00F5               	movwf	isdigit@c
  4323  0C04  01F4               	clrf	_isdigit$1446
  4324  0C05  303A               	movlw	58
  4325  0C06  0275               	subwf	isdigit@c,w
  4326  0C07  1803               	skipnc
  4327  0C08  2C0F               	goto	l1891
  4328  0C09  3030               	movlw	48
  4329  0C0A  0275               	subwf	isdigit@c,w
  4330  0C0B  1C03               	skipc
  4331  0C0C  2C0F               	goto	l1891
  4332  0C0D  01F4               	clrf	_isdigit$1446
  4333  0C0E  0AF4               	incf	_isdigit$1446,f
  4334  0C0F                     l1891:	
  4335  0C0F  0C74               	rrf	_isdigit$1446,w
  4336  0C10  0008               	return
  4337  0C11                     __end_of_isdigit:	
  4338                           
  4339                           	psect	text11
  4340  0C8B                     __ptext11:	
  4341 ;; *************** function ___wmul *****************
  4342 ;; Defined at:
  4343 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4346 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  product         2    4[COMMON] unsigned int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  2    0[BANK0 ] unsigned int 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       4       0       0       0
  4359 ;;      Locals:         2       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0
  4361 ;;      Totals:         2       4       0       0       0
  4362 ;;Total ram usage:        6 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_sprintf
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function ___wmul
  4374  0C8B                     ___wmul:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4378  0C8B  01F4               	clrf	___wmul@product
  4379  0C8C  01F5               	clrf	___wmul@product+1
  4380  0C8D                     l2551:	
  4381  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  4383  0C8F  1C20               	btfss	___wmul@multiplier,0
  4384  0C90  2C97               	goto	l584
  4385  0C91  0822               	movf	___wmul@multiplicand,w
  4386  0C92  07F4               	addwf	___wmul@product,f
  4387  0C93  1803               	skipnc
  4388  0C94  0AF5               	incf	___wmul@product+1,f
  4389  0C95  0823               	movf	___wmul@multiplicand+1,w
  4390  0C96  07F5               	addwf	___wmul@product+1,f
  4391  0C97                     l584:	
  4392  0C97  3001               	movlw	1
  4393  0C98                     u3235:	
  4394  0C98  1003               	clrc
  4395  0C99  0DA2               	rlf	___wmul@multiplicand,f
  4396  0C9A  0DA3               	rlf	___wmul@multiplicand+1,f
  4397  0C9B  3EFF               	addlw	-1
  4398  0C9C  1D03               	skipz
  4399  0C9D  2C98               	goto	u3235
  4400  0C9E  3001               	movlw	1
  4401  0C9F                     u3245:	
  4402  0C9F  1003               	clrc
  4403  0CA0  0CA1               	rrf	___wmul@multiplier+1,f
  4404  0CA1  0CA0               	rrf	___wmul@multiplier,f
  4405  0CA2  3EFF               	addlw	-1
  4406  0CA3  1D03               	skipz
  4407  0CA4  2C9F               	goto	u3245
  4408  0CA5  0820               	movf	___wmul@multiplier,w
  4409  0CA6  0421               	iorwf	___wmul@multiplier+1,w
  4410  0CA7  1D03               	btfss	3,2
  4411  0CA8  2C8D               	goto	l2551
  4412  0CA9  0875               	movf	___wmul@product+1,w
  4413  0CAA  00A1               	movwf	?___wmul+1
  4414  0CAB  0874               	movf	___wmul@product,w
  4415  0CAC  00A0               	movwf	?___wmul
  4416  0CAD  0008               	return
  4417  0CAE                     __end_of___wmul:	
  4418                           
  4419                           	psect	text12
  4420  0D2F                     __ptext12:	
  4421 ;; *************** function ___lwmod *****************
  4422 ;; Defined at:
  4423 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  divisor         2    7[BANK0 ] unsigned int 
  4426 ;;  dividend        2    9[BANK0 ] unsigned int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  counter         1   11[BANK0 ] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    7[BANK0 ] unsigned int 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4438 ;;      Params:         0       4       0       0       0
  4439 ;;      Locals:         0       1       0       0       0
  4440 ;;      Temps:          1       0       0       0       0
  4441 ;;      Totals:         1       5       0       0       0
  4442 ;;Total ram usage:        6 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_sprintf
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function ___lwmod
  4454  0D2F                     ___lwmod:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4458  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  4459  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  4460  0D31  0827               	movf	___lwmod@divisor,w
  4461  0D32  0428               	iorwf	___lwmod@divisor+1,w
  4462  0D33  1903               	btfsc	3,2
  4463  0D34  2D5E               	goto	l2195
  4464  0D35  01AB               	clrf	___lwmod@counter
  4465  0D36  0AAB               	incf	___lwmod@counter,f
  4466  0D37                     l2185:	
  4467  0D37  1BA8               	btfsc	___lwmod@divisor+1,7
  4468  0D38  2D45               	goto	l2187
  4469  0D39  3001               	movlw	1
  4470  0D3A                     u2605:	
  4471  0D3A  1003               	clrc
  4472  0D3B  0DA7               	rlf	___lwmod@divisor,f
  4473  0D3C  0DA8               	rlf	___lwmod@divisor+1,f
  4474  0D3D  3EFF               	addlw	-1
  4475  0D3E  1D03               	skipz
  4476  0D3F  2D3A               	goto	u2605
  4477  0D40  3001               	movlw	1
  4478  0D41  00F5               	movwf	??___lwmod
  4479  0D42  0875               	movf	??___lwmod,w
  4480  0D43  07AB               	addwf	___lwmod@counter,f
  4481  0D44  2D37               	goto	l2185
  4482  0D45                     l2187:	
  4483  0D45  0828               	movf	___lwmod@divisor+1,w
  4484  0D46  022A               	subwf	___lwmod@dividend+1,w
  4485  0D47  1D03               	skipz
  4486  0D48  2D4B               	goto	u2625
  4487  0D49  0827               	movf	___lwmod@divisor,w
  4488  0D4A  0229               	subwf	___lwmod@dividend,w
  4489  0D4B                     u2625:	
  4490  0D4B  1C03               	skipc
  4491  0D4C  2D53               	goto	l2191
  4492  0D4D  0827               	movf	___lwmod@divisor,w
  4493  0D4E  02A9               	subwf	___lwmod@dividend,f
  4494  0D4F  0828               	movf	___lwmod@divisor+1,w
  4495  0D50  1C03               	skipc
  4496  0D51  03AA               	decf	___lwmod@dividend+1,f
  4497  0D52  02AA               	subwf	___lwmod@dividend+1,f
  4498  0D53                     l2191:	
  4499  0D53  3001               	movlw	1
  4500  0D54                     u2635:	
  4501  0D54  1003               	clrc
  4502  0D55  0CA8               	rrf	___lwmod@divisor+1,f
  4503  0D56  0CA7               	rrf	___lwmod@divisor,f
  4504  0D57  3EFF               	addlw	-1
  4505  0D58  1D03               	skipz
  4506  0D59  2D54               	goto	u2635
  4507  0D5A  3001               	movlw	1
  4508  0D5B  02AB               	subwf	___lwmod@counter,f
  4509  0D5C  1D03               	btfss	3,2
  4510  0D5D  2D45               	goto	l2187
  4511  0D5E                     l2195:	
  4512  0D5E  082A               	movf	___lwmod@dividend+1,w
  4513  0D5F  00A8               	movwf	?___lwmod+1
  4514  0D60  0829               	movf	___lwmod@dividend,w
  4515  0D61  00A7               	movwf	?___lwmod
  4516  0D62  0008               	return
  4517  0D63                     __end_of___lwmod:	
  4518                           
  4519                           	psect	text13
  4520  0DD0                     __ptext13:	
  4521 ;; *************** function ___lwdiv *****************
  4522 ;; Defined at:
  4523 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  divisor         2    0[BANK0 ] unsigned int 
  4526 ;;  dividend        2    2[BANK0 ] unsigned int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  quotient        2    5[BANK0 ] unsigned int 
  4529 ;;  counter         1    4[BANK0 ] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    0[BANK0 ] unsigned int 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         0       4       0       0       0
  4540 ;;      Locals:         0       3       0       0       0
  4541 ;;      Temps:          1       0       0       0       0
  4542 ;;      Totals:         1       7       0       0       0
  4543 ;;Total ram usage:        8 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    1
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_temp_Measurement
  4550 ;;		_sprintf
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function ___lwdiv
  4556  0DD0                     ___lwdiv:	
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4560  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4561  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0DD2  01A5               	clrf	___lwdiv@quotient
  4563  0DD3  01A6               	clrf	___lwdiv@quotient+1
  4564  0DD4  0820               	movf	___lwdiv@divisor,w
  4565  0DD5  0421               	iorwf	___lwdiv@divisor+1,w
  4566  0DD6  1903               	btfsc	3,2
  4567  0DD7  2E09               	goto	l2761
  4568  0DD8  01A4               	clrf	___lwdiv@counter
  4569  0DD9  0AA4               	incf	___lwdiv@counter,f
  4570  0DDA                     l2749:	
  4571  0DDA  1BA1               	btfsc	___lwdiv@divisor+1,7
  4572  0DDB  2DE8               	goto	l2751
  4573  0DDC  3001               	movlw	1
  4574  0DDD                     u3785:	
  4575  0DDD  1003               	clrc
  4576  0DDE  0DA0               	rlf	___lwdiv@divisor,f
  4577  0DDF  0DA1               	rlf	___lwdiv@divisor+1,f
  4578  0DE0  3EFF               	addlw	-1
  4579  0DE1  1D03               	skipz
  4580  0DE2  2DDD               	goto	u3785
  4581  0DE3  3001               	movlw	1
  4582  0DE4  00F4               	movwf	??___lwdiv
  4583  0DE5  0874               	movf	??___lwdiv,w
  4584  0DE6  07A4               	addwf	___lwdiv@counter,f
  4585  0DE7  2DDA               	goto	l2749
  4586  0DE8                     l2751:	
  4587  0DE8  3001               	movlw	1
  4588  0DE9                     u3805:	
  4589  0DE9  1003               	clrc
  4590  0DEA  0DA5               	rlf	___lwdiv@quotient,f
  4591  0DEB  0DA6               	rlf	___lwdiv@quotient+1,f
  4592  0DEC  3EFF               	addlw	-1
  4593  0DED  1D03               	skipz
  4594  0DEE  2DE9               	goto	u3805
  4595  0DEF  0821               	movf	___lwdiv@divisor+1,w
  4596  0DF0  0223               	subwf	___lwdiv@dividend+1,w
  4597  0DF1  1D03               	skipz
  4598  0DF2  2DF5               	goto	u3815
  4599  0DF3  0820               	movf	___lwdiv@divisor,w
  4600  0DF4  0222               	subwf	___lwdiv@dividend,w
  4601  0DF5                     u3815:	
  4602  0DF5  1C03               	skipc
  4603  0DF6  2DFE               	goto	l2757
  4604  0DF7  0820               	movf	___lwdiv@divisor,w
  4605  0DF8  02A2               	subwf	___lwdiv@dividend,f
  4606  0DF9  0821               	movf	___lwdiv@divisor+1,w
  4607  0DFA  1C03               	skipc
  4608  0DFB  03A3               	decf	___lwdiv@dividend+1,f
  4609  0DFC  02A3               	subwf	___lwdiv@dividend+1,f
  4610  0DFD  1425               	bsf	___lwdiv@quotient,0
  4611  0DFE                     l2757:	
  4612  0DFE  3001               	movlw	1
  4613  0DFF                     u3825:	
  4614  0DFF  1003               	clrc
  4615  0E00  0CA1               	rrf	___lwdiv@divisor+1,f
  4616  0E01  0CA0               	rrf	___lwdiv@divisor,f
  4617  0E02  3EFF               	addlw	-1
  4618  0E03  1D03               	skipz
  4619  0E04  2DFF               	goto	u3825
  4620  0E05  3001               	movlw	1
  4621  0E06  02A4               	subwf	___lwdiv@counter,f
  4622  0E07  1D03               	btfss	3,2
  4623  0E08  2DE8               	goto	l2751
  4624  0E09                     l2761:	
  4625  0E09  0826               	movf	___lwdiv@quotient+1,w
  4626  0E0A  00A1               	movwf	?___lwdiv+1
  4627  0E0B  0825               	movf	___lwdiv@quotient,w
  4628  0E0C  00A0               	movwf	?___lwdiv
  4629  0E0D  0008               	return
  4630  0E0E                     __end_of___lwdiv:	
  4631                           
  4632                           	psect	text14
  4633  0E8F                     __ptext14:	
  4634 ;; *************** function _Lcd_write *****************
  4635 ;; Defined at:
  4636 ;;		line 95 in file "lcd_Config.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  string          2    3[BANK0 ] PTR unsigned char 
  4639 ;;		 -> sTemperature(2), STR_3(13), 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  i               2    8[BANK0 ] int 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4651 ;;      Params:         0       2       0       0       0
  4652 ;;      Locals:         0       2       0       0       0
  4653 ;;      Temps:          0       3       0       0       0
  4654 ;;      Totals:         0       7       0       0       0
  4655 ;;Total ram usage:        7 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    3
  4658 ;; This function calls:
  4659 ;;		_Lcd_Write_Char
  4660 ;; This function is called by:
  4661 ;;		_temp_Display
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _Lcd_write
  4667  0E8F                     _Lcd_write:	
  4668                           
  4669                           ;lcd_Config.c: 96: int i;
  4670                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4671                           
  4672                           ;incstack = 0
  4673                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4674  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0E91  01A8               	clrf	Lcd_write@i
  4677  0E92  01A9               	clrf	Lcd_write@i+1
  4678  0E93                     l2825:	
  4679  0E93  0828               	movf	Lcd_write@i,w
  4680  0E94  0723               	addwf	Lcd_write@string,w
  4681  0E95  00A6               	movwf	??_Lcd_write+1
  4682  0E96  0824               	movf	Lcd_write@string+1,w
  4683  0E97  00A5               	movwf	??_Lcd_write
  4684  0E98  1803               	skipnc
  4685  0E99  0AA5               	incf	??_Lcd_write,f
  4686  0E9A  1BA8               	btfsc	Lcd_write@i,7
  4687  0E9B  03A5               	decf	??_Lcd_write,f
  4688  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0E9E  0825               	movf	??_Lcd_write,w
  4691  0E9F  00A7               	movwf	??_Lcd_write+2
  4692  0EA0  0827               	movf	??_Lcd_write+2,w
  4693  0EA1  00FF               	movwf	127
  4694  0EA2  0826               	movf	??_Lcd_write+1,w
  4695  0EA3  0084               	movwf	4
  4696  0EA4  120A  158A  2000  120A  158A  	fcall	stringtab
  4697  0EA9  3A00               	xorlw	0
  4698  0EAA  1903               	btfsc	3,2
  4699  0EAB  0008               	return
  4700                           
  4701                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4702  0EAC  0828               	movf	Lcd_write@i,w
  4703  0EAD  0723               	addwf	Lcd_write@string,w
  4704  0EAE  00A6               	movwf	??_Lcd_write+1
  4705  0EAF  0824               	movf	Lcd_write@string+1,w
  4706  0EB0  00A5               	movwf	??_Lcd_write
  4707  0EB1  1803               	skipnc
  4708  0EB2  0AA5               	incf	??_Lcd_write,f
  4709  0EB3  1BA8               	btfsc	Lcd_write@i,7
  4710  0EB4  03A5               	decf	??_Lcd_write,f
  4711  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  4712  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  4713  0EB7  0825               	movf	??_Lcd_write,w
  4714  0EB8  00A7               	movwf	??_Lcd_write+2
  4715  0EB9  0827               	movf	??_Lcd_write+2,w
  4716  0EBA  00FF               	movwf	127
  4717  0EBB  0826               	movf	??_Lcd_write+1,w
  4718  0EBC  0084               	movwf	4
  4719  0EBD  120A  158A  2000  120A  158A  	fcall	stringtab
  4720  0EC2  120A  158A  2599  120A  158A  	fcall	_Lcd_Write_Char
  4721  0EC7  3001               	movlw	1
  4722  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0ECA  07A8               	addwf	Lcd_write@i,f
  4725  0ECB  1803               	skipnc
  4726  0ECC  0AA9               	incf	Lcd_write@i+1,f
  4727  0ECD  3000               	movlw	0
  4728  0ECE  07A9               	addwf	Lcd_write@i+1,f
  4729  0ECF  2E93               	goto	l2825
  4730  0ED0                     __end_of_Lcd_write:	
  4731                           
  4732                           	psect	text15
  4733  0D99                     __ptext15:	
  4734 ;; *************** function _Lcd_Write_Char *****************
  4735 ;; Defined at:
  4736 ;;		line 80 in file "lcd_Config.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  a               1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  a               1    2[BANK0 ] unsigned char 
  4741 ;;  y               1    1[BANK0 ] unsigned char 
  4742 ;;  temp            1    0[BANK0 ] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       0       0       0       0
  4753 ;;      Locals:         0       3       0       0       0
  4754 ;;      Temps:          1       0       0       0       0
  4755 ;;      Totals:         1       3       0       0       0
  4756 ;;Total ram usage:        4 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    2
  4759 ;; This function calls:
  4760 ;;		_Lcd_Port
  4761 ;; This function is called by:
  4762 ;;		_Lcd_write
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _Lcd_Write_Char
  4768  0D99                     _Lcd_Write_Char:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4772                           ;Lcd_Write_Char@a stored from wreg
  4773  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0D9B  00A2               	movwf	Lcd_Write_Char@a
  4776                           
  4777                           ;lcd_Config.c: 81: char temp, y;
  4778                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4779  0D9C  0822               	movf	Lcd_Write_Char@a,w
  4780  0D9D  390F               	andlw	15
  4781  0D9E  00F5               	movwf	??_Lcd_Write_Char
  4782  0D9F  0875               	movf	??_Lcd_Write_Char,w
  4783  0DA0  00A0               	movwf	Lcd_Write_Char@temp
  4784                           
  4785                           ;lcd_Config.c: 83: y = a & 0xF0;
  4786  0DA1  0822               	movf	Lcd_Write_Char@a,w
  4787  0DA2  39F0               	andlw	240
  4788  0DA3  00F5               	movwf	??_Lcd_Write_Char
  4789  0DA4  0875               	movf	??_Lcd_Write_Char,w
  4790  0DA5  00A1               	movwf	Lcd_Write_Char@y
  4791                           
  4792                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4793  0DA6  1686               	bsf	6,5	;volatile
  4794                           
  4795                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4796  0DA7  0821               	movf	Lcd_Write_Char@y,w
  4797  0DA8  00F5               	movwf	??_Lcd_Write_Char
  4798  0DA9  3004               	movlw	4
  4799  0DAA                     u3205:	
  4800  0DAA  1003               	clrc
  4801  0DAB  0CF5               	rrf	??_Lcd_Write_Char,f
  4802  0DAC  3EFF               	addlw	-1
  4803  0DAD  1D03               	skipz
  4804  0DAE  2DAA               	goto	u3205
  4805  0DAF  0875               	movf	??_Lcd_Write_Char,w
  4806  0DB0  120A  158A  2471  120A  158A  	fcall	_Lcd_Port
  4807                           
  4808                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4809  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0DB7  1606               	bsf	6,4	;volatile
  4812                           
  4813                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4814  0DB8  300D               	movlw	13
  4815  0DB9  00F5               	movwf	??_Lcd_Write_Char
  4816  0DBA                     u4227:	
  4817  0DBA  0BF5               	decfsz	??_Lcd_Write_Char,f
  4818  0DBB  2DBA               	goto	u4227
  4819                           
  4820                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4821  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  4822  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  4823  0DBE  1206               	bcf	6,4	;volatile
  4824                           
  4825                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4826  0DBF  0820               	movf	Lcd_Write_Char@temp,w
  4827  0DC0  120A  158A  2471  120A  158A  	fcall	_Lcd_Port
  4828                           
  4829                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4830  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  4831  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  4832  0DC7  1606               	bsf	6,4	;volatile
  4833                           
  4834                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4835  0DC8  300D               	movlw	13
  4836  0DC9  00F5               	movwf	??_Lcd_Write_Char
  4837  0DCA                     u4237:	
  4838  0DCA  0BF5               	decfsz	??_Lcd_Write_Char,f
  4839  0DCB  2DCA               	goto	u4237
  4840                           
  4841                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4842  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0DCE  1206               	bcf	6,4	;volatile
  4845  0DCF  0008               	return
  4846  0DD0                     __end_of_Lcd_Write_Char:	
  4847                           
  4848                           	psect	text16
  4849  0FAE                     __ptext16:	
  4850 ;; *************** function _Lcd_Set_Cursor *****************
  4851 ;; Defined at:
  4852 ;;		line 45 in file "lcd_Config.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  raw             1    wreg     unsigned char 
  4855 ;;  column          1    2[BANK0 ] unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  raw             1    5[BANK0 ] unsigned char 
  4858 ;;  temp            1    8[BANK0 ] unsigned char 
  4859 ;;  y               1    7[BANK0 ] unsigned char 
  4860 ;;  z               1    6[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       1       0       0       0
  4871 ;;      Locals:         0       4       0       0       0
  4872 ;;      Temps:          0       2       0       0       0
  4873 ;;      Totals:         0       7       0       0       0
  4874 ;;Total ram usage:        7 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    3
  4877 ;; This function calls:
  4878 ;;		_Lcd_Cmd
  4879 ;; This function is called by:
  4880 ;;		_temp_Display
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           
  4885                           ;psect for function _Lcd_Set_Cursor
  4886  0FAE                     _Lcd_Set_Cursor:	
  4887                           
  4888                           ;incstack = 0
  4889                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4890                           ;Lcd_Set_Cursor@raw stored from wreg
  4891  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0FB0  00A5               	movwf	Lcd_Set_Cursor@raw
  4894                           
  4895                           ;lcd_Config.c: 46: char temp, z, y;
  4896                           ;lcd_Config.c: 47: if (raw == 1) {
  4897  0FB1  0325               	decf	Lcd_Set_Cursor@raw,w
  4898  0FB2  1D03               	btfss	3,2
  4899  0FB3  2FD7               	goto	l2809
  4900                           
  4901                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4902  0FB4  0822               	movf	Lcd_Set_Cursor@column,w
  4903  0FB5  3E7F               	addlw	127
  4904  0FB6  00A3               	movwf	??_Lcd_Set_Cursor
  4905  0FB7  0823               	movf	??_Lcd_Set_Cursor,w
  4906  0FB8  00A8               	movwf	Lcd_Set_Cursor@temp
  4907                           
  4908                           ;lcd_Config.c: 49: z = temp >> 4;
  4909  0FB9  0828               	movf	Lcd_Set_Cursor@temp,w
  4910  0FBA  00A3               	movwf	??_Lcd_Set_Cursor
  4911  0FBB  3004               	movlw	4
  4912  0FBC                     u3895:	
  4913  0FBC  1003               	clrc
  4914  0FBD  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4915  0FBE  3EFF               	addlw	-1
  4916  0FBF  1D03               	skipz
  4917  0FC0  2FBC               	goto	u3895
  4918  0FC1  0823               	movf	??_Lcd_Set_Cursor,w
  4919  0FC2  00A4               	movwf	??_Lcd_Set_Cursor+1
  4920  0FC3  0824               	movf	??_Lcd_Set_Cursor+1,w
  4921  0FC4  00A6               	movwf	Lcd_Set_Cursor@z
  4922                           
  4923                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4924  0FC5  0828               	movf	Lcd_Set_Cursor@temp,w
  4925  0FC6  390F               	andlw	15
  4926  0FC7  00A3               	movwf	??_Lcd_Set_Cursor
  4927  0FC8  0823               	movf	??_Lcd_Set_Cursor,w
  4928  0FC9  00A7               	movwf	Lcd_Set_Cursor@y
  4929                           
  4930                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4931  0FCA  0826               	movf	Lcd_Set_Cursor@z,w
  4932  0FCB  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  4933                           
  4934                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4935  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4936  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4937  0FD2  0827               	movf	Lcd_Set_Cursor@y,w
  4938  0FD3  120A  118A  27E0   	fcall	_Lcd_Cmd
  4939                           
  4940                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4941  0FD6  0008               	return
  4942  0FD7                     l2809:	
  4943  0FD7  3002               	movlw	2
  4944  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0FDA  0625               	xorwf	Lcd_Set_Cursor@raw,w
  4947  0FDB  1D03               	btfss	3,2
  4948  0FDC  0008               	return
  4949                           
  4950                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4951  0FDD  0822               	movf	Lcd_Set_Cursor@column,w
  4952  0FDE  3EBF               	addlw	191
  4953  0FDF  00A3               	movwf	??_Lcd_Set_Cursor
  4954  0FE0  0823               	movf	??_Lcd_Set_Cursor,w
  4955  0FE1  00A8               	movwf	Lcd_Set_Cursor@temp
  4956                           
  4957                           ;lcd_Config.c: 55: z = temp >> 4;
  4958  0FE2  0828               	movf	Lcd_Set_Cursor@temp,w
  4959  0FE3  00A3               	movwf	??_Lcd_Set_Cursor
  4960  0FE4  3004               	movlw	4
  4961  0FE5                     u3915:	
  4962  0FE5  1003               	clrc
  4963  0FE6  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4964  0FE7  3EFF               	addlw	-1
  4965  0FE8  1D03               	skipz
  4966  0FE9  2FE5               	goto	u3915
  4967  0FEA  0823               	movf	??_Lcd_Set_Cursor,w
  4968  0FEB  00A4               	movwf	??_Lcd_Set_Cursor+1
  4969  0FEC  0824               	movf	??_Lcd_Set_Cursor+1,w
  4970  0FED  00A6               	movwf	Lcd_Set_Cursor@z
  4971                           
  4972                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4973  0FEE  0828               	movf	Lcd_Set_Cursor@temp,w
  4974  0FEF  390F               	andlw	15
  4975  0FF0  00A3               	movwf	??_Lcd_Set_Cursor
  4976  0FF1  0823               	movf	??_Lcd_Set_Cursor,w
  4977  0FF2  00A7               	movwf	Lcd_Set_Cursor@y
  4978                           
  4979                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  4980  0FF3  0826               	movf	Lcd_Set_Cursor@z,w
  4981  0FF4  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  4982                           
  4983                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  4984  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0FFB  0827               	movf	Lcd_Set_Cursor@y,w
  4987  0FFC  120A  118A  27E0   	fcall	_Lcd_Cmd
  4988  0FFF  0008               	return
  4989  1000                     __end_of_Lcd_Set_Cursor:	
  4990                           
  4991                           	psect	text17
  4992  0F15                     __ptext17:	
  4993 ;; *************** function _system_Initialize *****************
  4994 ;; Defined at:
  4995 ;;		line 10 in file "SYST_Init.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0
  5012 ;;      Totals:         0       0       0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    4
  5016 ;; This function calls:
  5017 ;;		_ADC_Init
  5018 ;;		_Interrupt_Init
  5019 ;;		_Lcd_Init
  5020 ;;		_Oscillator_Init
  5021 ;;		_PWM_DutyCycle
  5022 ;;		_PWM_Init
  5023 ;;		_SPI_Init
  5024 ;;		_TMR0_Init
  5025 ;;		_UART_Init
  5026 ;;		_pinManager
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function _system_Initialize
  5034  0F15                     _system_Initialize:	
  5035                           
  5036                           ;SYST_Init.c: 11: Oscillator_Init();
  5037                           
  5038                           ;incstack = 0
  5039                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5040  0F15  120A  158A  23CF  120A  158A  	fcall	_Oscillator_Init
  5041                           
  5042                           ;SYST_Init.c: 12: Interrupt_Init();
  5043  0F1A  120A  158A  2411  120A  158A  	fcall	_Interrupt_Init
  5044                           
  5045                           ;SYST_Init.c: 13: pinManager();
  5046  0F1F  120A  158A  24D9  120A  158A  	fcall	_pinManager
  5047                           
  5048                           ;SYST_Init.c: 14: Lcd_Init();
  5049  0F24  120A  118A  271F  120A  158A  	fcall	_Lcd_Init
  5050                           
  5051                           ;SYST_Init.c: 15: ADC_Init();
  5052  0F29  120A  158A  2458  120A  158A  	fcall	_ADC_Init
  5053                           
  5054                           ;SYST_Init.c: 16: TMR0_Init();
  5055  0F2E  120A  158A  2420  120A  158A  	fcall	_TMR0_Init
  5056                           
  5057                           ;SYST_Init.c: 17: PWM_Init(10000);
  5058  0F33  3000               	movlw	0
  5059  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0F36  00BC               	movwf	PWM_Init@iFrequency+3
  5062  0F37  3000               	movlw	0
  5063  0F38  00BB               	movwf	PWM_Init@iFrequency+2
  5064  0F39  3027               	movlw	39
  5065  0F3A  00BA               	movwf	PWM_Init@iFrequency+1
  5066  0F3B  3010               	movlw	16
  5067  0F3C  00B9               	movwf	PWM_Init@iFrequency
  5068  0F3D  120A  158A  26D0  120A  158A  	fcall	_PWM_Init
  5069                           
  5070                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  5071  0F42  3000               	movlw	0
  5072  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0F45  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5075  0F46  3000               	movlw	0
  5076  0F47  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5077  0F48  3000               	movlw	0
  5078  0F49  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5079  0F4A  3046               	movlw	70
  5080  0F4B  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5081  0F4C  120A  118A  25D9  120A  158A  	fcall	_PWM_DutyCycle
  5082                           
  5083                           ;SYST_Init.c: 19: SPI_Init();
  5084  0F51  120A  158A  23E8  120A  158A  	fcall	_SPI_Init
  5085                           
  5086                           ;SYST_Init.c: 20: UART_Init(9600);
  5087  0F56  3080               	movlw	128
  5088  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0F59  00B9               	movwf	UART_Init@baudRate
  5091  0F5A  3025               	movlw	37
  5092  0F5B  00BA               	movwf	UART_Init@baudRate+1
  5093  0F5C  120A  158A  260E   	fcall	_UART_Init
  5094  0F5F  0008               	return
  5095  0F60                     __end_of_system_Initialize:	
  5096                           
  5097                           	psect	text18
  5098  0CD9                     __ptext18:	
  5099 ;; *************** function _pinManager *****************
  5100 ;; Defined at:
  5101 ;;		line 19 in file "pin_Manager.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		status,2
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5115 ;;      Params:         0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0
  5118 ;;      Totals:         0       0       0       0       0
  5119 ;;Total ram usage:        0 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    1
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_system_Initialize
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _pinManager
  5131  0CD9                     _pinManager:	
  5132                           
  5133                           ;pin_Manager.c: 21: TRISD = 0;
  5134                           
  5135                           ;incstack = 0
  5136                           ; Regs used in _pinManager: [status,2]
  5137  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0CDA  1303               	bcf	3,6	;RP1=0, select bank1
  5139  0CDB  0188               	clrf	8	;volatile
  5140                           
  5141                           ;pin_Manager.c: 23: ANSELH = 0;
  5142  0CDC  1683               	bsf	3,5	;RP0=1, select bank3
  5143  0CDD  1703               	bsf	3,6	;RP1=1, select bank3
  5144  0CDE  0189               	clrf	9	;volatile
  5145                           
  5146                           ;pin_Manager.c: 24: TRISB = 0;
  5147  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  5148  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  5149  0CE1  0186               	clrf	6	;volatile
  5150                           
  5151                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  5152  0CE2  1706               	bsf	6,6	;volatile
  5153                           
  5154                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  5155  0CE3  1786               	bsf	6,7	;volatile
  5156                           
  5157                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  5158  0CE4  1107               	bcf	7,2	;volatile
  5159                           
  5160                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  5161  0CE5  1683               	bsf	3,5	;RP0=1, select bank3
  5162  0CE6  1703               	bsf	3,6	;RP1=1, select bank3
  5163  0CE7  1088               	bcf	8,1	;volatile
  5164                           
  5165                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  5166  0CE8  1108               	bcf	8,2	;volatile
  5167                           
  5168                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  5169  0CE9  1188               	bcf	8,3	;volatile
  5170                           
  5171                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  5172  0CEA  1208               	bcf	8,4	;volatile
  5173                           
  5174                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  5175  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  5176  0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  5177  0CED  1085               	bcf	5,1	;volatile
  5178                           
  5179                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  5180  0CEE  1105               	bcf	5,2	;volatile
  5181                           
  5182                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  5183  0CEF  1185               	bcf	5,3	;volatile
  5184                           
  5185                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  5186  0CF0  1205               	bcf	5,4	;volatile
  5187                           
  5188                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  5189  0CF1  1683               	bsf	3,5	;RP0=1, select bank3
  5190  0CF2  1703               	bsf	3,6	;RP1=1, select bank3
  5191  0CF3  1408               	bsf	8,0	;volatile
  5192                           
  5193                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  5194  0CF4  1288               	bcf	8,5	;volatile
  5195                           
  5196                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  5197  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  5198  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  5199  0CF7  1405               	bsf	5,0	;volatile
  5200                           
  5201                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  5202  0CF8  1287               	bcf	7,5	;volatile
  5203                           
  5204                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  5205  0CF9  1607               	bsf	7,4	;volatile
  5206                           
  5207                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  5208  0CFA  1285               	bcf	5,5	;volatile
  5209                           
  5210                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  5211  0CFB  1187               	bcf	7,3	;volatile
  5212                           
  5213                           ;pin_Manager.c: 51: PORTA = 0;
  5214  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  5215  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0CFE  0185               	clrf	5	;volatile
  5217                           
  5218                           ;pin_Manager.c: 52: PORTB = 0;
  5219  0CFF  0186               	clrf	6	;volatile
  5220                           
  5221                           ;pin_Manager.c: 53: PORTC = 0;
  5222  0D00  0187               	clrf	7	;volatile
  5223                           
  5224                           ;pin_Manager.c: 54: PORTD = 0;
  5225  0D01  0188               	clrf	8	;volatile
  5226                           
  5227                           ;pin_Manager.c: 55: PORTE = 0;
  5228  0D02  0189               	clrf	9	;volatile
  5229  0D03  0008               	return
  5230  0D04                     __end_of_pinManager:	
  5231                           
  5232                           	psect	text19
  5233  0E0E                     __ptext19:	
  5234 ;; *************** function _UART_Init *****************
  5235 ;; Defined at:
  5236 ;;		line 10 in file "uart_Init.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  baudRate        2   25[BANK0 ] unsigned int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         0       2       0       0       0
  5251 ;;      Locals:         0       0       0       0       0
  5252 ;;      Temps:          0       4       0       0       0
  5253 ;;      Totals:         0       6       0       0       0
  5254 ;;Total ram usage:        6 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    2
  5257 ;; This function calls:
  5258 ;;		___lldiv
  5259 ;; This function is called by:
  5260 ;;		_system_Initialize
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function _UART_Init
  5266  0E0E                     _UART_Init:	
  5267                           
  5268                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  5272  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  5273  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  5274  0E10  1707               	bsf	7,6	;volatile
  5275                           
  5276                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  5277  0E11  1787               	bsf	7,7	;volatile
  5278                           
  5279                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  5280  0E12  1698               	bsf	24,5	;volatile
  5281                           
  5282                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  5283  0E13  1218               	bcf	24,4	;volatile
  5284                           
  5285                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  5286  0E14  1318               	bcf	24,6	;volatile
  5287                           
  5288                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  5289  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5290  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5291  0E17  1798               	bsf	24,7	;volatile
  5292                           
  5293                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  5294  0E18  1618               	bsf	24,4	;volatile
  5295                           
  5296                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  5297  0E19  1318               	bcf	24,6	;volatile
  5298                           
  5299                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  5300  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  5301  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  5302  0E1C  1518               	bsf	24,2	;volatile
  5303                           
  5304                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  5305  0E1D  1683               	bsf	3,5	;RP0=1, select bank3
  5306  0E1E  1703               	bsf	3,6	;RP1=1, select bank3
  5307  0E1F  1187               	bcf	7,3	;volatile
  5308                           
  5309                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  5310  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0E22  0839               	movf	UART_Init@baudRate,w
  5313  0E23  00AC               	movwf	___lldiv@divisor
  5314  0E24  083A               	movf	UART_Init@baudRate+1,w
  5315  0E25  00AD               	movwf	___lldiv@divisor+1
  5316  0E26  01AE               	clrf	___lldiv@divisor+2
  5317  0E27  01AF               	clrf	___lldiv@divisor+3
  5318  0E28  3000               	movlw	0
  5319  0E29  00B3               	movwf	___lldiv@dividend+3
  5320  0E2A  303D               	movlw	61
  5321  0E2B  00B2               	movwf	___lldiv@dividend+2
  5322  0E2C  3009               	movlw	9
  5323  0E2D  00B1               	movwf	___lldiv@dividend+1
  5324  0E2E  3000               	movlw	0
  5325  0E2F  00B0               	movwf	___lldiv@dividend
  5326  0E30  120A  118A  2780  120A  158A  	fcall	___lldiv
  5327  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0E37  082C               	movf	?___lldiv,w
  5330  0E38  00BB               	movwf	??_UART_Init
  5331  0E39  082D               	movf	?___lldiv+1,w
  5332  0E3A  00BC               	movwf	??_UART_Init+1
  5333  0E3B  082E               	movf	?___lldiv+2,w
  5334  0E3C  00BD               	movwf	??_UART_Init+2
  5335  0E3D  082F               	movf	?___lldiv+3,w
  5336  0E3E  00BE               	movwf	??_UART_Init+3
  5337  0E3F  3004               	movlw	4
  5338  0E40                     u2705:	
  5339  0E40  1003               	clrc
  5340  0E41  0CBE               	rrf	??_UART_Init+3,f
  5341  0E42  0CBD               	rrf	??_UART_Init+2,f
  5342  0E43  0CBC               	rrf	??_UART_Init+1,f
  5343  0E44  0CBB               	rrf	??_UART_Init,f
  5344  0E45  3EFF               	addlw	-1
  5345  0E46  1D03               	skipz
  5346  0E47  2E40               	goto	u2705
  5347  0E48  083B               	movf	??_UART_Init,w
  5348  0E49  3EFF               	addlw	255
  5349  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  5350  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  5351  0E4C  0099               	movwf	25	;volatile
  5352  0E4D  0008               	return
  5353  0E4E                     __end_of_UART_Init:	
  5354                           
  5355                           	psect	text20
  5356  0C20                     __ptext20:	
  5357 ;; *************** function _TMR0_Init *****************
  5358 ;; Defined at:
  5359 ;;		line 19 in file "timer_Init.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5373 ;;      Params:         0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    1
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_system_Initialize
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _TMR0_Init
  5389  0C20                     _TMR0_Init:	
  5390                           
  5391                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  5395  0C20  168B               	bsf	11,5	;volatile
  5396                           
  5397                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  5398  0C21  110B               	bcf	11,2	;volatile
  5399                           
  5400                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  5401  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  5402  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  5403  0C24  1281               	bcf	1,5	;volatile
  5404                           
  5405                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  5406  0C25  1181               	bcf	1,3	;volatile
  5407                           
  5408                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  5409  0C26  0801               	movf	1,w	;volatile
  5410  0C27  39F8               	andlw	-8
  5411  0C28  3805               	iorlw	5
  5412  0C29  0081               	movwf	1	;volatile
  5413                           
  5414                           ;timer_Init.c: 26: TMR0 = 100;
  5415  0C2A  3064               	movlw	100
  5416  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0C2D  0081               	movwf	1	;volatile
  5419  0C2E  0008               	return
  5420  0C2F                     __end_of_TMR0_Init:	
  5421                           
  5422                           	psect	text21
  5423  0BE8                     __ptext21:	
  5424 ;; *************** function _SPI_Init *****************
  5425 ;; Defined at:
  5426 ;;		line 10 in file "spi_Init.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    1
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_system_Initialize
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           
  5455                           ;psect for function _SPI_Init
  5456  0BE8                     _SPI_Init:	
  5457                           
  5458                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5459                           
  5460                           ;incstack = 0
  5461                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5462  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  5463  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  5464  0BEA  1694               	bsf	20,5	;volatile
  5465                           
  5466                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5467  0BEB  30F0               	movlw	-16
  5468  0BEC  0594               	andwf	20,f	;volatile
  5469                           
  5470                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5471  0BED  1394               	bcf	20,7	;volatile
  5472                           
  5473                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5474  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  5475  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
  5476  0BF0  158C               	bsf	12,3	;volatile
  5477                           
  5478                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5479  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0BF3  118C               	bcf	12,3	;volatile
  5482  0BF4  0008               	return
  5483  0BF5                     __end_of_SPI_Init:	
  5484                           
  5485                           	psect	text22
  5486  0ED0                     __ptext22:	
  5487 ;; *************** function _PWM_Init *****************
  5488 ;; Defined at:
  5489 ;;		line 14 in file "pwm_Init.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       4       0       0       0
  5504 ;;      Locals:         0       0       0       0       0
  5505 ;;      Temps:          0       4       0       0       0
  5506 ;;      Totals:         0       8       0       0       0
  5507 ;;Total ram usage:        8 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    2
  5510 ;; This function calls:
  5511 ;;		___lldiv
  5512 ;; This function is called by:
  5513 ;;		_system_Initialize
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function _PWM_Init
  5519  0ED0                     _PWM_Init:	
  5520                           
  5521                           ;pwm_Init.c: 15: TRISCbits.TRISC2 = 1;
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5525  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  5526  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  5527  0ED2  1507               	bsf	7,2	;volatile
  5528                           
  5529                           ;pwm_Init.c: 17: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5530  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  5531  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  5532  0ED5  0839               	movf	PWM_Init@iFrequency,w
  5533  0ED6  00BD               	movwf	??_PWM_Init
  5534  0ED7  083A               	movf	PWM_Init@iFrequency+1,w
  5535  0ED8  00BE               	movwf	??_PWM_Init+1
  5536  0ED9  083B               	movf	PWM_Init@iFrequency+2,w
  5537  0EDA  00BF               	movwf	??_PWM_Init+2
  5538  0EDB  083C               	movf	PWM_Init@iFrequency+3,w
  5539  0EDC  00C0               	movwf	??_PWM_Init+3
  5540  0EDD  3002               	movlw	2
  5541  0EDE                     u2675:	
  5542  0EDE  1003               	clrc
  5543  0EDF  0DBD               	rlf	??_PWM_Init,f
  5544  0EE0  0DBE               	rlf	??_PWM_Init+1,f
  5545  0EE1  0DBF               	rlf	??_PWM_Init+2,f
  5546  0EE2  0DC0               	rlf	??_PWM_Init+3,f
  5547  0EE3  3EFF               	addlw	-1
  5548  0EE4  1D03               	skipz
  5549  0EE5  2EDE               	goto	u2675
  5550  0EE6  0840               	movf	??_PWM_Init+3,w
  5551  0EE7  00AF               	movwf	___lldiv@divisor+3
  5552  0EE8  083F               	movf	??_PWM_Init+2,w
  5553  0EE9  00AE               	movwf	___lldiv@divisor+2
  5554  0EEA  083E               	movf	??_PWM_Init+1,w
  5555  0EEB  00AD               	movwf	___lldiv@divisor+1
  5556  0EEC  083D               	movf	??_PWM_Init,w
  5557  0EED  00AC               	movwf	___lldiv@divisor
  5558  0EEE  3000               	movlw	0
  5559  0EEF  00B3               	movwf	___lldiv@dividend+3
  5560  0EF0  303D               	movlw	61
  5561  0EF1  00B2               	movwf	___lldiv@dividend+2
  5562  0EF2  3009               	movlw	9
  5563  0EF3  00B1               	movwf	___lldiv@dividend+1
  5564  0EF4  3000               	movlw	0
  5565  0EF5  00B0               	movwf	___lldiv@dividend
  5566  0EF6  120A  118A  2780   	fcall	___lldiv
  5567  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  5569  0EFB  082C               	movf	?___lldiv,w
  5570  0EFC  3EFF               	addlw	255
  5571  0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  5573  0EFF  0092               	movwf	18	;volatile
  5574                           
  5575                           ;pwm_Init.c: 18: CCP1CONbits.P1M = 0b00;
  5576  0F00  303F               	movlw	-193
  5577  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  5579  0F03  0597               	andwf	23,f	;volatile
  5580                           
  5581                           ;pwm_Init.c: 19: CCP1CONbits.CCP1M = 0b1100;
  5582  0F04  0817               	movf	23,w	;volatile
  5583  0F05  39F0               	andlw	-16
  5584  0F06  380C               	iorlw	12
  5585  0F07  0097               	movwf	23	;volatile
  5586                           
  5587                           ;pwm_Init.c: 20: CCP1CONbits.DC1B = 0b00;
  5588  0F08  30CF               	movlw	-49
  5589  0F09  0597               	andwf	23,f	;volatile
  5590                           
  5591                           ;pwm_Init.c: 21: CCPR1L = 0x00;
  5592  0F0A  0195               	clrf	21	;volatile
  5593                           
  5594                           ;pwm_Init.c: 23: PIR1bits.TMR2IF = 0;
  5595  0F0B  108C               	bcf	12,1	;volatile
  5596                           
  5597                           ;pwm_Init.c: 24: T2CONbits.TOUTPS = 0b0000;
  5598  0F0C  3087               	movlw	-121
  5599  0F0D  0592               	andwf	18,f	;volatile
  5600                           
  5601                           ;pwm_Init.c: 25: T2CONbits.T2CKPS = 0b00;
  5602  0F0E  30FC               	movlw	-4
  5603  0F0F  0592               	andwf	18,f	;volatile
  5604                           
  5605                           ;pwm_Init.c: 26: T2CONbits.TMR2ON = 1;
  5606  0F10  1512               	bsf	18,2	;volatile
  5607                           
  5608                           ;pwm_Init.c: 27: TRISCbits.TRISC2 = 0;
  5609  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  5610  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  5611  0F13  1107               	bcf	7,2	;volatile
  5612  0F14  0008               	return
  5613  0F15                     __end_of_PWM_Init:	
  5614                           
  5615                           	psect	text23
  5616  05D9                     __ptext23:	
  5617 ;; *************** function _PWM_DutyCycle *****************
  5618 ;; Defined at:
  5619 ;;		line 30 in file "pwm_Init.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5633 ;;      Params:         0       4       0       0       0
  5634 ;;      Locals:         0       0       0       0       0
  5635 ;;      Temps:          0       4       0       0       0
  5636 ;;      Totals:         0       8       0       0       0
  5637 ;;Total ram usage:        8 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    2
  5640 ;; This function calls:
  5641 ;;		___lldiv
  5642 ;;		___lmul
  5643 ;; This function is called by:
  5644 ;;		_system_Initialize
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _PWM_DutyCycle
  5650  05D9                     _PWM_DutyCycle:	
  5651                           
  5652                           ;pwm_Init.c: 32: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5656  05D9  3000               	movlw	0
  5657  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  5658  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  5659  05DC  00AF               	movwf	___lldiv@divisor+3
  5660  05DD  3000               	movlw	0
  5661  05DE  00AE               	movwf	___lldiv@divisor+2
  5662  05DF  3000               	movlw	0
  5663  05E0  00AD               	movwf	___lldiv@divisor+1
  5664  05E1  3064               	movlw	100
  5665  05E2  00AC               	movwf	___lldiv@divisor
  5666  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  5667  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  5668  05E5  0812               	movf	18,w	;volatile
  5669  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5670  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5671  05E8  00BD               	movwf	??_PWM_DutyCycle
  5672  05E9  01BE               	clrf	??_PWM_DutyCycle+1
  5673  05EA  1003               	clrc
  5674  05EB  0DBD               	rlf	??_PWM_DutyCycle,f
  5675  05EC  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5676  05ED  1003               	clrc
  5677  05EE  0DBD               	rlf	??_PWM_DutyCycle,f
  5678  05EF  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5679  05F0  083D               	movf	??_PWM_DutyCycle,w
  5680  05F1  3E04               	addlw	4
  5681  05F2  00A0               	movwf	___lmul@multiplier
  5682  05F3  083E               	movf	??_PWM_DutyCycle+1,w
  5683  05F4  1803               	skipnc
  5684  05F5  3E01               	addlw	1
  5685  05F6  3E00               	addlw	0
  5686  05F7  00A1               	movwf	___lmul@multiplier+1
  5687  05F8  01A2               	clrf	___lmul@multiplier+2
  5688  05F9  1BA1               	btfsc	___lmul@multiplier+1,7
  5689  05FA  03A2               	decf	___lmul@multiplier+2,f
  5690  05FB  0822               	movf	___lmul@multiplier+2,w
  5691  05FC  00A3               	movwf	___lmul@multiplier+3
  5692  05FD  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5693  05FE  00A7               	movwf	___lmul@multiplicand+3
  5694  05FF  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5695  0600  00A6               	movwf	___lmul@multiplicand+2
  5696  0601  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5697  0602  00A5               	movwf	___lmul@multiplicand+1
  5698  0603  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5699  0604  00A4               	movwf	___lmul@multiplicand
  5700  0605  120A  158A  264E  120A  118A  	fcall	___lmul
  5701  060A  1283               	bcf	3,5	;RP0=0, select bank0
  5702  060B  1303               	bcf	3,6	;RP1=0, select bank0
  5703  060C  0823               	movf	?___lmul+3,w
  5704  060D  00B3               	movwf	___lldiv@dividend+3
  5705  060E  0822               	movf	?___lmul+2,w
  5706  060F  00B2               	movwf	___lldiv@dividend+2
  5707  0610  0821               	movf	?___lmul+1,w
  5708  0611  00B1               	movwf	___lldiv@dividend+1
  5709  0612  0820               	movf	?___lmul,w
  5710  0613  00B0               	movwf	___lldiv@dividend
  5711  0614  120A  118A  2780  120A  118A  	fcall	___lldiv
  5712  0619  1283               	bcf	3,5	;RP0=0, select bank0
  5713  061A  1303               	bcf	3,6	;RP1=0, select bank0
  5714  061B  082F               	movf	?___lldiv+3,w
  5715  061C  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5716  061D  082E               	movf	?___lldiv+2,w
  5717  061E  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5718  061F  082D               	movf	?___lldiv+1,w
  5719  0620  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5720  0621  082C               	movf	?___lldiv,w
  5721  0622  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5722                           
  5723                           ;pwm_Init.c: 33: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5724  0623  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5725  0624  00BD               	movwf	??_PWM_DutyCycle
  5726  0625  3003               	movlw	3
  5727  0626                     u3865:	
  5728  0626  1003               	clrc
  5729  0627  0DBD               	rlf	??_PWM_DutyCycle,f
  5730  0628  3EFF               	addlw	-1
  5731  0629  1D03               	skipz
  5732  062A  2E26               	goto	u3865
  5733  062B  1003               	clrc
  5734  062C  0D3D               	rlf	??_PWM_DutyCycle,w
  5735  062D  00BE               	movwf	??_PWM_DutyCycle+1
  5736  062E  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5737  062F  0817               	movf	23,w	;volatile
  5738  0630  063E               	xorwf	??_PWM_DutyCycle+1,w
  5739  0631  39CF               	andlw	-49
  5740  0632  063E               	xorwf	??_PWM_DutyCycle+1,w
  5741  0633  0097               	movwf	23	;volatile
  5742                           
  5743                           ;pwm_Init.c: 34: CCPR1L = (iDutyCycle >> 2);
  5744  0634  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5745  0635  00BD               	movwf	??_PWM_DutyCycle
  5746  0636  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5747  0637  00BE               	movwf	??_PWM_DutyCycle+1
  5748  0638  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5749  0639  00BF               	movwf	??_PWM_DutyCycle+2
  5750  063A  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5751  063B  00C0               	movwf	??_PWM_DutyCycle+3
  5752  063C  3002               	movlw	2
  5753  063D                     u3875:	
  5754  063D  1003               	clrc
  5755  063E  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5756  063F  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5757  0640  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5758  0641  0CBD               	rrf	??_PWM_DutyCycle,f
  5759  0642  3EFF               	addlw	-1
  5760  0643  1D03               	skipz
  5761  0644  2E3D               	goto	u3875
  5762  0645  083D               	movf	??_PWM_DutyCycle,w
  5763  0646  0095               	movwf	21	;volatile
  5764  0647  0008               	return
  5765  0648                     __end_of_PWM_DutyCycle:	
  5766                           
  5767                           	psect	text24
  5768  0E4E                     __ptext24:	
  5769 ;; *************** function ___lmul *****************
  5770 ;; Defined at:
  5771 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5774 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  product         4    8[BANK0 ] unsigned long 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  4    0[BANK0 ] unsigned long 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5786 ;;      Params:         0       8       0       0       0
  5787 ;;      Locals:         0       4       0       0       0
  5788 ;;      Temps:          1       0       0       0       0
  5789 ;;      Totals:         1      12       0       0       0
  5790 ;;Total ram usage:       13 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    1
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_PWM_DutyCycle
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function ___lmul
  5802  0E4E                     ___lmul:	
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5806  0E4E  3000               	movlw	0
  5807  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0E51  00AB               	movwf	___lmul@product+3
  5810  0E52  3000               	movlw	0
  5811  0E53  00AA               	movwf	___lmul@product+2
  5812  0E54  3000               	movlw	0
  5813  0E55  00A9               	movwf	___lmul@product+1
  5814  0E56  3000               	movlw	0
  5815  0E57  00A8               	movwf	___lmul@product
  5816  0E58                     l2565:	
  5817  0E58  1C20               	btfss	___lmul@multiplier,0
  5818  0E59  2E6E               	goto	l2569
  5819  0E5A  0824               	movf	___lmul@multiplicand,w
  5820  0E5B  07A8               	addwf	___lmul@product,f
  5821  0E5C  0825               	movf	___lmul@multiplicand+1,w
  5822  0E5D  1103               	clrz
  5823  0E5E  1803               	skipnc
  5824  0E5F  3E01               	addlw	1
  5825  0E60  1D03               	btfss	3,2
  5826  0E61  07A9               	addwf	___lmul@product+1,f
  5827  0E62  0826               	movf	___lmul@multiplicand+2,w
  5828  0E63  1103               	clrz
  5829  0E64  1803               	skipnc
  5830  0E65  3E01               	addlw	1
  5831  0E66  1D03               	btfss	3,2
  5832  0E67  07AA               	addwf	___lmul@product+2,f
  5833  0E68  0827               	movf	___lmul@multiplicand+3,w
  5834  0E69  1103               	clrz
  5835  0E6A  1803               	skipnc
  5836  0E6B  3E01               	addlw	1
  5837  0E6C  1D03               	btfss	3,2
  5838  0E6D  07AB               	addwf	___lmul@product+3,f
  5839  0E6E                     l2569:	
  5840  0E6E  3001               	movlw	1
  5841  0E6F  00F4               	movwf	??___lmul
  5842  0E70                     u3285:	
  5843  0E70  1003               	clrc
  5844  0E71  0DA4               	rlf	___lmul@multiplicand,f
  5845  0E72  0DA5               	rlf	___lmul@multiplicand+1,f
  5846  0E73  0DA6               	rlf	___lmul@multiplicand+2,f
  5847  0E74  0DA7               	rlf	___lmul@multiplicand+3,f
  5848  0E75  0BF4               	decfsz	??___lmul,f
  5849  0E76  2E70               	goto	u3285
  5850  0E77  3001               	movlw	1
  5851  0E78                     u3295:	
  5852  0E78  1003               	clrc
  5853  0E79  0CA3               	rrf	___lmul@multiplier+3,f
  5854  0E7A  0CA2               	rrf	___lmul@multiplier+2,f
  5855  0E7B  0CA1               	rrf	___lmul@multiplier+1,f
  5856  0E7C  0CA0               	rrf	___lmul@multiplier,f
  5857  0E7D  3EFF               	addlw	-1
  5858  0E7E  1D03               	skipz
  5859  0E7F  2E78               	goto	u3295
  5860  0E80  0823               	movf	___lmul@multiplier+3,w
  5861  0E81  0422               	iorwf	___lmul@multiplier+2,w
  5862  0E82  0421               	iorwf	___lmul@multiplier+1,w
  5863  0E83  0420               	iorwf	___lmul@multiplier,w
  5864  0E84  1D03               	skipz
  5865  0E85  2E58               	goto	l2565
  5866  0E86  082B               	movf	___lmul@product+3,w
  5867  0E87  00A3               	movwf	?___lmul+3
  5868  0E88  082A               	movf	___lmul@product+2,w
  5869  0E89  00A2               	movwf	?___lmul+2
  5870  0E8A  0829               	movf	___lmul@product+1,w
  5871  0E8B  00A1               	movwf	?___lmul+1
  5872  0E8C  0828               	movf	___lmul@product,w
  5873  0E8D  00A0               	movwf	?___lmul
  5874  0E8E  0008               	return
  5875  0E8F                     __end_of___lmul:	
  5876                           
  5877                           	psect	text25
  5878  0780                     __ptext25:	
  5879 ;; *************** function ___lldiv *****************
  5880 ;; Defined at:
  5881 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  divisor         4   12[BANK0 ] unsigned long 
  5884 ;;  dividend        4   16[BANK0 ] unsigned long 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  quotient        4   20[BANK0 ] unsigned long 
  5887 ;;  counter         1   24[BANK0 ] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  4   12[BANK0 ] unsigned long 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         0       8       0       0       0
  5898 ;;      Locals:         0       5       0       0       0
  5899 ;;      Temps:          1       0       0       0       0
  5900 ;;      Totals:         1      13       0       0       0
  5901 ;;Total ram usage:       14 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_PWM_Init
  5908 ;;		_PWM_DutyCycle
  5909 ;;		_UART_Init
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function ___lldiv
  5915  0780                     ___lldiv:	
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5919  0780  3000               	movlw	0
  5920  0781  1283               	bcf	3,5	;RP0=0, select bank0
  5921  0782  1303               	bcf	3,6	;RP1=0, select bank0
  5922  0783  00B7               	movwf	___lldiv@quotient+3
  5923  0784  3000               	movlw	0
  5924  0785  00B6               	movwf	___lldiv@quotient+2
  5925  0786  3000               	movlw	0
  5926  0787  00B5               	movwf	___lldiv@quotient+1
  5927  0788  3000               	movlw	0
  5928  0789  00B4               	movwf	___lldiv@quotient
  5929  078A  082F               	movf	___lldiv@divisor+3,w
  5930  078B  042E               	iorwf	___lldiv@divisor+2,w
  5931  078C  042D               	iorwf	___lldiv@divisor+1,w
  5932  078D  042C               	iorwf	___lldiv@divisor,w
  5933  078E  1903               	skipnz
  5934  078F  2FD7               	goto	l2147
  5935  0790  01B8               	clrf	___lldiv@counter
  5936  0791  0AB8               	incf	___lldiv@counter,f
  5937  0792                     l2133:	
  5938  0792  1BAF               	btfsc	___lldiv@divisor+3,7
  5939  0793  2FA2               	goto	l2135
  5940  0794  3001               	movlw	1
  5941  0795  00F5               	movwf	??___lldiv
  5942  0796                     u2465:	
  5943  0796  1003               	clrc
  5944  0797  0DAC               	rlf	___lldiv@divisor,f
  5945  0798  0DAD               	rlf	___lldiv@divisor+1,f
  5946  0799  0DAE               	rlf	___lldiv@divisor+2,f
  5947  079A  0DAF               	rlf	___lldiv@divisor+3,f
  5948  079B  0BF5               	decfsz	??___lldiv,f
  5949  079C  2F96               	goto	u2465
  5950  079D  3001               	movlw	1
  5951  079E  00F5               	movwf	??___lldiv
  5952  079F  0875               	movf	??___lldiv,w
  5953  07A0  07B8               	addwf	___lldiv@counter,f
  5954  07A1  2F92               	goto	l2133
  5955  07A2                     l2135:	
  5956  07A2  3001               	movlw	1
  5957  07A3  00F5               	movwf	??___lldiv
  5958  07A4                     u2485:	
  5959  07A4  1003               	clrc
  5960  07A5  0DB4               	rlf	___lldiv@quotient,f
  5961  07A6  0DB5               	rlf	___lldiv@quotient+1,f
  5962  07A7  0DB6               	rlf	___lldiv@quotient+2,f
  5963  07A8  0DB7               	rlf	___lldiv@quotient+3,f
  5964  07A9  0BF5               	decfsz	??___lldiv,f
  5965  07AA  2FA4               	goto	u2485
  5966  07AB  082F               	movf	___lldiv@divisor+3,w
  5967  07AC  0233               	subwf	___lldiv@dividend+3,w
  5968  07AD  1D03               	skipz
  5969  07AE  2FB9               	goto	u2495
  5970  07AF  082E               	movf	___lldiv@divisor+2,w
  5971  07B0  0232               	subwf	___lldiv@dividend+2,w
  5972  07B1  1D03               	skipz
  5973  07B2  2FB9               	goto	u2495
  5974  07B3  082D               	movf	___lldiv@divisor+1,w
  5975  07B4  0231               	subwf	___lldiv@dividend+1,w
  5976  07B5  1D03               	skipz
  5977  07B6  2FB9               	goto	u2495
  5978  07B7  082C               	movf	___lldiv@divisor,w
  5979  07B8  0230               	subwf	___lldiv@dividend,w
  5980  07B9                     u2495:	
  5981  07B9  1C03               	skipc
  5982  07BA  2FCA               	goto	l2143
  5983  07BB  082C               	movf	___lldiv@divisor,w
  5984  07BC  02B0               	subwf	___lldiv@dividend,f
  5985  07BD  082D               	movf	___lldiv@divisor+1,w
  5986  07BE  1C03               	skipc
  5987  07BF  0F2D               	incfsz	___lldiv@divisor+1,w
  5988  07C0  02B1               	subwf	___lldiv@dividend+1,f
  5989  07C1  082E               	movf	___lldiv@divisor+2,w
  5990  07C2  1C03               	skipc
  5991  07C3  0F2E               	incfsz	___lldiv@divisor+2,w
  5992  07C4  02B2               	subwf	___lldiv@dividend+2,f
  5993  07C5  082F               	movf	___lldiv@divisor+3,w
  5994  07C6  1C03               	skipc
  5995  07C7  0F2F               	incfsz	___lldiv@divisor+3,w
  5996  07C8  02B3               	subwf	___lldiv@dividend+3,f
  5997  07C9  1434               	bsf	___lldiv@quotient,0
  5998  07CA                     l2143:	
  5999  07CA  3001               	movlw	1
  6000  07CB                     u2505:	
  6001  07CB  1003               	clrc
  6002  07CC  0CAF               	rrf	___lldiv@divisor+3,f
  6003  07CD  0CAE               	rrf	___lldiv@divisor+2,f
  6004  07CE  0CAD               	rrf	___lldiv@divisor+1,f
  6005  07CF  0CAC               	rrf	___lldiv@divisor,f
  6006  07D0  3EFF               	addlw	-1
  6007  07D1  1D03               	skipz
  6008  07D2  2FCB               	goto	u2505
  6009  07D3  3001               	movlw	1
  6010  07D4  02B8               	subwf	___lldiv@counter,f
  6011  07D5  1D03               	btfss	3,2
  6012  07D6  2FA2               	goto	l2135
  6013  07D7                     l2147:	
  6014  07D7  0837               	movf	___lldiv@quotient+3,w
  6015  07D8  00AF               	movwf	?___lldiv+3
  6016  07D9  0836               	movf	___lldiv@quotient+2,w
  6017  07DA  00AE               	movwf	?___lldiv+2
  6018  07DB  0835               	movf	___lldiv@quotient+1,w
  6019  07DC  00AD               	movwf	?___lldiv+1
  6020  07DD  0834               	movf	___lldiv@quotient,w
  6021  07DE  00AC               	movwf	?___lldiv
  6022  07DF  0008               	return
  6023  07E0                     __end_of___lldiv:	
  6024                           
  6025                           	psect	text26
  6026  0BCF                     __ptext26:	
  6027 ;; *************** function _Oscillator_Init *****************
  6028 ;; Defined at:
  6029 ;;		line 23 in file "SYST_Init.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		status,2
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6043 ;;      Params:         0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    1
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_system_Initialize
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           
  6058                           ;psect for function _Oscillator_Init
  6059  0BCF                     _Oscillator_Init:	
  6060                           
  6061                           ;SYST_Init.c: 24: OSCCON = 0x00;
  6062                           
  6063                           ;incstack = 0
  6064                           ; Regs used in _Oscillator_Init: [status,2]
  6065  0BCF  1683               	bsf	3,5	;RP0=1, select bank1
  6066  0BD0  1303               	bcf	3,6	;RP1=0, select bank1
  6067  0BD1  018F               	clrf	15	;volatile
  6068                           
  6069                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  6070  0BD2  0190               	clrf	16	;volatile
  6071  0BD3  0008               	return
  6072  0BD4                     __end_of_Oscillator_Init:	
  6073                           
  6074                           	psect	text27
  6075  071F                     __ptext27:	
  6076 ;; *************** function _Lcd_Init *****************
  6077 ;; Defined at:
  6078 ;;		line 62 in file "lcd_Config.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      void 
  6085 ;; Registers used:
  6086 ;;		wreg, status,2, status,0, pclath, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6092 ;;      Params:         0       0       0       0       0
  6093 ;;      Locals:         0       0       0       0       0
  6094 ;;      Temps:          0       2       0       0       0
  6095 ;;      Totals:         0       2       0       0       0
  6096 ;;Total ram usage:        2 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:    3
  6099 ;; This function calls:
  6100 ;;		_Lcd_Cmd
  6101 ;;		_Lcd_Port
  6102 ;; This function is called by:
  6103 ;;		_system_Initialize
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           
  6108                           ;psect for function _Lcd_Init
  6109  071F                     _Lcd_Init:	
  6110                           
  6111                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  6112                           
  6113                           ;incstack = 0
  6114                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6115  071F  3000               	movlw	0
  6116  0720  120A  158A  2471  120A  118A  	fcall	_Lcd_Port
  6117                           
  6118                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  6119  0725  301A               	movlw	26
  6120  0726  1283               	bcf	3,5	;RP0=0, select bank0
  6121  0727  1303               	bcf	3,6	;RP1=0, select bank0
  6122  0728  00A3               	movwf	??_Lcd_Init+1
  6123  0729  30F7               	movlw	247
  6124  072A  00A2               	movwf	??_Lcd_Init
  6125  072B                     u4247:	
  6126  072B  0BA2               	decfsz	??_Lcd_Init,f
  6127  072C  2F2B               	goto	u4247
  6128  072D  0BA3               	decfsz	??_Lcd_Init+1,f
  6129  072E  2F2B               	goto	u4247
  6130  072F  2F30               	nop2
  6131                           
  6132                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  6133  0730  3003               	movlw	3
  6134  0731  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6135                           
  6136                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  6137  0736  3007               	movlw	7
  6138  0737  1283               	bcf	3,5	;RP0=0, select bank0
  6139  0738  1303               	bcf	3,6	;RP1=0, select bank0
  6140  0739  00A3               	movwf	??_Lcd_Init+1
  6141  073A  307C               	movlw	124
  6142  073B  00A2               	movwf	??_Lcd_Init
  6143  073C                     u4257:	
  6144  073C  0BA2               	decfsz	??_Lcd_Init,f
  6145  073D  2F3C               	goto	u4257
  6146  073E  0BA3               	decfsz	??_Lcd_Init+1,f
  6147  073F  2F3C               	goto	u4257
  6148  0740  0000               	nop
  6149                           
  6150                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  6151  0741  3003               	movlw	3
  6152  0742  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6153                           
  6154                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  6155  0747  300F               	movlw	15
  6156  0748  1283               	bcf	3,5	;RP0=0, select bank0
  6157  0749  1303               	bcf	3,6	;RP1=0, select bank0
  6158  074A  00A3               	movwf	??_Lcd_Init+1
  6159  074B  3047               	movlw	71
  6160  074C  00A2               	movwf	??_Lcd_Init
  6161  074D                     u4267:	
  6162  074D  0BA2               	decfsz	??_Lcd_Init,f
  6163  074E  2F4D               	goto	u4267
  6164  074F  0BA3               	decfsz	??_Lcd_Init+1,f
  6165  0750  2F4D               	goto	u4267
  6166                           
  6167                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  6168  0751  3003               	movlw	3
  6169  0752  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6170                           
  6171                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  6172  0757  3002               	movlw	2
  6173  0758  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6174                           
  6175                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  6176  075D  3002               	movlw	2
  6177  075E  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6178                           
  6179                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  6180  0763  3008               	movlw	8
  6181  0764  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6182                           
  6183                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  6184  0769  3000               	movlw	0
  6185  076A  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6186                           
  6187                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  6188  076F  300C               	movlw	12
  6189  0770  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6190                           
  6191                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  6192  0775  3000               	movlw	0
  6193  0776  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  6194                           
  6195                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  6196  077B  3006               	movlw	6
  6197  077C  120A  118A  27E0   	fcall	_Lcd_Cmd
  6198  077F  0008               	return
  6199  0780                     __end_of_Lcd_Init:	
  6200                           
  6201                           	psect	text28
  6202  07E0                     __ptext28:	
  6203 ;; *************** function _Lcd_Cmd *****************
  6204 ;; Defined at:
  6205 ;;		line 32 in file "lcd_Config.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  a               1    wreg     unsigned char 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  a               1    5[COMMON] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      void 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0, pclath, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6219 ;;      Params:         0       0       0       0       0
  6220 ;;      Locals:         1       0       0       0       0
  6221 ;;      Temps:          0       2       0       0       0
  6222 ;;      Totals:         1       2       0       0       0
  6223 ;;Total ram usage:        3 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    2
  6226 ;; This function calls:
  6227 ;;		_Lcd_Port
  6228 ;; This function is called by:
  6229 ;;		_Lcd_Set_Cursor
  6230 ;;		_Lcd_Init
  6231 ;;		_Lcd_Clear
  6232 ;;		_Lcd_Shift_Right
  6233 ;;		_Lcd_Shift_Left
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _Lcd_Cmd
  6239  07E0                     _Lcd_Cmd:	
  6240                           
  6241                           ;incstack = 0
  6242                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6243                           ;Lcd_Cmd@a stored from wreg
  6244  07E0  00F5               	movwf	Lcd_Cmd@a
  6245                           
  6246                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  6247  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  6248  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  6249  07E3  1286               	bcf	6,5	;volatile
  6250                           
  6251                           ;lcd_Config.c: 34: Lcd_Port(a);
  6252  07E4  0875               	movf	Lcd_Cmd@a,w
  6253  07E5  120A  158A  2471  120A  118A  	fcall	_Lcd_Port
  6254                           
  6255                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  6256  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  6257  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  6258  07EC  1606               	bsf	6,4	;volatile
  6259                           
  6260                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  6261  07ED  3006               	movlw	6
  6262  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  6263  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  6264  07F0  00A1               	movwf	??_Lcd_Cmd+1
  6265  07F1  302F               	movlw	47
  6266  07F2  00A0               	movwf	??_Lcd_Cmd
  6267  07F3                     u4277:	
  6268  07F3  0BA0               	decfsz	??_Lcd_Cmd,f
  6269  07F4  2FF3               	goto	u4277
  6270  07F5  0BA1               	decfsz	??_Lcd_Cmd+1,f
  6271  07F6  2FF3               	goto	u4277
  6272  07F7  2FF8               	nop2
  6273                           
  6274                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  6275  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  6276  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  6277  07FA  1206               	bcf	6,4	;volatile
  6278  07FB  0008               	return
  6279  07FC                     __end_of_Lcd_Cmd:	
  6280                           
  6281                           	psect	text29
  6282  0C71                     __ptext29:	
  6283 ;; *************** function _Lcd_Port *****************
  6284 ;; Defined at:
  6285 ;;		line 10 in file "lcd_Config.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  a               1    wreg     unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  a               1    4[COMMON] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6299 ;;      Params:         0       0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0
  6302 ;;      Totals:         1       0       0       0       0
  6303 ;;Total ram usage:        1 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    1
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_Lcd_Cmd
  6310 ;;		_Lcd_Init
  6311 ;;		_Lcd_Write_Char
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function _Lcd_Port
  6317  0C71                     _Lcd_Port:	
  6318                           
  6319                           ;incstack = 0
  6320                           ; Regs used in _Lcd_Port: [wreg]
  6321                           ;Lcd_Port@a stored from wreg
  6322  0C71  00F4               	movwf	Lcd_Port@a
  6323                           
  6324                           ;lcd_Config.c: 11: if (a & 1)
  6325  0C72  1C74               	btfss	Lcd_Port@a,0
  6326  0C73  2C78               	goto	l159
  6327                           
  6328                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  6329  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  6330  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  6331  0C76  1586               	bsf	6,3	;volatile
  6332  0C77  2C7B               	goto	l160
  6333  0C78                     l159:	
  6334                           
  6335                           ;lcd_Config.c: 13: else
  6336                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  6337  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  6338  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  6339  0C7A  1186               	bcf	6,3	;volatile
  6340  0C7B                     l160:	
  6341                           
  6342                           ;lcd_Config.c: 16: if (a & 2)
  6343  0C7B  1CF4               	btfss	Lcd_Port@a,1
  6344  0C7C  2C7F               	goto	l161
  6345                           
  6346                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  6347  0C7D  1506               	bsf	6,2	;volatile
  6348  0C7E  2C80               	goto	l162
  6349  0C7F                     l161:	
  6350                           
  6351                           ;lcd_Config.c: 18: else
  6352                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  6353  0C7F  1106               	bcf	6,2	;volatile
  6354  0C80                     l162:	
  6355                           
  6356                           ;lcd_Config.c: 21: if (a & 4)
  6357  0C80  1D74               	btfss	Lcd_Port@a,2
  6358  0C81  2C84               	goto	l163
  6359                           
  6360                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  6361  0C82  1486               	bsf	6,1	;volatile
  6362  0C83  2C85               	goto	l164
  6363  0C84                     l163:	
  6364                           
  6365                           ;lcd_Config.c: 23: else
  6366                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  6367  0C84  1086               	bcf	6,1	;volatile
  6368  0C85                     l164:	
  6369                           
  6370                           ;lcd_Config.c: 26: if (a & 8)
  6371  0C85  1DF4               	btfss	Lcd_Port@a,3
  6372  0C86  2C89               	goto	l165
  6373                           
  6374                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  6375  0C87  1406               	bsf	6,0	;volatile
  6376  0C88  0008               	return
  6377  0C89                     l165:	
  6378                           
  6379                           ;lcd_Config.c: 28: else
  6380                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  6381  0C89  1006               	bcf	6,0	;volatile
  6382  0C8A  0008               	return
  6383  0C8B                     __end_of_Lcd_Port:	
  6384                           
  6385                           	psect	text30
  6386  0C11                     __ptext30:	
  6387 ;; *************** function _Interrupt_Init *****************
  6388 ;; Defined at:
  6389 ;;		line 10 in file "interrupt_Init.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6403 ;;      Params:         0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_system_Initialize
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           
  6418                           ;psect for function _Interrupt_Init
  6419  0C11                     _Interrupt_Init:	
  6420                           
  6421                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6422                           
  6423                           ;incstack = 0
  6424                           ; Regs used in _Interrupt_Init: []
  6425  0C11  178B               	bsf	11,7	;volatile
  6426                           
  6427                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6428  0C12  170B               	bsf	11,6	;volatile
  6429                           
  6430                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6431  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  6432  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  6433  0C15  170C               	bsf	12,6	;volatile
  6434                           
  6435                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6436  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  6437  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  6438  0C18  130C               	bcf	12,6	;volatile
  6439                           
  6440                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6441  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0C1A  1303               	bcf	3,6	;RP1=0, select bank1
  6443  0C1B  168C               	bsf	12,5	;volatile
  6444                           
  6445                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6446  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0C1E  128C               	bcf	12,5	;volatile
  6449  0C1F  0008               	return
  6450  0C20                     __end_of_Interrupt_Init:	
  6451                           
  6452                           	psect	text31
  6453  0C58                     __ptext31:	
  6454 ;; *************** function _ADC_Init *****************
  6455 ;; Defined at:
  6456 ;;		line 13 in file "adc_Init.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6470 ;;      Params:         0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    1
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_system_Initialize
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _ADC_Init
  6486  0C58                     _ADC_Init:	
  6487                           
  6488                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6492  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0C5A  081F               	movf	31,w	;volatile
  6495  0C5B  393F               	andlw	-193
  6496  0C5C  3840               	iorlw	64
  6497  0C5D  009F               	movwf	31	;volatile
  6498                           
  6499                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6500  0C5E  30C3               	movlw	-61
  6501  0C5F  059F               	andwf	31,f	;volatile
  6502                           
  6503                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6504  0C60  109F               	bcf	31,1	;volatile
  6505  0C61  1C9F               	btfss	31,1	;volatile
  6506  0C62  2C67               	goto	u1080
  6507  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6508  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0C65  149F               	bsf	31,1	;volatile
  6510  0C66  2C6A               	goto	l1435
  6511  0C67                     u1080:	
  6512  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0C69  109F               	bcf	31,1	;volatile
  6515  0C6A                     l1435:	
  6516                           
  6517                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6518  0C6A  141F               	bsf	31,0	;volatile
  6519                           
  6520                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6521  0C6B  1683               	bsf	3,5	;RP0=1, select bank1
  6522  0C6C  1303               	bcf	3,6	;RP1=0, select bank1
  6523  0C6D  179F               	bsf	31,7	;volatile
  6524                           
  6525                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6526  0C6E  121F               	bcf	31,4	;volatile
  6527                           
  6528                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6529  0C6F  129F               	bcf	31,5	;volatile
  6530  0C70  0008               	return
  6531  0C71                     __end_of_ADC_Init:	
  6532                           
  6533                           	psect	text32
  6534  07FD                     __ptext32:	
  6535 ;; *************** function _Ass_2 *****************
  6536 ;; Defined at:
  6537 ;;		line 15 in file "Assignement_Two.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		None
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6551 ;;      Params:         0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           
  6566                           ;psect for function _Ass_2
  6567  07FD                     _Ass_2:	
  6568                           
  6569                           ;Assignement_Two.c: 20: return;
  6570                           
  6571                           ;incstack = 0
  6572                           ; Regs used in _Ass_2: []
  6573  07FD  0008               	return
  6574  07FE                     __end_of_Ass_2:	
  6575                           
  6576                           	psect	text33
  6577  06B6                     __ptext33:	
  6578 ;; *************** function _ASS_1 *****************
  6579 ;; Defined at:
  6580 ;;		line 15 in file "Assignement_One.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  bSize           2   16[BANK0 ] int 
  6585 ;;  bSize           2   14[BANK0 ] int 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         0       0       0       0       0
  6596 ;;      Locals:         0       4       0       0       0
  6597 ;;      Temps:          0       6       0       0       0
  6598 ;;      Totals:         0      10       0       0       0
  6599 ;;Total ram usage:       10 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    3
  6602 ;; This function calls:
  6603 ;;		_UART_Read
  6604 ;;		_UART_Write_String
  6605 ;; This function is called by:
  6606 ;;		_main
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function _ASS_1
  6612  06B6                     _ASS_1:	
  6613                           
  6614                           ;Assignement_One.c: 17: for (int bSize = 0; !PIR1bits.RCIF; bSize++) {
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _ASS_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6618  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  6619  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  6620  06B8  01AE               	clrf	ASS_1@bSize
  6621  06B9  01AF               	clrf	ASS_1@bSize+1
  6622  06BA                     l2951:	
  6623  06BA  1A8C               	btfsc	12,5	;volatile
  6624  06BB  2EEE               	goto	l32
  6625                           
  6626                           ;Assignement_One.c: 18: dataBuffer[bSize] = UART_Read();
  6627  06BC  120A  158A  23F5  120A  118A  	fcall	_UART_Read
  6628  06C1  0874               	movf	?_UART_Read,w
  6629  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  6630  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  6631  06C4  00A8               	movwf	??_ASS_1
  6632  06C5  0875               	movf	?_UART_Read+1,w
  6633  06C6  00A9               	movwf	??_ASS_1+1
  6634  06C7  01AA               	clrf	??_ASS_1+2
  6635  06C8  01AB               	clrf	??_ASS_1+3
  6636  06C9  082E               	movf	ASS_1@bSize,w
  6637  06CA  00AC               	movwf	??_ASS_1+4
  6638  06CB  3001               	movlw	1
  6639  06CC                     u4145:	
  6640  06CC  1003               	clrc
  6641  06CD  0DAC               	rlf	??_ASS_1+4,f
  6642  06CE  3EFF               	addlw	-1
  6643  06CF  1D03               	skipz
  6644  06D0  2ECC               	goto	u4145
  6645  06D1  1003               	clrc
  6646  06D2  0D2C               	rlf	??_ASS_1+4,w
  6647  06D3  076E               	addwf	_dataBuffer,w
  6648  06D4  00AD               	movwf	??_ASS_1+5
  6649  06D5  082D               	movf	??_ASS_1+5,w
  6650  06D6  0084               	movwf	4
  6651  06D7  0828               	movf	??_ASS_1,w
  6652  06D8  1383               	bcf	3,7	;select IRP bank0
  6653  06D9  0080               	movwf	0
  6654  06DA  0A84               	incf	4,f
  6655  06DB  0829               	movf	??_ASS_1+1,w
  6656  06DC  0080               	movwf	0
  6657  06DD  0A84               	incf	4,f
  6658  06DE  082A               	movf	??_ASS_1+2,w
  6659  06DF  0080               	movwf	0
  6660  06E0  0A84               	incf	4,f
  6661  06E1  082B               	movf	??_ASS_1+3,w
  6662  06E2  0080               	movwf	0
  6663                           
  6664                           ;Assignement_One.c: 19: if (!PIR1bits.RCIF == 1)
  6665  06E3  1A8C               	btfsc	12,5	;volatile
  6666  06E4  2EE7               	goto	l2949
  6667                           
  6668                           ;Assignement_One.c: 20: data_TransferComplete = 1;
  6669  06E5  01F7               	clrf	_data_TransferComplete
  6670  06E6  0AF7               	incf	_data_TransferComplete,f
  6671  06E7                     l2949:	
  6672  06E7  3001               	movlw	1
  6673  06E8  07AE               	addwf	ASS_1@bSize,f
  6674  06E9  1803               	skipnc
  6675  06EA  0AAF               	incf	ASS_1@bSize+1,f
  6676  06EB  3000               	movlw	0
  6677  06EC  07AF               	addwf	ASS_1@bSize+1,f
  6678  06ED  2EBA               	goto	l2951
  6679  06EE                     l32:	
  6680                           
  6681                           ;Assignement_One.c: 21: }
  6682                           ;Assignement_One.c: 23: if (PORTBbits.RB7 == 1 || data_TransferComplete) {
  6683  06EE  1B86               	btfsc	6,7	;volatile
  6684  06EF  2EF3               	goto	l2955
  6685  06F0  0877               	movf	_data_TransferComplete,w
  6686  06F1  1903               	btfsc	3,2
  6687  06F2  0008               	return
  6688  06F3                     l2955:	
  6689                           
  6690                           ;Assignement_One.c: 24: for (int bSize = 0; !TXSTAbits.TRMT; bSize++)
  6691  06F3  01B0               	clrf	ASS_1@bSize_145
  6692  06F4  01B1               	clrf	ASS_1@bSize_145+1
  6693  06F5                     l2961:	
  6694  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  6695  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  6696  06F7  1898               	btfsc	24,1	;volatile
  6697  06F8  2F1D               	goto	l2963
  6698                           
  6699                           ;Assignement_One.c: 25: UART_Write_String(dataBuffer[bSize]);
  6700  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  6701  06FA  0830               	movf	ASS_1@bSize_145,w
  6702  06FB  00A8               	movwf	??_ASS_1
  6703  06FC  3001               	movlw	1
  6704  06FD                     u4195:	
  6705  06FD  1003               	clrc
  6706  06FE  0DA8               	rlf	??_ASS_1,f
  6707  06FF  3EFF               	addlw	-1
  6708  0700  1D03               	skipz
  6709  0701  2EFD               	goto	u4195
  6710  0702  1003               	clrc
  6711  0703  0D28               	rlf	??_ASS_1,w
  6712  0704  076E               	addwf	_dataBuffer,w
  6713  0705  00A9               	movwf	??_ASS_1+1
  6714  0706  0829               	movf	??_ASS_1+1,w
  6715  0707  0084               	movwf	4
  6716  0708  1383               	bcf	3,7	;select IRP bank0
  6717  0709  0800               	movf	0,w
  6718  070A  00A0               	movwf	UART_Write_String@cText
  6719  070B  0A84               	incf	4,f
  6720  070C  0800               	movf	0,w
  6721  070D  0384               	decf	4,f
  6722  070E  00A1               	movwf	UART_Write_String@cText+1
  6723  070F  120A  158A  2563  120A  118A  	fcall	_UART_Write_String
  6724  0714  3001               	movlw	1
  6725  0715  1283               	bcf	3,5	;RP0=0, select bank0
  6726  0716  1303               	bcf	3,6	;RP1=0, select bank0
  6727  0717  07B0               	addwf	ASS_1@bSize_145,f
  6728  0718  1803               	skipnc
  6729  0719  0AB1               	incf	ASS_1@bSize_145+1,f
  6730  071A  3000               	movlw	0
  6731  071B  07B1               	addwf	ASS_1@bSize_145+1,f
  6732  071C  2EF5               	goto	l2961
  6733  071D                     l2963:	
  6734                           
  6735                           ;Assignement_One.c: 26: data_TransferComplete = 0;
  6736  071D  01F7               	clrf	_data_TransferComplete
  6737  071E  0008               	return
  6738  071F                     __end_of_ASS_1:	
  6739                           ;Assignement_One.c: 27: }
  6740                           ;Assignement_One.c: 28: return;
  6741                           
  6742                           
  6743                           	psect	text34
  6744  0D63                     __ptext34:	
  6745 ;; *************** function _UART_Write_String *****************
  6746 ;; Defined at:
  6747 ;;		line 32 in file "uart_Init.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  cText           2    0[BANK0 ] PTR unsigned char 
  6750 ;;		 -> RAM(512), 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  iSize           2    6[BANK0 ] int 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6762 ;;      Params:         0       2       0       0       0
  6763 ;;      Locals:         0       2       0       0       0
  6764 ;;      Temps:          0       4       0       0       0
  6765 ;;      Totals:         0       8       0       0       0
  6766 ;;Total ram usage:        8 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    2
  6769 ;; This function calls:
  6770 ;;		_UART_Write_char
  6771 ;; This function is called by:
  6772 ;;		_ASS_1
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function _UART_Write_String
  6778  0D63                     _UART_Write_String:	
  6779                           
  6780                           ;uart_Init.c: 33: for (int iSize = 0; cText[iSize] != '\0'; iSize++) {
  6781                           
  6782                           ;incstack = 0
  6783                           ; Regs used in _UART_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6784  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0D65  01A6               	clrf	UART_Write_String@iSize
  6787  0D66  01A7               	clrf	UART_Write_String@iSize+1
  6788  0D67                     l2781:	
  6789  0D67  0826               	movf	UART_Write_String@iSize,w
  6790  0D68  0720               	addwf	UART_Write_String@cText,w
  6791  0D69  00A2               	movwf	??_UART_Write_String
  6792  0D6A  0827               	movf	UART_Write_String@iSize+1,w
  6793  0D6B  1803               	skipnc
  6794  0D6C  0A27               	incf	UART_Write_String@iSize+1,w
  6795  0D6D  0721               	addwf	UART_Write_String@cText+1,w
  6796  0D6E  00A3               	movwf	??_UART_Write_String+1
  6797  0D6F  0822               	movf	??_UART_Write_String,w
  6798  0D70  0084               	movwf	4
  6799  0D71  1783               	bsf	3,7
  6800  0D72  1C23               	btfss	??_UART_Write_String+1,0
  6801  0D73  1383               	bcf	3,7
  6802  0D74  0800               	movf	0,w
  6803  0D75  1903               	btfsc	3,2
  6804  0D76  0008               	return
  6805                           
  6806                           ;uart_Init.c: 34: UART_Write_char(cText[iSize]);
  6807  0D77  0826               	movf	UART_Write_String@iSize,w
  6808  0D78  0720               	addwf	UART_Write_String@cText,w
  6809  0D79  00A2               	movwf	??_UART_Write_String
  6810  0D7A  0827               	movf	UART_Write_String@iSize+1,w
  6811  0D7B  1803               	skipnc
  6812  0D7C  0A27               	incf	UART_Write_String@iSize+1,w
  6813  0D7D  0721               	addwf	UART_Write_String@cText+1,w
  6814  0D7E  00A3               	movwf	??_UART_Write_String+1
  6815  0D7F  0822               	movf	??_UART_Write_String,w
  6816  0D80  0084               	movwf	4
  6817  0D81  1783               	bsf	3,7
  6818  0D82  1C23               	btfss	??_UART_Write_String+1,0
  6819  0D83  1383               	bcf	3,7
  6820  0D84  0800               	movf	0,w
  6821  0D85  00A4               	movwf	??_UART_Write_String+2
  6822  0D86  01A5               	clrf	??_UART_Write_String+3
  6823  0D87  0824               	movf	??_UART_Write_String+2,w
  6824  0D88  00F4               	movwf	UART_Write_char@iData
  6825  0D89  0825               	movf	??_UART_Write_String+3,w
  6826  0D8A  00F5               	movwf	UART_Write_char@iData+1
  6827  0D8B  120A  158A  23D4  120A  158A  	fcall	_UART_Write_char
  6828  0D90  3001               	movlw	1
  6829  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  6830  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  6831  0D93  07A6               	addwf	UART_Write_String@iSize,f
  6832  0D94  1803               	skipnc
  6833  0D95  0AA7               	incf	UART_Write_String@iSize+1,f
  6834  0D96  3000               	movlw	0
  6835  0D97  07A7               	addwf	UART_Write_String@iSize+1,f
  6836  0D98  2D67               	goto	l2781
  6837  0D99                     __end_of_UART_Write_String:	
  6838                           
  6839                           	psect	text35
  6840  0BD4                     __ptext35:	
  6841 ;; *************** function _UART_Write_char *****************
  6842 ;; Defined at:
  6843 ;;		line 27 in file "uart_Init.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  iData           2    4[COMMON] unsigned int 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6857 ;;      Params:         2       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0
  6860 ;;      Totals:         2       0       0       0       0
  6861 ;;Total ram usage:        2 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    1
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_UART_Write_String
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function _UART_Write_char
  6873  0BD4                     _UART_Write_char:	
  6874  0BD4                     l386:	
  6875                           ;uart_Init.c: 28: while(!TXSTAbits.TRMT);
  6876                           
  6877                           ;incstack = 0
  6878                           ; Regs used in _UART_Write_char: [wreg]
  6879                           
  6880  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  6881  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  6882  0BD6  1C98               	btfss	24,1	;volatile
  6883  0BD7  2BD4               	goto	l386
  6884                           
  6885                           ;uart_Init.c: 29: TXREG = iData;
  6886  0BD8  0874               	movf	UART_Write_char@iData,w
  6887  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  6889  0BDB  0099               	movwf	25	;volatile
  6890  0BDC  0008               	return
  6891  0BDD                     __end_of_UART_Write_char:	
  6892                           
  6893                           	psect	text36
  6894  0BF5                     __ptext36:	
  6895 ;; *************** function _UART_Read *****************
  6896 ;; Defined at:
  6897 ;;		line 38 in file "uart_Init.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  2    4[COMMON] unsigned int 
  6904 ;; Registers used:
  6905 ;;		wreg
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6911 ;;      Params:         2       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0
  6913 ;;      Temps:          0       2       0       0       0
  6914 ;;      Totals:         2       2       0       0       0
  6915 ;;Total ram usage:        4 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    1
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_ASS_1
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function _UART_Read
  6927  0BF5                     _UART_Read:	
  6928                           
  6929                           ;uart_Init.c: 39: while(!PIR1bits.RCIF)
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in _UART_Read: [wreg]
  6933  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  6934  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  6935  0BF7  1A8C               	btfsc	12,5	;volatile
  6936  0BF8  0008               	return
  6937                           
  6938                           ;uart_Init.c: 40: return RCREG;
  6939  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  6940  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0BFB  081A               	movf	26,w	;volatile
  6942  0BFC  00A0               	movwf	??_UART_Read
  6943  0BFD  01A1               	clrf	??_UART_Read+1
  6944  0BFE  0820               	movf	??_UART_Read,w
  6945  0BFF  00F4               	movwf	?_UART_Read
  6946  0C00  0821               	movf	??_UART_Read+1,w
  6947  0C01  00F5               	movwf	?_UART_Read+1
  6948  0C02  0008               	return
  6949  0C03                     __end_of_UART_Read:	
  6950                           
  6951                           	psect	text37
  6952  0CAE                     __ptext37:	
  6953 ;; *************** function _ISR *****************
  6954 ;; Defined at:
  6955 ;;		line 25 in file "interrupt_Init.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		None
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6969 ;;      Params:         0       0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0
  6971 ;;      Temps:          4       0       0       0       0
  6972 ;;      Totals:         4       0       0       0       0
  6973 ;;Total ram usage:        4 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		Interrupt level 1
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           
  6983                           ;psect for function _ISR
  6984  0CAE                     _ISR:	
  6985                           
  6986                           ;interrupt_Init.c: 26: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  6987  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  6988  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  6989  0CB0  1E8C               	btfss	12,5	;volatile
  6990  0CB1  2CB7               	goto	i1l268
  6991  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  6992  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  6993  0CB4  1E8C               	btfss	12,5	;volatile
  6994  0CB5  2CB7               	goto	i1l268
  6995                           
  6996                           ;interrupt_Init.c: 27: PIR1bits.RCIF = 0;
  6997  0CB6  128C               	bcf	12,5	;volatile
  6998  0CB7                     i1l268:	
  6999                           
  7000                           ;interrupt_Init.c: 28: }
  7001                           ;interrupt_Init.c: 29: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  7002  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  7003  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  7004  0CB9  1F0C               	btfss	12,6	;volatile
  7005  0CBA  2CC0               	goto	i1l269
  7006  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  7007  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  7008  0CBD  1F0C               	btfss	12,6	;volatile
  7009  0CBE  2CC0               	goto	i1l269
  7010                           
  7011                           ;interrupt_Init.c: 30: PIR1bits.ADIF = 0;
  7012  0CBF  130C               	bcf	12,6	;volatile
  7013  0CC0                     i1l269:	
  7014                           
  7015                           ;interrupt_Init.c: 31: }
  7016                           ;interrupt_Init.c: 32: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  7017  0CC0  1A8B               	btfsc	11,5	;volatile
  7018  0CC1  1D0B               	btfss	11,2	;volatile
  7019  0CC2  2CC4               	goto	i1l270
  7020                           
  7021                           ;interrupt_Init.c: 33: INTCONbits.T0IF = 0;
  7022  0CC3  110B               	bcf	11,2	;volatile
  7023  0CC4                     i1l270:	
  7024                           
  7025                           ;interrupt_Init.c: 34: }
  7026                           ;interrupt_Init.c: 35: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  7027  0CC4  1683               	bsf	3,5	;RP0=1, select bank1
  7028  0CC5  1303               	bcf	3,6	;RP1=0, select bank1
  7029  0CC6  1D8C               	btfss	12,3	;volatile
  7030  0CC7  2CCD               	goto	i1l272
  7031  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  7032  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  7033  0CCA  1D8C               	btfss	12,3	;volatile
  7034  0CCB  2CCD               	goto	i1l272
  7035                           
  7036                           ;interrupt_Init.c: 36: PIR1bits.SSPIF = 0;
  7037  0CCC  118C               	bcf	12,3	;volatile
  7038  0CCD                     i1l272:	
  7039  0CCD  0873               	movf	??_ISR+3,w
  7040  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  7041  0CCF  00FF               	movwf	127
  7042  0CD0  0872               	movf	??_ISR+2,w
  7043  0CD1  008A               	movwf	10
  7044  0CD2  0871               	movf	??_ISR+1,w
  7045  0CD3  0084               	movwf	4
  7046  0CD4  0E70               	swapf	??_ISR^(0+-128),w
  7047  0CD5  0083               	movwf	3
  7048  0CD6  0EFE               	swapf	126,f
  7049  0CD7  0E7E               	swapf	126,w
  7050  0CD8  0009               	retfie
  7051  0CD9                     __end_of_ISR:	
  7052  007E                     btemp	set	126	;btemp
  7053  007E                     wtemp0	set	126
  7054                           
  7055                           	psect	intentry
  7056  0004                     __pintentry:	
  7057                           ;incstack = 0
  7058                           ; Regs used in _ISR: []
  7059                           
  7060  0004                     interrupt_function:	
  7061  007E                     saved_w	set	btemp
  7062  0004  00FE               	movwf	btemp
  7063  0005  0E03               	swapf	3,w
  7064  0006  00F0               	movwf	??_ISR
  7065  0007  0804               	movf	4,w
  7066  0008  00F1               	movwf	??_ISR+1
  7067  0009  080A               	movf	10,w
  7068  000A  00F2               	movwf	??_ISR+2
  7069  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7070  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7071  000D  087F               	movf	btemp+1,w
  7072  000E  00F3               	movwf	??_ISR+3
  7073  000F  120A  158A  2CAE   	ljmp	_ISR


Data Sizes:
    Strings     37
    Constant    10
    Data        12
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     78      79
    BANK1            80     18      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Write_String@cText	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    temp_Display@TEMP	PTR unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[13]), 

    Lcd_write@string	PTR unsigned char  size(2) Largest target is 13
		 -> sTemperature(BANK1[2]), STR_3(CODE[13]), 

    dataBuffer	PTR unsigned long  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    student_Name	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    student_Number	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _temp_Measurement->___lwdiv
    _temp_Measurement->___lwtoft
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ASS_1->_UART_Read
    _UART_Write_String->_UART_Write_char

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_Display
    _temp_Display->_temp_Measurement
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _ASS_1->_UART_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20436
                              _ASS_1
                              _Ass_2
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                         4     4      0   17495
                                             77 BANK0      1     1      0
                                             15 BANK1      3     3      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13825
                                             70 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              4 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             56 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                             11 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             27 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             43 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2399
                                              0 BANK1     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            7     5      2     538
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ass_2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ASS_1                                               10    10      0     389
                                              8 BANK0     10    10      0
                          _UART_Read
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    8     6      2     315
                                              0 BANK0      8     6      2
                    _UART_Write_char
 ---------------------------------------------------------------------------------
 (3) _UART_Write_char                                      2     0      2     108
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            4     2      2       0
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ASS_1
     _UART_Read
     _UART_Write_String
       _UART_Write_char
   _Ass_2
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      25       7       46.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jul 22 00:13:51 2019

          ??_Interrupt_Init 0074      UART_Write_String@cText 0020      UART_Write_String@iSize 0026  
    __size_of_PWM_DutyCycle 006F                           pc 0002                 __CFG_CP$OFF 0000  
                        l32 06EE                          fsr 0004         ___wmul@multiplicand 0022  
__size_of_UART_Write_String 0036                ___ftadd@exp1 0057                ___ftadd@exp2 0056  
               __CFG_LVP$ON 0000                ___ftadd@sign 0055                         l160 0C7B  
                       l161 0C7F                         l162 0C80                         l163 0C84  
                       l164 0C85                         l165 0C89                         l237 02E6  
                       l159 0C78                         l386 0BD4                         l584 0C97  
                       l752 0695                         l489 0126                         l753 069D  
                       l745 0680                         l836 05BF                         l776 0277  
                       _PR2 0092                __CFG_CPD$OFF 0000                         _ISR 0CAE  
                       _adc 00C1                         fsr0 0004                         indf 0000  
              __CFG_IESO$ON 0000                __CFG_FOSC$HS 0000                        ?_ISR 0070  
              ___ftdiv@cntr 0045                ___ftdiv@sign 004A                        l2111 05A7  
                      l3001 0D10                        l2123 05D0                        l2133 0792  
                      l2117 05B4                        l2109 0597                        l2143 07CA  
                      l2135 07A2                        l2119 05C2                        l1435 0C6A  
                      l2147 07D7                        l2091 0565                        l2501 0685  
                      l2191 0D53                        l2503 068F                        l2185 0D37  
                      l2187 0D45                        l2195 0D5E                        l2611 023D  
                      l2613 0249                        l2605 0228                        l2701 03EE  
                      l2551 0C8D                        l2623 0267                        l2615 024E  
                      l2633 029B                        l2625 0273                        l2617 0252  
                      l2713 042D                        l2491 0659                        l2643 02BE  
                      l2565 0E58                        l2901 0118                        l2493 0665  
                      l2629 0289                        l2653 04AB                        l2725 0455  
                      l2717 043D                        l2751 0DE8                        l2911 0149  
                      l2495 066A                        l2487 0652                        l2583 01F8  
                      l2569 0E6E                        l2809 0FD7                        l2825 0E93  
                      l2761 0E09                        l2913 014D                        l2593 020E  
                      l2681 0525                        l2673 0506                        l2729 0465  
                      l1891 0C0F                        l2587 01FF                        l2659 04C1  
                      l2781 0D67                        l2757 0DFE                        l2749 0DDA  
                      l2933 0175                        l2925 0171                        l2909 0145  
                      l2861 0064                        l2845 03AD                        l2951 06BA  
                      l2919 0162                        l2935 0042                        l2695 03D8  
                      l2839 0309                        l2961 06F5                        l2937 01C8  
                      l2849 03BE                        l2963 071D                        l2955 06F3  
                      l2867 0079                        l2949 06E7                        l2877 00C1  
                      l2895 00F7                        l2879 00D8                        l2889 00F1  
                      l2997 0D15                        l2999 0D0A                        STR_1 0827  
                      STR_2 0831                        STR_3 081A                        STR_4 083B  
                      u1080 0C67                        u3105 065E                        u3205 0DAA  
                      u3125 0679                        u2505 07CB                        u3145 0688  
                      u2425 05B6                        u3235 0C98                        u2605 0D3A  
                      u3245 0C9F                        u4045 010E                        u3405 0229  
                      u2365 056C                        u4145 06CC                        u2465 0796  
                      u2705 0E40                        u2625 0D4B                        u3185 06A4  
                      u4217 02DE                        u4227 0DBA                        u2635 0D54  
                      u3435 023E                        u2395 0598                        u2485 07A4  
                      u3285 0E70                        u4237 0DCA                        u4085 0135  
                      u3605 0518                        u4247 072B                        u2495 07B9  
                      u3295 0E78                        u3615 0526                        u4257 073C  
                      u3465 0253                        u3705 0446                        u4195 06FD  
                      u4267 074D                        u2675 0EDE                        u4277 07F3  
                      u3805 0DE9                        u3815 0DF5                        u3495 0268  
                      u3575 04D3                        u3655 03FA                        u3825 0DFF  
                      u3585 04E5                        u3745 0466                        u3665 040C  
                      u3915 0FE5                        u3595 0507                        u3755 046E  
                      u3695 043E                        u3865 0626                        u3785 0DDD  
                      u3875 063D                        u3965 0307                        u3895 0FBC  
                      u3985 03BC                        _TMR0 0001                __CFG_WRT$OFF 0000  
             __CFG_FCMEN$ON 0000                        _main 0D04                ___ftpack@arg 0020  
              ___ftpack@exp 0023                        btemp 007E            __end_of_ADC_Init 0C71  
                      start 0012       _temp_Measurement$1694 0068             __end_of_Lcd_Cmd 07FC  
             __CFG_MCLRE$ON 0000                ___ftmul@cntr 0039                ___ftmul@sign 003A  
         ??_Oscillator_Init 0074                       ??_ISR 0070     __end_of_UART_Write_char 0BDD  
              ___fttol@exp1 0065                ___fttol@lval 0061                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 02D8               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 054B             __end_of___lldiv 07E0             __end_of___ftmul 0493  
           __end_of___fttol 05D9                       _ASS_1 06B6             __end_of___lwdiv 0E0E  
                     i1l270 0CC4                       i1l272 0CCD             __end_of___lwmod 0D63  
                     i1l268 0CB7                       i1l269 0CC0                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
   __size_of_Lcd_Set_Cursor 0052                       _TRISB 0086                       _TRISD 0088  
                     _TXREG 0019                       _Ass_2 07FD         ___lmul@multiplicand 0024  
        __size_of_UART_Init 0040          __size_of_UART_Read 000E          __size_of_TMR0_Init 000F  
             _PWM_DutyCycle 05D9             __end_of_dpowers 081A             __end_of_isdigit 0C11  
             ___ftpack@sign 0024            __end_of_SPI_Init 0BF5              __CFG_BOREN$OFF 0000  
                     pclath 000A            __end_of_PWM_Init 0F15                       status 0003  
                     wtemp0 007E             __end_of_sprintf 01CF            __end_of_Lcd_Init 0780  
          __end_of_Lcd_Port 0C8B             __initialization 0015                __end_of_main 0D2F  
              _student_Name 00BC                      ??_main 0076               ___fttol@sign1 0060  
                    ?_ASS_1 0070                      ?_Ass_2 0070              ?_PWM_DutyCycle 0039  
        __size_of_Lcd_write 0041                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _EECON2 018D  
          __end_of___ftpack 06B6                      _ANSELH 0189            __end_of___lwtoft 0C58  
                    _OSCCON 008F                   ??_Lcd_Cmd 0020     __size_of_Lcd_Write_Char 0037  
                    _SSPBUF 0013              __CFG_PWRTE$OFF 0000           __end_of_UART_Init 0E4E  
         __end_of_UART_Read 0C03           __end_of_TMR0_Init 0C2F                      ___lmul 0E4E  
                    ___wmul 0C8B                   ??___ftadd 0051                   ??___ftdiv 0041  
                 ??___lldiv 0075                   ??___ftmul 0031                   ??___fttol 005C  
          ?_UART_Write_char 0074                   ??___lwdiv 0074                   ??___lwmod 0075  
     ___ftmul@f3_as_product 0036           ?_temp_Measurement 0070                __pdataCOMMON 0079  
                 ??_isdigit 0074                   ?_ADC_Init 0070                      saved_w 007E  
        ??_temp_Measurement 0066                   ??_sprintf 00A3             Lcd_Set_Cursor@y 0027  
           Lcd_Set_Cursor@z 0026     __end_of__initialization 0037                  ___ftadd@f1 004B  
                ___ftadd@f2 004E                  ___ftdiv@f1 003E                  ___ftdiv@f2 003B  
                ___ftdiv@f3 0046               __end_of_ASS_1 071F                  ___ftmul@f1 002B  
                ___ftmul@f2 002E               __end_of_Ass_2 07FE                  ___fttol@f1 0058  
            __pcstackCOMMON 0070                __pidataBANK1 0BDD           __end_of_Lcd_write 0ED0  
                 ?_SPI_Init 0070                  ___lwtoft@c 0028                   ?_PWM_Init 0039  
                   ??_ASS_1 0028              _Lcd_Set_Cursor 0FAE             ??_PWM_DutyCycle 003D  
            _OPTION_REGbits 0081                  ??_ADC_Init 0074                     ??_Ass_2 0074  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  _dataBuffer 006E  
              sprintf@width 00AC                  __pbssBANK0 006E                  __pbssBANK1 00BD  
           _Oscillator_Init 0BCF                  __pmaintext 0D04                     ?___lmul 0020  
                   ?___wmul 0020                  __pintentry 0004              ___lmul@product 0028  
                 ?___ftpack 0020      __end_of_Lcd_Set_Cursor 1000                  ??_SPI_Init 0074  
                ??_PWM_Init 003D                   ?___lwtoft 0028                     _GO_DONE 00F9  
                   _OSCTUNE 0090                  ??_Lcd_Init 0022                  ??_Lcd_Port 0074  
                __stringtab 0800              _Lcd_Write_Char 0D99                     _Lcd_Cmd 07E0  
             ?_temp_Display 0070             __size_of___lmul 0041                     ___ftadd 01CF  
                   ___ftdiv 0493                     ___lldiv 0780             __size_of___wmul 0023  
                   ___ftmul 03C0                     ___fttol 054B                     ___lwdiv 0DD0  
                   ___lwmod 0D2F                  ??___ftpack 0025                   _ANSELbits 0188  
           ?_Lcd_Set_Cursor 0022                     __ptext1 0F60                     __ptext2 02D8  
                   __ptext3 0C40                     __ptext4 054B                     __ptext5 03C0  
                   __ptext6 0493                     __ptext7 01CF                     __ptext8 0648  
                   __ptext9 003B                     _g_state 0078                  ??___lwtoft 0074  
                _pinManager 0CD9                __size_of_ISR 002B                     _dpowers 0810  
                 _T2CONbits 0012                     _rawData 00BD     __size_of_Interrupt_Init 000F  
                   _isdigit 0C03     __end_of_Oscillator_Init 0BD4                     _sprintf 003B  
    __end_of_Lcd_Write_Char 0DD0        end_of_initialization 0037              ??_temp_Display 00AF  
           ___lldiv@divisor 002C            temp_Display@TEMP 006D             ___lldiv@counter 0038  
                 _RCSTAbits 0018                   Lcd_Port@a 0074                   _UART_Init 0E0E  
                 _UART_Read 0BF5                   _TMR0_Init 0C20                   _PORTAbits 0005  
                 _PORTBbits 0006                  ASS_1@bSize 002E                   _TRISAbits 0085  
                 _TRISBbits 0086                   _TRISCbits 0087          PWM_Init@iFrequency 0039  
         _system_Initialize 0F15           __size_of_ADC_Init 0019          ?_system_Initialize 0070  
           ?_Lcd_Write_Char 0070                 _CCP1CONbits 0017                 ___ftdiv@exp 0049  
 __size_of_temp_Measurement 00E8                   _TXSTAbits 0098                _sTemperature 00C3  
       ??_system_Initialize 0076                 ___ftmul@exp 0035              __end_of___lmul 0E8F  
            __end_of___wmul 0CAE                  ?_UART_Init 0039                  ?_UART_Read 0074  
             __pidataCOMMON 07FC                 _BAUDCTLbits 0187                  ?_TMR0_Init 0070  
                 _Lcd_write 0E8F                 ?_pinManager 0070   __end_of_system_Initialize 0F60  
         __size_of_SPI_Init 000D    __size_of_UART_Write_char 0009           __size_of_PWM_Init 0045  
       start_initialization 0015            ?_Oscillator_Init 0070                 __end_of_ISR 0CD9  
     _data_TransferComplete 0077              _student_Number 0079           __size_of_Lcd_Init 0061  
         __size_of_Lcd_Port 001A                    ??___lmul 0074                    ??___wmul 0074  
                init_fetch0 0C2F                 __pdataBANK1 00B2             Lcd_Write_Char@a 0022  
           Lcd_Write_Char@y 0021               _segment_Array 00B2        __end_of_temp_Display 0FAE  
                ?_Lcd_write 0023      temp_Measurement@sample 006B              _Interrupt_Init 0C11  
         __size_of___ftpack 006E                 __pbssCOMMON 0076                   ___latbits 0002  
         __size_of___lwtoft 0018               __pcstackBANK0 0020               __pcstackBANK1 00A0  
     __end_of_PWM_DutyCycle 0648                _isdigit$1446 0074                    ?_Lcd_Cmd 0070  
               sprintf@flag 00A8                 sprintf@prec 00A7         __size_of_pinManager 002B  
          ___lwdiv@dividend 0022            ??_Lcd_Set_Cursor 0023                    ?___ftadd 004B  
                  ?___ftdiv 003B                    ?___lldiv 002C                    ?___ftmul 002B  
                  ?___fttol 0058                    ?___lwdiv 0020                    ?___lwmod 0027  
               ??_UART_Init 003B                 ??_UART_Read 0020      __end_of_Interrupt_Init 0C20  
               ??_TMR0_Init 0074                   __pstrings 0800              __size_of_ASS_1 0069  
__size_of_system_Initialize 004B                    ?_isdigit 0070             Lcd_write@string 0023  
                  _ADC_Init 0C58              __size_of_Ass_2 0001     PWM_DutyCycle@iDutyCycle 0039  
          ___lwdiv@quotient 0025                    ?_sprintf 00A0           ??_UART_Write_char 0076  
         interrupt_function 0004              ___wmul@product 0074            _temp_Measurement 02D8  
                  _PIE1bits 008C                    Lcd_Cmd@a 0075                    _PIR1bits 000C  
         UART_Init@baudRate 0039                    _SPI_Init 0BE8             ?_Interrupt_Init 0070  
               ??_Lcd_write 0025                  _ADCON0bits 001F                 __stringbase 080F  
                _ADCON1bits 009F                    _PWM_Init 0ED0           ___wmul@multiplier 0020  
          ??_Lcd_Write_Char 0075                    _Lcd_Init 071F                    _Lcd_Port 0C71  
         ___lmul@multiplier 0020        Lcd_Set_Cursor@column 0022        UART_Write_char@iData 0074  
          __size_of_Lcd_Cmd 001C                  _EECON1bits 018C       __size_of_temp_Display 004E  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___lldiv 0060  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 0648          __end_of__stringtab 0810  
              ??_pinManager 0074                    ___lwtoft 0C40           _UART_Write_String 0D63  
                sprintf@val 00A9            __size_of_isdigit 000E          ?_UART_Write_String 0020  
           ___lwdiv@divisor 0020             ___lwdiv@counter 0024                    __ptext10 0C03  
                  __ptext11 0C8B                    __ptext20 0C20                    __ptext12 0D2F  
                  __ptext21 0BE8                    __ptext13 0DD0                    __ptext30 0C11  
                  __ptext22 0ED0                    __ptext14 0E8F                    __ptext31 0C58  
                  __ptext23 05D9                    __ptext15 0D99                    __ptext32 07FD  
                  __ptext24 0E4E                    __ptext16 0FAE                    __ptext33 06B6  
                  __ptext25 0780                    __ptext17 0F15                    __ptext34 0D63  
                  __ptext26 0BCF                    __ptext18 0CD9                    __ptext35 0BD4  
                  __ptext27 071F                    __ptext19 0E0E                    __ptext36 0BF5  
                  __ptext28 07E0                    __ptext37 0CAE                    __ptext29 0C71  
         __CFG_BOR4V$BOR40V 0000            __size_of_sprintf 0194         ??_UART_Write_String 0022  
             __size_of_main 002B                _temp_Display 0F60          __end_of_pinManager 0D04  
            ASS_1@bSize_145 0030   __end_of_UART_Write_String 0D99                  _INTCONbits 000B  
                  init_ram0 0C33                    isdigit@c 0075          Lcd_Write_Char@temp 0020  
                  intlevel1 0000                   sprintf@ap 00A6                   sprintf@sp 00AB  
  __size_of_Oscillator_Init 0005            ___lwmod@dividend 0029            ___lldiv@dividend 0030  
                 stringcode 080A          Lcd_Set_Cursor@temp 0028    __end_of_temp_Measurement 03C0  
               _temperature 0076                    sprintf@c 00AE                    sprintf@f 00A0  
           _UART_Write_char 0BD4            ___lldiv@quotient 0034             ___lwmod@divisor 0027  
          _segment_Variable 00BF             ___lwmod@counter 002B                    stringdir 080A  
                  stringtab 0800           Lcd_Set_Cursor@raw 0025                  Lcd_write@i 0028  
                _SSPCONbits 0014  
