

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 17 00:40:12 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.45
    54                           ; Generated 16/11/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  000E                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0015                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  0081                     	;# 
   435  0085                     	;# 
   436  0086                     	;# 
   437  0087                     	;# 
   438  0088                     	;# 
   439  0089                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  008E                     	;# 
   443  008F                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  009F                     	;# 
   462  0105                     	;# 
   463  0107                     	;# 
   464  0108                     	;# 
   465  0109                     	;# 
   466  010C                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0185                     	;# 
   472  0187                     	;# 
   473  0188                     	;# 
   474  0189                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0008                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  000E                     	;# 
   492  000E                     	;# 
   493  000F                     	;# 
   494  0010                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0013                     	;# 
   498  0014                     	;# 
   499  0015                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  001D                     	;# 
   510  001E                     	;# 
   511  001F                     	;# 
   512  0081                     	;# 
   513  0085                     	;# 
   514  0086                     	;# 
   515  0087                     	;# 
   516  0088                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0097                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009A                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  0105                     	;# 
   541  0107                     	;# 
   542  0108                     	;# 
   543  0109                     	;# 
   544  010C                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  010F                     	;# 
   549  0185                     	;# 
   550  0187                     	;# 
   551  0188                     	;# 
   552  0189                     	;# 
   553  018C                     	;# 
   554  018D                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0008                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  000E                     	;# 
   570  000E                     	;# 
   571  000F                     	;# 
   572  0010                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0014                     	;# 
   577  0015                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001B                     	;# 
   586  001C                     	;# 
   587  001D                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  0081                     	;# 
   591  0085                     	;# 
   592  0086                     	;# 
   593  0087                     	;# 
   594  0088                     	;# 
   595  0089                     	;# 
   596  008C                     	;# 
   597  008D                     	;# 
   598  008E                     	;# 
   599  008F                     	;# 
   600  0090                     	;# 
   601  0091                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0093                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009E                     	;# 
   617  009F                     	;# 
   618  0105                     	;# 
   619  0107                     	;# 
   620  0108                     	;# 
   621  0109                     	;# 
   622  010C                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0185                     	;# 
   628  0187                     	;# 
   629  0188                     	;# 
   630  0189                     	;# 
   631  018C                     	;# 
   632  018D                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000D                     	;# 
   647  000E                     	;# 
   648  000E                     	;# 
   649  000F                     	;# 
   650  0010                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0014                     	;# 
   655  0015                     	;# 
   656  0015                     	;# 
   657  0016                     	;# 
   658  0017                     	;# 
   659  0018                     	;# 
   660  0019                     	;# 
   661  001A                     	;# 
   662  001B                     	;# 
   663  001B                     	;# 
   664  001C                     	;# 
   665  001D                     	;# 
   666  001E                     	;# 
   667  001F                     	;# 
   668  0081                     	;# 
   669  0085                     	;# 
   670  0086                     	;# 
   671  0087                     	;# 
   672  0088                     	;# 
   673  0089                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0091                     	;# 
   680  0092                     	;# 
   681  0093                     	;# 
   682  0093                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  009F                     	;# 
   696  0105                     	;# 
   697  0107                     	;# 
   698  0108                     	;# 
   699  0109                     	;# 
   700  010C                     	;# 
   701  010C                     	;# 
   702  010D                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0185                     	;# 
   706  0187                     	;# 
   707  0188                     	;# 
   708  0189                     	;# 
   709  018C                     	;# 
   710  018D                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  000E                     	;# 
   727  000F                     	;# 
   728  0010                     	;# 
   729  0011                     	;# 
   730  0012                     	;# 
   731  0013                     	;# 
   732  0014                     	;# 
   733  0015                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001D                     	;# 
   744  001E                     	;# 
   745  001F                     	;# 
   746  0081                     	;# 
   747  0085                     	;# 
   748  0086                     	;# 
   749  0087                     	;# 
   750  0088                     	;# 
   751  0089                     	;# 
   752  008C                     	;# 
   753  008D                     	;# 
   754  008E                     	;# 
   755  008F                     	;# 
   756  0090                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0093                     	;# 
   760  0093                     	;# 
   761  0093                     	;# 
   762  0094                     	;# 
   763  0095                     	;# 
   764  0096                     	;# 
   765  0097                     	;# 
   766  0098                     	;# 
   767  0099                     	;# 
   768  009A                     	;# 
   769  009B                     	;# 
   770  009C                     	;# 
   771  009D                     	;# 
   772  009E                     	;# 
   773  009F                     	;# 
   774  0105                     	;# 
   775  0107                     	;# 
   776  0108                     	;# 
   777  0109                     	;# 
   778  010C                     	;# 
   779  010C                     	;# 
   780  010D                     	;# 
   781  010E                     	;# 
   782  010F                     	;# 
   783  0185                     	;# 
   784  0187                     	;# 
   785  0188                     	;# 
   786  0189                     	;# 
   787  018C                     	;# 
   788  018D                     	;# 
   789  0000                     	;# 
   790  0001                     	;# 
   791  0002                     	;# 
   792  0003                     	;# 
   793  0004                     	;# 
   794  0005                     	;# 
   795  0006                     	;# 
   796  0007                     	;# 
   797  0008                     	;# 
   798  0009                     	;# 
   799  000A                     	;# 
   800  000B                     	;# 
   801  000C                     	;# 
   802  000D                     	;# 
   803  000E                     	;# 
   804  000E                     	;# 
   805  000F                     	;# 
   806  0010                     	;# 
   807  0011                     	;# 
   808  0012                     	;# 
   809  0013                     	;# 
   810  0014                     	;# 
   811  0015                     	;# 
   812  0015                     	;# 
   813  0016                     	;# 
   814  0017                     	;# 
   815  0018                     	;# 
   816  0019                     	;# 
   817  001A                     	;# 
   818  001B                     	;# 
   819  001B                     	;# 
   820  001C                     	;# 
   821  001D                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  0081                     	;# 
   825  0085                     	;# 
   826  0086                     	;# 
   827  0087                     	;# 
   828  0088                     	;# 
   829  0089                     	;# 
   830  008C                     	;# 
   831  008D                     	;# 
   832  008E                     	;# 
   833  008F                     	;# 
   834  0090                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0093                     	;# 
   839  0093                     	;# 
   840  0094                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009C                     	;# 
   849  009D                     	;# 
   850  009E                     	;# 
   851  009F                     	;# 
   852  0105                     	;# 
   853  0107                     	;# 
   854  0108                     	;# 
   855  0109                     	;# 
   856  010C                     	;# 
   857  010C                     	;# 
   858  010D                     	;# 
   859  010E                     	;# 
   860  010F                     	;# 
   861  0185                     	;# 
   862  0187                     	;# 
   863  0188                     	;# 
   864  0189                     	;# 
   865  018C                     	;# 
   866  018D                     	;# 
   867  0000                     	;# 
   868  0001                     	;# 
   869  0002                     	;# 
   870  0003                     	;# 
   871  0004                     	;# 
   872  0005                     	;# 
   873  0006                     	;# 
   874  0007                     	;# 
   875  0008                     	;# 
   876  0009                     	;# 
   877  000A                     	;# 
   878  000B                     	;# 
   879  000C                     	;# 
   880  000D                     	;# 
   881  000E                     	;# 
   882  000E                     	;# 
   883  000F                     	;# 
   884  0010                     	;# 
   885  0011                     	;# 
   886  0012                     	;# 
   887  0013                     	;# 
   888  0014                     	;# 
   889  0015                     	;# 
   890  0015                     	;# 
   891  0016                     	;# 
   892  0017                     	;# 
   893  0018                     	;# 
   894  0019                     	;# 
   895  001A                     	;# 
   896  001B                     	;# 
   897  001B                     	;# 
   898  001C                     	;# 
   899  001D                     	;# 
   900  001E                     	;# 
   901  001F                     	;# 
   902  0081                     	;# 
   903  0085                     	;# 
   904  0086                     	;# 
   905  0087                     	;# 
   906  0088                     	;# 
   907  0089                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  008E                     	;# 
   911  008F                     	;# 
   912  0090                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0093                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  009F                     	;# 
   930  0105                     	;# 
   931  0107                     	;# 
   932  0108                     	;# 
   933  0109                     	;# 
   934  010C                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  010E                     	;# 
   938  010F                     	;# 
   939  0185                     	;# 
   940  0187                     	;# 
   941  0188                     	;# 
   942  0189                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  0000                     	;# 
   946  0001                     	;# 
   947  0002                     	;# 
   948  0003                     	;# 
   949  0004                     	;# 
   950  0005                     	;# 
   951  0006                     	;# 
   952  0007                     	;# 
   953  0008                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  000E                     	;# 
   961  000F                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0013                     	;# 
   966  0014                     	;# 
   967  0015                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  001D                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  0081                     	;# 
   981  0085                     	;# 
   982  0086                     	;# 
   983  0087                     	;# 
   984  0088                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023                           
  1024                           	psect	idataBANK1
  1025  0CA6                     __pidataBANK1:	
  1026                           
  1027                           ;initializer for temp_Display@F2022
  1028  0CA6  3454               	retlw	84
  1029  0CA7  3465               	retlw	101
  1030  0CA8  346D               	retlw	109
  1031  0CA9  3470               	retlw	112
  1032  0CAA  3465               	retlw	101
  1033  0CAB  3472               	retlw	114
  1034  0CAC  3461               	retlw	97
  1035  0CAD  3474               	retlw	116
  1036  0CAE  3475               	retlw	117
  1037  0CAF  3472               	retlw	114
  1038  0CB0  3465               	retlw	101
  1039  0CB1  343A               	retlw	58
  1040  0CB2  3400               	retlw	0
  1041                           
  1042                           ;initializer for _segment_Array
  1043  0CB3  343F               	retlw	63
  1044  0CB4  3406               	retlw	6
  1045  0CB5  345B               	retlw	91
  1046  0CB6  344F               	retlw	79
  1047  0CB7  3466               	retlw	102
  1048  0CB8  346D               	retlw	109
  1049  0CB9  347D               	retlw	125
  1050  0CBA  3407               	retlw	7
  1051  0CBB  347F               	retlw	127
  1052  0CBC  346F               	retlw	111
  1053                           
  1054                           	psect	strings
  1055  0800                     __pstrings:	
  1056  0800                     stringtab:	
  1057  0800                     __stringtab:	
  1058  0800                     stringcode:	
  1059                           ;	String table - string pointers are 1 byte each
  1060                           
  1061  0800                     stringdir:	
  1062  0800  3008               	movlw	high stringdir
  1063  0801  008A               	movwf	10
  1064  0802  0804               	movf	4,w
  1065  0803  0A84               	incf	4,f
  1066  0804  0782               	addwf	2,f
  1067  0805                     __stringbase:	
  1068  0805  3400               	retlw	0
  1069  0806                     __end_of__stringtab:	
  1070  0806                     _dpowers:	
  1071  0806  3401               	retlw	1
  1072  0807  3400               	retlw	0
  1073  0808  340A               	retlw	10
  1074  0809  3400               	retlw	0
  1075  080A  3464               	retlw	100
  1076  080B  3400               	retlw	0
  1077  080C  34E8               	retlw	232
  1078  080D  3403               	retlw	3
  1079  080E  3410               	retlw	16
  1080  080F  3427               	retlw	39
  1081  0810                     __end_of_dpowers:	
  1082  0001                     _TMR0	set	1
  1083  001A                     _RCREG	set	26
  1084  0019                     _TXREG	set	25
  1085  0018                     _RCSTAbits	set	24
  1086  0014                     _SSPCONbits	set	20
  1087  0013                     _SSPBUF	set	19
  1088  0005                     _PORTAbits	set	5
  1089  0012                     _T2CONbits	set	18
  1090  0015                     _CCPR1L	set	21
  1091  0017                     _CCP1CONbits	set	23
  1092  000B                     _INTCONbits	set	11
  1093  001E                     _ADRESH	set	30
  1094  000C                     _PIR1bits	set	12
  1095  001F                     _ADCON0bits	set	31
  1096  0006                     _PORTBbits	set	6
  1097  0009                     _PORTE	set	9
  1098  0008                     _PORTD	set	8
  1099  0007                     _PORTC	set	7
  1100  0006                     _PORTB	set	6
  1101  0005                     _PORTA	set	5
  1102  00F9                     _GO_DONE	set	249
  1103  0081                     _OPTION_REGbits	set	129
  1104  0099                     _SPBRG	set	153
  1105  0098                     _TXSTAbits	set	152
  1106  0092                     _PR2	set	146
  1107  008C                     _PIE1bits	set	140
  1108  009E                     _ADRESL	set	158
  1109  009F                     _ADCON1bits	set	159
  1110  0090                     _OSCTUNE	set	144
  1111  008F                     _OSCCON	set	143
  1112  0085                     _TRISAbits	set	133
  1113  0087                     _TRISCbits	set	135
  1114  0086                     _TRISBbits	set	134
  1115  0086                     _TRISB	set	134
  1116  0088                     _TRISD	set	136
  1117  010D                     _EEADR	set	269
  1118  010C                     _EEDATA	set	268
  1119  018C                     _EECON1bits	set	396
  1120  0187                     _BAUDCTLbits	set	391
  1121  0188                     _ANSELbits	set	392
  1122  0189                     _ANSELH	set	393
  1123  0810                     STR_1:	
  1124  0810  3425               	retlw	37	;'%'
  1125  0811  3433               	retlw	51	;'3'
  1126  0812  3464               	retlw	100	;'d'
  1127  0813  3400               	retlw	0
  1128                           
  1129                           ; #config settings
  1130  0000                     
  1131                           	psect	cinit
  1132  0015                     start_initialization:	
  1133  0015                     __initialization:	
  1134                           
  1135                           ; Initialize objects allocated to BANK1
  1136  0015  1383               	bcf	3,7	;select IRP bank0
  1137  0016  30D6               	movlw	low (__pdataBANK1+23)
  1138  0017  00FD               	movwf	btemp+-1
  1139  0018  300C               	movlw	high __pidataBANK1
  1140  0019  00FE               	movwf	btemp
  1141  001A  30A6               	movlw	low __pidataBANK1
  1142  001B  00FF               	movwf	btemp+1
  1143  001C  30BF               	movlw	low __pdataBANK1
  1144  001D  0084               	movwf	4
  1145  001E  120A  158A  2486   	fcall	init_ram0
  1146                           
  1147                           ; Clear objects allocated to BANK1
  1148  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0023  01D6               	clrf	__pbssBANK1& (0+127)
  1151  0024  01D7               	clrf	(__pbssBANK1+1)& (0+127)
  1152  0025  01D8               	clrf	(__pbssBANK1+2)& (0+127)
  1153  0026  01D9               	clrf	(__pbssBANK1+3)& (0+127)
  1154  0027  01DA               	clrf	(__pbssBANK1+4)& (0+127)
  1155  0028  01DB               	clrf	(__pbssBANK1+5)& (0+127)
  1156                           
  1157                           ; Clear objects allocated to COMMON
  1158  0029  01F6               	clrf	__pbssCOMMON& (0+127)
  1159  002A  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1160  002B  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1161  002C  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1162  002D                     end_of_initialization:	
  1163                           ;End of C runtime variable initialization code
  1164                           
  1165  002D                     __end_of__initialization:	
  1166  002D  0183               	clrf	3
  1167  002E  120A  158A  2D6A   	ljmp	_main	;jump to C main() function
  1168                           
  1169                           	psect	bssCOMMON
  1170  0076                     __pbssCOMMON:	
  1171  0076                     _adc:	
  1172  0076                     	ds	2
  1173  0078                     _temperature:	
  1174  0078                     	ds	1
  1175  0079                     _g_state:	
  1176  0079                     	ds	1
  1177                           
  1178                           	psect	bssBANK1
  1179  00D6                     __pbssBANK1:	
  1180  00D6                     _rawData:	
  1181  00D6                     	ds	2
  1182  00D8                     _segment_Variable:	
  1183  00D8                     	ds	2
  1184  00DA                     _sTemperature:	
  1185  00DA                     	ds	2
  1186                           
  1187                           	psect	dataBANK1
  1188  00BF                     __pdataBANK1:	
  1189  00BF                     temp_Display@F2022:	
  1190  00BF                     	ds	13
  1191  00CC                     _segment_Array:	
  1192  00CC                     	ds	10
  1193                           
  1194                           	psect	inittext
  1195  0C82                     init_fetch0:	
  1196                           ;	Called with low address in FSR and high address in W
  1197                           
  1198  0C82  087E               	movf	126,w
  1199  0C83  008A               	movwf	10
  1200  0C84  087F               	movf	127,w
  1201  0C85  0082               	movwf	2
  1202  0C86                     init_ram0:	
  1203                           ;Called with:
  1204                           ;	high address of idata address in btemp 
  1205                           ;	low address of idata address in btemp+1 
  1206                           ;	low address of data in FSR
  1207                           ;	high address + 1 of data in btemp-1
  1208                           
  1209  0C86  2482  120A  158A   	fcall	init_fetch0
  1210  0C89  0080               	movwf	0
  1211  0C8A  0A84               	incf	4,f
  1212  0C8B  0804               	movf	4,w
  1213  0C8C  067D               	xorwf	125,w
  1214  0C8D  1903               	btfsc	3,2
  1215  0C8E  3400               	retlw	0
  1216  0C8F  0AFF               	incf	127,f
  1217  0C90  1903               	btfsc	3,2
  1218  0C91  0AFE               	incf	126,f
  1219  0C92  2C86               	goto	init_ram0
  1220                           
  1221                           	psect	cstackBANK1
  1222  00A0                     __pcstackBANK1:	
  1223  00A0                     ??_sprintf:	
  1224                           
  1225                           ; 1 bytes @ 0x0
  1226  00A0                     	ds	3
  1227  00A3                     sprintf@ap:	
  1228                           
  1229                           ; 1 bytes @ 0x3
  1230  00A3                     	ds	1
  1231  00A4                     sprintf@prec:	
  1232                           
  1233                           ; 1 bytes @ 0x4
  1234  00A4                     	ds	1
  1235  00A5                     sprintf@flag:	
  1236                           
  1237                           ; 1 bytes @ 0x5
  1238  00A5                     	ds	1
  1239  00A6                     sprintf@val:	
  1240                           
  1241                           ; 2 bytes @ 0x6
  1242  00A6                     	ds	2
  1243  00A8                     sprintf@sp:	
  1244                           
  1245                           ; 1 bytes @ 0x8
  1246  00A8                     	ds	1
  1247  00A9                     sprintf@width:	
  1248                           
  1249                           ; 2 bytes @ 0x9
  1250  00A9                     	ds	2
  1251  00AB                     sprintf@c:	
  1252                           
  1253                           ; 1 bytes @ 0xB
  1254  00AB                     	ds	1
  1255  00AC                     ??_temp_Display:	
  1256                           
  1257                           ; 1 bytes @ 0xC
  1258  00AC                     	ds	4
  1259  00B0                     temp_Display@TEMP:	
  1260                           
  1261                           ; 13 bytes @ 0x10
  1262  00B0                     	ds	13
  1263  00BD                     ??_main:	
  1264                           
  1265                           ; 1 bytes @ 0x1D
  1266  00BD                     	ds	2
  1267                           
  1268                           	psect	cstackCOMMON
  1269  0070                     __pcstackCOMMON:	
  1270  0070                     ?_isdigit:	
  1271  0070                     ?_system_Initialize:	
  1272                           ; 1 bit 
  1273                           
  1274  0070                     ?_internal_eeprom_read:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_temp_Display:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_Oscillator_Init:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_Interrupt_Init:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_Lcd_Init:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_ADC_Init:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_TMR0_Init:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_SPI_Init:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_SPI_MasterTransmit:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_pinManager:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_Lcd_Port:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_Lcd_Cmd:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_Lcd_Write_Char:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_Lcd_write:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_temp_Measurement:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_ISR:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ??_ISR:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_main:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x0
  1330  0070                     	ds	4
  1331  0074                     ??_internal_eeprom_read:	
  1332  0074                     ??_Oscillator_Init:	
  1333                           ; 1 bytes @ 0x4
  1334                           
  1335  0074                     ??_Interrupt_Init:	
  1336                           ; 1 bytes @ 0x4
  1337                           
  1338  0074                     ??_ADC_Init:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     ??_TMR0_Init:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344  0074                     ??_SPI_Init:	
  1345                           ; 1 bytes @ 0x4
  1346                           
  1347  0074                     ??_SPI_MasterTransmit:	
  1348                           ; 1 bytes @ 0x4
  1349                           
  1350  0074                     ??_isdigit:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     ??_pinManager:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     ??_Lcd_Port:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     ??___wmul:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     ??___lmul:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ??___lwdiv:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ??___lwtoft:	
  1369                           ; 1 bytes @ 0x4
  1370                           
  1371  0074                     Lcd_Port@a:	
  1372                           ; 1 bytes @ 0x4
  1373                           
  1374  0074                     SPI_MasterTransmit@iData:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     _isdigit$1336:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     ___wmul@product:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x4
  1385  0074                     	ds	1
  1386  0075                     ??_Lcd_Write_Char:	
  1387  0075                     ??___lldiv:	
  1388                           ; 1 bytes @ 0x5
  1389                           
  1390  0075                     ??___lwmod:	
  1391                           ; 1 bytes @ 0x5
  1392                           
  1393  0075                     Lcd_Cmd@a:	
  1394                           ; 1 bytes @ 0x5
  1395                           
  1396  0075                     isdigit@c:	
  1397                           ; 1 bytes @ 0x5
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0x5
  1401  0075                     	ds	1
  1402  0076                     ??_system_Initialize:	
  1403                           
  1404                           	psect	cstackBANK0
  1405  0020                     __pcstackBANK0:	
  1406                           ; 1 bytes @ 0x6
  1407                           
  1408  0020                     ??_Lcd_Cmd:	
  1409  0020                     ?___wmul:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0020                     ?___lwdiv:	
  1413                           ; 2 bytes @ 0x0
  1414                           
  1415  0020                     ?___ftpack:	
  1416                           ; 2 bytes @ 0x0
  1417                           
  1418  0020                     ?___lmul:	
  1419                           ; 3 bytes @ 0x0
  1420                           
  1421  0020                     Lcd_Write_Char@temp:	
  1422                           ; 4 bytes @ 0x0
  1423                           
  1424  0020                     internal_eeprom_read@dataRead:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0020                     ___wmul@multiplier:	
  1428                           ; 2 bytes @ 0x0
  1429                           
  1430  0020                     ___lwdiv@divisor:	
  1431                           ; 2 bytes @ 0x0
  1432                           
  1433  0020                     ___ftpack@arg:	
  1434                           ; 2 bytes @ 0x0
  1435                           
  1436  0020                     ___lmul@multiplier:	
  1437                           ; 3 bytes @ 0x0
  1438                           
  1439                           
  1440                           ; 4 bytes @ 0x0
  1441  0020                     	ds	1
  1442  0021                     Lcd_Write_Char@y:	
  1443                           
  1444                           ; 1 bytes @ 0x1
  1445  0021                     	ds	1
  1446  0022                     ??_Lcd_Init:	
  1447  0022                     ?_Lcd_Set_Cursor:	
  1448                           ; 1 bytes @ 0x2
  1449                           
  1450  0022                     Lcd_Set_Cursor@column:	
  1451                           ; 1 bytes @ 0x2
  1452                           
  1453  0022                     Lcd_Write_Char@a:	
  1454                           ; 1 bytes @ 0x2
  1455                           
  1456  0022                     internal_eeprom_read@addr:	
  1457                           ; 1 bytes @ 0x2
  1458                           
  1459  0022                     ___wmul@multiplicand:	
  1460                           ; 1 bytes @ 0x2
  1461                           
  1462  0022                     ___lwdiv@dividend:	
  1463                           ; 2 bytes @ 0x2
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x2
  1467  0022                     	ds	1
  1468  0023                     ?_EEPROM_Write:	
  1469  0023                     ??_Lcd_Set_Cursor:	
  1470                           ; 1 bytes @ 0x3
  1471                           
  1472  0023                     ??_Lcd_write:	
  1473                           ; 1 bytes @ 0x3
  1474                           
  1475  0023                     ___ftpack@exp:	
  1476                           ; 1 bytes @ 0x3
  1477                           
  1478  0023                     EEPROM_Write@iData:	
  1479                           ; 1 bytes @ 0x3
  1480                           
  1481                           
  1482                           ; 2 bytes @ 0x3
  1483  0023                     	ds	1
  1484  0024                     ___ftpack@sign:	
  1485  0024                     ___lwdiv@counter:	
  1486                           ; 1 bytes @ 0x4
  1487                           
  1488  0024                     Lcd_write@i:	
  1489                           ; 1 bytes @ 0x4
  1490                           
  1491  0024                     ___lmul@multiplicand:	
  1492                           ; 2 bytes @ 0x4
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x4
  1496  0024                     	ds	1
  1497  0025                     ??___ftpack:	
  1498  0025                     Lcd_Set_Cursor@raw:	
  1499                           ; 1 bytes @ 0x5
  1500                           
  1501  0025                     EEPROM_Write@iAddress:	
  1502                           ; 1 bytes @ 0x5
  1503                           
  1504  0025                     ___lwdiv@quotient:	
  1505                           ; 1 bytes @ 0x5
  1506                           
  1507                           
  1508                           ; 2 bytes @ 0x5
  1509  0025                     	ds	1
  1510  0026                     ??_EEPROM_Write:	
  1511  0026                     Lcd_Set_Cursor@z:	
  1512                           ; 1 bytes @ 0x6
  1513                           
  1514  0026                     Lcd_write@string:	
  1515                           ; 1 bytes @ 0x6
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0x6
  1519  0026                     	ds	1
  1520  0027                     ?___lwmod:	
  1521  0027                     Lcd_Set_Cursor@y:	
  1522                           ; 2 bytes @ 0x7
  1523                           
  1524  0027                     ___lwmod@divisor:	
  1525                           ; 1 bytes @ 0x7
  1526                           
  1527                           
  1528                           ; 2 bytes @ 0x7
  1529  0027                     	ds	1
  1530  0028                     ?___lwtoft:	
  1531  0028                     Lcd_Set_Cursor@temp:	
  1532                           ; 3 bytes @ 0x8
  1533                           
  1534  0028                     ___lwtoft@c:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537  0028                     ___lmul@product:	
  1538                           ; 2 bytes @ 0x8
  1539                           
  1540                           
  1541                           ; 4 bytes @ 0x8
  1542  0028                     	ds	1
  1543  0029                     ___lwmod@dividend:	
  1544                           
  1545                           ; 2 bytes @ 0x9
  1546  0029                     	ds	2
  1547  002B                     ?___ftmul:	
  1548  002B                     ___lwmod@counter:	
  1549                           ; 3 bytes @ 0xB
  1550                           
  1551  002B                     ___ftmul@f1:	
  1552                           ; 1 bytes @ 0xB
  1553                           
  1554                           
  1555                           ; 3 bytes @ 0xB
  1556  002B                     	ds	1
  1557  002C                     ?___lldiv:	
  1558  002C                     ___lldiv@divisor:	
  1559                           ; 4 bytes @ 0xC
  1560                           
  1561                           
  1562                           ; 4 bytes @ 0xC
  1563  002C                     	ds	2
  1564  002E                     ___ftmul@f2:	
  1565                           
  1566                           ; 3 bytes @ 0xE
  1567  002E                     	ds	2
  1568  0030                     ___lldiv@dividend:	
  1569                           
  1570                           ; 4 bytes @ 0x10
  1571  0030                     	ds	1
  1572  0031                     ??___ftmul:	
  1573                           
  1574                           ; 1 bytes @ 0x11
  1575  0031                     	ds	3
  1576  0034                     ___lldiv@quotient:	
  1577                           
  1578                           ; 4 bytes @ 0x14
  1579  0034                     	ds	1
  1580  0035                     ___ftmul@exp:	
  1581                           
  1582                           ; 1 bytes @ 0x15
  1583  0035                     	ds	1
  1584  0036                     ___ftmul@f3_as_product:	
  1585                           
  1586                           ; 3 bytes @ 0x16
  1587  0036                     	ds	2
  1588  0038                     ___lldiv@counter:	
  1589                           
  1590                           ; 1 bytes @ 0x18
  1591  0038                     	ds	1
  1592  0039                     ?_PWM_Init:	
  1593  0039                     ?_PWM_DutyCycle:	
  1594                           ; 1 bytes @ 0x19
  1595                           
  1596  0039                     ?_UART_Init:	
  1597                           ; 1 bytes @ 0x19
  1598                           
  1599  0039                     ___ftmul@cntr:	
  1600                           ; 1 bytes @ 0x19
  1601                           
  1602  0039                     UART_Init@baudRate:	
  1603                           ; 1 bytes @ 0x19
  1604                           
  1605  0039                     PWM_Init@iFrequency:	
  1606                           ; 2 bytes @ 0x19
  1607                           
  1608  0039                     PWM_DutyCycle@iDutyCycle:	
  1609                           ; 4 bytes @ 0x19
  1610                           
  1611                           
  1612                           ; 4 bytes @ 0x19
  1613  0039                     	ds	1
  1614  003A                     ___ftmul@sign:	
  1615                           
  1616                           ; 1 bytes @ 0x1A
  1617  003A                     	ds	1
  1618  003B                     ??_UART_Init:	
  1619  003B                     ?___ftdiv:	
  1620                           ; 1 bytes @ 0x1B
  1621                           
  1622  003B                     ___ftdiv@f2:	
  1623                           ; 3 bytes @ 0x1B
  1624                           
  1625                           
  1626                           ; 3 bytes @ 0x1B
  1627  003B                     	ds	2
  1628  003D                     ??_PWM_Init:	
  1629  003D                     ??_PWM_DutyCycle:	
  1630                           ; 1 bytes @ 0x1D
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x1D
  1634  003D                     	ds	1
  1635  003E                     ___ftdiv@f1:	
  1636                           
  1637                           ; 3 bytes @ 0x1E
  1638  003E                     	ds	3
  1639  0041                     ??___ftdiv:	
  1640                           
  1641                           ; 1 bytes @ 0x21
  1642  0041                     	ds	4
  1643  0045                     ___ftdiv@cntr:	
  1644                           
  1645                           ; 1 bytes @ 0x25
  1646  0045                     	ds	1
  1647  0046                     ___ftdiv@f3:	
  1648                           
  1649                           ; 3 bytes @ 0x26
  1650  0046                     	ds	3
  1651  0049                     ___ftdiv@exp:	
  1652                           
  1653                           ; 1 bytes @ 0x29
  1654  0049                     	ds	1
  1655  004A                     ___ftdiv@sign:	
  1656                           
  1657                           ; 1 bytes @ 0x2A
  1658  004A                     	ds	1
  1659  004B                     ?___ftadd:	
  1660  004B                     ___ftadd@f1:	
  1661                           ; 3 bytes @ 0x2B
  1662                           
  1663                           
  1664                           ; 3 bytes @ 0x2B
  1665  004B                     	ds	3
  1666  004E                     ___ftadd@f2:	
  1667                           
  1668                           ; 3 bytes @ 0x2E
  1669  004E                     	ds	3
  1670  0051                     ??___ftadd:	
  1671                           
  1672                           ; 1 bytes @ 0x31
  1673  0051                     	ds	4
  1674  0055                     ___ftadd@sign:	
  1675                           
  1676                           ; 1 bytes @ 0x35
  1677  0055                     	ds	1
  1678  0056                     ___ftadd@exp2:	
  1679                           
  1680                           ; 1 bytes @ 0x36
  1681  0056                     	ds	1
  1682  0057                     ___ftadd@exp1:	
  1683                           
  1684                           ; 1 bytes @ 0x37
  1685  0057                     	ds	1
  1686  0058                     ?___fttol:	
  1687  0058                     ___fttol@f1:	
  1688                           ; 4 bytes @ 0x38
  1689                           
  1690                           
  1691                           ; 3 bytes @ 0x38
  1692  0058                     	ds	4
  1693  005C                     ??___fttol:	
  1694                           
  1695                           ; 1 bytes @ 0x3C
  1696  005C                     	ds	4
  1697  0060                     ___fttol@sign1:	
  1698                           
  1699                           ; 1 bytes @ 0x40
  1700  0060                     	ds	1
  1701  0061                     ___fttol@lval:	
  1702                           
  1703                           ; 4 bytes @ 0x41
  1704  0061                     	ds	4
  1705  0065                     ___fttol@exp1:	
  1706                           
  1707                           ; 1 bytes @ 0x45
  1708  0065                     	ds	1
  1709  0066                     ??_temp_Measurement:	
  1710                           
  1711                           ; 1 bytes @ 0x46
  1712  0066                     	ds	2
  1713  0068                     _temp_Measurement$1581:	
  1714                           
  1715                           ; 3 bytes @ 0x48
  1716  0068                     	ds	3
  1717  006B                     temp_Measurement@sample:	
  1718                           
  1719                           ; 2 bytes @ 0x4B
  1720  006B                     	ds	2
  1721  006D                     ?_sprintf:	
  1722  006D                     sprintf@f:	
  1723                           ; 2 bytes @ 0x4D
  1724                           
  1725                           
  1726                           ; 1 bytes @ 0x4D
  1727  006D                     	ds	3
  1728                           
  1729                           	psect	maintext
  1730  0D6A                     __pmaintext:	
  1731 ;;
  1732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1733 ;;
  1734 ;; *************** function _main *****************
  1735 ;; Defined at:
  1736 ;;		line 11 in file "main.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2   20[None  ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : B00/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          0       0       2       0       0
  1753 ;;      Totals:         0       0       2       0       0
  1754 ;;Total ram usage:        2 bytes
  1755 ;; Hardware stack levels required when called:    5
  1756 ;; This function calls:
  1757 ;;		_EEPROM_Write
  1758 ;;		_internal_eeprom_read
  1759 ;;		_system_Initialize
  1760 ;;		_temp_Display
  1761 ;; This function is called by:
  1762 ;;		Startup code after reset
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _main
  1768  0D6A                     _main:	
  1769                           
  1770                           ;main.c: 13: system_Initialize();
  1771                           
  1772                           ;incstack = 0
  1773                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1774  0D6A  120A  158A  2763  120A  158A  	fcall	_system_Initialize
  1775                           
  1776                           ;main.c: 14: EEPROM_Write(internal_eeprom_read(0x24), 0x01);
  1777  0D6F  3024               	movlw	36
  1778  0D70  120A  158A  2493  120A  158A  	fcall	_internal_eeprom_read
  1779  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  1780  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  1781  0D77  00BD               	movwf	??_main^(0+128)
  1782  0D78  01BE               	clrf	(??_main^(0+128)+1)
  1783  0D79  083D               	movf	??_main^(0+128),w
  1784  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0D7C  00A3               	movwf	EEPROM_Write@iData
  1787  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0D7F  083E               	movf	(??_main^(0+128)+1),w
  1790  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0D82  00A4               	movwf	EEPROM_Write@iData+1
  1793  0D83  01A5               	clrf	EEPROM_Write@iAddress
  1794  0D84  0AA5               	incf	EEPROM_Write@iAddress,f
  1795  0D85  120A  158A  26DC  120A  158A  	fcall	_EEPROM_Write
  1796  0D8A                     l2820:	
  1797                           ;main.c: 15: while (1) {
  1798                           
  1799                           
  1800                           ;main.c: 16: temp_Display();
  1801  0D8A  120A  118A  2771  120A  158A  	fcall	_temp_Display
  1802  0D8F  2D8A               	goto	l2820
  1803  0D90                     __end_of_main:	
  1804                           ;main.c: 17: }
  1805                           ;main.c: 18: return;
  1806                           
  1807                           
  1808                           	psect	text1
  1809  0771                     __ptext1:	
  1810 ;; *************** function _temp_Display *****************
  1811 ;; Defined at:
  1812 ;;		line 40 in file "adc_Init.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  TEMP           13   16[BANK1 ] unsigned char [13]
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0      13       0       0
  1828 ;;      Temps:          0       0       4       0       0
  1829 ;;      Totals:         0       0      17       0       0
  1830 ;;Total ram usage:       17 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    4
  1833 ;; This function calls:
  1834 ;;		_Lcd_Set_Cursor
  1835 ;;		_Lcd_write
  1836 ;;		_sprintf
  1837 ;;		_temp_Measurement
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _temp_Display
  1845  0771                     _temp_Display:	
  1846                           
  1847                           ;adc_Init.c: 41: char TEMP[] = "Temperature:";
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1851  0771  30B0               	movlw	temp_Display@TEMP& (0+255)
  1852  0772  0084               	movwf	4
  1853  0773  30BF               	movlw	low temp_Display@F2022
  1854  0774  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0775  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0776  00AC               	movwf	??_temp_Display^(0+128)
  1857  0777  0804               	movf	4,w
  1858  0778  00AD               	movwf	(??_temp_Display^(0+128)+1)
  1859  0779  300D               	movlw	13
  1860  077A  00AE               	movwf	(??_temp_Display^(0+128)+2)
  1861  077B                     u3890:	
  1862  077B  082C               	movf	??_temp_Display^(0+128),w
  1863  077C  0084               	movwf	4
  1864  077D  1383               	bcf	3,7	;select IRP bank1
  1865  077E  0800               	movf	0,w
  1866  077F  00AF               	movwf	(??_temp_Display^(0+128)+3)
  1867  0780  0AAC               	incf	??_temp_Display^(0+128),f
  1868  0781  082D               	movf	(??_temp_Display^(0+128)+1),w
  1869  0782  0084               	movwf	4
  1870  0783  082F               	movf	(??_temp_Display^(0+128)+3),w
  1871  0784  0080               	movwf	0
  1872  0785  0AAD               	incf	(??_temp_Display^(0+128)+1),f
  1873  0786  0BAE               	decfsz	(??_temp_Display^(0+128)+2),f
  1874  0787  2F7B               	goto	u3890
  1875                           
  1876                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  1877  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1879  078A  01A2               	clrf	Lcd_Set_Cursor@column
  1880  078B  0AA2               	incf	Lcd_Set_Cursor@column,f
  1881  078C  3001               	movlw	1
  1882  078D  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1883                           
  1884                           ;adc_Init.c: 43: Lcd_write(TEMP);
  1885  0792  30B0               	movlw	(low (temp_Display@TEMP| 0))& (0+255)
  1886  0793  120A  158A  2524  120A  118A  	fcall	_Lcd_write
  1887                           
  1888                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  1889  0798  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1890  0799  1683               	bsf	3,5	;RP0=1, select bank1
  1891  079A  1303               	bcf	3,6	;RP1=0, select bank1
  1892  079B  00AC               	movwf	??_temp_Display^(0+128)
  1893  079C  082C               	movf	??_temp_Display^(0+128),w
  1894  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1895  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1896  079F  00ED               	movwf	sprintf@f
  1897  07A0  120A  118A  22DA  120A  118A  	fcall	_temp_Measurement
  1898  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  1899  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  1900  07A7  00AD               	movwf	(??_temp_Display+1)^(0+128)
  1901  07A8  01AE               	clrf	((??_temp_Display+1)^(0+128)+1)
  1902  07A9  082D               	movf	(??_temp_Display+1)^(0+128),w
  1903  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1904  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1905  07AC  00EE               	movwf	?_sprintf+1
  1906  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1907  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1908  07AF  082E               	movf	(??_temp_Display+2)^(0+128),w
  1909  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1910  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1911  07B2  00EF               	movwf	?_sprintf+2
  1912  07B3  30DA               	movlw	(low (_sTemperature| 0))& (0+255)
  1913  07B4  120A  118A  2031  120A  118A  	fcall	_sprintf
  1914                           
  1915                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof(TEMP));
  1916  07B9  300D               	movlw	13
  1917  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  1918  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  1919  07BC  00AC               	movwf	??_temp_Display^(0+128)
  1920  07BD  082C               	movf	??_temp_Display^(0+128),w
  1921  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1922  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1923  07C0  00A2               	movwf	Lcd_Set_Cursor@column
  1924  07C1  3001               	movlw	1
  1925  07C2  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1926                           
  1927                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  1928  07C7  30DA               	movlw	(low (_sTemperature| 0))& (0+255)
  1929  07C8  120A  158A  2524   	fcall	_Lcd_write
  1930  07CB  0008               	return
  1931  07CC                     __end_of_temp_Display:	
  1932                           
  1933                           	psect	text2
  1934  02DA                     __ptext2:	
  1935 ;; *************** function _temp_Measurement *****************
  1936 ;; Defined at:
  1937 ;;		line 24 in file "adc_Init.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  sample          2   75[BANK0 ] int 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      unsigned char 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       5       0       0       0
  1953 ;;      Temps:          0       2       0       0       0
  1954 ;;      Totals:         0       7       0       0       0
  1955 ;;Total ram usage:        7 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    3
  1958 ;; This function calls:
  1959 ;;		___ftadd
  1960 ;;		___ftdiv
  1961 ;;		___ftmul
  1962 ;;		___fttol
  1963 ;;		___lwdiv
  1964 ;;		___lwtoft
  1965 ;; This function is called by:
  1966 ;;		_temp_Display
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _temp_Measurement
  1972  02DA                     _temp_Measurement:	
  1973                           
  1974                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1978  02DA  3007               	movlw	7
  1979  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1980  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1981  02DD  00E7               	movwf	??_temp_Measurement+1
  1982  02DE  307C               	movlw	124
  1983  02DF  00E6               	movwf	??_temp_Measurement
  1984  02E0                     u3907:	
  1985  02E0  0BE6               	decfsz	??_temp_Measurement,f
  1986  02E1  2AE0               	goto	u3907
  1987  02E2  0BE7               	decfsz	??_temp_Measurement+1,f
  1988  02E3  2AE0               	goto	u3907
  1989  02E4  0000               	nop
  1990                           
  1991                           ;adc_Init.c: 26: GO_DONE = 1;
  1992  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1993  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1994  02E7  149F               	bsf	31,1	;volatile
  1995  02E8                     l190:	
  1996                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  1997                           
  1998  02E8  1F0C               	btfss	12,6	;volatile
  1999  02E9  2AE8               	goto	l190
  2000                           
  2001                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  2002  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2003  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2004  02EC  081E               	movf	30,w	;volatile
  2005  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2006  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2007  02EF  00E6               	movwf	??_temp_Measurement
  2008  02F0  0866               	movf	??_temp_Measurement,w
  2009  02F1  00F6               	movwf	_adc
  2010                           
  2011                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  2012  02F2  081E               	movf	30,w	;volatile
  2013  02F3  00E6               	movwf	??_temp_Measurement
  2014  02F4  0866               	movf	??_temp_Measurement,w
  2015  02F5  00F7               	movwf	_adc+1
  2016                           
  2017                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  2018  02F6  01EB               	clrf	temp_Measurement@sample
  2019  02F7  01EC               	clrf	temp_Measurement@sample+1
  2020  02F8  086C               	movf	temp_Measurement@sample+1,w
  2021  02F9  3A80               	xorlw	128
  2022  02FA  00FF               	movwf	127
  2023  02FB  3080               	movlw	128
  2024  02FC  027F               	subwf	127,w
  2025  02FD  1D03               	skipz
  2026  02FE  2B01               	goto	u3715
  2027  02FF  300A               	movlw	10
  2028  0300  026B               	subwf	temp_Measurement@sample,w
  2029  0301                     u3715:	
  2030  0301  1803               	btfsc	3,0
  2031  0302  2BB8               	goto	l2674
  2032  0303                     l2664:	
  2033                           
  2034                           ;adc_Init.c: 31: rawData += adc.result;
  2035  0303  0876               	movf	_adc,w
  2036  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0306  07D6               	addwf	_rawData^(0+128),f
  2039  0307  1803               	skipnc
  2040  0308  0AD7               	incf	(_rawData+1)^(0+128),f
  2041  0309  0877               	movf	_adc+1,w
  2042  030A  07D7               	addwf	(_rawData+1)^(0+128),f
  2043                           
  2044                           ;adc_Init.c: 32: if (sample == 9) {
  2045  030B  3009               	movlw	9
  2046  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2047  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2048  030E  066B               	xorwf	temp_Measurement@sample,w
  2049  030F  046C               	iorwf	temp_Measurement@sample+1,w
  2050  0310  1D03               	btfss	3,2
  2051  0311  2BA7               	goto	l2670
  2052                           
  2053                           ;adc_Init.c: 33: rawData = rawData / 11;
  2054  0312  300B               	movlw	11
  2055  0313  00A0               	movwf	___lwdiv@divisor
  2056  0314  3000               	movlw	0
  2057  0315  00A1               	movwf	___lwdiv@divisor+1
  2058  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0318  0857               	movf	(_rawData+1)^(0+128),w
  2061  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2062  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2063  031B  00A3               	movwf	___lwdiv@dividend+1
  2064  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2065  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2066  031E  0856               	movf	_rawData^(0+128),w
  2067  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0321  00A2               	movwf	___lwdiv@dividend
  2070  0322  120A  158A  261D  120A  118A  	fcall	___lwdiv
  2071  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0329  0821               	movf	?___lwdiv+1,w
  2074  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2075  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2076  032C  00D7               	movwf	(_rawData+1)^(0+128)
  2077  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2078  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2079  032F  0820               	movf	?___lwdiv,w
  2080  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0332  00D6               	movwf	_rawData^(0+128)
  2083                           
  2084                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2085  0333  0857               	movf	(_rawData+1)^(0+128),w
  2086  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0336  00A9               	movwf	___lwtoft@c+1
  2089  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0339  0856               	movf	_rawData^(0+128),w
  2092  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2093  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2094  033C  00A8               	movwf	___lwtoft@c
  2095  033D  120A  158A  24BD  120A  118A  	fcall	___lwtoft
  2096  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0344  0828               	movf	?___lwtoft,w
  2099  0345  00AE               	movwf	___ftmul@f2
  2100  0346  0829               	movf	?___lwtoft+1,w
  2101  0347  00AF               	movwf	___ftmul@f2+1
  2102  0348  082A               	movf	?___lwtoft+2,w
  2103  0349  00B0               	movwf	___ftmul@f2+2
  2104  034A  3040               	movlw	64
  2105  034B  00AB               	movwf	___ftmul@f1
  2106  034C  309C               	movlw	156
  2107  034D  00AC               	movwf	___ftmul@f1+1
  2108  034E  3045               	movlw	69
  2109  034F  00AD               	movwf	___ftmul@f1+2
  2110  0350  120A  118A  23BA  120A  118A  	fcall	___ftmul
  2111  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0357  082B               	movf	?___ftmul,w
  2114  0358  00BE               	movwf	___ftdiv@f1
  2115  0359  082C               	movf	?___ftmul+1,w
  2116  035A  00BF               	movwf	___ftdiv@f1+1
  2117  035B  082D               	movf	?___ftmul+2,w
  2118  035C  00C0               	movwf	___ftdiv@f1+2
  2119  035D  30C0               	movlw	192
  2120  035E  00BB               	movwf	___ftdiv@f2
  2121  035F  307F               	movlw	127
  2122  0360  00BC               	movwf	___ftdiv@f2+1
  2123  0361  3044               	movlw	68
  2124  0362  00BD               	movwf	___ftdiv@f2+2
  2125  0363  120A  118A  248D  120A  118A  	fcall	___ftdiv
  2126  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2128  036A  083B               	movf	?___ftdiv,w
  2129  036B  00CE               	movwf	___ftadd@f2
  2130  036C  083C               	movf	?___ftdiv+1,w
  2131  036D  00CF               	movwf	___ftadd@f2+1
  2132  036E  083D               	movf	?___ftdiv+2,w
  2133  036F  00D0               	movwf	___ftadd@f2+2
  2134  0370  3000               	movlw	0
  2135  0371  00CB               	movwf	___ftadd@f1
  2136  0372  30FA               	movlw	250
  2137  0373  00CC               	movwf	___ftadd@f1+1
  2138  0374  30C3               	movlw	195
  2139  0375  00CD               	movwf	___ftadd@f1+2
  2140  0376  120A  118A  21D1  120A  118A  	fcall	___ftadd
  2141  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2142  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2143  037D  084B               	movf	?___ftadd,w
  2144  037E  00E8               	movwf	_temp_Measurement$1581
  2145  037F  084C               	movf	?___ftadd+1,w
  2146  0380  00E9               	movwf	_temp_Measurement$1581+1
  2147  0381  084D               	movf	?___ftadd+2,w
  2148  0382  00EA               	movwf	_temp_Measurement$1581+2
  2149                           
  2150                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2151  0383  0868               	movf	_temp_Measurement$1581,w
  2152  0384  00BE               	movwf	___ftdiv@f1
  2153  0385  0869               	movf	_temp_Measurement$1581+1,w
  2154  0386  00BF               	movwf	___ftdiv@f1+1
  2155  0387  086A               	movf	_temp_Measurement$1581+2,w
  2156  0388  00C0               	movwf	___ftdiv@f1+2
  2157  0389  3000               	movlw	0
  2158  038A  00BB               	movwf	___ftdiv@f2
  2159  038B  3020               	movlw	32
  2160  038C  00BC               	movwf	___ftdiv@f2+1
  2161  038D  3041               	movlw	65
  2162  038E  00BD               	movwf	___ftdiv@f2+2
  2163  038F  120A  118A  248D  120A  118A  	fcall	___ftdiv
  2164  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0396  083B               	movf	?___ftdiv,w
  2167  0397  00D8               	movwf	___fttol@f1
  2168  0398  083C               	movf	?___ftdiv+1,w
  2169  0399  00D9               	movwf	___fttol@f1+1
  2170  039A  083D               	movf	?___ftdiv+2,w
  2171  039B  00DA               	movwf	___fttol@f1+2
  2172  039C  120A  118A  2545  120A  118A  	fcall	___fttol
  2173  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2174  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2175  03A3  0858               	movf	?___fttol,w
  2176  03A4  00E6               	movwf	??_temp_Measurement
  2177  03A5  0866               	movf	??_temp_Measurement,w
  2178  03A6  00F8               	movwf	_temperature
  2179  03A7                     l2670:	
  2180  03A7  3001               	movlw	1
  2181  03A8  07EB               	addwf	temp_Measurement@sample,f
  2182  03A9  1803               	skipnc
  2183  03AA  0AEC               	incf	temp_Measurement@sample+1,f
  2184  03AB  3000               	movlw	0
  2185  03AC  07EC               	addwf	temp_Measurement@sample+1,f
  2186  03AD  086C               	movf	temp_Measurement@sample+1,w
  2187  03AE  3A80               	xorlw	128
  2188  03AF  00FF               	movwf	127
  2189  03B0  3080               	movlw	128
  2190  03B1  027F               	subwf	127,w
  2191  03B2  1D03               	skipz
  2192  03B3  2BB6               	goto	u3735
  2193  03B4  300A               	movlw	10
  2194  03B5  026B               	subwf	temp_Measurement@sample,w
  2195  03B6                     u3735:	
  2196  03B6  1C03               	skipc
  2197  03B7  2B03               	goto	l2664
  2198  03B8                     l2674:	
  2199                           
  2200                           ;adc_Init.c: 35: }
  2201                           ;adc_Init.c: 36: }
  2202                           ;adc_Init.c: 37: return temperature;
  2203  03B8  0878               	movf	_temperature,w
  2204  03B9  0008               	return
  2205  03BA                     __end_of_temp_Measurement:	
  2206                           
  2207                           	psect	text3
  2208  0CBD                     __ptext3:	
  2209 ;; *************** function ___lwtoft *****************
  2210 ;; Defined at:
  2211 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  c               2    8[BANK0 ] unsigned int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  3    8[BANK0 ] float 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       3       0       0       0
  2226 ;;      Locals:         0       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0
  2228 ;;      Totals:         1       3       0       0       0
  2229 ;;Total ram usage:        4 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    2
  2232 ;; This function calls:
  2233 ;;		___ftpack
  2234 ;; This function is called by:
  2235 ;;		_temp_Measurement
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function ___lwtoft
  2241  0CBD                     ___lwtoft:	
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2245  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0CBF  0828               	movf	___lwtoft@c,w
  2248  0CC0  00A0               	movwf	___ftpack@arg
  2249  0CC1  0829               	movf	___lwtoft@c+1,w
  2250  0CC2  00A1               	movwf	___ftpack@arg+1
  2251  0CC3  01A2               	clrf	___ftpack@arg+2
  2252  0CC4  308E               	movlw	142
  2253  0CC5  00F4               	movwf	??___lwtoft
  2254  0CC6  0874               	movf	??___lwtoft,w
  2255  0CC7  00A3               	movwf	___ftpack@exp
  2256  0CC8  01A4               	clrf	___ftpack@sign
  2257  0CC9  120A  118A  2642   	fcall	___ftpack
  2258  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0CCE  0820               	movf	?___ftpack,w
  2261  0CCF  00A8               	movwf	?___lwtoft
  2262  0CD0  0821               	movf	?___ftpack+1,w
  2263  0CD1  00A9               	movwf	?___lwtoft+1
  2264  0CD2  0822               	movf	?___ftpack+2,w
  2265  0CD3  00AA               	movwf	?___lwtoft+2
  2266  0CD4  0008               	return
  2267  0CD5                     __end_of___lwtoft:	
  2268                           
  2269                           	psect	text4
  2270  0545                     __ptext4:	
  2271 ;; *************** function ___fttol *****************
  2272 ;; Defined at:
  2273 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  f1              3   56[BANK0 ] float 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  lval            4   65[BANK0 ] unsigned long 
  2278 ;;  exp1            1   69[BANK0 ] unsigned char 
  2279 ;;  sign1           1   64[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  4   56[BANK0 ] long 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       4       0       0       0
  2290 ;;      Locals:         0       6       0       0       0
  2291 ;;      Temps:          0       4       0       0       0
  2292 ;;      Totals:         0      14       0       0       0
  2293 ;;Total ram usage:       14 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_temp_Measurement
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function ___fttol
  2305  0545                     ___fttol:	
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2309  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0547  0858               	movf	___fttol@f1,w
  2312  0548  00DC               	movwf	??___fttol
  2313  0549  0859               	movf	___fttol@f1+1,w
  2314  054A  00DD               	movwf	??___fttol+1
  2315  054B  085A               	movf	___fttol@f1+2,w
  2316  054C  00DE               	movwf	??___fttol+2
  2317  054D  1003               	clrc
  2318  054E  0D5D               	rlf	??___fttol+1,w
  2319  054F  0D5E               	rlf	??___fttol+2,w
  2320  0550  00DF               	movwf	??___fttol+3
  2321  0551  085F               	movf	??___fttol+3,w
  2322  0552  00E5               	movwf	___fttol@exp1
  2323  0553  0865               	movf	___fttol@exp1,w
  2324  0554  1D03               	btfss	3,2
  2325  0555  2D5F               	goto	l1968
  2326  0556  3000               	movlw	0
  2327  0557  00DB               	movwf	?___fttol+3
  2328  0558  3000               	movlw	0
  2329  0559  00DA               	movwf	?___fttol+2
  2330  055A  3000               	movlw	0
  2331  055B  00D9               	movwf	?___fttol+1
  2332  055C  3000               	movlw	0
  2333  055D  00D8               	movwf	?___fttol
  2334  055E  0008               	return
  2335  055F                     l1968:	
  2336  055F  0858               	movf	___fttol@f1,w
  2337  0560  00DC               	movwf	??___fttol
  2338  0561  0859               	movf	___fttol@f1+1,w
  2339  0562  00DD               	movwf	??___fttol+1
  2340  0563  085A               	movf	___fttol@f1+2,w
  2341  0564  00DE               	movwf	??___fttol+2
  2342  0565  3017               	movlw	23
  2343  0566                     u2265:	
  2344  0566  1003               	clrc
  2345  0567  0CDE               	rrf	??___fttol+2,f
  2346  0568  0CDD               	rrf	??___fttol+1,f
  2347  0569  0CDC               	rrf	??___fttol,f
  2348  056A  3EFF               	addlw	-1
  2349  056B  1D03               	skipz
  2350  056C  2D66               	goto	u2265
  2351  056D  085C               	movf	??___fttol,w
  2352  056E  00DF               	movwf	??___fttol+3
  2353  056F  085F               	movf	??___fttol+3,w
  2354  0570  00E0               	movwf	___fttol@sign1
  2355  0571  17D9               	bsf	___fttol@f1+1,7
  2356  0572  30FF               	movlw	255
  2357  0573  05D8               	andwf	___fttol@f1,f
  2358  0574  30FF               	movlw	255
  2359  0575  05D9               	andwf	___fttol@f1+1,f
  2360  0576  3000               	movlw	0
  2361  0577  05DA               	andwf	___fttol@f1+2,f
  2362  0578  0858               	movf	___fttol@f1,w
  2363  0579  00E1               	movwf	___fttol@lval
  2364  057A  0859               	movf	___fttol@f1+1,w
  2365  057B  00E2               	movwf	___fttol@lval+1
  2366  057C  085A               	movf	___fttol@f1+2,w
  2367  057D  00E3               	movwf	___fttol@lval+2
  2368  057E  01E4               	clrf	___fttol@lval+3
  2369  057F  308E               	movlw	142
  2370  0580  02E5               	subwf	___fttol@exp1,f
  2371  0581  1FE5               	btfss	___fttol@exp1,7
  2372  0582  2DA1               	goto	l1988
  2373  0583  0865               	movf	___fttol@exp1,w
  2374  0584  3A80               	xorlw	128
  2375  0585  3E8F               	addlw	143
  2376  0586  1803               	skipnc
  2377  0587  2D91               	goto	l1986
  2378  0588  3000               	movlw	0
  2379  0589  00DB               	movwf	?___fttol+3
  2380  058A  3000               	movlw	0
  2381  058B  00DA               	movwf	?___fttol+2
  2382  058C  3000               	movlw	0
  2383  058D  00D9               	movwf	?___fttol+1
  2384  058E  3000               	movlw	0
  2385  058F  00D8               	movwf	?___fttol
  2386  0590  0008               	return
  2387  0591                     l1986:	
  2388  0591  3001               	movlw	1
  2389  0592                     u2295:	
  2390  0592  1003               	clrc
  2391  0593  0CE4               	rrf	___fttol@lval+3,f
  2392  0594  0CE3               	rrf	___fttol@lval+2,f
  2393  0595  0CE2               	rrf	___fttol@lval+1,f
  2394  0596  0CE1               	rrf	___fttol@lval,f
  2395  0597  3EFF               	addlw	-1
  2396  0598  1D03               	skipz
  2397  0599  2D92               	goto	u2295
  2398  059A  3001               	movlw	1
  2399  059B  00DC               	movwf	??___fttol
  2400  059C  085C               	movf	??___fttol,w
  2401  059D  07E5               	addwf	___fttol@exp1,f
  2402  059E  1903               	btfsc	3,2
  2403  059F  2DBC               	goto	l1996
  2404  05A0  2D91               	goto	l1986
  2405  05A1                     l1988:	
  2406  05A1  3018               	movlw	24
  2407  05A2  0265               	subwf	___fttol@exp1,w
  2408  05A3  1C03               	skipc
  2409  05A4  2DB9               	goto	l771
  2410  05A5  3000               	movlw	0
  2411  05A6  00DB               	movwf	?___fttol+3
  2412  05A7  3000               	movlw	0
  2413  05A8  00DA               	movwf	?___fttol+2
  2414  05A9  3000               	movlw	0
  2415  05AA  00D9               	movwf	?___fttol+1
  2416  05AB  3000               	movlw	0
  2417  05AC  00D8               	movwf	?___fttol
  2418  05AD  0008               	return
  2419  05AE                     l1994:	
  2420  05AE  3001               	movlw	1
  2421  05AF  00DC               	movwf	??___fttol
  2422  05B0                     u2325:	
  2423  05B0  1003               	clrc
  2424  05B1  0DE1               	rlf	___fttol@lval,f
  2425  05B2  0DE2               	rlf	___fttol@lval+1,f
  2426  05B3  0DE3               	rlf	___fttol@lval+2,f
  2427  05B4  0DE4               	rlf	___fttol@lval+3,f
  2428  05B5  0BDC               	decfsz	??___fttol,f
  2429  05B6  2DB0               	goto	u2325
  2430  05B7  3001               	movlw	1
  2431  05B8  02E5               	subwf	___fttol@exp1,f
  2432  05B9                     l771:	
  2433  05B9  0865               	movf	___fttol@exp1,w
  2434  05BA  1D03               	btfss	3,2
  2435  05BB  2DAE               	goto	l1994
  2436  05BC                     l1996:	
  2437  05BC  0860               	movf	___fttol@sign1,w
  2438  05BD  1903               	btfsc	3,2
  2439  05BE  2DCA               	goto	l2000
  2440  05BF  09E1               	comf	___fttol@lval,f
  2441  05C0  09E2               	comf	___fttol@lval+1,f
  2442  05C1  09E3               	comf	___fttol@lval+2,f
  2443  05C2  09E4               	comf	___fttol@lval+3,f
  2444  05C3  0AE1               	incf	___fttol@lval,f
  2445  05C4  1903               	skipnz
  2446  05C5  0AE2               	incf	___fttol@lval+1,f
  2447  05C6  1903               	skipnz
  2448  05C7  0AE3               	incf	___fttol@lval+2,f
  2449  05C8  1903               	skipnz
  2450  05C9  0AE4               	incf	___fttol@lval+3,f
  2451  05CA                     l2000:	
  2452  05CA  0864               	movf	___fttol@lval+3,w
  2453  05CB  00DB               	movwf	?___fttol+3
  2454  05CC  0863               	movf	___fttol@lval+2,w
  2455  05CD  00DA               	movwf	?___fttol+2
  2456  05CE  0862               	movf	___fttol@lval+1,w
  2457  05CF  00D9               	movwf	?___fttol+1
  2458  05D0  0861               	movf	___fttol@lval,w
  2459  05D1  00D8               	movwf	?___fttol
  2460  05D2  0008               	return
  2461  05D3                     __end_of___fttol:	
  2462                           
  2463                           	psect	text5
  2464  03BA                     __ptext5:	
  2465 ;; *************** function ___ftmul *****************
  2466 ;; Defined at:
  2467 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  f1              3   11[BANK0 ] float 
  2470 ;;  f2              3   14[BANK0 ] float 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  2473 ;;  sign            1   26[BANK0 ] unsigned char 
  2474 ;;  cntr            1   25[BANK0 ] unsigned char 
  2475 ;;  exp             1   21[BANK0 ] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  3   11[BANK0 ] float 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       6       0       0       0
  2486 ;;      Locals:         0       6       0       0       0
  2487 ;;      Temps:          0       4       0       0       0
  2488 ;;      Totals:         0      16       0       0       0
  2489 ;;Total ram usage:       16 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    2
  2492 ;; This function calls:
  2493 ;;		___ftpack
  2494 ;; This function is called by:
  2495 ;;		_temp_Measurement
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function ___ftmul
  2501  03BA                     ___ftmul:	
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2505  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2506  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2507  03BC  082B               	movf	___ftmul@f1,w
  2508  03BD  00B1               	movwf	??___ftmul
  2509  03BE  082C               	movf	___ftmul@f1+1,w
  2510  03BF  00B2               	movwf	??___ftmul+1
  2511  03C0  082D               	movf	___ftmul@f1+2,w
  2512  03C1  00B3               	movwf	??___ftmul+2
  2513  03C2  1003               	clrc
  2514  03C3  0D32               	rlf	??___ftmul+1,w
  2515  03C4  0D33               	rlf	??___ftmul+2,w
  2516  03C5  00B4               	movwf	??___ftmul+3
  2517  03C6  0834               	movf	??___ftmul+3,w
  2518  03C7  00B5               	movwf	___ftmul@exp
  2519  03C8  0835               	movf	___ftmul@exp,w
  2520  03C9  1D03               	btfss	3,2
  2521  03CA  2BD2               	goto	l2534
  2522  03CB  3000               	movlw	0
  2523  03CC  00AB               	movwf	?___ftmul
  2524  03CD  3000               	movlw	0
  2525  03CE  00AC               	movwf	?___ftmul+1
  2526  03CF  3000               	movlw	0
  2527  03D0  00AD               	movwf	?___ftmul+2
  2528  03D1  0008               	return
  2529  03D2                     l2534:	
  2530  03D2  082E               	movf	___ftmul@f2,w
  2531  03D3  00B1               	movwf	??___ftmul
  2532  03D4  082F               	movf	___ftmul@f2+1,w
  2533  03D5  00B2               	movwf	??___ftmul+1
  2534  03D6  0830               	movf	___ftmul@f2+2,w
  2535  03D7  00B3               	movwf	??___ftmul+2
  2536  03D8  1003               	clrc
  2537  03D9  0D32               	rlf	??___ftmul+1,w
  2538  03DA  0D33               	rlf	??___ftmul+2,w
  2539  03DB  00B4               	movwf	??___ftmul+3
  2540  03DC  0834               	movf	??___ftmul+3,w
  2541  03DD  00BA               	movwf	___ftmul@sign
  2542  03DE  083A               	movf	___ftmul@sign,w
  2543  03DF  1D03               	btfss	3,2
  2544  03E0  2BE8               	goto	l2540
  2545  03E1  3000               	movlw	0
  2546  03E2  00AB               	movwf	?___ftmul
  2547  03E3  3000               	movlw	0
  2548  03E4  00AC               	movwf	?___ftmul+1
  2549  03E5  3000               	movlw	0
  2550  03E6  00AD               	movwf	?___ftmul+2
  2551  03E7  0008               	return
  2552  03E8                     l2540:	
  2553  03E8  083A               	movf	___ftmul@sign,w
  2554  03E9  3E7B               	addlw	123
  2555  03EA  00B1               	movwf	??___ftmul
  2556  03EB  0831               	movf	??___ftmul,w
  2557  03EC  07B5               	addwf	___ftmul@exp,f
  2558  03ED  082B               	movf	___ftmul@f1,w
  2559  03EE  00B1               	movwf	??___ftmul
  2560  03EF  082C               	movf	___ftmul@f1+1,w
  2561  03F0  00B2               	movwf	??___ftmul+1
  2562  03F1  082D               	movf	___ftmul@f1+2,w
  2563  03F2  00B3               	movwf	??___ftmul+2
  2564  03F3  3010               	movlw	16
  2565  03F4                     u3445:	
  2566  03F4  1003               	clrc
  2567  03F5  0CB3               	rrf	??___ftmul+2,f
  2568  03F6  0CB2               	rrf	??___ftmul+1,f
  2569  03F7  0CB1               	rrf	??___ftmul,f
  2570  03F8  3EFF               	addlw	-1
  2571  03F9  1D03               	skipz
  2572  03FA  2BF4               	goto	u3445
  2573  03FB  0831               	movf	??___ftmul,w
  2574  03FC  00B4               	movwf	??___ftmul+3
  2575  03FD  0834               	movf	??___ftmul+3,w
  2576  03FE  00BA               	movwf	___ftmul@sign
  2577  03FF  082E               	movf	___ftmul@f2,w
  2578  0400  00B1               	movwf	??___ftmul
  2579  0401  082F               	movf	___ftmul@f2+1,w
  2580  0402  00B2               	movwf	??___ftmul+1
  2581  0403  0830               	movf	___ftmul@f2+2,w
  2582  0404  00B3               	movwf	??___ftmul+2
  2583  0405  3010               	movlw	16
  2584  0406                     u3455:	
  2585  0406  1003               	clrc
  2586  0407  0CB3               	rrf	??___ftmul+2,f
  2587  0408  0CB2               	rrf	??___ftmul+1,f
  2588  0409  0CB1               	rrf	??___ftmul,f
  2589  040A  3EFF               	addlw	-1
  2590  040B  1D03               	skipz
  2591  040C  2C06               	goto	u3455
  2592  040D  0831               	movf	??___ftmul,w
  2593  040E  00B4               	movwf	??___ftmul+3
  2594  040F  0834               	movf	??___ftmul+3,w
  2595  0410  06BA               	xorwf	___ftmul@sign,f
  2596  0411  3080               	movlw	128
  2597  0412  00B1               	movwf	??___ftmul
  2598  0413  0831               	movf	??___ftmul,w
  2599  0414  05BA               	andwf	___ftmul@sign,f
  2600  0415  17AC               	bsf	___ftmul@f1+1,7
  2601  0416  17AF               	bsf	___ftmul@f2+1,7
  2602  0417  30FF               	movlw	255
  2603  0418  05AE               	andwf	___ftmul@f2,f
  2604  0419  30FF               	movlw	255
  2605  041A  05AF               	andwf	___ftmul@f2+1,f
  2606  041B  3000               	movlw	0
  2607  041C  05B0               	andwf	___ftmul@f2+2,f
  2608  041D  3000               	movlw	0
  2609  041E  00B6               	movwf	___ftmul@f3_as_product
  2610  041F  3000               	movlw	0
  2611  0420  00B7               	movwf	___ftmul@f3_as_product+1
  2612  0421  3000               	movlw	0
  2613  0422  00B8               	movwf	___ftmul@f3_as_product+2
  2614  0423  3007               	movlw	7
  2615  0424  00B1               	movwf	??___ftmul
  2616  0425  0831               	movf	??___ftmul,w
  2617  0426  00B9               	movwf	___ftmul@cntr
  2618  0427                     l2552:	
  2619  0427  1C2B               	btfss	___ftmul@f1,0
  2620  0428  2C37               	goto	l2556
  2621  0429  082E               	movf	___ftmul@f2,w
  2622  042A  07B6               	addwf	___ftmul@f3_as_product,f
  2623  042B  082F               	movf	___ftmul@f2+1,w
  2624  042C  1103               	clrz
  2625  042D  1803               	skipnc
  2626  042E  0A2F               	incf	___ftmul@f2+1,w
  2627  042F  1D03               	btfss	3,2
  2628  0430  07B7               	addwf	___ftmul@f3_as_product+1,f
  2629  0431  0830               	movf	___ftmul@f2+2,w
  2630  0432  1103               	clrz
  2631  0433  1803               	skipnc
  2632  0434  0A30               	incf	___ftmul@f2+2,w
  2633  0435  1D03               	btfss	3,2
  2634  0436  07B8               	addwf	___ftmul@f3_as_product+2,f
  2635  0437                     l2556:	
  2636  0437  3001               	movlw	1
  2637  0438                     u3485:	
  2638  0438  1003               	clrc
  2639  0439  0CAD               	rrf	___ftmul@f1+2,f
  2640  043A  0CAC               	rrf	___ftmul@f1+1,f
  2641  043B  0CAB               	rrf	___ftmul@f1,f
  2642  043C  3EFF               	addlw	-1
  2643  043D  1D03               	skipz
  2644  043E  2C38               	goto	u3485
  2645  043F  3001               	movlw	1
  2646  0440                     u3495:	
  2647  0440  1003               	clrc
  2648  0441  0DAE               	rlf	___ftmul@f2,f
  2649  0442  0DAF               	rlf	___ftmul@f2+1,f
  2650  0443  0DB0               	rlf	___ftmul@f2+2,f
  2651  0444  3EFF               	addlw	-1
  2652  0445  1D03               	skipz
  2653  0446  2C40               	goto	u3495
  2654  0447  3001               	movlw	1
  2655  0448  02B9               	subwf	___ftmul@cntr,f
  2656  0449  1D03               	btfss	3,2
  2657  044A  2C27               	goto	l2552
  2658  044B  3009               	movlw	9
  2659  044C  00B1               	movwf	??___ftmul
  2660  044D  0831               	movf	??___ftmul,w
  2661  044E  00B9               	movwf	___ftmul@cntr
  2662  044F                     l2564:	
  2663  044F  1C2B               	btfss	___ftmul@f1,0
  2664  0450  2C5F               	goto	l2568
  2665  0451  082E               	movf	___ftmul@f2,w
  2666  0452  07B6               	addwf	___ftmul@f3_as_product,f
  2667  0453  082F               	movf	___ftmul@f2+1,w
  2668  0454  1103               	clrz
  2669  0455  1803               	skipnc
  2670  0456  0A2F               	incf	___ftmul@f2+1,w
  2671  0457  1D03               	btfss	3,2
  2672  0458  07B7               	addwf	___ftmul@f3_as_product+1,f
  2673  0459  0830               	movf	___ftmul@f2+2,w
  2674  045A  1103               	clrz
  2675  045B  1803               	skipnc
  2676  045C  0A30               	incf	___ftmul@f2+2,w
  2677  045D  1D03               	btfss	3,2
  2678  045E  07B8               	addwf	___ftmul@f3_as_product+2,f
  2679  045F                     l2568:	
  2680  045F  3001               	movlw	1
  2681  0460                     u3535:	
  2682  0460  1003               	clrc
  2683  0461  0CAD               	rrf	___ftmul@f1+2,f
  2684  0462  0CAC               	rrf	___ftmul@f1+1,f
  2685  0463  0CAB               	rrf	___ftmul@f1,f
  2686  0464  3EFF               	addlw	-1
  2687  0465  1D03               	skipz
  2688  0466  2C60               	goto	u3535
  2689  0467  3001               	movlw	1
  2690  0468                     u3545:	
  2691  0468  1003               	clrc
  2692  0469  0CB8               	rrf	___ftmul@f3_as_product+2,f
  2693  046A  0CB7               	rrf	___ftmul@f3_as_product+1,f
  2694  046B  0CB6               	rrf	___ftmul@f3_as_product,f
  2695  046C  3EFF               	addlw	-1
  2696  046D  1D03               	skipz
  2697  046E  2C68               	goto	u3545
  2698  046F  3001               	movlw	1
  2699  0470  02B9               	subwf	___ftmul@cntr,f
  2700  0471  1D03               	btfss	3,2
  2701  0472  2C4F               	goto	l2564
  2702  0473  0836               	movf	___ftmul@f3_as_product,w
  2703  0474  00A0               	movwf	___ftpack@arg
  2704  0475  0837               	movf	___ftmul@f3_as_product+1,w
  2705  0476  00A1               	movwf	___ftpack@arg+1
  2706  0477  0838               	movf	___ftmul@f3_as_product+2,w
  2707  0478  00A2               	movwf	___ftpack@arg+2
  2708  0479  0835               	movf	___ftmul@exp,w
  2709  047A  00B1               	movwf	??___ftmul
  2710  047B  0831               	movf	??___ftmul,w
  2711  047C  00A3               	movwf	___ftpack@exp
  2712  047D  083A               	movf	___ftmul@sign,w
  2713  047E  00B2               	movwf	??___ftmul+1
  2714  047F  0832               	movf	??___ftmul+1,w
  2715  0480  00A4               	movwf	___ftpack@sign
  2716  0481  120A  118A  2642   	fcall	___ftpack
  2717  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0486  0820               	movf	?___ftpack,w
  2720  0487  00AB               	movwf	?___ftmul
  2721  0488  0821               	movf	?___ftpack+1,w
  2722  0489  00AC               	movwf	?___ftmul+1
  2723  048A  0822               	movf	?___ftpack+2,w
  2724  048B  00AD               	movwf	?___ftmul+2
  2725  048C  0008               	return
  2726  048D                     __end_of___ftmul:	
  2727                           
  2728                           	psect	text6
  2729  048D                     __ptext6:	
  2730 ;; *************** function ___ftdiv *****************
  2731 ;; Defined at:
  2732 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  f2              3   27[BANK0 ] float 
  2735 ;;  f1              3   30[BANK0 ] float 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  f3              3   38[BANK0 ] float 
  2738 ;;  sign            1   42[BANK0 ] unsigned char 
  2739 ;;  exp             1   41[BANK0 ] unsigned char 
  2740 ;;  cntr            1   37[BANK0 ] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  3   27[BANK0 ] float 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       6       0       0       0
  2751 ;;      Locals:         0       6       0       0       0
  2752 ;;      Temps:          0       4       0       0       0
  2753 ;;      Totals:         0      16       0       0       0
  2754 ;;Total ram usage:       16 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    2
  2757 ;; This function calls:
  2758 ;;		___ftpack
  2759 ;; This function is called by:
  2760 ;;		_temp_Measurement
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function ___ftdiv
  2766  048D                     ___ftdiv:	
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2770  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2771  048E  1303               	bcf	3,6	;RP1=0, select bank0
  2772  048F  083E               	movf	___ftdiv@f1,w
  2773  0490  00C1               	movwf	??___ftdiv
  2774  0491  083F               	movf	___ftdiv@f1+1,w
  2775  0492  00C2               	movwf	??___ftdiv+1
  2776  0493  0840               	movf	___ftdiv@f1+2,w
  2777  0494  00C3               	movwf	??___ftdiv+2
  2778  0495  1003               	clrc
  2779  0496  0D42               	rlf	??___ftdiv+1,w
  2780  0497  0D43               	rlf	??___ftdiv+2,w
  2781  0498  00C4               	movwf	??___ftdiv+3
  2782  0499  0844               	movf	??___ftdiv+3,w
  2783  049A  00C9               	movwf	___ftdiv@exp
  2784  049B  0849               	movf	___ftdiv@exp,w
  2785  049C  1D03               	btfss	3,2
  2786  049D  2CA5               	goto	l2492
  2787  049E  3000               	movlw	0
  2788  049F  00BB               	movwf	?___ftdiv
  2789  04A0  3000               	movlw	0
  2790  04A1  00BC               	movwf	?___ftdiv+1
  2791  04A2  3000               	movlw	0
  2792  04A3  00BD               	movwf	?___ftdiv+2
  2793  04A4  0008               	return
  2794  04A5                     l2492:	
  2795  04A5  083B               	movf	___ftdiv@f2,w
  2796  04A6  00C1               	movwf	??___ftdiv
  2797  04A7  083C               	movf	___ftdiv@f2+1,w
  2798  04A8  00C2               	movwf	??___ftdiv+1
  2799  04A9  083D               	movf	___ftdiv@f2+2,w
  2800  04AA  00C3               	movwf	??___ftdiv+2
  2801  04AB  1003               	clrc
  2802  04AC  0D42               	rlf	??___ftdiv+1,w
  2803  04AD  0D43               	rlf	??___ftdiv+2,w
  2804  04AE  00C4               	movwf	??___ftdiv+3
  2805  04AF  0844               	movf	??___ftdiv+3,w
  2806  04B0  00CA               	movwf	___ftdiv@sign
  2807  04B1  084A               	movf	___ftdiv@sign,w
  2808  04B2  1D03               	btfss	3,2
  2809  04B3  2CBB               	goto	l2498
  2810  04B4  3000               	movlw	0
  2811  04B5  00BB               	movwf	?___ftdiv
  2812  04B6  3000               	movlw	0
  2813  04B7  00BC               	movwf	?___ftdiv+1
  2814  04B8  3000               	movlw	0
  2815  04B9  00BD               	movwf	?___ftdiv+2
  2816  04BA  0008               	return
  2817  04BB                     l2498:	
  2818  04BB  3000               	movlw	0
  2819  04BC  00C6               	movwf	___ftdiv@f3
  2820  04BD  3000               	movlw	0
  2821  04BE  00C7               	movwf	___ftdiv@f3+1
  2822  04BF  3000               	movlw	0
  2823  04C0  00C8               	movwf	___ftdiv@f3+2
  2824  04C1  3089               	movlw	137
  2825  04C2  074A               	addwf	___ftdiv@sign,w
  2826  04C3  00C1               	movwf	??___ftdiv
  2827  04C4  0841               	movf	??___ftdiv,w
  2828  04C5  02C9               	subwf	___ftdiv@exp,f
  2829  04C6  083E               	movf	___ftdiv@f1,w
  2830  04C7  00C1               	movwf	??___ftdiv
  2831  04C8  083F               	movf	___ftdiv@f1+1,w
  2832  04C9  00C2               	movwf	??___ftdiv+1
  2833  04CA  0840               	movf	___ftdiv@f1+2,w
  2834  04CB  00C3               	movwf	??___ftdiv+2
  2835  04CC  3010               	movlw	16
  2836  04CD                     u3365:	
  2837  04CD  1003               	clrc
  2838  04CE  0CC3               	rrf	??___ftdiv+2,f
  2839  04CF  0CC2               	rrf	??___ftdiv+1,f
  2840  04D0  0CC1               	rrf	??___ftdiv,f
  2841  04D1  3EFF               	addlw	-1
  2842  04D2  1D03               	skipz
  2843  04D3  2CCD               	goto	u3365
  2844  04D4  0841               	movf	??___ftdiv,w
  2845  04D5  00C4               	movwf	??___ftdiv+3
  2846  04D6  0844               	movf	??___ftdiv+3,w
  2847  04D7  00CA               	movwf	___ftdiv@sign
  2848  04D8  083B               	movf	___ftdiv@f2,w
  2849  04D9  00C1               	movwf	??___ftdiv
  2850  04DA  083C               	movf	___ftdiv@f2+1,w
  2851  04DB  00C2               	movwf	??___ftdiv+1
  2852  04DC  083D               	movf	___ftdiv@f2+2,w
  2853  04DD  00C3               	movwf	??___ftdiv+2
  2854  04DE  3010               	movlw	16
  2855  04DF                     u3375:	
  2856  04DF  1003               	clrc
  2857  04E0  0CC3               	rrf	??___ftdiv+2,f
  2858  04E1  0CC2               	rrf	??___ftdiv+1,f
  2859  04E2  0CC1               	rrf	??___ftdiv,f
  2860  04E3  3EFF               	addlw	-1
  2861  04E4  1D03               	skipz
  2862  04E5  2CDF               	goto	u3375
  2863  04E6  0841               	movf	??___ftdiv,w
  2864  04E7  00C4               	movwf	??___ftdiv+3
  2865  04E8  0844               	movf	??___ftdiv+3,w
  2866  04E9  06CA               	xorwf	___ftdiv@sign,f
  2867  04EA  3080               	movlw	128
  2868  04EB  00C1               	movwf	??___ftdiv
  2869  04EC  0841               	movf	??___ftdiv,w
  2870  04ED  05CA               	andwf	___ftdiv@sign,f
  2871  04EE  17BF               	bsf	___ftdiv@f1+1,7
  2872  04EF  30FF               	movlw	255
  2873  04F0  05BE               	andwf	___ftdiv@f1,f
  2874  04F1  30FF               	movlw	255
  2875  04F2  05BF               	andwf	___ftdiv@f1+1,f
  2876  04F3  3000               	movlw	0
  2877  04F4  05C0               	andwf	___ftdiv@f1+2,f
  2878  04F5  17BC               	bsf	___ftdiv@f2+1,7
  2879  04F6  30FF               	movlw	255
  2880  04F7  05BB               	andwf	___ftdiv@f2,f
  2881  04F8  30FF               	movlw	255
  2882  04F9  05BC               	andwf	___ftdiv@f2+1,f
  2883  04FA  3000               	movlw	0
  2884  04FB  05BD               	andwf	___ftdiv@f2+2,f
  2885  04FC  3018               	movlw	24
  2886  04FD  00C1               	movwf	??___ftdiv
  2887  04FE  0841               	movf	??___ftdiv,w
  2888  04FF  00C5               	movwf	___ftdiv@cntr
  2889  0500                     l2512:	
  2890  0500  3001               	movlw	1
  2891  0501                     u3385:	
  2892  0501  1003               	clrc
  2893  0502  0DC6               	rlf	___ftdiv@f3,f
  2894  0503  0DC7               	rlf	___ftdiv@f3+1,f
  2895  0504  0DC8               	rlf	___ftdiv@f3+2,f
  2896  0505  3EFF               	addlw	-1
  2897  0506  1D03               	skipz
  2898  0507  2D01               	goto	u3385
  2899  0508  083D               	movf	___ftdiv@f2+2,w
  2900  0509  0240               	subwf	___ftdiv@f1+2,w
  2901  050A  1D03               	skipz
  2902  050B  2D12               	goto	u3395
  2903  050C  083C               	movf	___ftdiv@f2+1,w
  2904  050D  023F               	subwf	___ftdiv@f1+1,w
  2905  050E  1D03               	skipz
  2906  050F  2D12               	goto	u3395
  2907  0510  083B               	movf	___ftdiv@f2,w
  2908  0511  023E               	subwf	___ftdiv@f1,w
  2909  0512                     u3395:	
  2910  0512  1C03               	skipc
  2911  0513  2D1F               	goto	l2520
  2912  0514  083B               	movf	___ftdiv@f2,w
  2913  0515  02BE               	subwf	___ftdiv@f1,f
  2914  0516  083C               	movf	___ftdiv@f2+1,w
  2915  0517  1C03               	skipc
  2916  0518  0F3C               	incfsz	___ftdiv@f2+1,w
  2917  0519  02BF               	subwf	___ftdiv@f1+1,f
  2918  051A  083D               	movf	___ftdiv@f2+2,w
  2919  051B  1C03               	skipc
  2920  051C  0A3D               	incf	___ftdiv@f2+2,w
  2921  051D  02C0               	subwf	___ftdiv@f1+2,f
  2922  051E  1446               	bsf	___ftdiv@f3,0
  2923  051F                     l2520:	
  2924  051F  3001               	movlw	1
  2925  0520                     u3405:	
  2926  0520  1003               	clrc
  2927  0521  0DBE               	rlf	___ftdiv@f1,f
  2928  0522  0DBF               	rlf	___ftdiv@f1+1,f
  2929  0523  0DC0               	rlf	___ftdiv@f1+2,f
  2930  0524  3EFF               	addlw	-1
  2931  0525  1D03               	skipz
  2932  0526  2D20               	goto	u3405
  2933  0527  3001               	movlw	1
  2934  0528  02C5               	subwf	___ftdiv@cntr,f
  2935  0529  1D03               	btfss	3,2
  2936  052A  2D00               	goto	l2512
  2937  052B  0846               	movf	___ftdiv@f3,w
  2938  052C  00A0               	movwf	___ftpack@arg
  2939  052D  0847               	movf	___ftdiv@f3+1,w
  2940  052E  00A1               	movwf	___ftpack@arg+1
  2941  052F  0848               	movf	___ftdiv@f3+2,w
  2942  0530  00A2               	movwf	___ftpack@arg+2
  2943  0531  0849               	movf	___ftdiv@exp,w
  2944  0532  00C1               	movwf	??___ftdiv
  2945  0533  0841               	movf	??___ftdiv,w
  2946  0534  00A3               	movwf	___ftpack@exp
  2947  0535  084A               	movf	___ftdiv@sign,w
  2948  0536  00C2               	movwf	??___ftdiv+1
  2949  0537  0842               	movf	??___ftdiv+1,w
  2950  0538  00A4               	movwf	___ftpack@sign
  2951  0539  120A  118A  2642   	fcall	___ftpack
  2952  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2953  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2954  053E  0820               	movf	?___ftpack,w
  2955  053F  00BB               	movwf	?___ftdiv
  2956  0540  0821               	movf	?___ftpack+1,w
  2957  0541  00BC               	movwf	?___ftdiv+1
  2958  0542  0822               	movf	?___ftpack+2,w
  2959  0543  00BD               	movwf	?___ftdiv+2
  2960  0544  0008               	return
  2961  0545                     __end_of___ftdiv:	
  2962                           
  2963                           	psect	text7
  2964  01D1                     __ptext7:	
  2965 ;; *************** function ___ftadd *****************
  2966 ;; Defined at:
  2967 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  f1              3   43[BANK0 ] float 
  2970 ;;  f2              3   46[BANK0 ] float 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  exp1            1   55[BANK0 ] unsigned char 
  2973 ;;  exp2            1   54[BANK0 ] unsigned char 
  2974 ;;  sign            1   53[BANK0 ] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  3   43[BANK0 ] float 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0, pclath, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       6       0       0       0
  2985 ;;      Locals:         0       3       0       0       0
  2986 ;;      Temps:          0       4       0       0       0
  2987 ;;      Totals:         0      13       0       0       0
  2988 ;;Total ram usage:       13 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    2
  2991 ;; This function calls:
  2992 ;;		___ftpack
  2993 ;; This function is called by:
  2994 ;;		_temp_Measurement
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___ftadd
  3000  01D1                     ___ftadd:	
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3004  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3005  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3006  01D3  084B               	movf	___ftadd@f1,w
  3007  01D4  00D1               	movwf	??___ftadd
  3008  01D5  084C               	movf	___ftadd@f1+1,w
  3009  01D6  00D2               	movwf	??___ftadd+1
  3010  01D7  084D               	movf	___ftadd@f1+2,w
  3011  01D8  00D3               	movwf	??___ftadd+2
  3012  01D9  1003               	clrc
  3013  01DA  0D52               	rlf	??___ftadd+1,w
  3014  01DB  0D53               	rlf	??___ftadd+2,w
  3015  01DC  00D4               	movwf	??___ftadd+3
  3016  01DD  0854               	movf	??___ftadd+3,w
  3017  01DE  00D7               	movwf	___ftadd@exp1
  3018  01DF  084E               	movf	___ftadd@f2,w
  3019  01E0  00D1               	movwf	??___ftadd
  3020  01E1  084F               	movf	___ftadd@f2+1,w
  3021  01E2  00D2               	movwf	??___ftadd+1
  3022  01E3  0850               	movf	___ftadd@f2+2,w
  3023  01E4  00D3               	movwf	??___ftadd+2
  3024  01E5  1003               	clrc
  3025  01E6  0D52               	rlf	??___ftadd+1,w
  3026  01E7  0D53               	rlf	??___ftadd+2,w
  3027  01E8  00D4               	movwf	??___ftadd+3
  3028  01E9  0854               	movf	??___ftadd+3,w
  3029  01EA  00D6               	movwf	___ftadd@exp2
  3030  01EB  0857               	movf	___ftadd@exp1,w
  3031  01EC  1903               	btfsc	3,2
  3032  01ED  29FA               	goto	l2422
  3033  01EE  0856               	movf	___ftadd@exp2,w
  3034  01EF  0257               	subwf	___ftadd@exp1,w
  3035  01F0  1803               	skipnc
  3036  01F1  2A01               	goto	l2426
  3037  01F2  0357               	decf	___ftadd@exp1,w
  3038  01F3  3AFF               	xorlw	255
  3039  01F4  0756               	addwf	___ftadd@exp2,w
  3040  01F5  00D1               	movwf	??___ftadd
  3041  01F6  3019               	movlw	25
  3042  01F7  0251               	subwf	??___ftadd,w
  3043  01F8  1C03               	skipc
  3044  01F9  2A01               	goto	l2426
  3045  01FA                     l2422:	
  3046  01FA  084E               	movf	___ftadd@f2,w
  3047  01FB  00CB               	movwf	?___ftadd
  3048  01FC  084F               	movf	___ftadd@f2+1,w
  3049  01FD  00CC               	movwf	?___ftadd+1
  3050  01FE  0850               	movf	___ftadd@f2+2,w
  3051  01FF  00CD               	movwf	?___ftadd+2
  3052  0200  0008               	return
  3053  0201                     l2426:	
  3054  0201  0856               	movf	___ftadd@exp2,w
  3055  0202  1903               	btfsc	3,2
  3056  0203  0008               	return
  3057  0204  0857               	movf	___ftadd@exp1,w
  3058  0205  0256               	subwf	___ftadd@exp2,w
  3059  0206  1803               	skipnc
  3060  0207  2A10               	goto	l2432
  3061  0208  0356               	decf	___ftadd@exp2,w
  3062  0209  3AFF               	xorlw	255
  3063  020A  0757               	addwf	___ftadd@exp1,w
  3064  020B  00D1               	movwf	??___ftadd
  3065  020C  3019               	movlw	25
  3066  020D  0251               	subwf	??___ftadd,w
  3067  020E  1803               	btfsc	3,0
  3068  020F  0008               	return
  3069  0210                     l2432:	
  3070  0210  3006               	movlw	6
  3071  0211  00D1               	movwf	??___ftadd
  3072  0212  0851               	movf	??___ftadd,w
  3073  0213  00D5               	movwf	___ftadd@sign
  3074  0214  1BCD               	btfsc	___ftadd@f1+2,7
  3075  0215  17D5               	bsf	___ftadd@sign,7
  3076  0216  1BD0               	btfsc	___ftadd@f2+2,7
  3077  0217  1755               	bsf	___ftadd@sign,6
  3078  0218  17CC               	bsf	___ftadd@f1+1,7
  3079  0219  30FF               	movlw	255
  3080  021A  05CB               	andwf	___ftadd@f1,f
  3081  021B  30FF               	movlw	255
  3082  021C  05CC               	andwf	___ftadd@f1+1,f
  3083  021D  3000               	movlw	0
  3084  021E  05CD               	andwf	___ftadd@f1+2,f
  3085  021F  17CF               	bsf	___ftadd@f2+1,7
  3086  0220  30FF               	movlw	255
  3087  0221  05CE               	andwf	___ftadd@f2,f
  3088  0222  30FF               	movlw	255
  3089  0223  05CF               	andwf	___ftadd@f2+1,f
  3090  0224  3000               	movlw	0
  3091  0225  05D0               	andwf	___ftadd@f2+2,f
  3092  0226  0856               	movf	___ftadd@exp2,w
  3093  0227  0257               	subwf	___ftadd@exp1,w
  3094  0228  1803               	skipnc
  3095  0229  2A50               	goto	l2454
  3096  022A                     l2444:	
  3097  022A  3001               	movlw	1
  3098  022B                     u3195:	
  3099  022B  1003               	clrc
  3100  022C  0DCE               	rlf	___ftadd@f2,f
  3101  022D  0DCF               	rlf	___ftadd@f2+1,f
  3102  022E  0DD0               	rlf	___ftadd@f2+2,f
  3103  022F  3EFF               	addlw	-1
  3104  0230  1D03               	skipz
  3105  0231  2A2B               	goto	u3195
  3106  0232  3001               	movlw	1
  3107  0233  02D6               	subwf	___ftadd@exp2,f
  3108  0234  0856               	movf	___ftadd@exp2,w
  3109  0235  0657               	xorwf	___ftadd@exp1,w
  3110  0236  1903               	skipnz
  3111  0237  2A4B               	goto	l2452
  3112  0238  3001               	movlw	1
  3113  0239  02D5               	subwf	___ftadd@sign,f
  3114  023A  0855               	movf	___ftadd@sign,w
  3115  023B  3907               	andlw	7
  3116  023C  1903               	btfsc	3,2
  3117  023D  2A4B               	goto	l2452
  3118  023E  2A2A               	goto	l2444
  3119  023F                     l2450:	
  3120  023F  3001               	movlw	1
  3121  0240                     u3225:	
  3122  0240  1003               	clrc
  3123  0241  0CCD               	rrf	___ftadd@f1+2,f
  3124  0242  0CCC               	rrf	___ftadd@f1+1,f
  3125  0243  0CCB               	rrf	___ftadd@f1,f
  3126  0244  3EFF               	addlw	-1
  3127  0245  1D03               	skipz
  3128  0246  2A40               	goto	u3225
  3129  0247  3001               	movlw	1
  3130  0248  00D1               	movwf	??___ftadd
  3131  0249  0851               	movf	??___ftadd,w
  3132  024A  07D7               	addwf	___ftadd@exp1,f
  3133  024B                     l2452:	
  3134  024B  0857               	movf	___ftadd@exp1,w
  3135  024C  0656               	xorwf	___ftadd@exp2,w
  3136  024D  1903               	btfsc	3,2
  3137  024E  2A79               	goto	l711
  3138  024F  2A3F               	goto	l2450
  3139  0250                     l2454:	
  3140  0250  0857               	movf	___ftadd@exp1,w
  3141  0251  0256               	subwf	___ftadd@exp2,w
  3142  0252  1803               	skipnc
  3143  0253  2A79               	goto	l711
  3144  0254                     l2456:	
  3145  0254  3001               	movlw	1
  3146  0255                     u3255:	
  3147  0255  1003               	clrc
  3148  0256  0DCB               	rlf	___ftadd@f1,f
  3149  0257  0DCC               	rlf	___ftadd@f1+1,f
  3150  0258  0DCD               	rlf	___ftadd@f1+2,f
  3151  0259  3EFF               	addlw	-1
  3152  025A  1D03               	skipz
  3153  025B  2A55               	goto	u3255
  3154  025C  3001               	movlw	1
  3155  025D  02D7               	subwf	___ftadd@exp1,f
  3156  025E  0856               	movf	___ftadd@exp2,w
  3157  025F  0657               	xorwf	___ftadd@exp1,w
  3158  0260  1903               	skipnz
  3159  0261  2A75               	goto	l2464
  3160  0262  3001               	movlw	1
  3161  0263  02D5               	subwf	___ftadd@sign,f
  3162  0264  0855               	movf	___ftadd@sign,w
  3163  0265  3907               	andlw	7
  3164  0266  1903               	btfsc	3,2
  3165  0267  2A75               	goto	l2464
  3166  0268  2A54               	goto	l2456
  3167  0269                     l2462:	
  3168  0269  3001               	movlw	1
  3169  026A                     u3285:	
  3170  026A  1003               	clrc
  3171  026B  0CD0               	rrf	___ftadd@f2+2,f
  3172  026C  0CCF               	rrf	___ftadd@f2+1,f
  3173  026D  0CCE               	rrf	___ftadd@f2,f
  3174  026E  3EFF               	addlw	-1
  3175  026F  1D03               	skipz
  3176  0270  2A6A               	goto	u3285
  3177  0271  3001               	movlw	1
  3178  0272  00D1               	movwf	??___ftadd
  3179  0273  0851               	movf	??___ftadd,w
  3180  0274  07D6               	addwf	___ftadd@exp2,f
  3181  0275                     l2464:	
  3182  0275  0857               	movf	___ftadd@exp1,w
  3183  0276  0656               	xorwf	___ftadd@exp2,w
  3184  0277  1D03               	skipz
  3185  0278  2A69               	goto	l2462
  3186  0279                     l711:	
  3187  0279  1FD5               	btfss	___ftadd@sign,7
  3188  027A  2A8B               	goto	l2468
  3189  027B  30FF               	movlw	255
  3190  027C  06CB               	xorwf	___ftadd@f1,f
  3191  027D  30FF               	movlw	255
  3192  027E  06CC               	xorwf	___ftadd@f1+1,f
  3193  027F  30FF               	movlw	255
  3194  0280  06CD               	xorwf	___ftadd@f1+2,f
  3195  0281  3001               	movlw	1
  3196  0282  07CB               	addwf	___ftadd@f1,f
  3197  0283  3000               	movlw	0
  3198  0284  1803               	skipnc
  3199  0285  3001               	movlw	1
  3200  0286  07CC               	addwf	___ftadd@f1+1,f
  3201  0287  3000               	movlw	0
  3202  0288  1803               	skipnc
  3203  0289  3001               	movlw	1
  3204  028A  07CD               	addwf	___ftadd@f1+2,f
  3205  028B                     l2468:	
  3206  028B  1F55               	btfss	___ftadd@sign,6
  3207  028C  2A9D               	goto	l2472
  3208  028D  30FF               	movlw	255
  3209  028E  06CE               	xorwf	___ftadd@f2,f
  3210  028F  30FF               	movlw	255
  3211  0290  06CF               	xorwf	___ftadd@f2+1,f
  3212  0291  30FF               	movlw	255
  3213  0292  06D0               	xorwf	___ftadd@f2+2,f
  3214  0293  3001               	movlw	1
  3215  0294  07CE               	addwf	___ftadd@f2,f
  3216  0295  3000               	movlw	0
  3217  0296  1803               	skipnc
  3218  0297  3001               	movlw	1
  3219  0298  07CF               	addwf	___ftadd@f2+1,f
  3220  0299  3000               	movlw	0
  3221  029A  1803               	skipnc
  3222  029B  3001               	movlw	1
  3223  029C  07D0               	addwf	___ftadd@f2+2,f
  3224  029D                     l2472:	
  3225  029D  01D5               	clrf	___ftadd@sign
  3226  029E  084B               	movf	___ftadd@f1,w
  3227  029F  07CE               	addwf	___ftadd@f2,f
  3228  02A0  084C               	movf	___ftadd@f1+1,w
  3229  02A1  1103               	clrz
  3230  02A2  1803               	skipnc
  3231  02A3  0A4C               	incf	___ftadd@f1+1,w
  3232  02A4  1D03               	btfss	3,2
  3233  02A5  07CF               	addwf	___ftadd@f2+1,f
  3234  02A6  084D               	movf	___ftadd@f1+2,w
  3235  02A7  1103               	clrz
  3236  02A8  1803               	skipnc
  3237  02A9  0A4D               	incf	___ftadd@f1+2,w
  3238  02AA  1D03               	btfss	3,2
  3239  02AB  07D0               	addwf	___ftadd@f2+2,f
  3240  02AC  1FD0               	btfss	___ftadd@f2+2,7
  3241  02AD  2AC0               	goto	l2482
  3242  02AE  30FF               	movlw	255
  3243  02AF  06CE               	xorwf	___ftadd@f2,f
  3244  02B0  30FF               	movlw	255
  3245  02B1  06CF               	xorwf	___ftadd@f2+1,f
  3246  02B2  30FF               	movlw	255
  3247  02B3  06D0               	xorwf	___ftadd@f2+2,f
  3248  02B4  3001               	movlw	1
  3249  02B5  07CE               	addwf	___ftadd@f2,f
  3250  02B6  3000               	movlw	0
  3251  02B7  1803               	skipnc
  3252  02B8  3001               	movlw	1
  3253  02B9  07CF               	addwf	___ftadd@f2+1,f
  3254  02BA  3000               	movlw	0
  3255  02BB  1803               	skipnc
  3256  02BC  3001               	movlw	1
  3257  02BD  07D0               	addwf	___ftadd@f2+2,f
  3258  02BE  01D5               	clrf	___ftadd@sign
  3259  02BF  0AD5               	incf	___ftadd@sign,f
  3260  02C0                     l2482:	
  3261  02C0  084E               	movf	___ftadd@f2,w
  3262  02C1  00A0               	movwf	___ftpack@arg
  3263  02C2  084F               	movf	___ftadd@f2+1,w
  3264  02C3  00A1               	movwf	___ftpack@arg+1
  3265  02C4  0850               	movf	___ftadd@f2+2,w
  3266  02C5  00A2               	movwf	___ftpack@arg+2
  3267  02C6  0857               	movf	___ftadd@exp1,w
  3268  02C7  00D1               	movwf	??___ftadd
  3269  02C8  0851               	movf	??___ftadd,w
  3270  02C9  00A3               	movwf	___ftpack@exp
  3271  02CA  0855               	movf	___ftadd@sign,w
  3272  02CB  00D2               	movwf	??___ftadd+1
  3273  02CC  0852               	movf	??___ftadd+1,w
  3274  02CD  00A4               	movwf	___ftpack@sign
  3275  02CE  120A  118A  2642   	fcall	___ftpack
  3276  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3277  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3278  02D3  0820               	movf	?___ftpack,w
  3279  02D4  00CB               	movwf	?___ftadd
  3280  02D5  0821               	movf	?___ftpack+1,w
  3281  02D6  00CC               	movwf	?___ftadd+1
  3282  02D7  0822               	movf	?___ftpack+2,w
  3283  02D8  00CD               	movwf	?___ftadd+2
  3284  02D9  0008               	return
  3285  02DA                     __end_of___ftadd:	
  3286                           
  3287                           	psect	text8
  3288  0642                     __ptext8:	
  3289 ;; *************** function ___ftpack *****************
  3290 ;; Defined at:
  3291 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  arg             3    0[BANK0 ] unsigned um
  3294 ;;  exp             1    3[BANK0 ] unsigned char 
  3295 ;;  sign            1    4[BANK0 ] unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  3    0[BANK0 ] float 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         0       5       0       0       0
  3308 ;;      Locals:         0       0       0       0       0
  3309 ;;      Temps:          0       3       0       0       0
  3310 ;;      Totals:         0       8       0       0       0
  3311 ;;Total ram usage:        8 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		___ftadd
  3318 ;;		___ftdiv
  3319 ;;		___ftmul
  3320 ;;		___lwtoft
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function ___ftpack
  3326  0642                     ___ftpack:	
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3330  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0644  0823               	movf	___ftpack@exp,w
  3333  0645  1903               	btfsc	3,2
  3334  0646  2E4C               	goto	l2330
  3335  0647  0822               	movf	___ftpack@arg+2,w
  3336  0648  0421               	iorwf	___ftpack@arg+1,w
  3337  0649  0420               	iorwf	___ftpack@arg,w
  3338  064A  1D03               	skipz
  3339  064B  2E5F               	goto	l2336
  3340  064C                     l2330:	
  3341  064C  3000               	movlw	0
  3342  064D  00A0               	movwf	?___ftpack
  3343  064E  3000               	movlw	0
  3344  064F  00A1               	movwf	?___ftpack+1
  3345  0650  3000               	movlw	0
  3346  0651  00A2               	movwf	?___ftpack+2
  3347  0652  0008               	return
  3348  0653                     l2334:	
  3349  0653  3001               	movlw	1
  3350  0654  00A5               	movwf	??___ftpack
  3351  0655  0825               	movf	??___ftpack,w
  3352  0656  07A3               	addwf	___ftpack@exp,f
  3353  0657  3001               	movlw	1
  3354  0658                     u2905:	
  3355  0658  1003               	clrc
  3356  0659  0CA2               	rrf	___ftpack@arg+2,f
  3357  065A  0CA1               	rrf	___ftpack@arg+1,f
  3358  065B  0CA0               	rrf	___ftpack@arg,f
  3359  065C  3EFF               	addlw	-1
  3360  065D  1D03               	skipz
  3361  065E  2E58               	goto	u2905
  3362  065F                     l2336:	
  3363  065F  30FE               	movlw	254
  3364  0660  0522               	andwf	___ftpack@arg+2,w
  3365  0661  1903               	btfsc	3,2
  3366  0662  2E7A               	goto	l680
  3367  0663  2E53               	goto	l2334
  3368  0664                     l2338:	
  3369  0664  3001               	movlw	1
  3370  0665  00A5               	movwf	??___ftpack
  3371  0666  0825               	movf	??___ftpack,w
  3372  0667  07A3               	addwf	___ftpack@exp,f
  3373  0668  3001               	movlw	1
  3374  0669  07A0               	addwf	___ftpack@arg,f
  3375  066A  3000               	movlw	0
  3376  066B  1803               	skipnc
  3377  066C  3001               	movlw	1
  3378  066D  07A1               	addwf	___ftpack@arg+1,f
  3379  066E  3000               	movlw	0
  3380  066F  1803               	skipnc
  3381  0670  3001               	movlw	1
  3382  0671  07A2               	addwf	___ftpack@arg+2,f
  3383  0672  3001               	movlw	1
  3384  0673                     u2925:	
  3385  0673  1003               	clrc
  3386  0674  0CA2               	rrf	___ftpack@arg+2,f
  3387  0675  0CA1               	rrf	___ftpack@arg+1,f
  3388  0676  0CA0               	rrf	___ftpack@arg,f
  3389  0677  3EFF               	addlw	-1
  3390  0678  1D03               	skipz
  3391  0679  2E73               	goto	u2925
  3392  067A                     l680:	
  3393  067A  30FF               	movlw	255
  3394  067B  0522               	andwf	___ftpack@arg+2,w
  3395  067C  1903               	btfsc	3,2
  3396  067D  2E89               	goto	l2346
  3397  067E  2E64               	goto	l2338
  3398  067F                     l2344:	
  3399  067F  3001               	movlw	1
  3400  0680  02A3               	subwf	___ftpack@exp,f
  3401  0681  3001               	movlw	1
  3402  0682                     u2945:	
  3403  0682  1003               	clrc
  3404  0683  0DA0               	rlf	___ftpack@arg,f
  3405  0684  0DA1               	rlf	___ftpack@arg+1,f
  3406  0685  0DA2               	rlf	___ftpack@arg+2,f
  3407  0686  3EFF               	addlw	-1
  3408  0687  1D03               	skipz
  3409  0688  2E82               	goto	u2945
  3410  0689                     l2346:	
  3411  0689  1BA1               	btfsc	___ftpack@arg+1,7
  3412  068A  2E8F               	goto	l687
  3413  068B  3002               	movlw	2
  3414  068C  0223               	subwf	___ftpack@exp,w
  3415  068D  1803               	skipnc
  3416  068E  2E7F               	goto	l2344
  3417  068F                     l687:	
  3418  068F  1823               	btfsc	___ftpack@exp,0
  3419  0690  2E97               	goto	l688
  3420  0691  30FF               	movlw	255
  3421  0692  05A0               	andwf	___ftpack@arg,f
  3422  0693  307F               	movlw	127
  3423  0694  05A1               	andwf	___ftpack@arg+1,f
  3424  0695  30FF               	movlw	255
  3425  0696  05A2               	andwf	___ftpack@arg+2,f
  3426  0697                     l688:	
  3427  0697  1003               	clrc
  3428  0698  0CA3               	rrf	___ftpack@exp,f
  3429  0699  0823               	movf	___ftpack@exp,w
  3430  069A  00A5               	movwf	??___ftpack
  3431  069B  01A6               	clrf	??___ftpack+1
  3432  069C  01A7               	clrf	??___ftpack+2
  3433  069D  3010               	movlw	16
  3434  069E                     u2985:	
  3435  069E  1003               	clrc
  3436  069F  0DA5               	rlf	??___ftpack,f
  3437  06A0  0DA6               	rlf	??___ftpack+1,f
  3438  06A1  0DA7               	rlf	??___ftpack+2,f
  3439  06A2  3EFF               	addlw	-1
  3440  06A3  1D03               	skipz
  3441  06A4  2E9E               	goto	u2985
  3442  06A5  0825               	movf	??___ftpack,w
  3443  06A6  04A0               	iorwf	___ftpack@arg,f
  3444  06A7  0826               	movf	??___ftpack+1,w
  3445  06A8  04A1               	iorwf	___ftpack@arg+1,f
  3446  06A9  0827               	movf	??___ftpack+2,w
  3447  06AA  04A2               	iorwf	___ftpack@arg+2,f
  3448  06AB  0824               	movf	___ftpack@sign,w
  3449  06AC  1903               	btfsc	3,2
  3450  06AD  0008               	return
  3451  06AE  17A2               	bsf	___ftpack@arg+2,7
  3452  06AF  0008               	return
  3453  06B0                     __end_of___ftpack:	
  3454                           
  3455                           	psect	text9
  3456  0031                     __ptext9:	
  3457 ;; *************** function _sprintf *****************
  3458 ;; Defined at:
  3459 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  sp              1    wreg     PTR unsigned char 
  3462 ;;		 -> sTemperature(2), 
  3463 ;;  f               1   77[BANK0 ] PTR const unsigned char 
  3464 ;;		 -> STR_1(4), 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  sp              1    8[BANK1 ] PTR unsigned char 
  3467 ;;		 -> sTemperature(2), 
  3468 ;;  tmpval          4    0        struct .
  3469 ;;  width           2    9[BANK1 ] int 
  3470 ;;  val             2    6[BANK1 ] unsigned int 
  3471 ;;  cp              2    0        PTR const unsigned char 
  3472 ;;  len             2    0        unsigned int 
  3473 ;;  c               1   11[BANK1 ] char 
  3474 ;;  flag            1    5[BANK1 ] unsigned char 
  3475 ;;  prec            1    4[BANK1 ] char 
  3476 ;;  ap              1    3[BANK1 ] PTR void [1]
  3477 ;;		 -> ?_sprintf(2), 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2   77[BANK0 ] int 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       3       0       0       0
  3488 ;;      Locals:         0       0       9       0       0
  3489 ;;      Temps:          0       0       3       0       0
  3490 ;;      Totals:         0       3      12       0       0
  3491 ;;Total ram usage:       15 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		___lwdiv
  3496 ;;		___lwmod
  3497 ;;		___wmul
  3498 ;;		_isdigit
  3499 ;; This function is called by:
  3500 ;;		_temp_Display
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _sprintf
  3506  0031                     _sprintf:	
  3507                           
  3508                           ;incstack = 0
  3509                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3510                           ;sprintf@sp stored from wreg
  3511  0031  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0032  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0033  00A8               	movwf	sprintf@sp^(0+128)
  3514                           
  3515                           ;doprnt.c: 494: va_list ap;
  3516                           ;doprnt.c: 499: signed char c;
  3517                           ;doprnt.c: 501: int width;
  3518                           ;doprnt.c: 506: signed char prec;
  3519                           ;doprnt.c: 508: unsigned char flag;
  3520                           ;doprnt.c: 523: union {
  3521                           ;doprnt.c: 524: unsigned long vd;
  3522                           ;doprnt.c: 525: double integ;
  3523                           ;doprnt.c: 526: } tmpval;
  3524                           ;doprnt.c: 528: unsigned int val;
  3525                           ;doprnt.c: 529: unsigned len;
  3526                           ;doprnt.c: 530: const char * cp;
  3527                           ;doprnt.c: 533: *ap = __va_start();
  3528  0034  306E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3529  0035  00A0               	movwf	??_sprintf^(0+128)
  3530  0036  0820               	movf	??_sprintf^(0+128),w
  3531  0037  00A3               	movwf	sprintf@ap^(0+128)
  3532  0038                     l2760:	
  3533                           ;doprnt.c: 536: while(c = *f++) {
  3534                           
  3535  0038  3001               	movlw	1
  3536  0039  1283               	bcf	3,5	;RP0=0, select bank0
  3537  003A  1303               	bcf	3,6	;RP1=0, select bank0
  3538  003B  07ED               	addwf	sprintf@f,f
  3539  003C  30FF               	movlw	-1
  3540  003D  076D               	addwf	sprintf@f,w
  3541  003E  0084               	movwf	4
  3542  003F  120A  158A  2000  120A  118A  	fcall	stringdir
  3543  0044  1683               	bsf	3,5	;RP0=1, select bank1
  3544  0045  1303               	bcf	3,6	;RP1=0, select bank1
  3545  0046  00A0               	movwf	??_sprintf^(0+128)
  3546  0047  0820               	movf	??_sprintf^(0+128),w
  3547  0048  00AB               	movwf	sprintf@c^(0+128)
  3548  0049  082B               	movf	sprintf@c^(0+128),w
  3549  004A  1903               	btfsc	3,2
  3550  004B  29CA               	goto	l2762
  3551                           
  3552                           ;doprnt.c: 538: if(c != '%')
  3553  004C  3025               	movlw	37
  3554  004D  062B               	xorwf	sprintf@c^(0+128),w
  3555  004E  1903               	btfsc	3,2
  3556  004F  285C               	goto	l2686
  3557                           
  3558                           ;doprnt.c: 540: {
  3559                           ;doprnt.c: 541: ((*sp++ = (c)));
  3560  0050  082B               	movf	sprintf@c^(0+128),w
  3561  0051  00A0               	movwf	??_sprintf^(0+128)
  3562  0052  0828               	movf	sprintf@sp^(0+128),w
  3563  0053  0084               	movwf	4
  3564  0054  0820               	movf	??_sprintf^(0+128),w
  3565  0055  1383               	bcf	3,7	;select IRP bank0
  3566  0056  0080               	movwf	0
  3567  0057  3001               	movlw	1
  3568  0058  00A0               	movwf	??_sprintf^(0+128)
  3569  0059  0820               	movf	??_sprintf^(0+128),w
  3570  005A  07A8               	addwf	sprintf@sp^(0+128),f
  3571                           
  3572                           ;doprnt.c: 542: continue;
  3573  005B  2838               	goto	l2760
  3574  005C                     l2686:	
  3575                           
  3576                           ;doprnt.c: 543: }
  3577                           ;doprnt.c: 546: width = 0;
  3578  005C  01A9               	clrf	sprintf@width^(0+128)
  3579  005D  01AA               	clrf	(sprintf@width+1)^(0+128)
  3580                           
  3581                           ;doprnt.c: 548: flag = 0;
  3582  005E  01A5               	clrf	sprintf@flag^(0+128)
  3583                           
  3584                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3585  005F  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0060  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0061  086D               	movf	sprintf@f,w
  3588  0062  0084               	movwf	4
  3589  0063  120A  158A  2000  120A  118A  	fcall	stringdir
  3590  0068  120A  158A  2456  120A  118A  	fcall	_isdigit
  3591  006D  1C03               	btfss	3,0
  3592  006E  28C1               	goto	l2702
  3593                           
  3594                           ;doprnt.c: 598: width = 0;
  3595  006F  1683               	bsf	3,5	;RP0=1, select bank1
  3596  0070  1303               	bcf	3,6	;RP1=0, select bank1
  3597  0071  01A9               	clrf	sprintf@width^(0+128)
  3598  0072  01AA               	clrf	(sprintf@width+1)^(0+128)
  3599  0073                     l2692:	
  3600                           ;doprnt.c: 599: do {
  3601                           
  3602                           
  3603                           ;doprnt.c: 600: width *= 10;
  3604  0073  300A               	movlw	10
  3605  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0075  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0076  00A0               	movwf	___wmul@multiplier
  3608  0077  3000               	movlw	0
  3609  0078  00A1               	movwf	___wmul@multiplier+1
  3610  0079  1683               	bsf	3,5	;RP0=1, select bank1
  3611  007A  1303               	bcf	3,6	;RP1=0, select bank1
  3612  007B  082A               	movf	(sprintf@width+1)^(0+128),w
  3613  007C  1283               	bcf	3,5	;RP0=0, select bank0
  3614  007D  1303               	bcf	3,6	;RP1=0, select bank0
  3615  007E  00A3               	movwf	___wmul@multiplicand+1
  3616  007F  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0080  1303               	bcf	3,6	;RP1=0, select bank1
  3618  0081  0829               	movf	sprintf@width^(0+128),w
  3619  0082  1283               	bcf	3,5	;RP0=0, select bank0
  3620  0083  1303               	bcf	3,6	;RP1=0, select bank0
  3621  0084  00A2               	movwf	___wmul@multiplicand
  3622  0085  120A  158A  2547  120A  118A  	fcall	___wmul
  3623  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3624  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3625  008C  0821               	movf	?___wmul+1,w
  3626  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3627  008E  1303               	bcf	3,6	;RP1=0, select bank1
  3628  008F  00AA               	movwf	(sprintf@width+1)^(0+128)
  3629  0090  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0091  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0092  0820               	movf	?___wmul,w
  3632  0093  1683               	bsf	3,5	;RP0=1, select bank1
  3633  0094  1303               	bcf	3,6	;RP1=0, select bank1
  3634  0095  00A9               	movwf	sprintf@width^(0+128)
  3635                           
  3636                           ;doprnt.c: 601: width += *f++ - '0';
  3637  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0097  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0098  086D               	movf	sprintf@f,w
  3640  0099  0084               	movwf	4
  3641  009A  120A  158A  2000  120A  118A  	fcall	stringdir
  3642  009F  3ED0               	addlw	208
  3643  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  3644  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  3645  00A2  00A0               	movwf	??_sprintf^(0+128)
  3646  00A3  30FF               	movlw	255
  3647  00A4  1803               	skipnc
  3648  00A5  3000               	movlw	0
  3649  00A6  00A1               	movwf	(??_sprintf^(0+128)+1)
  3650  00A7  0820               	movf	??_sprintf^(0+128),w
  3651  00A8  07A9               	addwf	sprintf@width^(0+128),f
  3652  00A9  1803               	skipnc
  3653  00AA  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3654  00AB  0821               	movf	(??_sprintf+1)^(0+128),w
  3655  00AC  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3656  00AD  3001               	movlw	1
  3657  00AE  00A0               	movwf	??_sprintf^(0+128)
  3658  00AF  0820               	movf	??_sprintf^(0+128),w
  3659  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  3660  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  3661  00B2  07ED               	addwf	sprintf@f,f
  3662                           
  3663                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3664  00B3  086D               	movf	sprintf@f,w
  3665  00B4  0084               	movwf	4
  3666  00B5  120A  158A  2000  120A  118A  	fcall	stringdir
  3667  00BA  120A  158A  2456  120A  118A  	fcall	_isdigit
  3668  00BF  1803               	btfsc	3,0
  3669  00C0  2873               	goto	l2692
  3670  00C1                     l2702:	
  3671                           ;doprnt.c: 822: }
  3672                           
  3673                           ;doprnt.c: 813: continue;
  3674                           
  3675                           ;doprnt.c: 802: default:
  3676                           
  3677                           ;doprnt.c: 698: case 'i':
  3678                           ;doprnt.c: 699: break;
  3679                           
  3680                           ;doprnt.c: 697: case 'd':
  3681                           
  3682                           ;doprnt.c: 638: goto alldone;
  3683                           
  3684                           ;doprnt.c: 637: case 0:
  3685                           
  3686                           ;doprnt.c: 608: }
  3687                           ;doprnt.c: 635: switch(c = *f++) {
  3688                           
  3689  00C1  3001               	movlw	1
  3690  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  3691  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  3692  00C4  07ED               	addwf	sprintf@f,f
  3693  00C5  30FF               	movlw	-1
  3694  00C6  076D               	addwf	sprintf@f,w
  3695  00C7  0084               	movwf	4
  3696  00C8  120A  158A  2000  120A  118A  	fcall	stringdir
  3697  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3698  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3699  00CF  00AB               	movwf	sprintf@c^(0+128)
  3700                           
  3701                           ; Switch size 1, requested type "space"
  3702                           ; Number of cases is 3, Range of values is 0 to 105
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; simple_byte           10     6 (average)
  3706                           ; jumptable            260     6 (fixed)
  3707                           ;	Chosen strategy is simple_byte
  3708  00D0  3A00               	xorlw	0	; case 0
  3709  00D1  1903               	skipnz
  3710  00D2  29CA               	goto	l2762
  3711  00D3  3A64               	xorlw	100	; case 100
  3712  00D4  1903               	skipnz
  3713  00D5  28DA               	goto	l2704
  3714  00D6  3A0D               	xorlw	13	; case 105
  3715  00D7  1903               	skipnz
  3716  00D8  28DA               	goto	l2704
  3717  00D9  2838               	goto	l2760
  3718  00DA                     l2704:	
  3719                           
  3720                           ;doprnt.c: 1253: {
  3721                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3722  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  3723  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  3724  00DC  0823               	movf	sprintf@ap^(0+128),w
  3725  00DD  0084               	movwf	4
  3726  00DE  1383               	bcf	3,7	;select IRP bank0
  3727  00DF  0800               	movf	0,w
  3728  00E0  00A6               	movwf	sprintf@val^(0+128)
  3729  00E1  0A84               	incf	4,f
  3730  00E2  0800               	movf	0,w
  3731  00E3  00A7               	movwf	(sprintf@val+1)^(0+128)
  3732  00E4  3002               	movlw	2
  3733  00E5  00A0               	movwf	??_sprintf^(0+128)
  3734  00E6  0820               	movf	??_sprintf^(0+128),w
  3735  00E7  07A3               	addwf	sprintf@ap^(0+128),f
  3736                           
  3737                           ;doprnt.c: 1261: if((int)val < 0) {
  3738  00E8  1FA7               	btfss	(sprintf@val+1)^(0+128),7
  3739  00E9  28F3               	goto	l2714
  3740                           
  3741                           ;doprnt.c: 1262: flag |= 0x03;
  3742  00EA  3003               	movlw	3
  3743  00EB  00A0               	movwf	??_sprintf^(0+128)
  3744  00EC  0820               	movf	??_sprintf^(0+128),w
  3745  00ED  04A5               	iorwf	sprintf@flag^(0+128),f
  3746                           
  3747                           ;doprnt.c: 1263: val = -val;
  3748  00EE  09A6               	comf	sprintf@val^(0+128),f
  3749  00EF  09A7               	comf	(sprintf@val+1)^(0+128),f
  3750  00F0  0AA6               	incf	sprintf@val^(0+128),f
  3751  00F1  1903               	skipnz
  3752  00F2  0AA7               	incf	(sprintf@val+1)^(0+128),f
  3753  00F3                     l2714:	
  3754                           
  3755                           ;doprnt.c: 1264: }
  3756                           ;doprnt.c: 1266: }
  3757                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3758  00F3  01AB               	clrf	sprintf@c^(0+128)
  3759  00F4  0AAB               	incf	sprintf@c^(0+128),f
  3760  00F5  3005               	movlw	5
  3761  00F6  062B               	xorwf	sprintf@c^(0+128),w
  3762  00F7  1903               	btfsc	3,2
  3763  00F8  291A               	goto	l2726
  3764  00F9                     l2720:	
  3765                           
  3766                           ;doprnt.c: 1306: if(val < dpowers[c])
  3767  00F9  082B               	movf	sprintf@c^(0+128),w
  3768  00FA  00A0               	movwf	??_sprintf^(0+128)
  3769  00FB  0720               	addwf	??_sprintf^(0+128),w
  3770  00FC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3771  00FD  0084               	movwf	4
  3772  00FE  120A  158A  2000  120A  118A  	fcall	stringdir
  3773  0103  00A1               	movwf	(??_sprintf+1)^(0+128)
  3774  0104  120A  158A  2000  120A  118A  	fcall	stringdir
  3775  0109  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3776  010A  0822               	movf	(??_sprintf+2)^(0+128),w
  3777  010B  0227               	subwf	(sprintf@val+1)^(0+128),w
  3778  010C  1D03               	skipz
  3779  010D  2910               	goto	u3795
  3780  010E  0821               	movf	(??_sprintf+1)^(0+128),w
  3781  010F  0226               	subwf	sprintf@val^(0+128),w
  3782  0110                     u3795:	
  3783  0110  1C03               	btfss	3,0
  3784  0111  291A               	goto	l2726
  3785                           
  3786                           ;doprnt.c: 1307: break;
  3787  0112  3001               	movlw	1
  3788  0113  00A0               	movwf	??_sprintf^(0+128)
  3789  0114  0820               	movf	??_sprintf^(0+128),w
  3790  0115  07AB               	addwf	sprintf@c^(0+128),f
  3791  0116  3005               	movlw	5
  3792  0117  062B               	xorwf	sprintf@c^(0+128),w
  3793  0118  1D03               	btfss	3,2
  3794  0119  28F9               	goto	l2720
  3795  011A                     l2726:	
  3796                           
  3797                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3798  011A  0829               	movf	sprintf@width^(0+128),w
  3799  011B  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3800  011C  1903               	btfsc	3,2
  3801  011D  2928               	goto	l424
  3802  011E  0825               	movf	sprintf@flag^(0+128),w
  3803  011F  3903               	andlw	3
  3804  0120  1903               	btfsc	3,2
  3805  0121  2928               	goto	l424
  3806                           
  3807                           ;doprnt.c: 1346: width--;
  3808  0122  30FF               	movlw	255
  3809  0123  07A9               	addwf	sprintf@width^(0+128),f
  3810  0124  1803               	skipnc
  3811  0125  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3812  0126  30FF               	movlw	255
  3813  0127  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3814  0128                     l424:	
  3815                           
  3816                           ;doprnt.c: 1381: if(width > c)
  3817  0128  082B               	movf	sprintf@c^(0+128),w
  3818  0129  00A0               	movwf	??_sprintf^(0+128)
  3819  012A  01A1               	clrf	(??_sprintf^(0+128)+1)
  3820  012B  1BA0               	btfsc	??_sprintf^(0+128),7
  3821  012C  03A1               	decf	(??_sprintf^(0+128)+1),f
  3822  012D  0821               	movf	(??_sprintf+1)^(0+128),w
  3823  012E  3A80               	xorlw	128
  3824  012F  00A2               	movwf	(??_sprintf+2)^(0+128)
  3825  0130  082A               	movf	(sprintf@width+1)^(0+128),w
  3826  0131  3A80               	xorlw	128
  3827  0132  0222               	subwf	(??_sprintf+2)^(0+128),w
  3828  0133  1D03               	skipz
  3829  0134  2937               	goto	u3835
  3830  0135  0829               	movf	sprintf@width^(0+128),w
  3831  0136  0220               	subwf	??_sprintf^(0+128),w
  3832  0137                     u3835:	
  3833  0137  1803               	skipnc
  3834  0138  2947               	goto	l2734
  3835                           
  3836                           ;doprnt.c: 1382: width -= c;
  3837  0139  1683               	bsf	3,5	;RP0=1, select bank1
  3838  013A  1303               	bcf	3,6	;RP1=0, select bank1
  3839  013B  082B               	movf	sprintf@c^(0+128),w
  3840  013C  00A0               	movwf	??_sprintf^(0+128)
  3841  013D  01A1               	clrf	(??_sprintf^(0+128)+1)
  3842  013E  1BA0               	btfsc	??_sprintf^(0+128),7
  3843  013F  03A1               	decf	(??_sprintf^(0+128)+1),f
  3844  0140  0820               	movf	??_sprintf^(0+128),w
  3845  0141  02A9               	subwf	sprintf@width^(0+128),f
  3846  0142  0821               	movf	(??_sprintf+1)^(0+128),w
  3847  0143  1C03               	skipc
  3848  0144  03AA               	decf	(sprintf@width+1)^(0+128),f
  3849  0145  02AA               	subwf	(sprintf@width+1)^(0+128),f
  3850  0146  294B               	goto	l2736
  3851  0147                     l2734:	
  3852                           
  3853                           ;doprnt.c: 1383: else
  3854                           ;doprnt.c: 1384: width = 0;
  3855  0147  1683               	bsf	3,5	;RP0=1, select bank1
  3856  0148  1303               	bcf	3,6	;RP1=0, select bank1
  3857  0149  01A9               	clrf	sprintf@width^(0+128)
  3858  014A  01AA               	clrf	(sprintf@width+1)^(0+128)
  3859  014B                     l2736:	
  3860                           
  3861                           ;doprnt.c: 1422: {
  3862                           ;doprnt.c: 1424: if(width
  3863                           ;doprnt.c: 1428: )
  3864  014B  0829               	movf	sprintf@width^(0+128),w
  3865  014C  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3866  014D  1903               	btfsc	3,2
  3867  014E  2964               	goto	l2744
  3868  014F                     l2738:	
  3869                           ;doprnt.c: 1429: do
  3870                           
  3871                           
  3872                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3873  014F  3020               	movlw	32
  3874  0150  00A0               	movwf	??_sprintf^(0+128)
  3875  0151  0828               	movf	sprintf@sp^(0+128),w
  3876  0152  0084               	movwf	4
  3877  0153  0820               	movf	??_sprintf^(0+128),w
  3878  0154  1383               	bcf	3,7	;select IRP bank0
  3879  0155  0080               	movwf	0
  3880  0156  3001               	movlw	1
  3881  0157  00A0               	movwf	??_sprintf^(0+128)
  3882  0158  0820               	movf	??_sprintf^(0+128),w
  3883  0159  07A8               	addwf	sprintf@sp^(0+128),f
  3884                           
  3885                           ;doprnt.c: 1431: while(--width);
  3886  015A  30FF               	movlw	255
  3887  015B  07A9               	addwf	sprintf@width^(0+128),f
  3888  015C  1803               	skipnc
  3889  015D  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3890  015E  30FF               	movlw	255
  3891  015F  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3892  0160  0829               	movf	sprintf@width^(0+128),w
  3893  0161  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3894  0162  1D03               	btfss	3,2
  3895  0163  294F               	goto	l2738
  3896  0164                     l2744:	
  3897                           
  3898                           ;doprnt.c: 1438: if(flag & 0x03)
  3899  0164  0825               	movf	sprintf@flag^(0+128),w
  3900  0165  3903               	andlw	3
  3901  0166  1903               	btfsc	3,2
  3902  0167  2973               	goto	l2750
  3903                           
  3904                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3905  0168  302D               	movlw	45
  3906  0169  00A0               	movwf	??_sprintf^(0+128)
  3907  016A  0828               	movf	sprintf@sp^(0+128),w
  3908  016B  0084               	movwf	4
  3909  016C  0820               	movf	??_sprintf^(0+128),w
  3910  016D  1383               	bcf	3,7	;select IRP bank0
  3911  016E  0080               	movwf	0
  3912  016F  3001               	movlw	1
  3913  0170  00A0               	movwf	??_sprintf^(0+128)
  3914  0171  0820               	movf	??_sprintf^(0+128),w
  3915  0172  07A8               	addwf	sprintf@sp^(0+128),f
  3916  0173                     l2750:	
  3917                           
  3918                           ;doprnt.c: 1469: }
  3919                           ;doprnt.c: 1472: prec = c;
  3920  0173  082B               	movf	sprintf@c^(0+128),w
  3921  0174  00A0               	movwf	??_sprintf^(0+128)
  3922  0175  0820               	movf	??_sprintf^(0+128),w
  3923  0176  00A4               	movwf	sprintf@prec^(0+128)
  3924  0177                     l2758:	
  3925                           ;doprnt.c: 1474: while(prec--) {
  3926                           
  3927  0177  30FF               	movlw	255
  3928  0178  00A0               	movwf	??_sprintf^(0+128)
  3929  0179  0820               	movf	??_sprintf^(0+128),w
  3930  017A  07A4               	addwf	sprintf@prec^(0+128),f
  3931  017B  0A24               	incf	sprintf@prec^(0+128),w
  3932  017C  1903               	btfsc	3,2
  3933  017D  2838               	goto	l2760
  3934                           
  3935                           ;doprnt.c: 1478: {
  3936                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3937  017E  300A               	movlw	10
  3938  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0181  00A7               	movwf	___lwmod@divisor
  3941  0182  3000               	movlw	0
  3942  0183  00A8               	movwf	___lwmod@divisor+1
  3943  0184  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0185  1303               	bcf	3,6	;RP1=0, select bank1
  3945  0186  0824               	movf	sprintf@prec^(0+128),w
  3946  0187  00A0               	movwf	??_sprintf^(0+128)
  3947  0188  0720               	addwf	??_sprintf^(0+128),w
  3948  0189  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3949  018A  0084               	movwf	4
  3950  018B  120A  158A  2000  120A  118A  	fcall	stringdir
  3951  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0192  00A0               	movwf	___lwdiv@divisor
  3954  0193  120A  158A  2000  120A  118A  	fcall	stringdir
  3955  0198  00A1               	movwf	___lwdiv@divisor+1
  3956  0199  1683               	bsf	3,5	;RP0=1, select bank1
  3957  019A  1303               	bcf	3,6	;RP1=0, select bank1
  3958  019B  0827               	movf	(sprintf@val+1)^(0+128),w
  3959  019C  1283               	bcf	3,5	;RP0=0, select bank0
  3960  019D  1303               	bcf	3,6	;RP1=0, select bank0
  3961  019E  00A3               	movwf	___lwdiv@dividend+1
  3962  019F  1683               	bsf	3,5	;RP0=1, select bank1
  3963  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  3964  01A1  0826               	movf	sprintf@val^(0+128),w
  3965  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3966  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3967  01A4  00A2               	movwf	___lwdiv@dividend
  3968  01A5  120A  158A  261D  120A  118A  	fcall	___lwdiv
  3969  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  3970  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  3971  01AC  0821               	movf	?___lwdiv+1,w
  3972  01AD  00AA               	movwf	___lwmod@dividend+1
  3973  01AE  0820               	movf	?___lwdiv,w
  3974  01AF  00A9               	movwf	___lwmod@dividend
  3975  01B0  120A  118A  27CC  120A  118A  	fcall	___lwmod
  3976  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3977  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3978  01B7  0827               	movf	?___lwmod,w
  3979  01B8  3E30               	addlw	48
  3980  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  3981  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  3982  01BB  00A1               	movwf	(??_sprintf+1)^(0+128)
  3983  01BC  0821               	movf	(??_sprintf+1)^(0+128),w
  3984  01BD  00AB               	movwf	sprintf@c^(0+128)
  3985                           
  3986                           ;doprnt.c: 1523: }
  3987                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3988  01BE  082B               	movf	sprintf@c^(0+128),w
  3989  01BF  00A0               	movwf	??_sprintf^(0+128)
  3990  01C0  0828               	movf	sprintf@sp^(0+128),w
  3991  01C1  0084               	movwf	4
  3992  01C2  0820               	movf	??_sprintf^(0+128),w
  3993  01C3  1383               	bcf	3,7	;select IRP bank0
  3994  01C4  0080               	movwf	0
  3995  01C5  3001               	movlw	1
  3996  01C6  00A0               	movwf	??_sprintf^(0+128)
  3997  01C7  0820               	movf	??_sprintf^(0+128),w
  3998  01C8  07A8               	addwf	sprintf@sp^(0+128),f
  3999  01C9  2977               	goto	l2758
  4000  01CA                     l2762:	
  4001                           ;doprnt.c: 1525: }
  4002                           ;doprnt.c: 1533: }
  4003                           ;doprnt.c: 1535: alldone:
  4004                           
  4005                           
  4006                           ;doprnt.c: 1538: *sp = 0;
  4007  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  4008  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  4009  01CC  0828               	movf	sprintf@sp^(0+128),w
  4010  01CD  0084               	movwf	4
  4011  01CE  1383               	bcf	3,7	;select IRP bank0
  4012  01CF  0180               	clrf	0
  4013  01D0  0008               	return
  4014  01D1                     __end_of_sprintf:	
  4015                           ;doprnt.c: 1540: return 0;
  4016                           ;	Return value of _sprintf is never used
  4017                           
  4018                           
  4019                           	psect	text10
  4020  0C56                     __ptext10:	
  4021 ;; *************** function _isdigit *****************
  4022 ;; Defined at:
  4023 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  c               1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  c               1    5[COMMON] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;		None               void
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         2       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         2       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_sprintf
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function _isdigit
  4053  0C56                     _isdigit:	
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4057                           ;isdigit@c stored from wreg
  4058  0C56  00F5               	movwf	isdigit@c
  4059  0C57  01F4               	clrf	_isdigit$1336
  4060  0C58  303A               	movlw	58
  4061  0C59  0275               	subwf	isdigit@c,w
  4062  0C5A  1803               	skipnc
  4063  0C5B  2C62               	goto	l1768
  4064  0C5C  3030               	movlw	48
  4065  0C5D  0275               	subwf	isdigit@c,w
  4066  0C5E  1C03               	skipc
  4067  0C5F  2C62               	goto	l1768
  4068  0C60  01F4               	clrf	_isdigit$1336
  4069  0C61  0AF4               	incf	_isdigit$1336,f
  4070  0C62                     l1768:	
  4071  0C62  0C74               	rrf	_isdigit$1336,w
  4072  0C63  0008               	return
  4073  0C64                     __end_of_isdigit:	
  4074                           
  4075                           	psect	text11
  4076  0D47                     __ptext11:	
  4077 ;; *************** function ___wmul *****************
  4078 ;; Defined at:
  4079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4082 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  product         2    4[COMMON] unsigned int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    0[BANK0 ] unsigned int 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       4       0       0       0
  4095 ;;      Locals:         2       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0
  4097 ;;      Totals:         2       4       0       0       0
  4098 ;;Total ram usage:        6 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_sprintf
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function ___wmul
  4110  0D47                     ___wmul:	
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4114  0D47  01F4               	clrf	___wmul@product
  4115  0D48  01F5               	clrf	___wmul@product+1
  4116  0D49                     l2390:	
  4117  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0D4B  1C20               	btfss	___wmul@multiplier,0
  4120  0D4C  2D53               	goto	l519
  4121  0D4D  0822               	movf	___wmul@multiplicand,w
  4122  0D4E  07F4               	addwf	___wmul@product,f
  4123  0D4F  1803               	skipnc
  4124  0D50  0AF5               	incf	___wmul@product+1,f
  4125  0D51  0823               	movf	___wmul@multiplicand+1,w
  4126  0D52  07F5               	addwf	___wmul@product+1,f
  4127  0D53                     l519:	
  4128  0D53  3001               	movlw	1
  4129  0D54                     u3025:	
  4130  0D54  1003               	clrc
  4131  0D55  0DA2               	rlf	___wmul@multiplicand,f
  4132  0D56  0DA3               	rlf	___wmul@multiplicand+1,f
  4133  0D57  3EFF               	addlw	-1
  4134  0D58  1D03               	skipz
  4135  0D59  2D54               	goto	u3025
  4136  0D5A  3001               	movlw	1
  4137  0D5B                     u3035:	
  4138  0D5B  1003               	clrc
  4139  0D5C  0CA1               	rrf	___wmul@multiplier+1,f
  4140  0D5D  0CA0               	rrf	___wmul@multiplier,f
  4141  0D5E  3EFF               	addlw	-1
  4142  0D5F  1D03               	skipz
  4143  0D60  2D5B               	goto	u3035
  4144  0D61  0820               	movf	___wmul@multiplier,w
  4145  0D62  0421               	iorwf	___wmul@multiplier+1,w
  4146  0D63  1D03               	btfss	3,2
  4147  0D64  2D49               	goto	l2390
  4148  0D65  0875               	movf	___wmul@product+1,w
  4149  0D66  00A1               	movwf	?___wmul+1
  4150  0D67  0874               	movf	___wmul@product,w
  4151  0D68  00A0               	movwf	?___wmul
  4152  0D69  0008               	return
  4153  0D6A                     __end_of___wmul:	
  4154                           
  4155                           	psect	text12
  4156  07CC                     __ptext12:	
  4157 ;; *************** function ___lwmod *****************
  4158 ;; Defined at:
  4159 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  divisor         2    7[BANK0 ] unsigned int 
  4162 ;;  dividend        2    9[BANK0 ] unsigned int 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  counter         1   11[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    7[BANK0 ] unsigned int 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       4       0       0       0
  4175 ;;      Locals:         0       1       0       0       0
  4176 ;;      Temps:          1       0       0       0       0
  4177 ;;      Totals:         1       5       0       0       0
  4178 ;;Total ram usage:        6 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_sprintf
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function ___lwmod
  4190  07CC                     ___lwmod:	
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4194  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  4195  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  4196  07CE  0827               	movf	___lwmod@divisor,w
  4197  07CF  0428               	iorwf	___lwmod@divisor+1,w
  4198  07D0  1903               	btfsc	3,2
  4199  07D1  2FFB               	goto	l2072
  4200  07D2  01AB               	clrf	___lwmod@counter
  4201  07D3  0AAB               	incf	___lwmod@counter,f
  4202  07D4                     l2062:	
  4203  07D4  1BA8               	btfsc	___lwmod@divisor+1,7
  4204  07D5  2FE2               	goto	l2064
  4205  07D6  3001               	movlw	1
  4206  07D7                     u2505:	
  4207  07D7  1003               	clrc
  4208  07D8  0DA7               	rlf	___lwmod@divisor,f
  4209  07D9  0DA8               	rlf	___lwmod@divisor+1,f
  4210  07DA  3EFF               	addlw	-1
  4211  07DB  1D03               	skipz
  4212  07DC  2FD7               	goto	u2505
  4213  07DD  3001               	movlw	1
  4214  07DE  00F5               	movwf	??___lwmod
  4215  07DF  0875               	movf	??___lwmod,w
  4216  07E0  07AB               	addwf	___lwmod@counter,f
  4217  07E1  2FD4               	goto	l2062
  4218  07E2                     l2064:	
  4219  07E2  0828               	movf	___lwmod@divisor+1,w
  4220  07E3  022A               	subwf	___lwmod@dividend+1,w
  4221  07E4  1D03               	skipz
  4222  07E5  2FE8               	goto	u2525
  4223  07E6  0827               	movf	___lwmod@divisor,w
  4224  07E7  0229               	subwf	___lwmod@dividend,w
  4225  07E8                     u2525:	
  4226  07E8  1C03               	skipc
  4227  07E9  2FF0               	goto	l2068
  4228  07EA  0827               	movf	___lwmod@divisor,w
  4229  07EB  02A9               	subwf	___lwmod@dividend,f
  4230  07EC  0828               	movf	___lwmod@divisor+1,w
  4231  07ED  1C03               	skipc
  4232  07EE  03AA               	decf	___lwmod@dividend+1,f
  4233  07EF  02AA               	subwf	___lwmod@dividend+1,f
  4234  07F0                     l2068:	
  4235  07F0  3001               	movlw	1
  4236  07F1                     u2535:	
  4237  07F1  1003               	clrc
  4238  07F2  0CA8               	rrf	___lwmod@divisor+1,f
  4239  07F3  0CA7               	rrf	___lwmod@divisor,f
  4240  07F4  3EFF               	addlw	-1
  4241  07F5  1D03               	skipz
  4242  07F6  2FF1               	goto	u2535
  4243  07F7  3001               	movlw	1
  4244  07F8  02AB               	subwf	___lwmod@counter,f
  4245  07F9  1D03               	btfss	3,2
  4246  07FA  2FE2               	goto	l2064
  4247  07FB                     l2072:	
  4248  07FB  082A               	movf	___lwmod@dividend+1,w
  4249  07FC  00A8               	movwf	?___lwmod+1
  4250  07FD  0829               	movf	___lwmod@dividend,w
  4251  07FE  00A7               	movwf	?___lwmod
  4252  07FF  0008               	return
  4253  0800                     __end_of___lwmod:	
  4254                           
  4255                           	psect	text13
  4256  0E1D                     __ptext13:	
  4257 ;; *************** function ___lwdiv *****************
  4258 ;; Defined at:
  4259 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  divisor         2    0[BANK0 ] unsigned int 
  4262 ;;  dividend        2    2[BANK0 ] unsigned int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  quotient        2    5[BANK0 ] unsigned int 
  4265 ;;  counter         1    4[BANK0 ] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    0[BANK0 ] unsigned int 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4275 ;;      Params:         0       4       0       0       0
  4276 ;;      Locals:         0       3       0       0       0
  4277 ;;      Temps:          1       0       0       0       0
  4278 ;;      Totals:         1       7       0       0       0
  4279 ;;Total ram usage:        8 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    1
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_temp_Measurement
  4286 ;;		_sprintf
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function ___lwdiv
  4292  0E1D                     ___lwdiv:	
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4296  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0E1F  01A5               	clrf	___lwdiv@quotient
  4299  0E20  01A6               	clrf	___lwdiv@quotient+1
  4300  0E21  0820               	movf	___lwdiv@divisor,w
  4301  0E22  0421               	iorwf	___lwdiv@divisor+1,w
  4302  0E23  1903               	btfsc	3,2
  4303  0E24  2E56               	goto	l2600
  4304  0E25  01A4               	clrf	___lwdiv@counter
  4305  0E26  0AA4               	incf	___lwdiv@counter,f
  4306  0E27                     l2588:	
  4307  0E27  1BA1               	btfsc	___lwdiv@divisor+1,7
  4308  0E28  2E35               	goto	l2590
  4309  0E29  3001               	movlw	1
  4310  0E2A                     u3575:	
  4311  0E2A  1003               	clrc
  4312  0E2B  0DA0               	rlf	___lwdiv@divisor,f
  4313  0E2C  0DA1               	rlf	___lwdiv@divisor+1,f
  4314  0E2D  3EFF               	addlw	-1
  4315  0E2E  1D03               	skipz
  4316  0E2F  2E2A               	goto	u3575
  4317  0E30  3001               	movlw	1
  4318  0E31  00F4               	movwf	??___lwdiv
  4319  0E32  0874               	movf	??___lwdiv,w
  4320  0E33  07A4               	addwf	___lwdiv@counter,f
  4321  0E34  2E27               	goto	l2588
  4322  0E35                     l2590:	
  4323  0E35  3001               	movlw	1
  4324  0E36                     u3595:	
  4325  0E36  1003               	clrc
  4326  0E37  0DA5               	rlf	___lwdiv@quotient,f
  4327  0E38  0DA6               	rlf	___lwdiv@quotient+1,f
  4328  0E39  3EFF               	addlw	-1
  4329  0E3A  1D03               	skipz
  4330  0E3B  2E36               	goto	u3595
  4331  0E3C  0821               	movf	___lwdiv@divisor+1,w
  4332  0E3D  0223               	subwf	___lwdiv@dividend+1,w
  4333  0E3E  1D03               	skipz
  4334  0E3F  2E42               	goto	u3605
  4335  0E40  0820               	movf	___lwdiv@divisor,w
  4336  0E41  0222               	subwf	___lwdiv@dividend,w
  4337  0E42                     u3605:	
  4338  0E42  1C03               	skipc
  4339  0E43  2E4B               	goto	l2596
  4340  0E44  0820               	movf	___lwdiv@divisor,w
  4341  0E45  02A2               	subwf	___lwdiv@dividend,f
  4342  0E46  0821               	movf	___lwdiv@divisor+1,w
  4343  0E47  1C03               	skipc
  4344  0E48  03A3               	decf	___lwdiv@dividend+1,f
  4345  0E49  02A3               	subwf	___lwdiv@dividend+1,f
  4346  0E4A  1425               	bsf	___lwdiv@quotient,0
  4347  0E4B                     l2596:	
  4348  0E4B  3001               	movlw	1
  4349  0E4C                     u3615:	
  4350  0E4C  1003               	clrc
  4351  0E4D  0CA1               	rrf	___lwdiv@divisor+1,f
  4352  0E4E  0CA0               	rrf	___lwdiv@divisor,f
  4353  0E4F  3EFF               	addlw	-1
  4354  0E50  1D03               	skipz
  4355  0E51  2E4C               	goto	u3615
  4356  0E52  3001               	movlw	1
  4357  0E53  02A4               	subwf	___lwdiv@counter,f
  4358  0E54  1D03               	btfss	3,2
  4359  0E55  2E35               	goto	l2590
  4360  0E56                     l2600:	
  4361  0E56  0826               	movf	___lwdiv@quotient+1,w
  4362  0E57  00A1               	movwf	?___lwdiv+1
  4363  0E58  0825               	movf	___lwdiv@quotient,w
  4364  0E59  00A0               	movwf	?___lwdiv
  4365  0E5A  0008               	return
  4366  0E5B                     __end_of___lwdiv:	
  4367                           
  4368                           	psect	text14
  4369  0D24                     __ptext14:	
  4370 ;; *************** function _Lcd_write *****************
  4371 ;; Defined at:
  4372 ;;		line 95 in file "lcd_Config.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  string          1    wreg     PTR unsigned char 
  4375 ;;		 -> sTemperature(2), temp_Display@TEMP(13), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  string          1    6[BANK0 ] PTR unsigned char 
  4378 ;;		 -> sTemperature(2), temp_Display@TEMP(13), 
  4379 ;;  i               2    4[BANK0 ] int 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         0       0       0       0       0
  4390 ;;      Locals:         0       3       0       0       0
  4391 ;;      Temps:          0       1       0       0       0
  4392 ;;      Totals:         0       4       0       0       0
  4393 ;;Total ram usage:        4 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    3
  4396 ;; This function calls:
  4397 ;;		_Lcd_Write_Char
  4398 ;; This function is called by:
  4399 ;;		_temp_Display
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _Lcd_write
  4405  0D24                     _Lcd_write:	
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4409                           ;Lcd_write@string stored from wreg
  4410  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  4411  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0D26  00A6               	movwf	Lcd_write@string
  4413                           
  4414                           ;lcd_Config.c: 96: int i;
  4415                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4416  0D27  01A4               	clrf	Lcd_write@i
  4417  0D28  01A5               	clrf	Lcd_write@i+1
  4418  0D29                     l2650:	
  4419  0D29  0824               	movf	Lcd_write@i,w
  4420  0D2A  0726               	addwf	Lcd_write@string,w
  4421  0D2B  00A3               	movwf	??_Lcd_write
  4422  0D2C  0823               	movf	??_Lcd_write,w
  4423  0D2D  0084               	movwf	4
  4424  0D2E  1383               	bcf	3,7	;select IRP bank0
  4425  0D2F  0800               	movf	0,w
  4426  0D30  1903               	btfsc	3,2
  4427  0D31  0008               	return
  4428                           
  4429                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4430  0D32  0824               	movf	Lcd_write@i,w
  4431  0D33  0726               	addwf	Lcd_write@string,w
  4432  0D34  00A3               	movwf	??_Lcd_write
  4433  0D35  0823               	movf	??_Lcd_write,w
  4434  0D36  0084               	movwf	4
  4435  0D37  1383               	bcf	3,7	;select IRP bank0
  4436  0D38  0800               	movf	0,w
  4437  0D39  120A  158A  25E6  120A  158A  	fcall	_Lcd_Write_Char
  4438  0D3E  3001               	movlw	1
  4439  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0D41  07A4               	addwf	Lcd_write@i,f
  4442  0D42  1803               	skipnc
  4443  0D43  0AA5               	incf	Lcd_write@i+1,f
  4444  0D44  3000               	movlw	0
  4445  0D45  07A5               	addwf	Lcd_write@i+1,f
  4446  0D46  2D29               	goto	l2650
  4447  0D47                     __end_of_Lcd_write:	
  4448                           
  4449                           	psect	text15
  4450  0DE6                     __ptext15:	
  4451 ;; *************** function _Lcd_Write_Char *****************
  4452 ;; Defined at:
  4453 ;;		line 80 in file "lcd_Config.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  a               1    wreg     unsigned char 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  a               1    2[BANK0 ] unsigned char 
  4458 ;;  y               1    1[BANK0 ] unsigned char 
  4459 ;;  temp            1    0[BANK0 ] unsigned char 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0
  4470 ;;      Locals:         0       3       0       0       0
  4471 ;;      Temps:          1       0       0       0       0
  4472 ;;      Totals:         1       3       0       0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    2
  4476 ;; This function calls:
  4477 ;;		_Lcd_Port
  4478 ;; This function is called by:
  4479 ;;		_Lcd_write
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _Lcd_Write_Char
  4485  0DE6                     _Lcd_Write_Char:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4489                           ;Lcd_Write_Char@a stored from wreg
  4490  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  4492  0DE8  00A2               	movwf	Lcd_Write_Char@a
  4493                           
  4494                           ;lcd_Config.c: 81: char temp, y;
  4495                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4496  0DE9  0822               	movf	Lcd_Write_Char@a,w
  4497  0DEA  390F               	andlw	15
  4498  0DEB  00F5               	movwf	??_Lcd_Write_Char
  4499  0DEC  0875               	movf	??_Lcd_Write_Char,w
  4500  0DED  00A0               	movwf	Lcd_Write_Char@temp
  4501                           
  4502                           ;lcd_Config.c: 83: y = a & 0xF0;
  4503  0DEE  0822               	movf	Lcd_Write_Char@a,w
  4504  0DEF  39F0               	andlw	240
  4505  0DF0  00F5               	movwf	??_Lcd_Write_Char
  4506  0DF1  0875               	movf	??_Lcd_Write_Char,w
  4507  0DF2  00A1               	movwf	Lcd_Write_Char@y
  4508                           
  4509                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4510  0DF3  1686               	bsf	6,5	;volatile
  4511                           
  4512                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4513  0DF4  0821               	movf	Lcd_Write_Char@y,w
  4514  0DF5  00F5               	movwf	??_Lcd_Write_Char
  4515  0DF6  3004               	movlw	4
  4516  0DF7                     u3005:	
  4517  0DF7  1003               	clrc
  4518  0DF8  0CF5               	rrf	??_Lcd_Write_Char,f
  4519  0DF9  3EFF               	addlw	-1
  4520  0DFA  1D03               	skipz
  4521  0DFB  2DF7               	goto	u3005
  4522  0DFC  0875               	movf	??_Lcd_Write_Char,w
  4523  0DFD  120A  158A  24EE  120A  158A  	fcall	_Lcd_Port
  4524                           
  4525                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4526  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0E04  1606               	bsf	6,4	;volatile
  4529                           
  4530                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4531  0E05  300D               	movlw	13
  4532  0E06  00F5               	movwf	??_Lcd_Write_Char
  4533  0E07                     u3917:	
  4534  0E07  0BF5               	decfsz	??_Lcd_Write_Char,f
  4535  0E08  2E07               	goto	u3917
  4536                           
  4537                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4538  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0E0B  1206               	bcf	6,4	;volatile
  4541                           
  4542                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4543  0E0C  0820               	movf	Lcd_Write_Char@temp,w
  4544  0E0D  120A  158A  24EE  120A  158A  	fcall	_Lcd_Port
  4545                           
  4546                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4547  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4548  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0E14  1606               	bsf	6,4	;volatile
  4550                           
  4551                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4552  0E15  300D               	movlw	13
  4553  0E16  00F5               	movwf	??_Lcd_Write_Char
  4554  0E17                     u3927:	
  4555  0E17  0BF5               	decfsz	??_Lcd_Write_Char,f
  4556  0E18  2E17               	goto	u3927
  4557                           
  4558                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4559  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0E1B  1206               	bcf	6,4	;volatile
  4562  0E1C  0008               	return
  4563  0E1D                     __end_of_Lcd_Write_Char:	
  4564                           
  4565                           	psect	text16
  4566  0FAE                     __ptext16:	
  4567 ;; *************** function _Lcd_Set_Cursor *****************
  4568 ;; Defined at:
  4569 ;;		line 45 in file "lcd_Config.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  raw             1    wreg     unsigned char 
  4572 ;;  column          1    2[BANK0 ] unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  raw             1    5[BANK0 ] unsigned char 
  4575 ;;  temp            1    8[BANK0 ] unsigned char 
  4576 ;;  y               1    7[BANK0 ] unsigned char 
  4577 ;;  z               1    6[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       1       0       0       0
  4588 ;;      Locals:         0       4       0       0       0
  4589 ;;      Temps:          0       2       0       0       0
  4590 ;;      Totals:         0       7       0       0       0
  4591 ;;Total ram usage:        7 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    3
  4594 ;; This function calls:
  4595 ;;		_Lcd_Cmd
  4596 ;; This function is called by:
  4597 ;;		_temp_Display
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _Lcd_Set_Cursor
  4603  0FAE                     _Lcd_Set_Cursor:	
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4607                           ;Lcd_Set_Cursor@raw stored from wreg
  4608  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0FB0  00A5               	movwf	Lcd_Set_Cursor@raw
  4611                           
  4612                           ;lcd_Config.c: 46: char temp, z, y;
  4613                           ;lcd_Config.c: 47: if (raw == 1) {
  4614  0FB1  0325               	decf	Lcd_Set_Cursor@raw,w
  4615  0FB2  1D03               	btfss	3,2
  4616  0FB3  2FD7               	goto	l2634
  4617                           
  4618                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4619  0FB4  0822               	movf	Lcd_Set_Cursor@column,w
  4620  0FB5  3E7F               	addlw	127
  4621  0FB6  00A3               	movwf	??_Lcd_Set_Cursor
  4622  0FB7  0823               	movf	??_Lcd_Set_Cursor,w
  4623  0FB8  00A8               	movwf	Lcd_Set_Cursor@temp
  4624                           
  4625                           ;lcd_Config.c: 49: z = temp >> 4;
  4626  0FB9  0828               	movf	Lcd_Set_Cursor@temp,w
  4627  0FBA  00A3               	movwf	??_Lcd_Set_Cursor
  4628  0FBB  3004               	movlw	4
  4629  0FBC                     u3665:	
  4630  0FBC  1003               	clrc
  4631  0FBD  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4632  0FBE  3EFF               	addlw	-1
  4633  0FBF  1D03               	skipz
  4634  0FC0  2FBC               	goto	u3665
  4635  0FC1  0823               	movf	??_Lcd_Set_Cursor,w
  4636  0FC2  00A4               	movwf	??_Lcd_Set_Cursor+1
  4637  0FC3  0824               	movf	??_Lcd_Set_Cursor+1,w
  4638  0FC4  00A6               	movwf	Lcd_Set_Cursor@z
  4639                           
  4640                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4641  0FC5  0828               	movf	Lcd_Set_Cursor@temp,w
  4642  0FC6  390F               	andlw	15
  4643  0FC7  00A3               	movwf	??_Lcd_Set_Cursor
  4644  0FC8  0823               	movf	??_Lcd_Set_Cursor,w
  4645  0FC9  00A7               	movwf	Lcd_Set_Cursor@y
  4646                           
  4647                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4648  0FCA  0826               	movf	Lcd_Set_Cursor@z,w
  4649  0FCB  120A  158A  2508  120A  158A  	fcall	_Lcd_Cmd
  4650                           
  4651                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4652  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4653  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4654  0FD2  0827               	movf	Lcd_Set_Cursor@y,w
  4655  0FD3  120A  158A  2508   	fcall	_Lcd_Cmd
  4656                           
  4657                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4658  0FD6  0008               	return
  4659  0FD7                     l2634:	
  4660  0FD7  3002               	movlw	2
  4661  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0FDA  0625               	xorwf	Lcd_Set_Cursor@raw,w
  4664  0FDB  1D03               	btfss	3,2
  4665  0FDC  0008               	return
  4666                           
  4667                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4668  0FDD  0822               	movf	Lcd_Set_Cursor@column,w
  4669  0FDE  3EBF               	addlw	191
  4670  0FDF  00A3               	movwf	??_Lcd_Set_Cursor
  4671  0FE0  0823               	movf	??_Lcd_Set_Cursor,w
  4672  0FE1  00A8               	movwf	Lcd_Set_Cursor@temp
  4673                           
  4674                           ;lcd_Config.c: 55: z = temp >> 4;
  4675  0FE2  0828               	movf	Lcd_Set_Cursor@temp,w
  4676  0FE3  00A3               	movwf	??_Lcd_Set_Cursor
  4677  0FE4  3004               	movlw	4
  4678  0FE5                     u3685:	
  4679  0FE5  1003               	clrc
  4680  0FE6  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4681  0FE7  3EFF               	addlw	-1
  4682  0FE8  1D03               	skipz
  4683  0FE9  2FE5               	goto	u3685
  4684  0FEA  0823               	movf	??_Lcd_Set_Cursor,w
  4685  0FEB  00A4               	movwf	??_Lcd_Set_Cursor+1
  4686  0FEC  0824               	movf	??_Lcd_Set_Cursor+1,w
  4687  0FED  00A6               	movwf	Lcd_Set_Cursor@z
  4688                           
  4689                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4690  0FEE  0828               	movf	Lcd_Set_Cursor@temp,w
  4691  0FEF  390F               	andlw	15
  4692  0FF0  00A3               	movwf	??_Lcd_Set_Cursor
  4693  0FF1  0823               	movf	??_Lcd_Set_Cursor,w
  4694  0FF2  00A7               	movwf	Lcd_Set_Cursor@y
  4695                           
  4696                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  4697  0FF3  0826               	movf	Lcd_Set_Cursor@z,w
  4698  0FF4  120A  158A  2508  120A  158A  	fcall	_Lcd_Cmd
  4699                           
  4700                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  4701  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4702  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4703  0FFB  0827               	movf	Lcd_Set_Cursor@y,w
  4704  0FFC  120A  158A  2508   	fcall	_Lcd_Cmd
  4705  0FFF  0008               	return
  4706  1000                     __end_of_Lcd_Set_Cursor:	
  4707                           
  4708                           	psect	text17
  4709  0F63                     __ptext17:	
  4710 ;; *************** function _system_Initialize *****************
  4711 ;; Defined at:
  4712 ;;		line 10 in file "SYST_Init.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    4
  4733 ;; This function calls:
  4734 ;;		_ADC_Init
  4735 ;;		_Interrupt_Init
  4736 ;;		_Lcd_Init
  4737 ;;		_Oscillator_Init
  4738 ;;		_PWM_DutyCycle
  4739 ;;		_PWM_Init
  4740 ;;		_SPI_Init
  4741 ;;		_TMR0_Init
  4742 ;;		_UART_Init
  4743 ;;		_pinManager
  4744 ;; This function is called by:
  4745 ;;		_main
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           
  4750                           ;psect for function _system_Initialize
  4751  0F63                     _system_Initialize:	
  4752                           
  4753                           ;SYST_Init.c: 11: Oscillator_Init();
  4754                           
  4755                           ;incstack = 0
  4756                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4757  0F63  120A  158A  243C  120A  158A  	fcall	_Oscillator_Init
  4758                           
  4759                           ;SYST_Init.c: 12: Interrupt_Init();
  4760  0F68  120A  158A  2464  120A  158A  	fcall	_Interrupt_Init
  4761                           
  4762                           ;SYST_Init.c: 13: pinManager();
  4763  0F6D  120A  158A  25BB  120A  158A  	fcall	_pinManager
  4764                           
  4765                           ;SYST_Init.c: 14: Lcd_Init();
  4766  0F72  120A  118A  26B0  120A  158A  	fcall	_Lcd_Init
  4767                           
  4768                           ;SYST_Init.c: 15: ADC_Init();
  4769  0F77  120A  158A  24D5  120A  158A  	fcall	_ADC_Init
  4770                           
  4771                           ;SYST_Init.c: 16: TMR0_Init();
  4772  0F7C  120A  158A  2473  120A  158A  	fcall	_TMR0_Init
  4773                           
  4774                           ;SYST_Init.c: 17: PWM_Init(10000);
  4775  0F81  3000               	movlw	0
  4776  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0F84  00BC               	movwf	PWM_Init@iFrequency+3
  4779  0F85  3000               	movlw	0
  4780  0F86  00BB               	movwf	PWM_Init@iFrequency+2
  4781  0F87  3027               	movlw	39
  4782  0F88  00BA               	movwf	PWM_Init@iFrequency+1
  4783  0F89  3010               	movlw	16
  4784  0F8A  00B9               	movwf	PWM_Init@iFrequency
  4785  0F8B  120A  158A  271E  120A  158A  	fcall	_PWM_Init
  4786                           
  4787                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  4788  0F90  3000               	movlw	0
  4789  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0F93  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  4792  0F94  3000               	movlw	0
  4793  0F95  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  4794  0F96  3000               	movlw	0
  4795  0F97  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  4796  0F98  3046               	movlw	70
  4797  0F99  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  4798  0F9A  120A  118A  25D3  120A  158A  	fcall	_PWM_DutyCycle
  4799                           
  4800                           ;SYST_Init.c: 19: SPI_Init();
  4801  0F9F  120A  158A  2449  120A  158A  	fcall	_SPI_Init
  4802                           
  4803                           ;SYST_Init.c: 20: UART_Init(9600);
  4804  0FA4  3080               	movlw	128
  4805  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0FA7  00B9               	movwf	UART_Init@baudRate
  4808  0FA8  3025               	movlw	37
  4809  0FA9  00BA               	movwf	UART_Init@baudRate+1
  4810  0FAA  120A  158A  265B   	fcall	_UART_Init
  4811  0FAD  0008               	return
  4812  0FAE                     __end_of_system_Initialize:	
  4813                           
  4814                           	psect	text18
  4815  0DBB                     __ptext18:	
  4816 ;; *************** function _pinManager *****************
  4817 ;; Defined at:
  4818 ;;		line 19 in file "pin_Manager.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  1    wreg      void 
  4825 ;; Registers used:
  4826 ;;		status,2
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_system_Initialize
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function _pinManager
  4848  0DBB                     _pinManager:	
  4849                           
  4850                           ;pin_Manager.c: 21: TRISD = 0;
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _pinManager: [status,2]
  4854  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  4855  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  4856  0DBD  0188               	clrf	8	;volatile
  4857                           
  4858                           ;pin_Manager.c: 23: ANSELH = 0;
  4859  0DBE  1683               	bsf	3,5	;RP0=1, select bank3
  4860  0DBF  1703               	bsf	3,6	;RP1=1, select bank3
  4861  0DC0  0189               	clrf	9	;volatile
  4862                           
  4863                           ;pin_Manager.c: 24: TRISB = 0;
  4864  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0DC3  0186               	clrf	6	;volatile
  4867                           
  4868                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  4869  0DC4  1706               	bsf	6,6	;volatile
  4870                           
  4871                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  4872  0DC5  1786               	bsf	6,7	;volatile
  4873                           
  4874                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  4875  0DC6  1107               	bcf	7,2	;volatile
  4876                           
  4877                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  4878  0DC7  1683               	bsf	3,5	;RP0=1, select bank3
  4879  0DC8  1703               	bsf	3,6	;RP1=1, select bank3
  4880  0DC9  1088               	bcf	8,1	;volatile
  4881                           
  4882                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  4883  0DCA  1108               	bcf	8,2	;volatile
  4884                           
  4885                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  4886  0DCB  1188               	bcf	8,3	;volatile
  4887                           
  4888                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  4889  0DCC  1208               	bcf	8,4	;volatile
  4890                           
  4891                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  4892  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0DCF  1085               	bcf	5,1	;volatile
  4895                           
  4896                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  4897  0DD0  1105               	bcf	5,2	;volatile
  4898                           
  4899                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  4900  0DD1  1185               	bcf	5,3	;volatile
  4901                           
  4902                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  4903  0DD2  1205               	bcf	5,4	;volatile
  4904                           
  4905                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  4906  0DD3  1683               	bsf	3,5	;RP0=1, select bank3
  4907  0DD4  1703               	bsf	3,6	;RP1=1, select bank3
  4908  0DD5  1408               	bsf	8,0	;volatile
  4909                           
  4910                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  4911  0DD6  1288               	bcf	8,5	;volatile
  4912                           
  4913                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  4914  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  4915  0DD8  1303               	bcf	3,6	;RP1=0, select bank1
  4916  0DD9  1405               	bsf	5,0	;volatile
  4917                           
  4918                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  4919  0DDA  1287               	bcf	7,5	;volatile
  4920                           
  4921                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  4922  0DDB  1607               	bsf	7,4	;volatile
  4923                           
  4924                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  4925  0DDC  1285               	bcf	5,5	;volatile
  4926                           
  4927                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  4928  0DDD  1187               	bcf	7,3	;volatile
  4929                           
  4930                           ;pin_Manager.c: 51: PORTA = 0;
  4931  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0DE0  0185               	clrf	5	;volatile
  4934                           
  4935                           ;pin_Manager.c: 52: PORTB = 0;
  4936  0DE1  0186               	clrf	6	;volatile
  4937                           
  4938                           ;pin_Manager.c: 53: PORTC = 0;
  4939  0DE2  0187               	clrf	7	;volatile
  4940                           
  4941                           ;pin_Manager.c: 54: PORTD = 0;
  4942  0DE3  0188               	clrf	8	;volatile
  4943                           
  4944                           ;pin_Manager.c: 55: PORTE = 0;
  4945  0DE4  0189               	clrf	9	;volatile
  4946  0DE5  0008               	return
  4947  0DE6                     __end_of_pinManager:	
  4948                           
  4949                           	psect	text19
  4950  0E5B                     __ptext19:	
  4951 ;; *************** function _UART_Init *****************
  4952 ;; Defined at:
  4953 ;;		line 10 in file "uart_Init.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  baudRate        2   25[BANK0 ] unsigned int 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       2       0       0       0
  4968 ;;      Locals:         0       0       0       0       0
  4969 ;;      Temps:          0       4       0       0       0
  4970 ;;      Totals:         0       6       0       0       0
  4971 ;;Total ram usage:        6 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		___lldiv
  4976 ;; This function is called by:
  4977 ;;		_system_Initialize
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function _UART_Init
  4983  0E5B                     _UART_Init:	
  4984                           
  4985                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  4986                           
  4987                           ;incstack = 0
  4988                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4989  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  4990  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  4991  0E5D  1707               	bsf	7,6	;volatile
  4992                           
  4993                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  4994  0E5E  1787               	bsf	7,7	;volatile
  4995                           
  4996                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  4997  0E5F  1698               	bsf	24,5	;volatile
  4998                           
  4999                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  5000  0E60  1218               	bcf	24,4	;volatile
  5001                           
  5002                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  5003  0E61  1318               	bcf	24,6	;volatile
  5004                           
  5005                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  5006  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  5008  0E64  1798               	bsf	24,7	;volatile
  5009                           
  5010                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  5011  0E65  1618               	bsf	24,4	;volatile
  5012                           
  5013                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  5014  0E66  1318               	bcf	24,6	;volatile
  5015                           
  5016                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  5017  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0E68  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0E69  1518               	bsf	24,2	;volatile
  5020                           
  5021                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  5022  0E6A  1683               	bsf	3,5	;RP0=1, select bank3
  5023  0E6B  1703               	bsf	3,6	;RP1=1, select bank3
  5024  0E6C  1187               	bcf	7,3	;volatile
  5025                           
  5026                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  5027  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0E6F  0839               	movf	UART_Init@baudRate,w
  5030  0E70  00AC               	movwf	___lldiv@divisor
  5031  0E71  083A               	movf	UART_Init@baudRate+1,w
  5032  0E72  00AD               	movwf	___lldiv@divisor+1
  5033  0E73  01AE               	clrf	___lldiv@divisor+2
  5034  0E74  01AF               	clrf	___lldiv@divisor+3
  5035  0E75  3000               	movlw	0
  5036  0E76  00B3               	movwf	___lldiv@dividend+3
  5037  0E77  303D               	movlw	61
  5038  0E78  00B2               	movwf	___lldiv@dividend+2
  5039  0E79  3009               	movlw	9
  5040  0E7A  00B1               	movwf	___lldiv@dividend+1
  5041  0E7B  3000               	movlw	0
  5042  0E7C  00B0               	movwf	___lldiv@dividend
  5043  0E7D  120A  118A  2711  120A  158A  	fcall	___lldiv
  5044  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  5045  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  5046  0E84  082C               	movf	?___lldiv,w
  5047  0E85  00BB               	movwf	??_UART_Init
  5048  0E86  082D               	movf	?___lldiv+1,w
  5049  0E87  00BC               	movwf	??_UART_Init+1
  5050  0E88  082E               	movf	?___lldiv+2,w
  5051  0E89  00BD               	movwf	??_UART_Init+2
  5052  0E8A  082F               	movf	?___lldiv+3,w
  5053  0E8B  00BE               	movwf	??_UART_Init+3
  5054  0E8C  3004               	movlw	4
  5055  0E8D                     u2585:	
  5056  0E8D  1003               	clrc
  5057  0E8E  0CBE               	rrf	??_UART_Init+3,f
  5058  0E8F  0CBD               	rrf	??_UART_Init+2,f
  5059  0E90  0CBC               	rrf	??_UART_Init+1,f
  5060  0E91  0CBB               	rrf	??_UART_Init,f
  5061  0E92  3EFF               	addlw	-1
  5062  0E93  1D03               	skipz
  5063  0E94  2E8D               	goto	u2585
  5064  0E95  083B               	movf	??_UART_Init,w
  5065  0E96  3EFF               	addlw	255
  5066  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  5067  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  5068  0E99  0099               	movwf	25	;volatile
  5069  0E9A  0008               	return
  5070  0E9B                     __end_of_UART_Init:	
  5071                           
  5072                           	psect	text20
  5073  0C73                     __ptext20:	
  5074 ;; *************** function _TMR0_Init *****************
  5075 ;; Defined at:
  5076 ;;		line 19 in file "timer_Init.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5090 ;;      Params:         0       0       0       0       0
  5091 ;;      Locals:         0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0
  5093 ;;      Totals:         0       0       0       0       0
  5094 ;;Total ram usage:        0 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_system_Initialize
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           
  5105                           ;psect for function _TMR0_Init
  5106  0C73                     _TMR0_Init:	
  5107                           
  5108                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  5109                           
  5110                           ;incstack = 0
  5111                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  5112  0C73  168B               	bsf	11,5	;volatile
  5113                           
  5114                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  5115  0C74  110B               	bcf	11,2	;volatile
  5116                           
  5117                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  5118  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  5119  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  5120  0C77  1281               	bcf	1,5	;volatile
  5121                           
  5122                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  5123  0C78  1181               	bcf	1,3	;volatile
  5124                           
  5125                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  5126  0C79  0801               	movf	1,w	;volatile
  5127  0C7A  39F8               	andlw	-8
  5128  0C7B  3805               	iorlw	5
  5129  0C7C  0081               	movwf	1	;volatile
  5130                           
  5131                           ;timer_Init.c: 26: TMR0 = 100;
  5132  0C7D  3064               	movlw	100
  5133  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0C80  0081               	movwf	1	;volatile
  5136  0C81  0008               	return
  5137  0C82                     __end_of_TMR0_Init:	
  5138                           
  5139                           	psect	text21
  5140  0C49                     __ptext21:	
  5141 ;; *************** function _SPI_Init *****************
  5142 ;; Defined at:
  5143 ;;		line 10 in file "spi_Init.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_system_Initialize
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           
  5172                           ;psect for function _SPI_Init
  5173  0C49                     _SPI_Init:	
  5174                           
  5175                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5176                           
  5177                           ;incstack = 0
  5178                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5179  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  5180  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  5181  0C4B  1694               	bsf	20,5	;volatile
  5182                           
  5183                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5184  0C4C  30F0               	movlw	-16
  5185  0C4D  0594               	andwf	20,f	;volatile
  5186                           
  5187                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5188  0C4E  1394               	bcf	20,7	;volatile
  5189                           
  5190                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5191  0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  5192  0C50  1303               	bcf	3,6	;RP1=0, select bank1
  5193  0C51  158C               	bsf	12,3	;volatile
  5194                           
  5195                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5196  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0C54  118C               	bcf	12,3	;volatile
  5199  0C55  0008               	return
  5200  0C56                     __end_of_SPI_Init:	
  5201                           
  5202                           	psect	text22
  5203  0F1E                     __ptext22:	
  5204 ;; *************** function _PWM_Init *****************
  5205 ;; Defined at:
  5206 ;;		line 14 in file "pwm_Init.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         0       4       0       0       0
  5221 ;;      Locals:         0       0       0       0       0
  5222 ;;      Temps:          0       4       0       0       0
  5223 ;;      Totals:         0       8       0       0       0
  5224 ;;Total ram usage:        8 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    2
  5227 ;; This function calls:
  5228 ;;		___lldiv
  5229 ;; This function is called by:
  5230 ;;		_system_Initialize
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function _PWM_Init
  5236  0F1E                     _PWM_Init:	
  5237                           
  5238                           ;pwm_Init.c: 15: TRISCbits.TRISC2 = 1;
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5242  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0F20  1507               	bsf	7,2	;volatile
  5245                           
  5246                           ;pwm_Init.c: 17: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5247  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0F23  0839               	movf	PWM_Init@iFrequency,w
  5250  0F24  00BD               	movwf	??_PWM_Init
  5251  0F25  083A               	movf	PWM_Init@iFrequency+1,w
  5252  0F26  00BE               	movwf	??_PWM_Init+1
  5253  0F27  083B               	movf	PWM_Init@iFrequency+2,w
  5254  0F28  00BF               	movwf	??_PWM_Init+2
  5255  0F29  083C               	movf	PWM_Init@iFrequency+3,w
  5256  0F2A  00C0               	movwf	??_PWM_Init+3
  5257  0F2B  3002               	movlw	2
  5258  0F2C                     u2555:	
  5259  0F2C  1003               	clrc
  5260  0F2D  0DBD               	rlf	??_PWM_Init,f
  5261  0F2E  0DBE               	rlf	??_PWM_Init+1,f
  5262  0F2F  0DBF               	rlf	??_PWM_Init+2,f
  5263  0F30  0DC0               	rlf	??_PWM_Init+3,f
  5264  0F31  3EFF               	addlw	-1
  5265  0F32  1D03               	skipz
  5266  0F33  2F2C               	goto	u2555
  5267  0F34  0840               	movf	??_PWM_Init+3,w
  5268  0F35  00AF               	movwf	___lldiv@divisor+3
  5269  0F36  083F               	movf	??_PWM_Init+2,w
  5270  0F37  00AE               	movwf	___lldiv@divisor+2
  5271  0F38  083E               	movf	??_PWM_Init+1,w
  5272  0F39  00AD               	movwf	___lldiv@divisor+1
  5273  0F3A  083D               	movf	??_PWM_Init,w
  5274  0F3B  00AC               	movwf	___lldiv@divisor
  5275  0F3C  3000               	movlw	0
  5276  0F3D  00B3               	movwf	___lldiv@dividend+3
  5277  0F3E  303D               	movlw	61
  5278  0F3F  00B2               	movwf	___lldiv@dividend+2
  5279  0F40  3009               	movlw	9
  5280  0F41  00B1               	movwf	___lldiv@dividend+1
  5281  0F42  3000               	movlw	0
  5282  0F43  00B0               	movwf	___lldiv@dividend
  5283  0F44  120A  118A  2711   	fcall	___lldiv
  5284  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5285  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5286  0F49  082C               	movf	?___lldiv,w
  5287  0F4A  3EFF               	addlw	255
  5288  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  5289  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  5290  0F4D  0092               	movwf	18	;volatile
  5291                           
  5292                           ;pwm_Init.c: 18: CCP1CONbits.P1M = 0b00;
  5293  0F4E  303F               	movlw	-193
  5294  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0F51  0597               	andwf	23,f	;volatile
  5297                           
  5298                           ;pwm_Init.c: 19: CCP1CONbits.CCP1M = 0b1100;
  5299  0F52  0817               	movf	23,w	;volatile
  5300  0F53  39F0               	andlw	-16
  5301  0F54  380C               	iorlw	12
  5302  0F55  0097               	movwf	23	;volatile
  5303                           
  5304                           ;pwm_Init.c: 20: CCP1CONbits.DC1B = 0b00;
  5305  0F56  30CF               	movlw	-49
  5306  0F57  0597               	andwf	23,f	;volatile
  5307                           
  5308                           ;pwm_Init.c: 21: CCPR1L = 0x00;
  5309  0F58  0195               	clrf	21	;volatile
  5310                           
  5311                           ;pwm_Init.c: 23: PIR1bits.TMR2IF = 0;
  5312  0F59  108C               	bcf	12,1	;volatile
  5313                           
  5314                           ;pwm_Init.c: 24: T2CONbits.TOUTPS = 0b0000;
  5315  0F5A  3087               	movlw	-121
  5316  0F5B  0592               	andwf	18,f	;volatile
  5317                           
  5318                           ;pwm_Init.c: 25: T2CONbits.T2CKPS = 0b00;
  5319  0F5C  30FC               	movlw	-4
  5320  0F5D  0592               	andwf	18,f	;volatile
  5321                           
  5322                           ;pwm_Init.c: 26: T2CONbits.TMR2ON = 1;
  5323  0F5E  1512               	bsf	18,2	;volatile
  5324                           
  5325                           ;pwm_Init.c: 27: TRISCbits.TRISC2 = 0;
  5326  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5327  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  5328  0F61  1107               	bcf	7,2	;volatile
  5329  0F62  0008               	return
  5330  0F63                     __end_of_PWM_Init:	
  5331                           
  5332                           	psect	text23
  5333  05D3                     __ptext23:	
  5334 ;; *************** function _PWM_DutyCycle *****************
  5335 ;; Defined at:
  5336 ;;		line 30 in file "pwm_Init.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5350 ;;      Params:         0       4       0       0       0
  5351 ;;      Locals:         0       0       0       0       0
  5352 ;;      Temps:          0       4       0       0       0
  5353 ;;      Totals:         0       8       0       0       0
  5354 ;;Total ram usage:        8 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		___lldiv
  5359 ;;		___lmul
  5360 ;; This function is called by:
  5361 ;;		_system_Initialize
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           
  5366                           ;psect for function _PWM_DutyCycle
  5367  05D3                     _PWM_DutyCycle:	
  5368                           
  5369                           ;pwm_Init.c: 32: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5373  05D3  3000               	movlw	0
  5374  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  5375  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  5376  05D6  00AF               	movwf	___lldiv@divisor+3
  5377  05D7  3000               	movlw	0
  5378  05D8  00AE               	movwf	___lldiv@divisor+2
  5379  05D9  3000               	movlw	0
  5380  05DA  00AD               	movwf	___lldiv@divisor+1
  5381  05DB  3064               	movlw	100
  5382  05DC  00AC               	movwf	___lldiv@divisor
  5383  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  5384  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  5385  05DF  0812               	movf	18,w	;volatile
  5386  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  5387  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  5388  05E2  00BD               	movwf	??_PWM_DutyCycle
  5389  05E3  01BE               	clrf	??_PWM_DutyCycle+1
  5390  05E4  1003               	clrc
  5391  05E5  0DBD               	rlf	??_PWM_DutyCycle,f
  5392  05E6  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5393  05E7  1003               	clrc
  5394  05E8  0DBD               	rlf	??_PWM_DutyCycle,f
  5395  05E9  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5396  05EA  083D               	movf	??_PWM_DutyCycle,w
  5397  05EB  3E04               	addlw	4
  5398  05EC  00A0               	movwf	___lmul@multiplier
  5399  05ED  083E               	movf	??_PWM_DutyCycle+1,w
  5400  05EE  1803               	skipnc
  5401  05EF  3E01               	addlw	1
  5402  05F0  3E00               	addlw	0
  5403  05F1  00A1               	movwf	___lmul@multiplier+1
  5404  05F2  01A2               	clrf	___lmul@multiplier+2
  5405  05F3  1BA1               	btfsc	___lmul@multiplier+1,7
  5406  05F4  03A2               	decf	___lmul@multiplier+2,f
  5407  05F5  0822               	movf	___lmul@multiplier+2,w
  5408  05F6  00A3               	movwf	___lmul@multiplier+3
  5409  05F7  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5410  05F8  00A7               	movwf	___lmul@multiplicand+3
  5411  05F9  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5412  05FA  00A6               	movwf	___lmul@multiplicand+2
  5413  05FB  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5414  05FC  00A5               	movwf	___lmul@multiplicand+1
  5415  05FD  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5416  05FE  00A4               	movwf	___lmul@multiplicand
  5417  05FF  120A  158A  269B  120A  118A  	fcall	___lmul
  5418  0604  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0605  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0606  0823               	movf	?___lmul+3,w
  5421  0607  00B3               	movwf	___lldiv@dividend+3
  5422  0608  0822               	movf	?___lmul+2,w
  5423  0609  00B2               	movwf	___lldiv@dividend+2
  5424  060A  0821               	movf	?___lmul+1,w
  5425  060B  00B1               	movwf	___lldiv@dividend+1
  5426  060C  0820               	movf	?___lmul,w
  5427  060D  00B0               	movwf	___lldiv@dividend
  5428  060E  120A  118A  2711  120A  118A  	fcall	___lldiv
  5429  0613  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0614  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0615  082F               	movf	?___lldiv+3,w
  5432  0616  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5433  0617  082E               	movf	?___lldiv+2,w
  5434  0618  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5435  0619  082D               	movf	?___lldiv+1,w
  5436  061A  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5437  061B  082C               	movf	?___lldiv,w
  5438  061C  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5439                           
  5440                           ;pwm_Init.c: 33: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5441  061D  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5442  061E  00BD               	movwf	??_PWM_DutyCycle
  5443  061F  3003               	movlw	3
  5444  0620                     u3635:	
  5445  0620  1003               	clrc
  5446  0621  0DBD               	rlf	??_PWM_DutyCycle,f
  5447  0622  3EFF               	addlw	-1
  5448  0623  1D03               	skipz
  5449  0624  2E20               	goto	u3635
  5450  0625  1003               	clrc
  5451  0626  0D3D               	rlf	??_PWM_DutyCycle,w
  5452  0627  00BE               	movwf	??_PWM_DutyCycle+1
  5453  0628  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5454  0629  0817               	movf	23,w	;volatile
  5455  062A  063E               	xorwf	??_PWM_DutyCycle+1,w
  5456  062B  39CF               	andlw	-49
  5457  062C  063E               	xorwf	??_PWM_DutyCycle+1,w
  5458  062D  0097               	movwf	23	;volatile
  5459                           
  5460                           ;pwm_Init.c: 34: CCPR1L = (iDutyCycle >> 2);
  5461  062E  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5462  062F  00BD               	movwf	??_PWM_DutyCycle
  5463  0630  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5464  0631  00BE               	movwf	??_PWM_DutyCycle+1
  5465  0632  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5466  0633  00BF               	movwf	??_PWM_DutyCycle+2
  5467  0634  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5468  0635  00C0               	movwf	??_PWM_DutyCycle+3
  5469  0636  3002               	movlw	2
  5470  0637                     u3645:	
  5471  0637  1003               	clrc
  5472  0638  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5473  0639  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5474  063A  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5475  063B  0CBD               	rrf	??_PWM_DutyCycle,f
  5476  063C  3EFF               	addlw	-1
  5477  063D  1D03               	skipz
  5478  063E  2E37               	goto	u3645
  5479  063F  083D               	movf	??_PWM_DutyCycle,w
  5480  0640  0095               	movwf	21	;volatile
  5481  0641  0008               	return
  5482  0642                     __end_of_PWM_DutyCycle:	
  5483                           
  5484                           	psect	text24
  5485  0E9B                     __ptext24:	
  5486 ;; *************** function ___lmul *****************
  5487 ;; Defined at:
  5488 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5491 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  product         4    8[BANK0 ] unsigned long 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  4    0[BANK0 ] unsigned long 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       8       0       0       0
  5504 ;;      Locals:         0       4       0       0       0
  5505 ;;      Temps:          1       0       0       0       0
  5506 ;;      Totals:         1      12       0       0       0
  5507 ;;Total ram usage:       13 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_PWM_DutyCycle
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function ___lmul
  5519  0E9B                     ___lmul:	
  5520                           
  5521                           ;incstack = 0
  5522                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5523  0E9B  3000               	movlw	0
  5524  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0E9E  00AB               	movwf	___lmul@product+3
  5527  0E9F  3000               	movlw	0
  5528  0EA0  00AA               	movwf	___lmul@product+2
  5529  0EA1  3000               	movlw	0
  5530  0EA2  00A9               	movwf	___lmul@product+1
  5531  0EA3  3000               	movlw	0
  5532  0EA4  00A8               	movwf	___lmul@product
  5533  0EA5                     l2404:	
  5534  0EA5  1C20               	btfss	___lmul@multiplier,0
  5535  0EA6  2EBB               	goto	l2408
  5536  0EA7  0824               	movf	___lmul@multiplicand,w
  5537  0EA8  07A8               	addwf	___lmul@product,f
  5538  0EA9  0825               	movf	___lmul@multiplicand+1,w
  5539  0EAA  1103               	clrz
  5540  0EAB  1803               	skipnc
  5541  0EAC  3E01               	addlw	1
  5542  0EAD  1D03               	btfss	3,2
  5543  0EAE  07A9               	addwf	___lmul@product+1,f
  5544  0EAF  0826               	movf	___lmul@multiplicand+2,w
  5545  0EB0  1103               	clrz
  5546  0EB1  1803               	skipnc
  5547  0EB2  3E01               	addlw	1
  5548  0EB3  1D03               	btfss	3,2
  5549  0EB4  07AA               	addwf	___lmul@product+2,f
  5550  0EB5  0827               	movf	___lmul@multiplicand+3,w
  5551  0EB6  1103               	clrz
  5552  0EB7  1803               	skipnc
  5553  0EB8  3E01               	addlw	1
  5554  0EB9  1D03               	btfss	3,2
  5555  0EBA  07AB               	addwf	___lmul@product+3,f
  5556  0EBB                     l2408:	
  5557  0EBB  3001               	movlw	1
  5558  0EBC  00F4               	movwf	??___lmul
  5559  0EBD                     u3075:	
  5560  0EBD  1003               	clrc
  5561  0EBE  0DA4               	rlf	___lmul@multiplicand,f
  5562  0EBF  0DA5               	rlf	___lmul@multiplicand+1,f
  5563  0EC0  0DA6               	rlf	___lmul@multiplicand+2,f
  5564  0EC1  0DA7               	rlf	___lmul@multiplicand+3,f
  5565  0EC2  0BF4               	decfsz	??___lmul,f
  5566  0EC3  2EBD               	goto	u3075
  5567  0EC4  3001               	movlw	1
  5568  0EC5                     u3085:	
  5569  0EC5  1003               	clrc
  5570  0EC6  0CA3               	rrf	___lmul@multiplier+3,f
  5571  0EC7  0CA2               	rrf	___lmul@multiplier+2,f
  5572  0EC8  0CA1               	rrf	___lmul@multiplier+1,f
  5573  0EC9  0CA0               	rrf	___lmul@multiplier,f
  5574  0ECA  3EFF               	addlw	-1
  5575  0ECB  1D03               	skipz
  5576  0ECC  2EC5               	goto	u3085
  5577  0ECD  0823               	movf	___lmul@multiplier+3,w
  5578  0ECE  0422               	iorwf	___lmul@multiplier+2,w
  5579  0ECF  0421               	iorwf	___lmul@multiplier+1,w
  5580  0ED0  0420               	iorwf	___lmul@multiplier,w
  5581  0ED1  1D03               	skipz
  5582  0ED2  2EA5               	goto	l2404
  5583  0ED3  082B               	movf	___lmul@product+3,w
  5584  0ED4  00A3               	movwf	?___lmul+3
  5585  0ED5  082A               	movf	___lmul@product+2,w
  5586  0ED6  00A2               	movwf	?___lmul+2
  5587  0ED7  0829               	movf	___lmul@product+1,w
  5588  0ED8  00A1               	movwf	?___lmul+1
  5589  0ED9  0828               	movf	___lmul@product,w
  5590  0EDA  00A0               	movwf	?___lmul
  5591  0EDB  0008               	return
  5592  0EDC                     __end_of___lmul:	
  5593                           
  5594                           	psect	text25
  5595  0711                     __ptext25:	
  5596 ;; *************** function ___lldiv *****************
  5597 ;; Defined at:
  5598 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  divisor         4   12[BANK0 ] unsigned long 
  5601 ;;  dividend        4   16[BANK0 ] unsigned long 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  quotient        4   20[BANK0 ] unsigned long 
  5604 ;;  counter         1   24[BANK0 ] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  4   12[BANK0 ] unsigned long 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5614 ;;      Params:         0       8       0       0       0
  5615 ;;      Locals:         0       5       0       0       0
  5616 ;;      Temps:          1       0       0       0       0
  5617 ;;      Totals:         1      13       0       0       0
  5618 ;;Total ram usage:       14 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; Hardware stack levels required when called:    1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_PWM_Init
  5625 ;;		_PWM_DutyCycle
  5626 ;;		_UART_Init
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function ___lldiv
  5632  0711                     ___lldiv:	
  5633                           
  5634                           ;incstack = 0
  5635                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5636  0711  3000               	movlw	0
  5637  0712  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0713  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0714  00B7               	movwf	___lldiv@quotient+3
  5640  0715  3000               	movlw	0
  5641  0716  00B6               	movwf	___lldiv@quotient+2
  5642  0717  3000               	movlw	0
  5643  0718  00B5               	movwf	___lldiv@quotient+1
  5644  0719  3000               	movlw	0
  5645  071A  00B4               	movwf	___lldiv@quotient
  5646  071B  082F               	movf	___lldiv@divisor+3,w
  5647  071C  042E               	iorwf	___lldiv@divisor+2,w
  5648  071D  042D               	iorwf	___lldiv@divisor+1,w
  5649  071E  042C               	iorwf	___lldiv@divisor,w
  5650  071F  1903               	skipnz
  5651  0720  2F68               	goto	l2024
  5652  0721  01B8               	clrf	___lldiv@counter
  5653  0722  0AB8               	incf	___lldiv@counter,f
  5654  0723                     l2010:	
  5655  0723  1BAF               	btfsc	___lldiv@divisor+3,7
  5656  0724  2F33               	goto	l2012
  5657  0725  3001               	movlw	1
  5658  0726  00F5               	movwf	??___lldiv
  5659  0727                     u2365:	
  5660  0727  1003               	clrc
  5661  0728  0DAC               	rlf	___lldiv@divisor,f
  5662  0729  0DAD               	rlf	___lldiv@divisor+1,f
  5663  072A  0DAE               	rlf	___lldiv@divisor+2,f
  5664  072B  0DAF               	rlf	___lldiv@divisor+3,f
  5665  072C  0BF5               	decfsz	??___lldiv,f
  5666  072D  2F27               	goto	u2365
  5667  072E  3001               	movlw	1
  5668  072F  00F5               	movwf	??___lldiv
  5669  0730  0875               	movf	??___lldiv,w
  5670  0731  07B8               	addwf	___lldiv@counter,f
  5671  0732  2F23               	goto	l2010
  5672  0733                     l2012:	
  5673  0733  3001               	movlw	1
  5674  0734  00F5               	movwf	??___lldiv
  5675  0735                     u2385:	
  5676  0735  1003               	clrc
  5677  0736  0DB4               	rlf	___lldiv@quotient,f
  5678  0737  0DB5               	rlf	___lldiv@quotient+1,f
  5679  0738  0DB6               	rlf	___lldiv@quotient+2,f
  5680  0739  0DB7               	rlf	___lldiv@quotient+3,f
  5681  073A  0BF5               	decfsz	??___lldiv,f
  5682  073B  2F35               	goto	u2385
  5683  073C  082F               	movf	___lldiv@divisor+3,w
  5684  073D  0233               	subwf	___lldiv@dividend+3,w
  5685  073E  1D03               	skipz
  5686  073F  2F4A               	goto	u2395
  5687  0740  082E               	movf	___lldiv@divisor+2,w
  5688  0741  0232               	subwf	___lldiv@dividend+2,w
  5689  0742  1D03               	skipz
  5690  0743  2F4A               	goto	u2395
  5691  0744  082D               	movf	___lldiv@divisor+1,w
  5692  0745  0231               	subwf	___lldiv@dividend+1,w
  5693  0746  1D03               	skipz
  5694  0747  2F4A               	goto	u2395
  5695  0748  082C               	movf	___lldiv@divisor,w
  5696  0749  0230               	subwf	___lldiv@dividend,w
  5697  074A                     u2395:	
  5698  074A  1C03               	skipc
  5699  074B  2F5B               	goto	l2020
  5700  074C  082C               	movf	___lldiv@divisor,w
  5701  074D  02B0               	subwf	___lldiv@dividend,f
  5702  074E  082D               	movf	___lldiv@divisor+1,w
  5703  074F  1C03               	skipc
  5704  0750  0F2D               	incfsz	___lldiv@divisor+1,w
  5705  0751  02B1               	subwf	___lldiv@dividend+1,f
  5706  0752  082E               	movf	___lldiv@divisor+2,w
  5707  0753  1C03               	skipc
  5708  0754  0F2E               	incfsz	___lldiv@divisor+2,w
  5709  0755  02B2               	subwf	___lldiv@dividend+2,f
  5710  0756  082F               	movf	___lldiv@divisor+3,w
  5711  0757  1C03               	skipc
  5712  0758  0F2F               	incfsz	___lldiv@divisor+3,w
  5713  0759  02B3               	subwf	___lldiv@dividend+3,f
  5714  075A  1434               	bsf	___lldiv@quotient,0
  5715  075B                     l2020:	
  5716  075B  3001               	movlw	1
  5717  075C                     u2405:	
  5718  075C  1003               	clrc
  5719  075D  0CAF               	rrf	___lldiv@divisor+3,f
  5720  075E  0CAE               	rrf	___lldiv@divisor+2,f
  5721  075F  0CAD               	rrf	___lldiv@divisor+1,f
  5722  0760  0CAC               	rrf	___lldiv@divisor,f
  5723  0761  3EFF               	addlw	-1
  5724  0762  1D03               	skipz
  5725  0763  2F5C               	goto	u2405
  5726  0764  3001               	movlw	1
  5727  0765  02B8               	subwf	___lldiv@counter,f
  5728  0766  1D03               	btfss	3,2
  5729  0767  2F33               	goto	l2012
  5730  0768                     l2024:	
  5731  0768  0837               	movf	___lldiv@quotient+3,w
  5732  0769  00AF               	movwf	?___lldiv+3
  5733  076A  0836               	movf	___lldiv@quotient+2,w
  5734  076B  00AE               	movwf	?___lldiv+2
  5735  076C  0835               	movf	___lldiv@quotient+1,w
  5736  076D  00AD               	movwf	?___lldiv+1
  5737  076E  0834               	movf	___lldiv@quotient,w
  5738  076F  00AC               	movwf	?___lldiv
  5739  0770  0008               	return
  5740  0771                     __end_of___lldiv:	
  5741                           
  5742                           	psect	text26
  5743  0C3C                     __ptext26:	
  5744 ;; *************** function _Oscillator_Init *****************
  5745 ;; Defined at:
  5746 ;;		line 23 in file "SYST_Init.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		status,2
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5760 ;;      Params:         0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:    1
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_system_Initialize
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           
  5775                           ;psect for function _Oscillator_Init
  5776  0C3C                     _Oscillator_Init:	
  5777                           
  5778                           ;SYST_Init.c: 24: OSCCON = 0x00;
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _Oscillator_Init: [status,2]
  5782  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  5784  0C3E  018F               	clrf	15	;volatile
  5785                           
  5786                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  5787  0C3F  0190               	clrf	16	;volatile
  5788  0C40  0008               	return
  5789  0C41                     __end_of_Oscillator_Init:	
  5790                           
  5791                           	psect	text27
  5792  06B0                     __ptext27:	
  5793 ;; *************** function _Lcd_Init *****************
  5794 ;; Defined at:
  5795 ;;		line 62 in file "lcd_Config.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         0       0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0
  5811 ;;      Temps:          0       2       0       0       0
  5812 ;;      Totals:         0       2       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    3
  5816 ;; This function calls:
  5817 ;;		_Lcd_Cmd
  5818 ;;		_Lcd_Port
  5819 ;; This function is called by:
  5820 ;;		_system_Initialize
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function _Lcd_Init
  5826  06B0                     _Lcd_Init:	
  5827                           
  5828                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5832  06B0  3000               	movlw	0
  5833  06B1  120A  158A  24EE  120A  118A  	fcall	_Lcd_Port
  5834                           
  5835                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  5836  06B6  301A               	movlw	26
  5837  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  5838  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  5839  06B9  00A3               	movwf	??_Lcd_Init+1
  5840  06BA  30F7               	movlw	247
  5841  06BB  00A2               	movwf	??_Lcd_Init
  5842  06BC                     u3937:	
  5843  06BC  0BA2               	decfsz	??_Lcd_Init,f
  5844  06BD  2EBC               	goto	u3937
  5845  06BE  0BA3               	decfsz	??_Lcd_Init+1,f
  5846  06BF  2EBC               	goto	u3937
  5847  06C0  2EC1               	nop2
  5848                           
  5849                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  5850  06C1  3003               	movlw	3
  5851  06C2  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5852                           
  5853                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  5854  06C7  3007               	movlw	7
  5855  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5856  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5857  06CA  00A3               	movwf	??_Lcd_Init+1
  5858  06CB  307C               	movlw	124
  5859  06CC  00A2               	movwf	??_Lcd_Init
  5860  06CD                     u3947:	
  5861  06CD  0BA2               	decfsz	??_Lcd_Init,f
  5862  06CE  2ECD               	goto	u3947
  5863  06CF  0BA3               	decfsz	??_Lcd_Init+1,f
  5864  06D0  2ECD               	goto	u3947
  5865  06D1  0000               	nop
  5866                           
  5867                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  5868  06D2  3003               	movlw	3
  5869  06D3  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5870                           
  5871                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  5872  06D8  300F               	movlw	15
  5873  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  5874  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  5875  06DB  00A3               	movwf	??_Lcd_Init+1
  5876  06DC  3047               	movlw	71
  5877  06DD  00A2               	movwf	??_Lcd_Init
  5878  06DE                     u3957:	
  5879  06DE  0BA2               	decfsz	??_Lcd_Init,f
  5880  06DF  2EDE               	goto	u3957
  5881  06E0  0BA3               	decfsz	??_Lcd_Init+1,f
  5882  06E1  2EDE               	goto	u3957
  5883                           
  5884                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  5885  06E2  3003               	movlw	3
  5886  06E3  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5887                           
  5888                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  5889  06E8  3002               	movlw	2
  5890  06E9  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5891                           
  5892                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  5893  06EE  3002               	movlw	2
  5894  06EF  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5895                           
  5896                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  5897  06F4  3008               	movlw	8
  5898  06F5  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5899                           
  5900                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  5901  06FA  3000               	movlw	0
  5902  06FB  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5903                           
  5904                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  5905  0700  300C               	movlw	12
  5906  0701  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5907                           
  5908                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  5909  0706  3000               	movlw	0
  5910  0707  120A  158A  2508  120A  118A  	fcall	_Lcd_Cmd
  5911                           
  5912                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  5913  070C  3006               	movlw	6
  5914  070D  120A  158A  2508   	fcall	_Lcd_Cmd
  5915  0710  0008               	return
  5916  0711                     __end_of_Lcd_Init:	
  5917                           
  5918                           	psect	text28
  5919  0D08                     __ptext28:	
  5920 ;; *************** function _Lcd_Cmd *****************
  5921 ;; Defined at:
  5922 ;;		line 32 in file "lcd_Config.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;  a               1    wreg     unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  a               1    5[COMMON] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, pclath, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5936 ;;      Params:         0       0       0       0       0
  5937 ;;      Locals:         1       0       0       0       0
  5938 ;;      Temps:          0       2       0       0       0
  5939 ;;      Totals:         1       2       0       0       0
  5940 ;;Total ram usage:        3 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    2
  5943 ;; This function calls:
  5944 ;;		_Lcd_Port
  5945 ;; This function is called by:
  5946 ;;		_Lcd_Set_Cursor
  5947 ;;		_Lcd_Init
  5948 ;;		_Lcd_Clear
  5949 ;;		_Lcd_Shift_Right
  5950 ;;		_Lcd_Shift_Left
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function _Lcd_Cmd
  5956  0D08                     _Lcd_Cmd:	
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5960                           ;Lcd_Cmd@a stored from wreg
  5961  0D08  00F5               	movwf	Lcd_Cmd@a
  5962                           
  5963                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  5964  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  5965  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  5966  0D0B  1286               	bcf	6,5	;volatile
  5967                           
  5968                           ;lcd_Config.c: 34: Lcd_Port(a);
  5969  0D0C  0875               	movf	Lcd_Cmd@a,w
  5970  0D0D  120A  158A  24EE  120A  158A  	fcall	_Lcd_Port
  5971                           
  5972                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  5973  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  5974  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  5975  0D14  1606               	bsf	6,4	;volatile
  5976                           
  5977                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  5978  0D15  3006               	movlw	6
  5979  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0D18  00A1               	movwf	??_Lcd_Cmd+1
  5982  0D19  302F               	movlw	47
  5983  0D1A  00A0               	movwf	??_Lcd_Cmd
  5984  0D1B                     u3967:	
  5985  0D1B  0BA0               	decfsz	??_Lcd_Cmd,f
  5986  0D1C  2D1B               	goto	u3967
  5987  0D1D  0BA1               	decfsz	??_Lcd_Cmd+1,f
  5988  0D1E  2D1B               	goto	u3967
  5989  0D1F  2D20               	nop2
  5990                           
  5991                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  5992  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  5993  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  5994  0D22  1206               	bcf	6,4	;volatile
  5995  0D23  0008               	return
  5996  0D24                     __end_of_Lcd_Cmd:	
  5997                           
  5998                           	psect	text29
  5999  0CEE                     __ptext29:	
  6000 ;; *************** function _Lcd_Port *****************
  6001 ;; Defined at:
  6002 ;;		line 10 in file "lcd_Config.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  a               1    wreg     unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  a               1    4[COMMON] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         0       0       0       0       0
  6017 ;;      Locals:         1       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         1       0       0       0       0
  6020 ;;Total ram usage:        1 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_Lcd_Cmd
  6027 ;;		_Lcd_Init
  6028 ;;		_Lcd_Write_Char
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _Lcd_Port
  6034  0CEE                     _Lcd_Port:	
  6035                           
  6036                           ;incstack = 0
  6037                           ; Regs used in _Lcd_Port: [wreg]
  6038                           ;Lcd_Port@a stored from wreg
  6039  0CEE  00F4               	movwf	Lcd_Port@a
  6040                           
  6041                           ;lcd_Config.c: 11: if (a & 1)
  6042  0CEF  1C74               	btfss	Lcd_Port@a,0
  6043  0CF0  2CF5               	goto	l112
  6044                           
  6045                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  6046  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  6047  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  6048  0CF3  1586               	bsf	6,3	;volatile
  6049  0CF4  2CF8               	goto	l113
  6050  0CF5                     l112:	
  6051                           
  6052                           ;lcd_Config.c: 13: else
  6053                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  6054  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  6056  0CF7  1186               	bcf	6,3	;volatile
  6057  0CF8                     l113:	
  6058                           
  6059                           ;lcd_Config.c: 16: if (a & 2)
  6060  0CF8  1CF4               	btfss	Lcd_Port@a,1
  6061  0CF9  2CFC               	goto	l114
  6062                           
  6063                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  6064  0CFA  1506               	bsf	6,2	;volatile
  6065  0CFB  2CFD               	goto	l115
  6066  0CFC                     l114:	
  6067                           
  6068                           ;lcd_Config.c: 18: else
  6069                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  6070  0CFC  1106               	bcf	6,2	;volatile
  6071  0CFD                     l115:	
  6072                           
  6073                           ;lcd_Config.c: 21: if (a & 4)
  6074  0CFD  1D74               	btfss	Lcd_Port@a,2
  6075  0CFE  2D01               	goto	l116
  6076                           
  6077                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  6078  0CFF  1486               	bsf	6,1	;volatile
  6079  0D00  2D02               	goto	l117
  6080  0D01                     l116:	
  6081                           
  6082                           ;lcd_Config.c: 23: else
  6083                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  6084  0D01  1086               	bcf	6,1	;volatile
  6085  0D02                     l117:	
  6086                           
  6087                           ;lcd_Config.c: 26: if (a & 8)
  6088  0D02  1DF4               	btfss	Lcd_Port@a,3
  6089  0D03  2D06               	goto	l118
  6090                           
  6091                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  6092  0D04  1406               	bsf	6,0	;volatile
  6093  0D05  0008               	return
  6094  0D06                     l118:	
  6095                           
  6096                           ;lcd_Config.c: 28: else
  6097                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  6098  0D06  1006               	bcf	6,0	;volatile
  6099  0D07  0008               	return
  6100  0D08                     __end_of_Lcd_Port:	
  6101                           
  6102                           	psect	text30
  6103  0C64                     __ptext30:	
  6104 ;; *************** function _Interrupt_Init *****************
  6105 ;; Defined at:
  6106 ;;		line 10 in file "interrupt_Init.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;		None
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		None
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6120 ;;      Params:         0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0
  6123 ;;      Totals:         0       0       0       0       0
  6124 ;;Total ram usage:        0 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_system_Initialize
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function _Interrupt_Init
  6136  0C64                     _Interrupt_Init:	
  6137                           
  6138                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6139                           
  6140                           ;incstack = 0
  6141                           ; Regs used in _Interrupt_Init: []
  6142  0C64  178B               	bsf	11,7	;volatile
  6143                           
  6144                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6145  0C65  170B               	bsf	11,6	;volatile
  6146                           
  6147                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6148  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  6149  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  6150  0C68  170C               	bsf	12,6	;volatile
  6151                           
  6152                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6153  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0C6B  130C               	bcf	12,6	;volatile
  6156                           
  6157                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6158  0C6C  1683               	bsf	3,5	;RP0=1, select bank1
  6159  0C6D  1303               	bcf	3,6	;RP1=0, select bank1
  6160  0C6E  168C               	bsf	12,5	;volatile
  6161                           
  6162                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6163  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6164  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  6165  0C71  128C               	bcf	12,5	;volatile
  6166  0C72  0008               	return
  6167  0C73                     __end_of_Interrupt_Init:	
  6168                           
  6169                           	psect	text31
  6170  0CD5                     __ptext31:	
  6171 ;; *************** function _ADC_Init *****************
  6172 ;; Defined at:
  6173 ;;		line 13 in file "adc_Init.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6187 ;;      Params:         0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_system_Initialize
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           
  6202                           ;psect for function _ADC_Init
  6203  0CD5                     _ADC_Init:	
  6204                           
  6205                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6206                           
  6207                           ;incstack = 0
  6208                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6209  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6210  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  6211  0CD7  081F               	movf	31,w	;volatile
  6212  0CD8  393F               	andlw	-193
  6213  0CD9  3840               	iorlw	64
  6214  0CDA  009F               	movwf	31	;volatile
  6215                           
  6216                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6217  0CDB  30C3               	movlw	-61
  6218  0CDC  059F               	andwf	31,f	;volatile
  6219                           
  6220                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6221  0CDD  109F               	bcf	31,1	;volatile
  6222  0CDE  1C9F               	btfss	31,1	;volatile
  6223  0CDF  2CE4               	goto	u1050
  6224  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0CE2  149F               	bsf	31,1	;volatile
  6227  0CE3  2CE7               	goto	l1352
  6228  0CE4                     u1050:	
  6229  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  6230  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  6231  0CE6  109F               	bcf	31,1	;volatile
  6232  0CE7                     l1352:	
  6233                           
  6234                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6235  0CE7  141F               	bsf	31,0	;volatile
  6236                           
  6237                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6238  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  6239  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  6240  0CEA  179F               	bsf	31,7	;volatile
  6241                           
  6242                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6243  0CEB  121F               	bcf	31,4	;volatile
  6244                           
  6245                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6246  0CEC  129F               	bcf	31,5	;volatile
  6247  0CED  0008               	return
  6248  0CEE                     __end_of_ADC_Init:	
  6249                           
  6250                           	psect	text32
  6251  0C93                     __ptext32:	
  6252 ;; *************** function _internal_eeprom_read *****************
  6253 ;; Defined at:
  6254 ;;		line 10 in file "Internal_EEPROM.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  addr            1    wreg     unsigned char 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  addr            1    2[BANK0 ] unsigned char 
  6259 ;;  dataRead        2    0[BANK0 ] PTR unsigned char 
  6260 ;;		 -> EEDATA(1), 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      unsigned char 
  6263 ;; Registers used:
  6264 ;;		wreg
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6270 ;;      Params:         0       0       0       0       0
  6271 ;;      Locals:         0       3       0       0       0
  6272 ;;      Temps:          0       0       0       0       0
  6273 ;;      Totals:         0       3       0       0       0
  6274 ;;Total ram usage:        3 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    1
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_main
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _internal_eeprom_read
  6286  0C93                     _internal_eeprom_read:	
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in _internal_eeprom_read: [wreg]
  6290                           ;internal_eeprom_read@addr stored from wreg
  6291  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0C95  00A2               	movwf	internal_eeprom_read@addr
  6294                           
  6295                           ;Internal_EEPROM.c: 11: uint8_t *dataRead;
  6296                           ;Internal_EEPROM.c: 12: EEADR = addr;
  6297  0C96  0822               	movf	internal_eeprom_read@addr,w
  6298  0C97  1283               	bcf	3,5	;RP0=0, select bank2
  6299  0C98  1703               	bsf	3,6	;RP1=1, select bank2
  6300  0C99  008D               	movwf	13	;volatile
  6301                           
  6302                           ;Internal_EEPROM.c: 13: EECON1bits.EEPGD = 0;
  6303  0C9A  1683               	bsf	3,5	;RP0=1, select bank3
  6304  0C9B  1703               	bsf	3,6	;RP1=1, select bank3
  6305  0C9C  138C               	bcf	12,7	;volsfr
  6306                           
  6307                           ;Internal_EEPROM.c: 14: EECON1bits.RD = 1;
  6308  0C9D  140C               	bsf	12,0	;volsfr
  6309                           
  6310                           ;Internal_EEPROM.c: 15: dataRead = &EEDATA;
  6311  0C9E  3001               	movlw	1
  6312  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6313  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6314  0CA1  00A1               	movwf	internal_eeprom_read@dataRead+1
  6315  0CA2  300C               	movlw	12
  6316  0CA3  00A0               	movwf	internal_eeprom_read@dataRead
  6317                           
  6318                           ;Internal_EEPROM.c: 16: return dataRead;
  6319  0CA4  0820               	movf	internal_eeprom_read@dataRead,w
  6320  0CA5  0008               	return
  6321  0CA6                     __end_of_internal_eeprom_read:	
  6322                           
  6323                           	psect	text33
  6324  0EDC                     __ptext33:	
  6325 ;; *************** function _EEPROM_Write *****************
  6326 ;; Defined at:
  6327 ;;		line 10 in file "_25LC160B_EEPROM.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  iData           2    3[BANK0 ] PTR unsigned char 
  6330 ;;		 -> RAM(512), 
  6331 ;;  iAddress        1    5[BANK0 ] unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         0       3       0       0       0
  6344 ;;      Locals:         0       0       0       0       0
  6345 ;;      Temps:          0       2       0       0       0
  6346 ;;      Totals:         0       5       0       0       0
  6347 ;;Total ram usage:        5 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    2
  6350 ;; This function calls:
  6351 ;;		_SPI_MasterTransmit
  6352 ;; This function is called by:
  6353 ;;		_main
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           
  6358                           ;psect for function _EEPROM_Write
  6359  0EDC                     _EEPROM_Write:	
  6360                           
  6361                           ;_25LC160B_EEPROM.c: 12: PORTAbits.RA5 = 0;
  6362                           
  6363                           ;incstack = 0
  6364                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  6365  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0EDE  1285               	bcf	5,5	;volatile
  6368                           
  6369                           ;_25LC160B_EEPROM.c: 13: SPI_MasterTransmit(0x06);
  6370  0EDF  3006               	movlw	6
  6371  0EE0  120A  158A  2441  120A  158A  	fcall	_SPI_MasterTransmit
  6372                           
  6373                           ;_25LC160B_EEPROM.c: 14: PORTAbits.RA5 = 1;
  6374  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0EE7  1685               	bsf	5,5	;volatile
  6377                           
  6378                           ;_25LC160B_EEPROM.c: 15: _delay((unsigned long)((2)*(4000000UL/4000.0)));
  6379  0EE8  3003               	movlw	3
  6380  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  6381  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  6382  0EEB  00A7               	movwf	??_EEPROM_Write+1
  6383  0EEC  3097               	movlw	151
  6384  0EED  00A6               	movwf	??_EEPROM_Write
  6385  0EEE                     u3977:	
  6386  0EEE  0BA6               	decfsz	??_EEPROM_Write,f
  6387  0EEF  2EEE               	goto	u3977
  6388  0EF0  0BA7               	decfsz	??_EEPROM_Write+1,f
  6389  0EF1  2EEE               	goto	u3977
  6390                           
  6391                           ;_25LC160B_EEPROM.c: 17: PORTAbits.RA5 = 0;
  6392  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  6394  0EF4  1285               	bcf	5,5	;volatile
  6395                           
  6396                           ;_25LC160B_EEPROM.c: 18: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  6397  0EF5  3007               	movlw	7
  6398  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0EF8  00A7               	movwf	??_EEPROM_Write+1
  6401  0EF9  307C               	movlw	124
  6402  0EFA  00A6               	movwf	??_EEPROM_Write
  6403  0EFB                     u3987:	
  6404  0EFB  0BA6               	decfsz	??_EEPROM_Write,f
  6405  0EFC  2EFB               	goto	u3987
  6406  0EFD  0BA7               	decfsz	??_EEPROM_Write+1,f
  6407  0EFE  2EFB               	goto	u3987
  6408  0EFF  0000               	nop
  6409                           
  6410                           ;_25LC160B_EEPROM.c: 19: SPI_MasterTransmit(0x02);
  6411  0F00  3002               	movlw	2
  6412  0F01  120A  158A  2441  120A  158A  	fcall	_SPI_MasterTransmit
  6413                           
  6414                           ;_25LC160B_EEPROM.c: 20: SPI_MasterTransmit(iAddress>>8);
  6415  0F06  3000               	movlw	0
  6416  0F07  120A  158A  2441  120A  158A  	fcall	_SPI_MasterTransmit
  6417                           
  6418                           ;_25LC160B_EEPROM.c: 21: SPI_MasterTransmit(iAddress);
  6419  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0F0E  0825               	movf	EEPROM_Write@iAddress,w
  6422  0F0F  120A  158A  2441  120A  158A  	fcall	_SPI_MasterTransmit
  6423                           
  6424                           ;_25LC160B_EEPROM.c: 22: SPI_MasterTransmit(iData);
  6425  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  6427  0F16  0823               	movf	EEPROM_Write@iData,w
  6428  0F17  120A  158A  2441   	fcall	_SPI_MasterTransmit
  6429                           
  6430                           ;_25LC160B_EEPROM.c: 23: PORTAbits.RA5 = 1;
  6431  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  6432  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  6433  0F1C  1685               	bsf	5,5	;volatile
  6434  0F1D  0008               	return
  6435  0F1E                     __end_of_EEPROM_Write:	
  6436                           
  6437                           	psect	text34
  6438  0C41                     __ptext34:	
  6439 ;; *************** function _SPI_MasterTransmit *****************
  6440 ;; Defined at:
  6441 ;;		line 19 in file "spi_Init.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  iData           1    wreg     unsigned char 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  iData           1    4[COMMON] unsigned char 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       0       0       0
  6456 ;;      Locals:         1       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         1       0       0       0       0
  6459 ;;Total ram usage:        1 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    1
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_EEPROM_Write
  6466 ;;		_EEPROM_Read
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           
  6471                           ;psect for function _SPI_MasterTransmit
  6472  0C41                     _SPI_MasterTransmit:	
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in _SPI_MasterTransmit: [wreg]
  6476                           ;SPI_MasterTransmit@iData stored from wreg
  6477  0C41  00F4               	movwf	SPI_MasterTransmit@iData
  6478                           
  6479                           ;spi_Init.c: 20: SSPBUF = iData;
  6480  0C42  0874               	movf	SPI_MasterTransmit@iData,w
  6481  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  6483  0C45  0093               	movwf	19	;volatile
  6484  0C46                     l308:	
  6485                           ;spi_Init.c: 21: while(!PIR1bits.SSPIF);
  6486                           
  6487  0C46  198C               	btfsc	12,3	;volatile
  6488  0C47  0008               	return
  6489  0C48  2C46               	goto	l308
  6490  0C49                     __end_of_SPI_MasterTransmit:	
  6491                           
  6492                           	psect	text35
  6493  0D90                     __ptext35:	
  6494 ;; *************** function _ISR *****************
  6495 ;; Defined at:
  6496 ;;		line 22 in file "interrupt_Init.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		None
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6510 ;;      Params:         0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0
  6512 ;;      Temps:          4       0       0       0       0
  6513 ;;      Totals:         4       0       0       0       0
  6514 ;;Total ram usage:        4 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		Interrupt level 1
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function _ISR
  6525  0D90                     _ISR:	
  6526                           
  6527                           ;interrupt_Init.c: 23: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  6528  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  6529  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  6530  0D92  1E8C               	btfss	12,5	;volatile
  6531  0D93  2D99               	goto	i1l223
  6532  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  6533  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  6534  0D96  1E8C               	btfss	12,5	;volatile
  6535  0D97  2D99               	goto	i1l223
  6536                           
  6537                           ;interrupt_Init.c: 24: PIR1bits.RCIF = 0;
  6538  0D98  128C               	bcf	12,5	;volatile
  6539  0D99                     i1l223:	
  6540                           
  6541                           ;interrupt_Init.c: 25: }
  6542                           ;interrupt_Init.c: 26: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  6543  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  6544  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  6545  0D9B  1F0C               	btfss	12,6	;volatile
  6546  0D9C  2DA2               	goto	i1l224
  6547  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0D9F  1F0C               	btfss	12,6	;volatile
  6550  0DA0  2DA2               	goto	i1l224
  6551                           
  6552                           ;interrupt_Init.c: 27: PIR1bits.ADIF = 0;
  6553  0DA1  130C               	bcf	12,6	;volatile
  6554  0DA2                     i1l224:	
  6555                           
  6556                           ;interrupt_Init.c: 28: }
  6557                           ;interrupt_Init.c: 29: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  6558  0DA2  1A8B               	btfsc	11,5	;volatile
  6559  0DA3  1D0B               	btfss	11,2	;volatile
  6560  0DA4  2DA6               	goto	i1l225
  6561                           
  6562                           ;interrupt_Init.c: 30: INTCONbits.T0IF = 0;
  6563  0DA5  110B               	bcf	11,2	;volatile
  6564  0DA6                     i1l225:	
  6565                           
  6566                           ;interrupt_Init.c: 31: }
  6567                           ;interrupt_Init.c: 32: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  6568  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  6569  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  6570  0DA8  1D8C               	btfss	12,3	;volatile
  6571  0DA9  2DAF               	goto	i1l227
  6572  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  6574  0DAC  1D8C               	btfss	12,3	;volatile
  6575  0DAD  2DAF               	goto	i1l227
  6576                           
  6577                           ;interrupt_Init.c: 33: PIR1bits.SSPIF = 0;
  6578  0DAE  118C               	bcf	12,3	;volatile
  6579  0DAF                     i1l227:	
  6580  0DAF  0873               	movf	??_ISR+3,w
  6581  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  6582  0DB1  00FF               	movwf	127
  6583  0DB2  0872               	movf	??_ISR+2,w
  6584  0DB3  008A               	movwf	10
  6585  0DB4  0871               	movf	??_ISR+1,w
  6586  0DB5  0084               	movwf	4
  6587  0DB6  0E70               	swapf	??_ISR^(0+-128),w
  6588  0DB7  0083               	movwf	3
  6589  0DB8  0EFE               	swapf	126,f
  6590  0DB9  0E7E               	swapf	126,w
  6591  0DBA  0009               	retfie
  6592  0DBB                     __end_of_ISR:	
  6593  007E                     btemp	set	126	;btemp
  6594  007E                     wtemp0	set	126
  6595                           
  6596                           	psect	intentry
  6597  0004                     __pintentry:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _ISR: []
  6600                           
  6601  0004                     interrupt_function:	
  6602  007E                     saved_w	set	btemp
  6603  0004  00FE               	movwf	btemp
  6604  0005  0E03               	swapf	3,w
  6605  0006  00F0               	movwf	??_ISR
  6606  0007  0804               	movf	4,w
  6607  0008  00F1               	movwf	??_ISR+1
  6608  0009  080A               	movf	10,w
  6609  000A  00F2               	movwf	??_ISR+2
  6610  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6611  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6612  000D  087F               	movf	btemp+1,w
  6613  000E  00F3               	movwf	??_ISR+3
  6614  000F  120A  158A  2D90   	ljmp	_ISR


Data Sizes:
    Strings     4
    Constant    10
    Data        23
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     31      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    internal_eeprom_read@dataRead	PTR unsigned char  size(2) Largest target is 1
		 -> EEDATA(SFR2[1]), 

    EEPROM_Write@iData	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    Lcd_write@string	PTR unsigned char  size(1) Largest target is 13
		 -> sTemperature(BANK1[2]), temp_Display@TEMP(BANK1[13]), 


Critical Paths under _main in COMMON

    _temp_Measurement->___lwdiv
    _temp_Measurement->___lwtoft
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EEPROM_Write->_SPI_MasterTransmit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _temp_Display->_sprintf
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _EEPROM_Write->_internal_eeprom_read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   20241
                                             29 BANK1      2     2      0
                       _EEPROM_Write
               _internal_eeprom_read
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                        17    17      0   17413
                                             12 BANK1     17    17      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13825
                                             70 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              4 COMMON     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             56 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                             11 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             27 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             43 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2399
                                             77 BANK0      3     0      3
                                              0 BANK1     12    12      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     287
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            4     4      0     450
                                              3 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _internal_eeprom_read                                 3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         5     2      3     231
                                              3 BANK0      5     2      3
                 _SPI_MasterTransmit
               _internal_eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI_MasterTransmit                                   1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Write
     _SPI_MasterTransmit
     _internal_eeprom_read (ARG)
   _internal_eeprom_read
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1F      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      96      12        0.0%
ABS                  0      0      96       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 17 00:40:12 2019

             ??_Interrupt_Init 0074         __size_of_PWM_DutyCycle 006F                              pc 0002  
                  __CFG_CP$OFF 0000                             fsr 0004            ___wmul@multiplicand 0022  
                 ___ftadd@exp1 0057                   ___ftadd@exp2 0056                    __CFG_LVP$ON 0000  
                 ___ftadd@sign 0055                            l112 0CF5                            l113 0CF8  
                          l114 0CFC                            l115 0CFD                            l116 0D01  
                          l117 0D02                            l118 0D06                            l308 0C46  
                          l190 02E8                            l424 0128                            l519 0D53  
                          l711 0279                            l680 067A                            l771 05B9  
                          l687 068F                            l688 0697                            _PR2 0092  
                 __CFG_CPD$OFF 0000                            _ISR 0D90                            _adc 0076  
                          fsr0 0004                            indf 0000                   __CFG_IESO$ON 0000  
                 __CFG_FOSC$HS 0000                           ?_ISR 0070                   ___ftdiv@cntr 0045  
                 ___ftdiv@sign 004A                           l2000 05CA                           l2010 0723  
                         l2020 075B                           l2012 0733                           l2024 0768  
                         l2062 07D4                           l1352 0CE7                           l2064 07E2  
                         l2072 07FB                           l2330 064C                           l2404 0EA5  
                         l2068 07F0                           l2334 0653                           l2422 01FA  
                         l2408 0EBB                           l2600 0E56                           l2344 067F  
                         l2336 065F                           l2432 0210                           l2520 051F  
                         l2512 0500                           l2346 0689                           l2338 0664  
                         l2450 023F                           l2426 0201                           l2452 024B  
                         l2444 022A                           l2540 03E8                           l2390 0D49  
                         l2702 00C1                           l2462 0269                           l2454 0250  
                         l2534 03D2                           l2720 00F9                           l2704 00DA  
                         l2472 029D                           l2464 0275                           l2456 0254  
                         l2552 0427                           l2634 0FD7                           l2650 0D29  
                         l2714 00F3                           l2482 02C0                           l2468 028B  
                         l2492 04A5                           l2564 044F                           l2556 0437  
                         l2820 0D8A                           l2590 0E35                           l2750 0173  
                         l2734 0147                           l2726 011A                           l2670 03A7  
                         l1768 0C62                           l2744 0164                           l2736 014B  
                         l2760 0038                           l2568 045F                           l2664 0303  
                         l2738 014F                           l2762 01CA                           l2498 04BB  
                         l2674 03B8                           l2596 0E4B                           l2588 0E27  
                         l2692 0073                           l2758 0177                           l2686 005C  
                         l1968 055F                           l1994 05AE                           l1986 0591  
                         l1996 05BC                           l1988 05A1                           STR_1 0810  
                         u1050 0CE4                           u3005 0DF7                           u3025 0D54  
                         u3035 0D5B                           u2405 075C                           u2325 05B0  
                         u2505 07D7                           u3225 0240                           u2265 0566  
                         u3075 0EBD                           u2365 0727                           u3085 0EC5  
                         u2525 07E8                           u3405 0520                           u2535 07F1  
                         u3255 0255                           u2295 0592                           u2385 0735  
                         u2395 074A                           u2555 0F2C                           u3195 022B  
                         u3605 0E42                           u3285 026A                           u3365 04CD  
                         u3445 03F4                           u3615 0E4C                           u3375 04DF  
                         u3535 0460                           u3455 0406                           u2585 0E8D  
                         u2905 0658                           u3385 0501                           u3545 0468  
                         u3635 0620                           u3395 0512                           u3715 0301  
                         u3645 0637                           u2925 0673                           u3485 0438  
                         u3575 0E2A                           u3495 0440                           u3735 03B6  
                         u3665 0FBC                           u2945 0682                           u3595 0E36  
                         u3835 0137                           u3907 02E0                           u3685 0FE5  
                         u3917 0E07                           u3927 0E17                           u3937 06BC  
                         u2985 069E                           u3890 077B                           u3947 06CD  
                         u3795 0110                           u3957 06DE                           u3967 0D1B  
                         u3977 0EEE                           u3987 0EFB                           _TMR0 0001  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                           _main 0D6A  
                 ___ftpack@arg 0020                   ___ftpack@exp 0023                           btemp 007E  
             __end_of_ADC_Init 0CEE             _SPI_MasterTransmit 0C41                           start 0012  
        _temp_Measurement$1581 0068                __end_of_Lcd_Cmd 0D24                  __CFG_MCLRE$ON 0000  
                 ___ftmul@cntr 0039                   ___ftmul@sign 003A              ??_Oscillator_Init 0074  
          ?_SPI_MasterTransmit 0070                          ??_ISR 0070                   ___fttol@exp1 0065  
         __end_of_EEPROM_Write 0F1E                   ___fttol@lval 0061                          ?_main 0070  
                        _EEADR 010D                __end_of___ftadd 02DA                  __CFG_WDTE$OFF 0000  
              __end_of___ftdiv 0545                __end_of___lldiv 0771                __end_of___ftmul 048D  
              __end_of___fttol 05D3                __end_of___lwdiv 0E5B                          i1l223 0D99  
                        i1l224 0DA2                          i1l225 0DA6                          i1l227 0DAF  
              __end_of___lwmod 0800                          _RCREG 001A         ??_internal_eeprom_read 0074  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTC 0007                          _PORTD 0008                          _PORTE 0009  
      __size_of_Lcd_Set_Cursor 0052                          _TRISB 0086                          _TRISD 0088  
                        _TXREG 0019            ___lmul@multiplicand 0024             __size_of_UART_Init 0040  
           __size_of_TMR0_Init 000F                  _PWM_DutyCycle 05D3           ??_SPI_MasterTransmit 0074  
              __end_of_dpowers 0810                __end_of_isdigit 0C64                  ___ftpack@sign 0024  
             __end_of_SPI_Init 0C56                 __CFG_BOREN$OFF 0000                          pclath 000A  
             __end_of_PWM_Init 0F63                          status 0003                          wtemp0 007E  
              __end_of_sprintf 01D1               __end_of_Lcd_Init 0711               __end_of_Lcd_Port 0D08  
              __initialization 0015                   __end_of_main 0D90                         ??_main 00BD  
                ___fttol@sign1 0060                 ?_PWM_DutyCycle 0039             __size_of_Lcd_write 0023  
                       _ADRESH 001E                         _ADRESL 009E                         _EEDATA 010C  
                       _CCPR1L 0015               __end_of___ftpack 06B0                         _ANSELH 0189  
             __end_of___lwtoft 0CD5                         _OSCCON 008F                      ??_Lcd_Cmd 0020  
      __size_of_Lcd_Write_Char 0037        SPI_MasterTransmit@iData 0074                         _SSPBUF 0013  
               __CFG_PWRTE$OFF 0000              __end_of_UART_Init 0E9B              __end_of_TMR0_Init 0C82  
                       ___lmul 0E9B                         ___wmul 0D47                      ??___ftadd 0051  
                    ??___ftdiv 0041                      ??___lldiv 0075                      ??___ftmul 0031  
                    ??___fttol 005C                      ??___lwdiv 0074                      ??___lwmod 0075  
        ___ftmul@f3_as_product 0036              ?_temp_Measurement 0070                      ??_isdigit 0074  
                    ?_ADC_Init 0070                         saved_w 007E             ??_temp_Measurement 0066  
                    ??_sprintf 00A0                Lcd_Set_Cursor@y 0027                Lcd_Set_Cursor@z 0026  
            EEPROM_Write@iData 0023        __end_of__initialization 002D                     ___ftadd@f1 004B  
                   ___ftadd@f2 004E                     ___ftdiv@f1 003E                     ___ftdiv@f2 003B  
                   ___ftdiv@f3 0046          __size_of_EEPROM_Write 0042                     ___ftmul@f1 002B  
                   ___ftmul@f2 002E                     ___fttol@f1 0058                 __pcstackCOMMON 0070  
                 __pidataBANK1 0CA6              __end_of_Lcd_write 0D47   internal_eeprom_read@dataRead 0020  
                    ?_SPI_Init 0070                     ___lwtoft@c 0028                      ?_PWM_Init 0039  
               _Lcd_Set_Cursor 0FAE                ??_PWM_DutyCycle 003D                 _OPTION_REGbits 0081  
                   ??_ADC_Init 0074                      ?_Lcd_Init 0070                      ?_Lcd_Port 0070  
                 sprintf@width 00A9                   _EEPROM_Write 0EDC                     __pbssBANK1 00D6  
              _Oscillator_Init 0C3C                     __pmaintext 0D6A                        ?___lmul 0020  
                      ?___wmul 0020                     __pintentry 0004                 ___lmul@product 0028  
                    ?___ftpack 0020         __end_of_Lcd_Set_Cursor 1000                     ??_SPI_Init 0074  
                   ??_PWM_Init 003D                      ?___lwtoft 0028                        _GO_DONE 00F9  
                      _OSCTUNE 0090                     ??_Lcd_Init 0022                     ??_Lcd_Port 0074  
                   __stringtab 0800                 _Lcd_Write_Char 0DE6                        _Lcd_Cmd 0D08  
                ?_temp_Display 0070                __size_of___lmul 0041                        ___ftadd 01D1  
                      ___ftdiv 048D                        ___lldiv 0711                __size_of___wmul 0023  
                      ___ftmul 03BA                        ___fttol 0545                        ___lwdiv 0E1D  
                      ___lwmod 07CC                     ??___ftpack 0025                      _ANSELbits 0188  
              ?_Lcd_Set_Cursor 0022                        __ptext1 0771                        __ptext2 02DA  
                      __ptext3 0CBD                        __ptext4 0545                        __ptext5 03BA  
                      __ptext6 048D                        __ptext7 01D1                        __ptext8 0642  
                      __ptext9 0031                        _g_state 0079                     ??___lwtoft 0074  
                   _pinManager 0DBB                   __size_of_ISR 002B                        _dpowers 0806  
                    _T2CONbits 0012                        _rawData 00D6        __size_of_Interrupt_Init 000F  
                      _isdigit 0C56        __end_of_Oscillator_Init 0C41  __size_of_internal_eeprom_read 0013  
  __size_of_SPI_MasterTransmit 0008                        _sprintf 0031         __end_of_Lcd_Write_Char 0E1D  
         end_of_initialization 002D                 ??_temp_Display 00AC                ___lldiv@divisor 002C  
             temp_Display@TEMP 00B0                ___lldiv@counter 0038                      _RCSTAbits 0018  
                    Lcd_Port@a 0074                      _UART_Init 0E5B                      _TMR0_Init 0C73  
                    _PORTAbits 0005                      _PORTBbits 0006                      _TRISAbits 0085  
                    _TRISBbits 0086                      _TRISCbits 0087             PWM_Init@iFrequency 0039  
            _system_Initialize 0F63              __size_of_ADC_Init 0019             ?_system_Initialize 0070  
              ?_Lcd_Write_Char 0070                    _CCP1CONbits 0017                    ___ftdiv@exp 0049  
    __size_of_temp_Measurement 00E0                      _TXSTAbits 0098                   _sTemperature 00DA  
          ??_system_Initialize 0076                    ___ftmul@exp 0035                 __end_of___lmul 0EDC  
               __end_of___wmul 0D6A                     ?_UART_Init 0039                    _BAUDCTLbits 0187  
                   ?_TMR0_Init 0070                      _Lcd_write 0D24                    ?_pinManager 0070  
    __end_of_system_Initialize 0FAE              __size_of_SPI_Init 000D              __size_of_PWM_Init 0045  
          start_initialization 0015               ?_Oscillator_Init 0070                    __end_of_ISR 0DBB  
            __size_of_Lcd_Init 0061              __size_of_Lcd_Port 001A                       ??___lmul 0074  
                     ??___wmul 0074                     init_fetch0 0C82                    __pdataBANK1 00BF  
              Lcd_Write_Char@a 0022                Lcd_Write_Char@y 0021                  _segment_Array 00CC  
         __end_of_temp_Display 07CC                     ?_Lcd_write 0070         temp_Measurement@sample 006B  
               _Interrupt_Init 0C64              __size_of___ftpack 006E                    __pbssCOMMON 0076  
                    ___latbits 0002              __size_of___lwtoft 0018                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0          __end_of_PWM_DutyCycle 0642                   _isdigit$1336 0074  
                     ?_Lcd_Cmd 0070                    sprintf@flag 00A5                    sprintf@prec 00A4  
          __size_of_pinManager 002B               ___lwdiv@dividend 0022               ??_Lcd_Set_Cursor 0023  
                     ?___ftadd 004B                       ?___ftdiv 003B                       ?___lldiv 002C  
                     ?___ftmul 002B                       ?___fttol 0058                       ?___lwdiv 0020  
                     ?___lwmod 0027                    ??_UART_Init 003B         __end_of_Interrupt_Init 0C73  
                  ??_TMR0_Init 0074                      __pstrings 0800     __size_of_system_Initialize 004B  
                     ?_isdigit 0070                Lcd_write@string 0026                       _ADC_Init 0CD5  
      PWM_DutyCycle@iDutyCycle 0039               ___lwdiv@quotient 0025                       ?_sprintf 006D  
            interrupt_function 0004                 ___wmul@product 0074               _temp_Measurement 02DA  
                     _PIE1bits 008C   __end_of_internal_eeprom_read 0CA6                       Lcd_Cmd@a 0075  
                     _PIR1bits 000C              UART_Init@baudRate 0039                       _SPI_Init 0C49  
              ?_Interrupt_Init 0070                    ??_Lcd_write 0023                     _ADCON0bits 001F  
                  __stringbase 0805                     _ADCON1bits 009F                       _PWM_Init 0F1E  
            ___wmul@multiplier 0020               ??_Lcd_Write_Char 0075     __end_of_SPI_MasterTransmit 0C49  
                     _Lcd_Init 06B0                       _Lcd_Port 0CEE              ___lmul@multiplier 0020  
         Lcd_Set_Cursor@column 0022               __size_of_Lcd_Cmd 001C                     _EECON1bits 018C  
        __size_of_temp_Display 005B               __size_of___ftadd 0109               __size_of___ftdiv 00B8  
             __size_of___lldiv 0060               __size_of___ftmul 00D3               __size_of___fttol 008E  
             __size_of___lwdiv 003E               __size_of___lwmod 0034                       ___ftpack 0642  
           __end_of__stringtab 0806                   ??_pinManager 0074                       ___lwtoft 0CBD  
                   sprintf@val 00A6               __size_of_isdigit 000E                ___lwdiv@divisor 0020  
              ___lwdiv@counter 0024                       __ptext10 0C56                       __ptext11 0D47  
                     __ptext20 0C73                       __ptext12 07CC                       __ptext21 0C49  
                     __ptext13 0E1D                       __ptext30 0C64                       __ptext22 0F1E  
                     __ptext14 0D24                       __ptext31 0CD5                       __ptext23 05D3  
                     __ptext15 0DE6                       __ptext32 0C93                       __ptext24 0E9B  
                     __ptext16 0FAE                       __ptext33 0EDC                       __ptext25 0711  
                     __ptext17 0F63                       __ptext34 0C41                       __ptext26 0C3C  
                     __ptext18 0DBB                       __ptext35 0D90                       __ptext27 06B0  
                     __ptext19 0E5B                       __ptext28 0D08                       __ptext29 0CEE  
            __CFG_BOR4V$BOR40V 0000                  ?_EEPROM_Write 0023               __size_of_sprintf 01A0  
                __size_of_main 0026                   _temp_Display 0771             __end_of_pinManager 0DE6  
                   _INTCONbits 000B           _internal_eeprom_read 0C93                       init_ram0 0C86  
                     isdigit@c 0075                 ??_EEPROM_Write 0026             Lcd_Write_Char@temp 0020  
                     intlevel1 0000       internal_eeprom_read@addr 0022                      sprintf@ap 00A3  
            temp_Display@F2022 00BF                      sprintf@sp 00A8       __size_of_Oscillator_Init 0005  
             ___lwmod@dividend 0029               ___lldiv@dividend 0030                      stringcode 0800  
           Lcd_Set_Cursor@temp 0028       __end_of_temp_Measurement 03BA                    _temperature 0078  
                     sprintf@c 00AB                       sprintf@f 006D               ___lldiv@quotient 0034  
              ___lwmod@divisor 0027               _segment_Variable 00D8                ___lwmod@counter 002B  
        ?_internal_eeprom_read 0070                       stringdir 0800                       stringtab 0800  
         EEPROM_Write@iAddress 0025              Lcd_Set_Cursor@raw 0025                     Lcd_write@i 0024  
                   _SSPCONbits 0014  
