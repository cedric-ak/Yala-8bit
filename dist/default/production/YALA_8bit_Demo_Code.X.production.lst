

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 18 16:53:28 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0000                     	;# 
   476  0001                     	;# 
   477  0002                     	;# 
   478  0003                     	;# 
   479  0004                     	;# 
   480  0005                     	;# 
   481  0006                     	;# 
   482  0007                     	;# 
   483  0008                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0088                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  0105                     	;# 
   539  0107                     	;# 
   540  0108                     	;# 
   541  0109                     	;# 
   542  010C                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0187                     	;# 
   549  0188                     	;# 
   550  0189                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  000E                     	;# 
   569  000F                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  0081                     	;# 
   589  0085                     	;# 
   590  0086                     	;# 
   591  0087                     	;# 
   592  0088                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  0081                     	;# 
   667  0085                     	;# 
   668  0086                     	;# 
   669  0087                     	;# 
   670  0088                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  0105                     	;# 
   695  0107                     	;# 
   696  0108                     	;# 
   697  0109                     	;# 
   698  010C                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  0185                     	;# 
   704  0187                     	;# 
   705  0188                     	;# 
   706  0189                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  000E                     	;# 
   724  000E                     	;# 
   725  000F                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0014                     	;# 
   731  0015                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001B                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  0081                     	;# 
   745  0085                     	;# 
   746  0086                     	;# 
   747  0087                     	;# 
   748  0088                     	;# 
   749  0089                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  0105                     	;# 
   773  0107                     	;# 
   774  0108                     	;# 
   775  0109                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0185                     	;# 
   782  0187                     	;# 
   783  0188                     	;# 
   784  0189                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000D                     	;# 
   801  000E                     	;# 
   802  000E                     	;# 
   803  000F                     	;# 
   804  0010                     	;# 
   805  0011                     	;# 
   806  0012                     	;# 
   807  0013                     	;# 
   808  0014                     	;# 
   809  0015                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0017                     	;# 
   813  0018                     	;# 
   814  0019                     	;# 
   815  001A                     	;# 
   816  001B                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  001D                     	;# 
   820  001E                     	;# 
   821  001F                     	;# 
   822  0081                     	;# 
   823  0085                     	;# 
   824  0086                     	;# 
   825  0087                     	;# 
   826  0088                     	;# 
   827  0089                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  008F                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0093                     	;# 
   837  0093                     	;# 
   838  0094                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0097                     	;# 
   842  0098                     	;# 
   843  0099                     	;# 
   844  009A                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  0105                     	;# 
   851  0107                     	;# 
   852  0108                     	;# 
   853  0109                     	;# 
   854  010C                     	;# 
   855  010C                     	;# 
   856  010D                     	;# 
   857  010E                     	;# 
   858  010F                     	;# 
   859  0185                     	;# 
   860  0187                     	;# 
   861  0188                     	;# 
   862  0189                     	;# 
   863  018C                     	;# 
   864  018D                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  000E                     	;# 
   880  000E                     	;# 
   881  000F                     	;# 
   882  0010                     	;# 
   883  0011                     	;# 
   884  0012                     	;# 
   885  0013                     	;# 
   886  0014                     	;# 
   887  0015                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0017                     	;# 
   891  0018                     	;# 
   892  0019                     	;# 
   893  001A                     	;# 
   894  001B                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001D                     	;# 
   898  001E                     	;# 
   899  001F                     	;# 
   900  0081                     	;# 
   901  0085                     	;# 
   902  0086                     	;# 
   903  0087                     	;# 
   904  0088                     	;# 
   905  0089                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  008E                     	;# 
   909  008F                     	;# 
   910  0090                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0093                     	;# 
   915  0093                     	;# 
   916  0094                     	;# 
   917  0095                     	;# 
   918  0096                     	;# 
   919  0097                     	;# 
   920  0098                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009C                     	;# 
   925  009D                     	;# 
   926  009E                     	;# 
   927  009F                     	;# 
   928  0105                     	;# 
   929  0107                     	;# 
   930  0108                     	;# 
   931  0109                     	;# 
   932  010C                     	;# 
   933  010C                     	;# 
   934  010D                     	;# 
   935  010E                     	;# 
   936  010F                     	;# 
   937  0185                     	;# 
   938  0187                     	;# 
   939  0188                     	;# 
   940  0189                     	;# 
   941  018C                     	;# 
   942  018D                     	;# 
   943  0000                     	;# 
   944  0001                     	;# 
   945  0002                     	;# 
   946  0003                     	;# 
   947  0004                     	;# 
   948  0005                     	;# 
   949  0006                     	;# 
   950  0007                     	;# 
   951  0008                     	;# 
   952  0009                     	;# 
   953  000A                     	;# 
   954  000B                     	;# 
   955  000C                     	;# 
   956  000D                     	;# 
   957  000E                     	;# 
   958  000E                     	;# 
   959  000F                     	;# 
   960  0010                     	;# 
   961  0011                     	;# 
   962  0012                     	;# 
   963  0013                     	;# 
   964  0014                     	;# 
   965  0015                     	;# 
   966  0015                     	;# 
   967  0016                     	;# 
   968  0017                     	;# 
   969  0018                     	;# 
   970  0019                     	;# 
   971  001A                     	;# 
   972  001B                     	;# 
   973  001B                     	;# 
   974  001C                     	;# 
   975  001D                     	;# 
   976  001E                     	;# 
   977  001F                     	;# 
   978  0081                     	;# 
   979  0085                     	;# 
   980  0086                     	;# 
   981  0087                     	;# 
   982  0088                     	;# 
   983  0089                     	;# 
   984  008C                     	;# 
   985  008D                     	;# 
   986  008E                     	;# 
   987  008F                     	;# 
   988  0090                     	;# 
   989  0091                     	;# 
   990  0092                     	;# 
   991  0093                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0094                     	;# 
   995  0095                     	;# 
   996  0096                     	;# 
   997  0097                     	;# 
   998  0098                     	;# 
   999  0099                     	;# 
  1000  009A                     	;# 
  1001  009B                     	;# 
  1002  009C                     	;# 
  1003  009D                     	;# 
  1004  009E                     	;# 
  1005  009F                     	;# 
  1006  0105                     	;# 
  1007  0107                     	;# 
  1008  0108                     	;# 
  1009  0109                     	;# 
  1010  010C                     	;# 
  1011  010C                     	;# 
  1012  010D                     	;# 
  1013  010E                     	;# 
  1014  010F                     	;# 
  1015  0185                     	;# 
  1016  0187                     	;# 
  1017  0188                     	;# 
  1018  0189                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021                           
  1022                           	psect	idataBANK1
  1023  0CAA                     __pidataBANK1:	
  1024                           
  1025                           ;initializer for _segment_Array
  1026  0CAA  343F               	retlw	63
  1027  0CAB  3406               	retlw	6
  1028  0CAC  345B               	retlw	91
  1029  0CAD  344F               	retlw	79
  1030  0CAE  3466               	retlw	102
  1031  0CAF  346D               	retlw	109
  1032  0CB0  347D               	retlw	125
  1033  0CB1  3407               	retlw	7
  1034  0CB2  347F               	retlw	127
  1035  0CB3  346F               	retlw	111
  1036                           
  1037                           	psect	strings
  1038  0800                     __pstrings:	
  1039  0800                     stringtab:	
  1040  0800                     __stringtab:	
  1041                           
  1042                           ;	String table - string pointers are 1 byte each
  1043  0800  1BFF               	btfsc	btemp+1,7
  1044  0801  280A               	ljmp	stringcode
  1045  0802  1383               	bcf	3,7
  1046  0803  187F               	btfsc	btemp+1,0
  1047  0804  1783               	bsf	3,7
  1048  0805  0800               	movf	0,w
  1049  0806  0A84               	incf	4,f
  1050  0807  1903               	skipnz
  1051  0808  0AFF               	incf	btemp+1,f
  1052  0809  0008               	return
  1053  080A                     stringcode:	
  1054  080A                     stringdir:	
  1055  080A  3008               	movlw	high stringdir
  1056  080B  008A               	movwf	10
  1057  080C  0804               	movf	4,w
  1058  080D  0A84               	incf	4,f
  1059  080E  0782               	addwf	2,f
  1060  080F                     __stringbase:	
  1061  080F  3400               	retlw	0
  1062  0810                     __end_of__stringtab:	
  1063  0810                     _dpowers:	
  1064  0810  3401               	retlw	1
  1065  0811  3400               	retlw	0
  1066  0812  340A               	retlw	10
  1067  0813  3400               	retlw	0
  1068  0814  3464               	retlw	100
  1069  0815  3400               	retlw	0
  1070  0816  34E8               	retlw	232
  1071  0817  3403               	retlw	3
  1072  0818  3410               	retlw	16
  1073  0819  3427               	retlw	39
  1074  081A                     __end_of_dpowers:	
  1075  0001                     _TMR0	set	1
  1076  001A                     _RCREG	set	26
  1077  0019                     _TXREG	set	25
  1078  0018                     _RCSTAbits	set	24
  1079  0014                     _SSPCONbits	set	20
  1080  0005                     _PORTAbits	set	5
  1081  0012                     _T2CONbits	set	18
  1082  0015                     _CCPR1L	set	21
  1083  0017                     _CCP1CONbits	set	23
  1084  000B                     _INTCONbits	set	11
  1085  001E                     _ADRESH	set	30
  1086  000C                     _PIR1bits	set	12
  1087  001F                     _ADCON0bits	set	31
  1088  0006                     _PORTBbits	set	6
  1089  0009                     _PORTE	set	9
  1090  0008                     _PORTD	set	8
  1091  0007                     _PORTC	set	7
  1092  0006                     _PORTB	set	6
  1093  0005                     _PORTA	set	5
  1094  0013                     _SSPBUF	set	19
  1095  00F9                     _GO_DONE	set	249
  1096  0081                     _OPTION_REGbits	set	129
  1097  0099                     _SPBRG	set	153
  1098  0098                     _TXSTAbits	set	152
  1099  0092                     _PR2	set	146
  1100  008C                     _PIE1bits	set	140
  1101  009E                     _ADRESL	set	158
  1102  009F                     _ADCON1bits	set	159
  1103  0090                     _OSCTUNE	set	144
  1104  008F                     _OSCCON	set	143
  1105  0085                     _TRISAbits	set	133
  1106  0087                     _TRISCbits	set	135
  1107  0086                     _TRISBbits	set	134
  1108  0086                     _TRISB	set	134
  1109  0088                     _TRISD	set	136
  1110  010D                     _EEADR	set	269
  1111  010C                     _EEDATA	set	268
  1112  018C                     _EECON1bits	set	396
  1113  0187                     _BAUDCTLbits	set	391
  1114  0188                     _ANSELbits	set	392
  1115  0189                     _ANSELH	set	393
  1116  081A                     STR_1:	
  1117  081A  3454               	retlw	84	;'T'
  1118  081B  3465               	retlw	101	;'e'
  1119  081C  346D               	retlw	109	;'m'
  1120  081D  3470               	retlw	112	;'p'
  1121  081E  3465               	retlw	101	;'e'
  1122  081F  3472               	retlw	114	;'r'
  1123  0820  3461               	retlw	97	;'a'
  1124  0821  3474               	retlw	116	;'t'
  1125  0822  3475               	retlw	117	;'u'
  1126  0823  3472               	retlw	114	;'r'
  1127  0824  3465               	retlw	101	;'e'
  1128  0825  343A               	retlw	58	;':'
  1129  0826  3400               	retlw	0
  1130  0827                     STR_2:	
  1131  0827  3425               	retlw	37	;'%'
  1132  0828  3433               	retlw	51	;'3'
  1133  0829  3464               	retlw	100	;'d'
  1134  082A  3400               	retlw	0
  1135                           
  1136                           ; #config settings
  1137  0000                     
  1138                           	psect	cinit
  1139  0015                     start_initialization:	
  1140  0015                     __initialization:	
  1141                           
  1142                           ; Initialize objects allocated to BANK1
  1143  0015  1383               	bcf	3,7	;select IRP bank0
  1144  0016  30B9               	movlw	low (__pdataBANK1+10)
  1145  0017  00FD               	movwf	btemp+-1
  1146  0018  300C               	movlw	high __pidataBANK1
  1147  0019  00FE               	movwf	btemp
  1148  001A  30AA               	movlw	low __pidataBANK1
  1149  001B  00FF               	movwf	btemp+1
  1150  001C  30AF               	movlw	low __pdataBANK1
  1151  001D  0084               	movwf	4
  1152  001E  120A  158A  24FC   	fcall	init_ram0
  1153                           
  1154                           ; Clear objects allocated to BANK1
  1155  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0023  01B9               	clrf	__pbssBANK1& (0+127)
  1158  0024  01BA               	clrf	(__pbssBANK1+1)& (0+127)
  1159  0025  01BB               	clrf	(__pbssBANK1+2)& (0+127)
  1160  0026  01BC               	clrf	(__pbssBANK1+3)& (0+127)
  1161  0027  01BD               	clrf	(__pbssBANK1+4)& (0+127)
  1162  0028  01BE               	clrf	(__pbssBANK1+5)& (0+127)
  1163                           
  1164                           ; Clear objects allocated to BANK0
  1165  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1166  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1167  002B  01EF               	clrf	__pbssBANK0& (0+127)
  1168                           
  1169                           ; Clear objects allocated to COMMON
  1170  002C  01F7               	clrf	__pbssCOMMON& (0+127)
  1171  002D  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1172  002E  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1173  002F                     end_of_initialization:	
  1174                           ;End of C runtime variable initialization code
  1175                           
  1176  002F                     __end_of__initialization:	
  1177  002F  0183               	clrf	3
  1178  0030  120A  158A  2CB4   	ljmp	_main	;jump to C main() function
  1179                           
  1180                           	psect	bssCOMMON
  1181  0077                     __pbssCOMMON:	
  1182  0077                     _adc:	
  1183  0077                     	ds	2
  1184  0079                     _g_state:	
  1185  0079                     	ds	1
  1186                           
  1187                           	psect	bssBANK0
  1188  006F                     __pbssBANK0:	
  1189  006F                     _temperature:	
  1190  006F                     	ds	1
  1191                           
  1192                           	psect	bssBANK1
  1193  00B9                     __pbssBANK1:	
  1194  00B9                     _rawData:	
  1195  00B9                     	ds	2
  1196  00BB                     _segment_Variable:	
  1197  00BB                     	ds	2
  1198  00BD                     _sTemperature:	
  1199  00BD                     	ds	2
  1200                           
  1201                           	psect	dataBANK1
  1202  00AF                     __pdataBANK1:	
  1203  00AF                     _segment_Array:	
  1204  00AF                     	ds	10
  1205                           
  1206                           	psect	inittext
  1207  0CF8                     init_fetch0:	
  1208                           ;	Called with low address in FSR and high address in W
  1209                           
  1210  0CF8  087E               	movf	126,w
  1211  0CF9  008A               	movwf	10
  1212  0CFA  087F               	movf	127,w
  1213  0CFB  0082               	movwf	2
  1214  0CFC                     init_ram0:	
  1215                           ;Called with:
  1216                           ;	high address of idata address in btemp 
  1217                           ;	low address of idata address in btemp+1 
  1218                           ;	low address of data in FSR
  1219                           ;	high address + 1 of data in btemp-1
  1220                           
  1221  0CFC  24F8  120A  158A   	fcall	init_fetch0
  1222  0CFF  0080               	movwf	0
  1223  0D00  0A84               	incf	4,f
  1224  0D01  0804               	movf	4,w
  1225  0D02  067D               	xorwf	125,w
  1226  0D03  1903               	btfsc	3,2
  1227  0D04  3400               	retlw	0
  1228  0D05  0AFF               	incf	127,f
  1229  0D06  1903               	btfsc	3,2
  1230  0D07  0AFE               	incf	126,f
  1231  0D08  2CFC               	goto	init_ram0
  1232                           
  1233                           	psect	cstackBANK1
  1234  00A0                     __pcstackBANK1:	
  1235  00A0                     ??_sprintf:	
  1236                           
  1237                           ; 1 bytes @ 0x0
  1238  00A0                     	ds	3
  1239  00A3                     sprintf@ap:	
  1240                           
  1241                           ; 1 bytes @ 0x3
  1242  00A3                     	ds	1
  1243  00A4                     sprintf@prec:	
  1244                           
  1245                           ; 1 bytes @ 0x4
  1246  00A4                     	ds	1
  1247  00A5                     sprintf@flag:	
  1248                           
  1249                           ; 1 bytes @ 0x5
  1250  00A5                     	ds	1
  1251  00A6                     sprintf@val:	
  1252                           
  1253                           ; 2 bytes @ 0x6
  1254  00A6                     	ds	2
  1255  00A8                     sprintf@sp:	
  1256                           
  1257                           ; 1 bytes @ 0x8
  1258  00A8                     	ds	1
  1259  00A9                     sprintf@width:	
  1260                           
  1261                           ; 2 bytes @ 0x9
  1262  00A9                     	ds	2
  1263  00AB                     sprintf@c:	
  1264                           
  1265                           ; 1 bytes @ 0xB
  1266  00AB                     	ds	1
  1267  00AC                     ??_temp_Display:	
  1268                           
  1269                           ; 1 bytes @ 0xC
  1270  00AC                     	ds	3
  1271                           
  1272                           	psect	cstackCOMMON
  1273  0070                     __pcstackCOMMON:	
  1274  0070                     ?_isdigit:	
  1275  0070                     ?_system_Initialize:	
  1276                           ; 1 bit 
  1277                           
  1278  0070                     ?_temp_Display:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_Oscillator_Init:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_Interrupt_Init:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_Lcd_Init:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_ADC_Init:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_TMR0_Init:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_SPI_Init:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_pinManager:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_Lcd_Port:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_Lcd_Cmd:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_Lcd_Write_Char:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_temp_Measurement:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_ISR:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ??_ISR:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_main:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323                           
  1324                           ; 2 bytes @ 0x0
  1325  0070                     	ds	4
  1326  0074                     ??_Oscillator_Init:	
  1327  0074                     ??_Interrupt_Init:	
  1328                           ; 1 bytes @ 0x4
  1329                           
  1330  0074                     ??_ADC_Init:	
  1331                           ; 1 bytes @ 0x4
  1332                           
  1333  0074                     ??_TMR0_Init:	
  1334                           ; 1 bytes @ 0x4
  1335                           
  1336  0074                     ??_SPI_Init:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339  0074                     ??_isdigit:	
  1340                           ; 1 bytes @ 0x4
  1341                           
  1342  0074                     ??___ftpack:	
  1343                           ; 1 bytes @ 0x4
  1344                           
  1345  0074                     ??_pinManager:	
  1346                           ; 1 bytes @ 0x4
  1347                           
  1348  0074                     ??_Lcd_Port:	
  1349                           ; 1 bytes @ 0x4
  1350                           
  1351  0074                     ??___wmul:	
  1352                           ; 1 bytes @ 0x4
  1353                           
  1354  0074                     ??___lmul:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357  0074                     ??___lwdiv:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360  0074                     Lcd_Port@a:	
  1361                           ; 1 bytes @ 0x4
  1362                           
  1363  0074                     _isdigit$1326:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366  0074                     ___wmul@product:	
  1367                           ; 1 bytes @ 0x4
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x4
  1371  0074                     	ds	1
  1372  0075                     ??_Lcd_Cmd:	
  1373  0075                     ??_Lcd_Write_Char:	
  1374                           ; 1 bytes @ 0x5
  1375                           
  1376  0075                     ??___lldiv:	
  1377                           ; 1 bytes @ 0x5
  1378                           
  1379  0075                     ??___lwmod:	
  1380                           ; 1 bytes @ 0x5
  1381                           
  1382  0075                     isdigit@c:	
  1383                           ; 1 bytes @ 0x5
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x5
  1387  0075                     	ds	1
  1388  0076                     ___lwmod@counter:	
  1389                           
  1390                           ; 1 bytes @ 0x6
  1391  0076                     	ds	1
  1392  0077                     ??_system_Initialize:	
  1393  0077                     ??_main:	
  1394                           ; 1 bytes @ 0x7
  1395                           
  1396                           
  1397                           	psect	cstackBANK0
  1398  0020                     __pcstackBANK0:	
  1399                           ; 1 bytes @ 0x7
  1400                           
  1401  0020                     ?___wmul:	
  1402  0020                     ?___lwdiv:	
  1403                           ; 2 bytes @ 0x0
  1404                           
  1405  0020                     ?___ftpack:	
  1406                           ; 2 bytes @ 0x0
  1407                           
  1408  0020                     ?___lmul:	
  1409                           ; 3 bytes @ 0x0
  1410                           
  1411  0020                     Lcd_Cmd@a:	
  1412                           ; 4 bytes @ 0x0
  1413                           
  1414  0020                     Lcd_Write_Char@temp:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0020                     ___wmul@multiplier:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0020                     ___lwdiv@divisor:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423  0020                     ___ftpack@arg:	
  1424                           ; 2 bytes @ 0x0
  1425                           
  1426  0020                     ___lmul@multiplier:	
  1427                           ; 3 bytes @ 0x0
  1428                           
  1429                           
  1430                           ; 4 bytes @ 0x0
  1431  0020                     	ds	1
  1432  0021                     ??_Lcd_Init:	
  1433  0021                     ?_Lcd_Set_Cursor:	
  1434                           ; 1 bytes @ 0x1
  1435                           
  1436  0021                     Lcd_Set_Cursor@column:	
  1437                           ; 1 bytes @ 0x1
  1438                           
  1439  0021                     Lcd_Write_Char@y:	
  1440                           ; 1 bytes @ 0x1
  1441                           
  1442                           
  1443                           ; 1 bytes @ 0x1
  1444  0021                     	ds	1
  1445  0022                     ??_Lcd_Set_Cursor:	
  1446  0022                     Lcd_Write_Char@a:	
  1447                           ; 1 bytes @ 0x2
  1448                           
  1449  0022                     ___wmul@multiplicand:	
  1450                           ; 1 bytes @ 0x2
  1451                           
  1452  0022                     ___lwdiv@dividend:	
  1453                           ; 2 bytes @ 0x2
  1454                           
  1455                           
  1456                           ; 2 bytes @ 0x2
  1457  0022                     	ds	1
  1458  0023                     ?_Lcd_write:	
  1459  0023                     ___ftpack@exp:	
  1460                           ; 1 bytes @ 0x3
  1461                           
  1462  0023                     Lcd_write@string:	
  1463                           ; 1 bytes @ 0x3
  1464                           
  1465                           
  1466                           ; 2 bytes @ 0x3
  1467  0023                     	ds	1
  1468  0024                     Lcd_Set_Cursor@raw:	
  1469  0024                     ___ftpack@sign:	
  1470                           ; 1 bytes @ 0x4
  1471                           
  1472  0024                     ___lwdiv@counter:	
  1473                           ; 1 bytes @ 0x4
  1474                           
  1475  0024                     ___lmul@multiplicand:	
  1476                           ; 1 bytes @ 0x4
  1477                           
  1478                           
  1479                           ; 4 bytes @ 0x4
  1480  0024                     	ds	1
  1481  0025                     ??_Lcd_write:	
  1482  0025                     ?___lwtoft:	
  1483                           ; 1 bytes @ 0x5
  1484                           
  1485  0025                     Lcd_Set_Cursor@z:	
  1486                           ; 3 bytes @ 0x5
  1487                           
  1488  0025                     ___lwdiv@quotient:	
  1489                           ; 1 bytes @ 0x5
  1490                           
  1491  0025                     ___lwtoft@c:	
  1492                           ; 2 bytes @ 0x5
  1493                           
  1494                           
  1495                           ; 2 bytes @ 0x5
  1496  0025                     	ds	1
  1497  0026                     Lcd_Set_Cursor@y:	
  1498                           
  1499                           ; 1 bytes @ 0x6
  1500  0026                     	ds	1
  1501  0027                     ?___lwmod:	
  1502  0027                     Lcd_Set_Cursor@temp:	
  1503                           ; 2 bytes @ 0x7
  1504                           
  1505  0027                     ___lwmod@divisor:	
  1506                           ; 1 bytes @ 0x7
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x7
  1510  0027                     	ds	1
  1511  0028                     ??___lwtoft:	
  1512  0028                     Lcd_write@i:	
  1513                           ; 1 bytes @ 0x8
  1514                           
  1515  0028                     ___lmul@product:	
  1516                           ; 2 bytes @ 0x8
  1517                           
  1518                           
  1519                           ; 4 bytes @ 0x8
  1520  0028                     	ds	1
  1521  0029                     ?___ftmul:	
  1522  0029                     ___lwmod@dividend:	
  1523                           ; 3 bytes @ 0x9
  1524                           
  1525  0029                     ___ftmul@f1:	
  1526                           ; 2 bytes @ 0x9
  1527                           
  1528                           
  1529                           ; 3 bytes @ 0x9
  1530  0029                     	ds	3
  1531  002C                     ?___lldiv:	
  1532  002C                     ___ftmul@f2:	
  1533                           ; 4 bytes @ 0xC
  1534                           
  1535  002C                     ___lldiv@divisor:	
  1536                           ; 3 bytes @ 0xC
  1537                           
  1538                           
  1539                           ; 4 bytes @ 0xC
  1540  002C                     	ds	3
  1541  002F                     ??___ftmul:	
  1542                           
  1543                           ; 1 bytes @ 0xF
  1544  002F                     	ds	1
  1545  0030                     ___lldiv@dividend:	
  1546                           
  1547                           ; 4 bytes @ 0x10
  1548  0030                     	ds	3
  1549  0033                     ___ftmul@exp:	
  1550                           
  1551                           ; 1 bytes @ 0x13
  1552  0033                     	ds	1
  1553  0034                     ___ftmul@f3_as_product:	
  1554  0034                     ___lldiv@quotient:	
  1555                           ; 3 bytes @ 0x14
  1556                           
  1557                           
  1558                           ; 4 bytes @ 0x14
  1559  0034                     	ds	3
  1560  0037                     ___ftmul@cntr:	
  1561                           
  1562                           ; 1 bytes @ 0x17
  1563  0037                     	ds	1
  1564  0038                     ___ftmul@sign:	
  1565  0038                     ___lldiv@counter:	
  1566                           ; 1 bytes @ 0x18
  1567                           
  1568                           
  1569                           ; 1 bytes @ 0x18
  1570  0038                     	ds	1
  1571  0039                     ?_PWM_Init:	
  1572  0039                     ?_PWM_DutyCycle:	
  1573                           ; 1 bytes @ 0x19
  1574                           
  1575  0039                     ?_UART_Init:	
  1576                           ; 1 bytes @ 0x19
  1577                           
  1578  0039                     ?___ftdiv:	
  1579                           ; 1 bytes @ 0x19
  1580                           
  1581  0039                     UART_Init@baudRate:	
  1582                           ; 3 bytes @ 0x19
  1583                           
  1584  0039                     ___ftdiv@f2:	
  1585                           ; 2 bytes @ 0x19
  1586                           
  1587  0039                     PWM_Init@iFrequency:	
  1588                           ; 3 bytes @ 0x19
  1589                           
  1590  0039                     PWM_DutyCycle@iDutyCycle:	
  1591                           ; 4 bytes @ 0x19
  1592                           
  1593                           
  1594                           ; 4 bytes @ 0x19
  1595  0039                     	ds	2
  1596  003B                     ??_UART_Init:	
  1597                           
  1598                           ; 1 bytes @ 0x1B
  1599  003B                     	ds	1
  1600  003C                     ___ftdiv@f1:	
  1601                           
  1602                           ; 3 bytes @ 0x1C
  1603  003C                     	ds	1
  1604  003D                     ??_PWM_Init:	
  1605  003D                     ??_PWM_DutyCycle:	
  1606                           ; 1 bytes @ 0x1D
  1607                           
  1608                           
  1609                           ; 1 bytes @ 0x1D
  1610  003D                     	ds	2
  1611  003F                     ??___ftdiv:	
  1612                           
  1613                           ; 1 bytes @ 0x1F
  1614  003F                     	ds	4
  1615  0043                     ___ftdiv@cntr:	
  1616                           
  1617                           ; 1 bytes @ 0x23
  1618  0043                     	ds	1
  1619  0044                     ___ftdiv@f3:	
  1620                           
  1621                           ; 3 bytes @ 0x24
  1622  0044                     	ds	3
  1623  0047                     ___ftdiv@exp:	
  1624                           
  1625                           ; 1 bytes @ 0x27
  1626  0047                     	ds	1
  1627  0048                     ___ftdiv@sign:	
  1628                           
  1629                           ; 1 bytes @ 0x28
  1630  0048                     	ds	1
  1631  0049                     ?___ftadd:	
  1632  0049                     ___ftadd@f1:	
  1633                           ; 3 bytes @ 0x29
  1634                           
  1635                           
  1636                           ; 3 bytes @ 0x29
  1637  0049                     	ds	3
  1638  004C                     ___ftadd@f2:	
  1639                           
  1640                           ; 3 bytes @ 0x2C
  1641  004C                     	ds	3
  1642  004F                     ??___ftadd:	
  1643                           
  1644                           ; 1 bytes @ 0x2F
  1645  004F                     	ds	4
  1646  0053                     ___ftadd@sign:	
  1647                           
  1648                           ; 1 bytes @ 0x33
  1649  0053                     	ds	1
  1650  0054                     ___ftadd@exp2:	
  1651                           
  1652                           ; 1 bytes @ 0x34
  1653  0054                     	ds	1
  1654  0055                     ___ftadd@exp1:	
  1655                           
  1656                           ; 1 bytes @ 0x35
  1657  0055                     	ds	1
  1658  0056                     ?___fttol:	
  1659  0056                     ___fttol@f1:	
  1660                           ; 4 bytes @ 0x36
  1661                           
  1662                           
  1663                           ; 3 bytes @ 0x36
  1664  0056                     	ds	4
  1665  005A                     ??___fttol:	
  1666                           
  1667                           ; 1 bytes @ 0x3A
  1668  005A                     	ds	4
  1669  005E                     ___fttol@sign1:	
  1670                           
  1671                           ; 1 bytes @ 0x3E
  1672  005E                     	ds	1
  1673  005F                     ___fttol@lval:	
  1674                           
  1675                           ; 4 bytes @ 0x3F
  1676  005F                     	ds	4
  1677  0063                     ___fttol@exp1:	
  1678                           
  1679                           ; 1 bytes @ 0x43
  1680  0063                     	ds	1
  1681  0064                     ??_temp_Measurement:	
  1682                           
  1683                           ; 1 bytes @ 0x44
  1684  0064                     	ds	2
  1685  0066                     _temp_Measurement$1577:	
  1686                           
  1687                           ; 3 bytes @ 0x46
  1688  0066                     	ds	3
  1689  0069                     temp_Measurement@sample:	
  1690                           
  1691                           ; 2 bytes @ 0x49
  1692  0069                     	ds	2
  1693  006B                     ?_sprintf:	
  1694  006B                     sprintf@f:	
  1695                           ; 2 bytes @ 0x4B
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0x4B
  1699  006B                     	ds	3
  1700  006E                     temp_Display@TEMP:	
  1701                           
  1702                           ; 1 bytes @ 0x4E
  1703  006E                     	ds	1
  1704                           
  1705                           	psect	maintext
  1706  0CB4                     __pmaintext:	
  1707 ;;
  1708 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1709 ;;
  1710 ;; *************** function _main *****************
  1711 ;; Defined at:
  1712 ;;		line 11 in file "main.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2   16[None  ] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : B00/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0
  1729 ;;      Totals:         0       0       0       0       0
  1730 ;;Total ram usage:        0 bytes
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		_system_Initialize
  1734 ;;		_temp_Display
  1735 ;; This function is called by:
  1736 ;;		Startup code after reset
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _main
  1742  0CB4                     _main:	
  1743                           
  1744                           ;main.c: 13: system_Initialize();
  1745                           
  1746                           ;incstack = 0
  1747                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1748  0CB4  120A  158A  2763  120A  158A  	fcall	_system_Initialize
  1749  0CB9                     l2802:	
  1750                           ;main.c: 15: while (1) {
  1751                           
  1752                           
  1753                           ;main.c: 16: temp_Display();
  1754  0CB9  120A  118A  2775  120A  158A  	fcall	_temp_Display
  1755  0CBE  2CB9               	goto	l2802
  1756  0CBF                     __end_of_main:	
  1757                           ;main.c: 17: }
  1758                           ;main.c: 18: return;
  1759                           
  1760                           
  1761                           	psect	text1
  1762  0775                     __ptext1:	
  1763 ;; *************** function _temp_Display *****************
  1764 ;; Defined at:
  1765 ;;		line 40 in file "adc_Init.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  TEMP            1   78[BANK0 ] PTR unsigned char 
  1770 ;;		 -> STR_1(13), 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       1       0       0       0
  1782 ;;      Temps:          0       0       3       0       0
  1783 ;;      Totals:         0       1       3       0       0
  1784 ;;Total ram usage:        4 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    4
  1787 ;; This function calls:
  1788 ;;		_Lcd_Set_Cursor
  1789 ;;		_Lcd_write
  1790 ;;		_sprintf
  1791 ;;		_temp_Measurement
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _temp_Display
  1799  0775                     _temp_Display:	
  1800                           
  1801                           ;adc_Init.c: 41: char *TEMP = "Temperature:";
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _temp_Display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1805  0775  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1806  0776  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0777  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0778  00AC               	movwf	??_temp_Display^(0+128)
  1809  0779  082C               	movf	??_temp_Display^(0+128),w
  1810  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1811  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1812  077C  00EE               	movwf	temp_Display@TEMP
  1813                           
  1814                           ;adc_Init.c: 42: Lcd_Set_Cursor(1,1);
  1815  077D  01A1               	clrf	Lcd_Set_Cursor@column
  1816  077E  0AA1               	incf	Lcd_Set_Cursor@column,f
  1817  077F  3001               	movlw	1
  1818  0780  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1819                           
  1820                           ;adc_Init.c: 43: Lcd_write(TEMP);
  1821  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0787  086E               	movf	temp_Display@TEMP,w
  1824  0788  00A3               	movwf	Lcd_write@string
  1825  0789  3000               	movlw	0
  1826  078A  1D03               	btfss	3,2
  1827  078B  3080               	movlw	128
  1828  078C  00A4               	movwf	Lcd_write@string+1
  1829  078D  120A  158A  26DD  120A  118A  	fcall	_Lcd_write
  1830                           
  1831                           ;adc_Init.c: 44: sprintf(sTemperature, "%3d", temp_Measurement());
  1832  0792  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1833  0793  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0794  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0795  00AC               	movwf	??_temp_Display^(0+128)
  1836  0796  082C               	movf	??_temp_Display^(0+128),w
  1837  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0799  00EB               	movwf	sprintf@f
  1840  079A  120A  118A  22DC  120A  118A  	fcall	_temp_Measurement
  1841  079F  1683               	bsf	3,5	;RP0=1, select bank1
  1842  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  1843  07A1  00AD               	movwf	(??_temp_Display+1)^(0+128)
  1844  07A2  01AE               	clrf	((??_temp_Display+1)^(0+128)+1)
  1845  07A3  082D               	movf	(??_temp_Display+1)^(0+128),w
  1846  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1847  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1848  07A6  00EC               	movwf	?_sprintf+1
  1849  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  1850  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  1851  07A9  082E               	movf	(??_temp_Display+2)^(0+128),w
  1852  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1853  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1854  07AC  00ED               	movwf	?_sprintf+2
  1855  07AD  30BD               	movlw	(low (_sTemperature| 0))& (0+255)
  1856  07AE  120A  118A  2033  120A  118A  	fcall	_sprintf
  1857                           
  1858                           ;adc_Init.c: 45: Lcd_Set_Cursor(1, sizeof("Temperature:"));
  1859  07B3  300D               	movlw	13
  1860  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  1861  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  1862  07B6  00AC               	movwf	??_temp_Display^(0+128)
  1863  07B7  082C               	movf	??_temp_Display^(0+128),w
  1864  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1865  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1866  07BA  00A1               	movwf	Lcd_Set_Cursor@column
  1867  07BB  3001               	movlw	1
  1868  07BC  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  1869                           
  1870                           ;adc_Init.c: 46: Lcd_write(sTemperature);
  1871  07C1  30BD               	movlw	(low (_sTemperature| 0))& (0+255)
  1872  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1873  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1874  07C4  00A3               	movwf	Lcd_write@string
  1875  07C5  3000               	movlw	0
  1876  07C6  00A4               	movwf	Lcd_write@string+1
  1877  07C7  120A  158A  26DD   	fcall	_Lcd_write
  1878  07CA  0008               	return
  1879  07CB                     __end_of_temp_Display:	
  1880                           
  1881                           	psect	text2
  1882  02DC                     __ptext2:	
  1883 ;; *************** function _temp_Measurement *****************
  1884 ;; Defined at:
  1885 ;;		line 24 in file "adc_Init.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  sample          2   73[BANK0 ] int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       5       0       0       0
  1901 ;;      Temps:          0       2       0       0       0
  1902 ;;      Totals:         0       7       0       0       0
  1903 ;;Total ram usage:        7 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		___ftadd
  1908 ;;		___ftdiv
  1909 ;;		___ftmul
  1910 ;;		___fttol
  1911 ;;		___lwdiv
  1912 ;;		___lwtoft
  1913 ;; This function is called by:
  1914 ;;		_temp_Display
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _temp_Measurement
  1920  02DC                     _temp_Measurement:	
  1921                           
  1922                           ;adc_Init.c: 25: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _temp_Measurement: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1926  02DC  3007               	movlw	7
  1927  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1928  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1929  02DF  00E5               	movwf	??_temp_Measurement+1
  1930  02E0  307C               	movlw	124
  1931  02E1  00E4               	movwf	??_temp_Measurement
  1932  02E2                     u3997:	
  1933  02E2  0BE4               	decfsz	??_temp_Measurement,f
  1934  02E3  2AE2               	goto	u3997
  1935  02E4  0BE5               	decfsz	??_temp_Measurement+1,f
  1936  02E5  2AE2               	goto	u3997
  1937  02E6  0000               	nop
  1938                           
  1939                           ;adc_Init.c: 26: GO_DONE = 1;
  1940  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1941  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1942  02E9  149F               	bsf	31,1	;volatile
  1943  02EA                     l186:	
  1944                           ;adc_Init.c: 27: while(!PIR1bits.ADIF);
  1945                           
  1946  02EA  1F0C               	btfss	12,6	;volatile
  1947  02EB  2AEA               	goto	l186
  1948                           
  1949                           ;adc_Init.c: 28: adc.reading[0] = ADRESL;
  1950  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1951  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  1952  02EE  081E               	movf	30,w	;volatile
  1953  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1954  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1955  02F1  00E4               	movwf	??_temp_Measurement
  1956  02F2  0864               	movf	??_temp_Measurement,w
  1957  02F3  00F7               	movwf	_adc
  1958                           
  1959                           ;adc_Init.c: 29: adc.reading[1] = ADRESH;
  1960  02F4  081E               	movf	30,w	;volatile
  1961  02F5  00E4               	movwf	??_temp_Measurement
  1962  02F6  0864               	movf	??_temp_Measurement,w
  1963  02F7  00F8               	movwf	_adc+1
  1964                           
  1965                           ;adc_Init.c: 30: for (int sample = 0; sample < 10; sample++) {
  1966  02F8  01E9               	clrf	temp_Measurement@sample
  1967  02F9  01EA               	clrf	temp_Measurement@sample+1
  1968  02FA  086A               	movf	temp_Measurement@sample+1,w
  1969  02FB  3A80               	xorlw	128
  1970  02FC  00FF               	movwf	127
  1971  02FD  3080               	movlw	128
  1972  02FE  027F               	subwf	127,w
  1973  02FF  1D03               	skipz
  1974  0300  2B03               	goto	u3815
  1975  0301  300A               	movlw	10
  1976  0302  0269               	subwf	temp_Measurement@sample,w
  1977  0303                     u3815:	
  1978  0303  1803               	btfsc	3,0
  1979  0304  2BBA               	goto	l2680
  1980  0305                     l2670:	
  1981                           
  1982                           ;adc_Init.c: 31: rawData += adc.result;
  1983  0305  0877               	movf	_adc,w
  1984  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1985  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1986  0308  07B9               	addwf	_rawData^(0+128),f
  1987  0309  1803               	skipnc
  1988  030A  0ABA               	incf	(_rawData+1)^(0+128),f
  1989  030B  0878               	movf	_adc+1,w
  1990  030C  07BA               	addwf	(_rawData+1)^(0+128),f
  1991                           
  1992                           ;adc_Init.c: 32: if (sample == 9) {
  1993  030D  3009               	movlw	9
  1994  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1995  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0310  0669               	xorwf	temp_Measurement@sample,w
  1997  0311  046A               	iorwf	temp_Measurement@sample+1,w
  1998  0312  1D03               	btfss	3,2
  1999  0313  2BA9               	goto	l2676
  2000                           
  2001                           ;adc_Init.c: 33: rawData = rawData / 11;
  2002  0314  300B               	movlw	11
  2003  0315  00A0               	movwf	___lwdiv@divisor
  2004  0316  3000               	movlw	0
  2005  0317  00A1               	movwf	___lwdiv@divisor+1
  2006  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2008  031A  083A               	movf	(_rawData+1)^(0+128),w
  2009  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2010  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2011  031D  00A3               	movwf	___lwdiv@dividend+1
  2012  031E  1683               	bsf	3,5	;RP0=1, select bank1
  2013  031F  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0320  0839               	movf	_rawData^(0+128),w
  2015  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0323  00A2               	movwf	___lwdiv@dividend
  2018  0324  120A  158A  261E  120A  118A  	fcall	___lwdiv
  2019  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2020  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2021  032B  0821               	movf	?___lwdiv+1,w
  2022  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2023  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2024  032E  00BA               	movwf	(_rawData+1)^(0+128)
  2025  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0331  0820               	movf	?___lwdiv,w
  2028  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0334  00B9               	movwf	_rawData^(0+128)
  2031                           
  2032                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2033  0335  083A               	movf	(_rawData+1)^(0+128),w
  2034  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0338  00A6               	movwf	___lwtoft@c+1
  2037  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2038  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2039  033B  0839               	movf	_rawData^(0+128),w
  2040  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2041  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2042  033E  00A5               	movwf	___lwtoft@c
  2043  033F  120A  158A  2509  120A  118A  	fcall	___lwtoft
  2044  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0346  0825               	movf	?___lwtoft,w
  2047  0347  00AC               	movwf	___ftmul@f2
  2048  0348  0826               	movf	?___lwtoft+1,w
  2049  0349  00AD               	movwf	___ftmul@f2+1
  2050  034A  0827               	movf	?___lwtoft+2,w
  2051  034B  00AE               	movwf	___ftmul@f2+2
  2052  034C  3040               	movlw	64
  2053  034D  00A9               	movwf	___ftmul@f1
  2054  034E  309C               	movlw	156
  2055  034F  00AA               	movwf	___ftmul@f1+1
  2056  0350  3045               	movlw	69
  2057  0351  00AB               	movwf	___ftmul@f1+2
  2058  0352  120A  118A  23BE  120A  118A  	fcall	___ftmul
  2059  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0359  0829               	movf	?___ftmul,w
  2062  035A  00BC               	movwf	___ftdiv@f1
  2063  035B  082A               	movf	?___ftmul+1,w
  2064  035C  00BD               	movwf	___ftdiv@f1+1
  2065  035D  082B               	movf	?___ftmul+2,w
  2066  035E  00BE               	movwf	___ftdiv@f1+2
  2067  035F  30C0               	movlw	192
  2068  0360  00B9               	movwf	___ftdiv@f2
  2069  0361  307F               	movlw	127
  2070  0362  00BA               	movwf	___ftdiv@f2+1
  2071  0363  3044               	movlw	68
  2072  0364  00BB               	movwf	___ftdiv@f2+2
  2073  0365  120A  118A  2491  120A  118A  	fcall	___ftdiv
  2074  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2075  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2076  036C  0839               	movf	?___ftdiv,w
  2077  036D  00CC               	movwf	___ftadd@f2
  2078  036E  083A               	movf	?___ftdiv+1,w
  2079  036F  00CD               	movwf	___ftadd@f2+1
  2080  0370  083B               	movf	?___ftdiv+2,w
  2081  0371  00CE               	movwf	___ftadd@f2+2
  2082  0372  3000               	movlw	0
  2083  0373  00C9               	movwf	___ftadd@f1
  2084  0374  30FA               	movlw	250
  2085  0375  00CA               	movwf	___ftadd@f1+1
  2086  0376  30C3               	movlw	195
  2087  0377  00CB               	movwf	___ftadd@f1+2
  2088  0378  120A  118A  21D3  120A  118A  	fcall	___ftadd
  2089  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2090  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2091  037F  0849               	movf	?___ftadd,w
  2092  0380  00E6               	movwf	_temp_Measurement$1577
  2093  0381  084A               	movf	?___ftadd+1,w
  2094  0382  00E7               	movwf	_temp_Measurement$1577+1
  2095  0383  084B               	movf	?___ftadd+2,w
  2096  0384  00E8               	movwf	_temp_Measurement$1577+2
  2097                           
  2098                           ;adc_Init.c: 34: temperature = ((rawData * 5000.0 / 1023.0) - 500) /10;
  2099  0385  0866               	movf	_temp_Measurement$1577,w
  2100  0386  00BC               	movwf	___ftdiv@f1
  2101  0387  0867               	movf	_temp_Measurement$1577+1,w
  2102  0388  00BD               	movwf	___ftdiv@f1+1
  2103  0389  0868               	movf	_temp_Measurement$1577+2,w
  2104  038A  00BE               	movwf	___ftdiv@f1+2
  2105  038B  3000               	movlw	0
  2106  038C  00B9               	movwf	___ftdiv@f2
  2107  038D  3020               	movlw	32
  2108  038E  00BA               	movwf	___ftdiv@f2+1
  2109  038F  3041               	movlw	65
  2110  0390  00BB               	movwf	___ftdiv@f2+2
  2111  0391  120A  118A  2491  120A  118A  	fcall	___ftdiv
  2112  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0398  0839               	movf	?___ftdiv,w
  2115  0399  00D6               	movwf	___fttol@f1
  2116  039A  083A               	movf	?___ftdiv+1,w
  2117  039B  00D7               	movwf	___fttol@f1+1
  2118  039C  083B               	movf	?___ftdiv+2,w
  2119  039D  00D8               	movwf	___fttol@f1+2
  2120  039E  120A  118A  2549  120A  118A  	fcall	___fttol
  2121  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2122  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2123  03A5  0856               	movf	?___fttol,w
  2124  03A6  00E4               	movwf	??_temp_Measurement
  2125  03A7  0864               	movf	??_temp_Measurement,w
  2126  03A8  00EF               	movwf	_temperature
  2127  03A9                     l2676:	
  2128  03A9  3001               	movlw	1
  2129  03AA  07E9               	addwf	temp_Measurement@sample,f
  2130  03AB  1803               	skipnc
  2131  03AC  0AEA               	incf	temp_Measurement@sample+1,f
  2132  03AD  3000               	movlw	0
  2133  03AE  07EA               	addwf	temp_Measurement@sample+1,f
  2134  03AF  086A               	movf	temp_Measurement@sample+1,w
  2135  03B0  3A80               	xorlw	128
  2136  03B1  00FF               	movwf	127
  2137  03B2  3080               	movlw	128
  2138  03B3  027F               	subwf	127,w
  2139  03B4  1D03               	skipz
  2140  03B5  2BB8               	goto	u3835
  2141  03B6  300A               	movlw	10
  2142  03B7  0269               	subwf	temp_Measurement@sample,w
  2143  03B8                     u3835:	
  2144  03B8  1C03               	skipc
  2145  03B9  2B05               	goto	l2670
  2146  03BA                     l2680:	
  2147                           
  2148                           ;adc_Init.c: 35: }
  2149                           ;adc_Init.c: 36: }
  2150                           ;adc_Init.c: 37: return temperature;
  2151  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2152  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2153  03BC  086F               	movf	_temperature,w
  2154  03BD  0008               	return
  2155  03BE                     __end_of_temp_Measurement:	
  2156                           
  2157                           	psect	text3
  2158  0D09                     __ptext3:	
  2159 ;; *************** function ___lwtoft *****************
  2160 ;; Defined at:
  2161 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;  c               2    5[BANK0 ] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  3    5[BANK0 ] float 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0, pclath, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2175 ;;      Params:         0       3       0       0       0
  2176 ;;      Locals:         0       0       0       0       0
  2177 ;;      Temps:          0       1       0       0       0
  2178 ;;      Totals:         0       4       0       0       0
  2179 ;;Total ram usage:        4 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    2
  2182 ;; This function calls:
  2183 ;;		___ftpack
  2184 ;; This function is called by:
  2185 ;;		_temp_Measurement
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function ___lwtoft
  2191  0D09                     ___lwtoft:	
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2195  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0D0B  0825               	movf	___lwtoft@c,w
  2198  0D0C  00A0               	movwf	___ftpack@arg
  2199  0D0D  0826               	movf	___lwtoft@c+1,w
  2200  0D0E  00A1               	movwf	___ftpack@arg+1
  2201  0D0F  01A2               	clrf	___ftpack@arg+2
  2202  0D10  308E               	movlw	142
  2203  0D11  00A8               	movwf	??___lwtoft
  2204  0D12  0828               	movf	??___lwtoft,w
  2205  0D13  00A3               	movwf	___ftpack@exp
  2206  0D14  01A4               	clrf	___ftpack@sign
  2207  0D15  120A  118A  2646   	fcall	___ftpack
  2208  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0D1A  0820               	movf	?___ftpack,w
  2211  0D1B  00A5               	movwf	?___lwtoft
  2212  0D1C  0821               	movf	?___ftpack+1,w
  2213  0D1D  00A6               	movwf	?___lwtoft+1
  2214  0D1E  0822               	movf	?___ftpack+2,w
  2215  0D1F  00A7               	movwf	?___lwtoft+2
  2216  0D20  0008               	return
  2217  0D21                     __end_of___lwtoft:	
  2218                           
  2219                           	psect	text4
  2220  0549                     __ptext4:	
  2221 ;; *************** function ___fttol *****************
  2222 ;; Defined at:
  2223 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  f1              3   54[BANK0 ] float 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  lval            4   63[BANK0 ] unsigned long 
  2228 ;;  exp1            1   67[BANK0 ] unsigned char 
  2229 ;;  sign1           1   62[BANK0 ] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  4   54[BANK0 ] long 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       4       0       0       0
  2240 ;;      Locals:         0       6       0       0       0
  2241 ;;      Temps:          0       4       0       0       0
  2242 ;;      Totals:         0      14       0       0       0
  2243 ;;Total ram usage:       14 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_temp_Measurement
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function ___fttol
  2255  0549                     ___fttol:	
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2259  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2260  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2261  054B  0856               	movf	___fttol@f1,w
  2262  054C  00DA               	movwf	??___fttol
  2263  054D  0857               	movf	___fttol@f1+1,w
  2264  054E  00DB               	movwf	??___fttol+1
  2265  054F  0858               	movf	___fttol@f1+2,w
  2266  0550  00DC               	movwf	??___fttol+2
  2267  0551  1003               	clrc
  2268  0552  0D5B               	rlf	??___fttol+1,w
  2269  0553  0D5C               	rlf	??___fttol+2,w
  2270  0554  00DD               	movwf	??___fttol+3
  2271  0555  085D               	movf	??___fttol+3,w
  2272  0556  00E3               	movwf	___fttol@exp1
  2273  0557  0863               	movf	___fttol@exp1,w
  2274  0558  1D03               	btfss	3,2
  2275  0559  2D63               	goto	l1966
  2276  055A  3000               	movlw	0
  2277  055B  00D9               	movwf	?___fttol+3
  2278  055C  3000               	movlw	0
  2279  055D  00D8               	movwf	?___fttol+2
  2280  055E  3000               	movlw	0
  2281  055F  00D7               	movwf	?___fttol+1
  2282  0560  3000               	movlw	0
  2283  0561  00D6               	movwf	?___fttol
  2284  0562  0008               	return
  2285  0563                     l1966:	
  2286  0563  0856               	movf	___fttol@f1,w
  2287  0564  00DA               	movwf	??___fttol
  2288  0565  0857               	movf	___fttol@f1+1,w
  2289  0566  00DB               	movwf	??___fttol+1
  2290  0567  0858               	movf	___fttol@f1+2,w
  2291  0568  00DC               	movwf	??___fttol+2
  2292  0569  3017               	movlw	23
  2293  056A                     u2275:	
  2294  056A  1003               	clrc
  2295  056B  0CDC               	rrf	??___fttol+2,f
  2296  056C  0CDB               	rrf	??___fttol+1,f
  2297  056D  0CDA               	rrf	??___fttol,f
  2298  056E  3EFF               	addlw	-1
  2299  056F  1D03               	skipz
  2300  0570  2D6A               	goto	u2275
  2301  0571  085A               	movf	??___fttol,w
  2302  0572  00DD               	movwf	??___fttol+3
  2303  0573  085D               	movf	??___fttol+3,w
  2304  0574  00DE               	movwf	___fttol@sign1
  2305  0575  17D7               	bsf	___fttol@f1+1,7
  2306  0576  30FF               	movlw	255
  2307  0577  05D6               	andwf	___fttol@f1,f
  2308  0578  30FF               	movlw	255
  2309  0579  05D7               	andwf	___fttol@f1+1,f
  2310  057A  3000               	movlw	0
  2311  057B  05D8               	andwf	___fttol@f1+2,f
  2312  057C  0856               	movf	___fttol@f1,w
  2313  057D  00DF               	movwf	___fttol@lval
  2314  057E  0857               	movf	___fttol@f1+1,w
  2315  057F  00E0               	movwf	___fttol@lval+1
  2316  0580  0858               	movf	___fttol@f1+2,w
  2317  0581  00E1               	movwf	___fttol@lval+2
  2318  0582  01E2               	clrf	___fttol@lval+3
  2319  0583  308E               	movlw	142
  2320  0584  02E3               	subwf	___fttol@exp1,f
  2321  0585  1FE3               	btfss	___fttol@exp1,7
  2322  0586  2DA5               	goto	l1986
  2323  0587  0863               	movf	___fttol@exp1,w
  2324  0588  3A80               	xorlw	128
  2325  0589  3E8F               	addlw	143
  2326  058A  1803               	skipnc
  2327  058B  2D95               	goto	l1984
  2328  058C  3000               	movlw	0
  2329  058D  00D9               	movwf	?___fttol+3
  2330  058E  3000               	movlw	0
  2331  058F  00D8               	movwf	?___fttol+2
  2332  0590  3000               	movlw	0
  2333  0591  00D7               	movwf	?___fttol+1
  2334  0592  3000               	movlw	0
  2335  0593  00D6               	movwf	?___fttol
  2336  0594  0008               	return
  2337  0595                     l1984:	
  2338  0595  3001               	movlw	1
  2339  0596                     u2305:	
  2340  0596  1003               	clrc
  2341  0597  0CE2               	rrf	___fttol@lval+3,f
  2342  0598  0CE1               	rrf	___fttol@lval+2,f
  2343  0599  0CE0               	rrf	___fttol@lval+1,f
  2344  059A  0CDF               	rrf	___fttol@lval,f
  2345  059B  3EFF               	addlw	-1
  2346  059C  1D03               	skipz
  2347  059D  2D96               	goto	u2305
  2348  059E  3001               	movlw	1
  2349  059F  00DA               	movwf	??___fttol
  2350  05A0  085A               	movf	??___fttol,w
  2351  05A1  07E3               	addwf	___fttol@exp1,f
  2352  05A2  1903               	btfsc	3,2
  2353  05A3  2DC0               	goto	l1994
  2354  05A4  2D95               	goto	l1984
  2355  05A5                     l1986:	
  2356  05A5  3018               	movlw	24
  2357  05A6  0263               	subwf	___fttol@exp1,w
  2358  05A7  1C03               	skipc
  2359  05A8  2DBD               	goto	l765
  2360  05A9  3000               	movlw	0
  2361  05AA  00D9               	movwf	?___fttol+3
  2362  05AB  3000               	movlw	0
  2363  05AC  00D8               	movwf	?___fttol+2
  2364  05AD  3000               	movlw	0
  2365  05AE  00D7               	movwf	?___fttol+1
  2366  05AF  3000               	movlw	0
  2367  05B0  00D6               	movwf	?___fttol
  2368  05B1  0008               	return
  2369  05B2                     l1992:	
  2370  05B2  3001               	movlw	1
  2371  05B3  00DA               	movwf	??___fttol
  2372  05B4                     u2335:	
  2373  05B4  1003               	clrc
  2374  05B5  0DDF               	rlf	___fttol@lval,f
  2375  05B6  0DE0               	rlf	___fttol@lval+1,f
  2376  05B7  0DE1               	rlf	___fttol@lval+2,f
  2377  05B8  0DE2               	rlf	___fttol@lval+3,f
  2378  05B9  0BDA               	decfsz	??___fttol,f
  2379  05BA  2DB4               	goto	u2335
  2380  05BB  3001               	movlw	1
  2381  05BC  02E3               	subwf	___fttol@exp1,f
  2382  05BD                     l765:	
  2383  05BD  0863               	movf	___fttol@exp1,w
  2384  05BE  1D03               	btfss	3,2
  2385  05BF  2DB2               	goto	l1992
  2386  05C0                     l1994:	
  2387  05C0  085E               	movf	___fttol@sign1,w
  2388  05C1  1903               	btfsc	3,2
  2389  05C2  2DCE               	goto	l1998
  2390  05C3  09DF               	comf	___fttol@lval,f
  2391  05C4  09E0               	comf	___fttol@lval+1,f
  2392  05C5  09E1               	comf	___fttol@lval+2,f
  2393  05C6  09E2               	comf	___fttol@lval+3,f
  2394  05C7  0ADF               	incf	___fttol@lval,f
  2395  05C8  1903               	skipnz
  2396  05C9  0AE0               	incf	___fttol@lval+1,f
  2397  05CA  1903               	skipnz
  2398  05CB  0AE1               	incf	___fttol@lval+2,f
  2399  05CC  1903               	skipnz
  2400  05CD  0AE2               	incf	___fttol@lval+3,f
  2401  05CE                     l1998:	
  2402  05CE  0862               	movf	___fttol@lval+3,w
  2403  05CF  00D9               	movwf	?___fttol+3
  2404  05D0  0861               	movf	___fttol@lval+2,w
  2405  05D1  00D8               	movwf	?___fttol+2
  2406  05D2  0860               	movf	___fttol@lval+1,w
  2407  05D3  00D7               	movwf	?___fttol+1
  2408  05D4  085F               	movf	___fttol@lval,w
  2409  05D5  00D6               	movwf	?___fttol
  2410  05D6  0008               	return
  2411  05D7                     __end_of___fttol:	
  2412                           
  2413                           	psect	text5
  2414  03BE                     __ptext5:	
  2415 ;; *************** function ___ftmul *****************
  2416 ;; Defined at:
  2417 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  f1              3    9[BANK0 ] float 
  2420 ;;  f2              3   12[BANK0 ] float 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  2423 ;;  sign            1   24[BANK0 ] unsigned char 
  2424 ;;  cntr            1   23[BANK0 ] unsigned char 
  2425 ;;  exp             1   19[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  3    9[BANK0 ] float 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       6       0       0       0
  2436 ;;      Locals:         0       6       0       0       0
  2437 ;;      Temps:          0       4       0       0       0
  2438 ;;      Totals:         0      16       0       0       0
  2439 ;;Total ram usage:       16 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    2
  2442 ;; This function calls:
  2443 ;;		___ftpack
  2444 ;; This function is called by:
  2445 ;;		_temp_Measurement
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function ___ftmul
  2451  03BE                     ___ftmul:	
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2455  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2456  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2457  03C0  0829               	movf	___ftmul@f1,w
  2458  03C1  00AF               	movwf	??___ftmul
  2459  03C2  082A               	movf	___ftmul@f1+1,w
  2460  03C3  00B0               	movwf	??___ftmul+1
  2461  03C4  082B               	movf	___ftmul@f1+2,w
  2462  03C5  00B1               	movwf	??___ftmul+2
  2463  03C6  1003               	clrc
  2464  03C7  0D30               	rlf	??___ftmul+1,w
  2465  03C8  0D31               	rlf	??___ftmul+2,w
  2466  03C9  00B2               	movwf	??___ftmul+3
  2467  03CA  0832               	movf	??___ftmul+3,w
  2468  03CB  00B3               	movwf	___ftmul@exp
  2469  03CC  0833               	movf	___ftmul@exp,w
  2470  03CD  1D03               	btfss	3,2
  2471  03CE  2BD6               	goto	l2518
  2472  03CF  3000               	movlw	0
  2473  03D0  00A9               	movwf	?___ftmul
  2474  03D1  3000               	movlw	0
  2475  03D2  00AA               	movwf	?___ftmul+1
  2476  03D3  3000               	movlw	0
  2477  03D4  00AB               	movwf	?___ftmul+2
  2478  03D5  0008               	return
  2479  03D6                     l2518:	
  2480  03D6  082C               	movf	___ftmul@f2,w
  2481  03D7  00AF               	movwf	??___ftmul
  2482  03D8  082D               	movf	___ftmul@f2+1,w
  2483  03D9  00B0               	movwf	??___ftmul+1
  2484  03DA  082E               	movf	___ftmul@f2+2,w
  2485  03DB  00B1               	movwf	??___ftmul+2
  2486  03DC  1003               	clrc
  2487  03DD  0D30               	rlf	??___ftmul+1,w
  2488  03DE  0D31               	rlf	??___ftmul+2,w
  2489  03DF  00B2               	movwf	??___ftmul+3
  2490  03E0  0832               	movf	??___ftmul+3,w
  2491  03E1  00B8               	movwf	___ftmul@sign
  2492  03E2  0838               	movf	___ftmul@sign,w
  2493  03E3  1D03               	btfss	3,2
  2494  03E4  2BEC               	goto	l2524
  2495  03E5  3000               	movlw	0
  2496  03E6  00A9               	movwf	?___ftmul
  2497  03E7  3000               	movlw	0
  2498  03E8  00AA               	movwf	?___ftmul+1
  2499  03E9  3000               	movlw	0
  2500  03EA  00AB               	movwf	?___ftmul+2
  2501  03EB  0008               	return
  2502  03EC                     l2524:	
  2503  03EC  0838               	movf	___ftmul@sign,w
  2504  03ED  3E7B               	addlw	123
  2505  03EE  00AF               	movwf	??___ftmul
  2506  03EF  082F               	movf	??___ftmul,w
  2507  03F0  07B3               	addwf	___ftmul@exp,f
  2508  03F1  0829               	movf	___ftmul@f1,w
  2509  03F2  00AF               	movwf	??___ftmul
  2510  03F3  082A               	movf	___ftmul@f1+1,w
  2511  03F4  00B0               	movwf	??___ftmul+1
  2512  03F5  082B               	movf	___ftmul@f1+2,w
  2513  03F6  00B1               	movwf	??___ftmul+2
  2514  03F7  3010               	movlw	16
  2515  03F8                     u3465:	
  2516  03F8  1003               	clrc
  2517  03F9  0CB1               	rrf	??___ftmul+2,f
  2518  03FA  0CB0               	rrf	??___ftmul+1,f
  2519  03FB  0CAF               	rrf	??___ftmul,f
  2520  03FC  3EFF               	addlw	-1
  2521  03FD  1D03               	skipz
  2522  03FE  2BF8               	goto	u3465
  2523  03FF  082F               	movf	??___ftmul,w
  2524  0400  00B2               	movwf	??___ftmul+3
  2525  0401  0832               	movf	??___ftmul+3,w
  2526  0402  00B8               	movwf	___ftmul@sign
  2527  0403  082C               	movf	___ftmul@f2,w
  2528  0404  00AF               	movwf	??___ftmul
  2529  0405  082D               	movf	___ftmul@f2+1,w
  2530  0406  00B0               	movwf	??___ftmul+1
  2531  0407  082E               	movf	___ftmul@f2+2,w
  2532  0408  00B1               	movwf	??___ftmul+2
  2533  0409  3010               	movlw	16
  2534  040A                     u3475:	
  2535  040A  1003               	clrc
  2536  040B  0CB1               	rrf	??___ftmul+2,f
  2537  040C  0CB0               	rrf	??___ftmul+1,f
  2538  040D  0CAF               	rrf	??___ftmul,f
  2539  040E  3EFF               	addlw	-1
  2540  040F  1D03               	skipz
  2541  0410  2C0A               	goto	u3475
  2542  0411  082F               	movf	??___ftmul,w
  2543  0412  00B2               	movwf	??___ftmul+3
  2544  0413  0832               	movf	??___ftmul+3,w
  2545  0414  06B8               	xorwf	___ftmul@sign,f
  2546  0415  3080               	movlw	128
  2547  0416  00AF               	movwf	??___ftmul
  2548  0417  082F               	movf	??___ftmul,w
  2549  0418  05B8               	andwf	___ftmul@sign,f
  2550  0419  17AA               	bsf	___ftmul@f1+1,7
  2551  041A  17AD               	bsf	___ftmul@f2+1,7
  2552  041B  30FF               	movlw	255
  2553  041C  05AC               	andwf	___ftmul@f2,f
  2554  041D  30FF               	movlw	255
  2555  041E  05AD               	andwf	___ftmul@f2+1,f
  2556  041F  3000               	movlw	0
  2557  0420  05AE               	andwf	___ftmul@f2+2,f
  2558  0421  3000               	movlw	0
  2559  0422  00B4               	movwf	___ftmul@f3_as_product
  2560  0423  3000               	movlw	0
  2561  0424  00B5               	movwf	___ftmul@f3_as_product+1
  2562  0425  3000               	movlw	0
  2563  0426  00B6               	movwf	___ftmul@f3_as_product+2
  2564  0427  3007               	movlw	7
  2565  0428  00AF               	movwf	??___ftmul
  2566  0429  082F               	movf	??___ftmul,w
  2567  042A  00B7               	movwf	___ftmul@cntr
  2568  042B                     l2536:	
  2569  042B  1C29               	btfss	___ftmul@f1,0
  2570  042C  2C3B               	goto	l2540
  2571  042D  082C               	movf	___ftmul@f2,w
  2572  042E  07B4               	addwf	___ftmul@f3_as_product,f
  2573  042F  082D               	movf	___ftmul@f2+1,w
  2574  0430  1103               	clrz
  2575  0431  1803               	skipnc
  2576  0432  0A2D               	incf	___ftmul@f2+1,w
  2577  0433  1D03               	btfss	3,2
  2578  0434  07B5               	addwf	___ftmul@f3_as_product+1,f
  2579  0435  082E               	movf	___ftmul@f2+2,w
  2580  0436  1103               	clrz
  2581  0437  1803               	skipnc
  2582  0438  0A2E               	incf	___ftmul@f2+2,w
  2583  0439  1D03               	btfss	3,2
  2584  043A  07B6               	addwf	___ftmul@f3_as_product+2,f
  2585  043B                     l2540:	
  2586  043B  3001               	movlw	1
  2587  043C                     u3505:	
  2588  043C  1003               	clrc
  2589  043D  0CAB               	rrf	___ftmul@f1+2,f
  2590  043E  0CAA               	rrf	___ftmul@f1+1,f
  2591  043F  0CA9               	rrf	___ftmul@f1,f
  2592  0440  3EFF               	addlw	-1
  2593  0441  1D03               	skipz
  2594  0442  2C3C               	goto	u3505
  2595  0443  3001               	movlw	1
  2596  0444                     u3515:	
  2597  0444  1003               	clrc
  2598  0445  0DAC               	rlf	___ftmul@f2,f
  2599  0446  0DAD               	rlf	___ftmul@f2+1,f
  2600  0447  0DAE               	rlf	___ftmul@f2+2,f
  2601  0448  3EFF               	addlw	-1
  2602  0449  1D03               	skipz
  2603  044A  2C44               	goto	u3515
  2604  044B  3001               	movlw	1
  2605  044C  02B7               	subwf	___ftmul@cntr,f
  2606  044D  1D03               	btfss	3,2
  2607  044E  2C2B               	goto	l2536
  2608  044F  3009               	movlw	9
  2609  0450  00AF               	movwf	??___ftmul
  2610  0451  082F               	movf	??___ftmul,w
  2611  0452  00B7               	movwf	___ftmul@cntr
  2612  0453                     l2548:	
  2613  0453  1C29               	btfss	___ftmul@f1,0
  2614  0454  2C63               	goto	l2552
  2615  0455  082C               	movf	___ftmul@f2,w
  2616  0456  07B4               	addwf	___ftmul@f3_as_product,f
  2617  0457  082D               	movf	___ftmul@f2+1,w
  2618  0458  1103               	clrz
  2619  0459  1803               	skipnc
  2620  045A  0A2D               	incf	___ftmul@f2+1,w
  2621  045B  1D03               	btfss	3,2
  2622  045C  07B5               	addwf	___ftmul@f3_as_product+1,f
  2623  045D  082E               	movf	___ftmul@f2+2,w
  2624  045E  1103               	clrz
  2625  045F  1803               	skipnc
  2626  0460  0A2E               	incf	___ftmul@f2+2,w
  2627  0461  1D03               	btfss	3,2
  2628  0462  07B6               	addwf	___ftmul@f3_as_product+2,f
  2629  0463                     l2552:	
  2630  0463  3001               	movlw	1
  2631  0464                     u3555:	
  2632  0464  1003               	clrc
  2633  0465  0CAB               	rrf	___ftmul@f1+2,f
  2634  0466  0CAA               	rrf	___ftmul@f1+1,f
  2635  0467  0CA9               	rrf	___ftmul@f1,f
  2636  0468  3EFF               	addlw	-1
  2637  0469  1D03               	skipz
  2638  046A  2C64               	goto	u3555
  2639  046B  3001               	movlw	1
  2640  046C                     u3565:	
  2641  046C  1003               	clrc
  2642  046D  0CB6               	rrf	___ftmul@f3_as_product+2,f
  2643  046E  0CB5               	rrf	___ftmul@f3_as_product+1,f
  2644  046F  0CB4               	rrf	___ftmul@f3_as_product,f
  2645  0470  3EFF               	addlw	-1
  2646  0471  1D03               	skipz
  2647  0472  2C6C               	goto	u3565
  2648  0473  3001               	movlw	1
  2649  0474  02B7               	subwf	___ftmul@cntr,f
  2650  0475  1D03               	btfss	3,2
  2651  0476  2C53               	goto	l2548
  2652  0477  0834               	movf	___ftmul@f3_as_product,w
  2653  0478  00A0               	movwf	___ftpack@arg
  2654  0479  0835               	movf	___ftmul@f3_as_product+1,w
  2655  047A  00A1               	movwf	___ftpack@arg+1
  2656  047B  0836               	movf	___ftmul@f3_as_product+2,w
  2657  047C  00A2               	movwf	___ftpack@arg+2
  2658  047D  0833               	movf	___ftmul@exp,w
  2659  047E  00AF               	movwf	??___ftmul
  2660  047F  082F               	movf	??___ftmul,w
  2661  0480  00A3               	movwf	___ftpack@exp
  2662  0481  0838               	movf	___ftmul@sign,w
  2663  0482  00B0               	movwf	??___ftmul+1
  2664  0483  0830               	movf	??___ftmul+1,w
  2665  0484  00A4               	movwf	___ftpack@sign
  2666  0485  120A  118A  2646   	fcall	___ftpack
  2667  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2669  048A  0820               	movf	?___ftpack,w
  2670  048B  00A9               	movwf	?___ftmul
  2671  048C  0821               	movf	?___ftpack+1,w
  2672  048D  00AA               	movwf	?___ftmul+1
  2673  048E  0822               	movf	?___ftpack+2,w
  2674  048F  00AB               	movwf	?___ftmul+2
  2675  0490  0008               	return
  2676  0491                     __end_of___ftmul:	
  2677                           
  2678                           	psect	text6
  2679  0491                     __ptext6:	
  2680 ;; *************** function ___ftdiv *****************
  2681 ;; Defined at:
  2682 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  f2              3   25[BANK0 ] float 
  2685 ;;  f1              3   28[BANK0 ] float 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  f3              3   36[BANK0 ] float 
  2688 ;;  sign            1   40[BANK0 ] unsigned char 
  2689 ;;  exp             1   39[BANK0 ] unsigned char 
  2690 ;;  cntr            1   35[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  3   25[BANK0 ] float 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       6       0       0       0
  2701 ;;      Locals:         0       6       0       0       0
  2702 ;;      Temps:          0       4       0       0       0
  2703 ;;      Totals:         0      16       0       0       0
  2704 ;;Total ram usage:       16 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		___ftpack
  2709 ;; This function is called by:
  2710 ;;		_temp_Measurement
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function ___ftdiv
  2716  0491                     ___ftdiv:	
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2720  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0493  083C               	movf	___ftdiv@f1,w
  2723  0494  00BF               	movwf	??___ftdiv
  2724  0495  083D               	movf	___ftdiv@f1+1,w
  2725  0496  00C0               	movwf	??___ftdiv+1
  2726  0497  083E               	movf	___ftdiv@f1+2,w
  2727  0498  00C1               	movwf	??___ftdiv+2
  2728  0499  1003               	clrc
  2729  049A  0D40               	rlf	??___ftdiv+1,w
  2730  049B  0D41               	rlf	??___ftdiv+2,w
  2731  049C  00C2               	movwf	??___ftdiv+3
  2732  049D  0842               	movf	??___ftdiv+3,w
  2733  049E  00C7               	movwf	___ftdiv@exp
  2734  049F  0847               	movf	___ftdiv@exp,w
  2735  04A0  1D03               	btfss	3,2
  2736  04A1  2CA9               	goto	l2476
  2737  04A2  3000               	movlw	0
  2738  04A3  00B9               	movwf	?___ftdiv
  2739  04A4  3000               	movlw	0
  2740  04A5  00BA               	movwf	?___ftdiv+1
  2741  04A6  3000               	movlw	0
  2742  04A7  00BB               	movwf	?___ftdiv+2
  2743  04A8  0008               	return
  2744  04A9                     l2476:	
  2745  04A9  0839               	movf	___ftdiv@f2,w
  2746  04AA  00BF               	movwf	??___ftdiv
  2747  04AB  083A               	movf	___ftdiv@f2+1,w
  2748  04AC  00C0               	movwf	??___ftdiv+1
  2749  04AD  083B               	movf	___ftdiv@f2+2,w
  2750  04AE  00C1               	movwf	??___ftdiv+2
  2751  04AF  1003               	clrc
  2752  04B0  0D40               	rlf	??___ftdiv+1,w
  2753  04B1  0D41               	rlf	??___ftdiv+2,w
  2754  04B2  00C2               	movwf	??___ftdiv+3
  2755  04B3  0842               	movf	??___ftdiv+3,w
  2756  04B4  00C8               	movwf	___ftdiv@sign
  2757  04B5  0848               	movf	___ftdiv@sign,w
  2758  04B6  1D03               	btfss	3,2
  2759  04B7  2CBF               	goto	l2482
  2760  04B8  3000               	movlw	0
  2761  04B9  00B9               	movwf	?___ftdiv
  2762  04BA  3000               	movlw	0
  2763  04BB  00BA               	movwf	?___ftdiv+1
  2764  04BC  3000               	movlw	0
  2765  04BD  00BB               	movwf	?___ftdiv+2
  2766  04BE  0008               	return
  2767  04BF                     l2482:	
  2768  04BF  3000               	movlw	0
  2769  04C0  00C4               	movwf	___ftdiv@f3
  2770  04C1  3000               	movlw	0
  2771  04C2  00C5               	movwf	___ftdiv@f3+1
  2772  04C3  3000               	movlw	0
  2773  04C4  00C6               	movwf	___ftdiv@f3+2
  2774  04C5  3089               	movlw	137
  2775  04C6  0748               	addwf	___ftdiv@sign,w
  2776  04C7  00BF               	movwf	??___ftdiv
  2777  04C8  083F               	movf	??___ftdiv,w
  2778  04C9  02C7               	subwf	___ftdiv@exp,f
  2779  04CA  083C               	movf	___ftdiv@f1,w
  2780  04CB  00BF               	movwf	??___ftdiv
  2781  04CC  083D               	movf	___ftdiv@f1+1,w
  2782  04CD  00C0               	movwf	??___ftdiv+1
  2783  04CE  083E               	movf	___ftdiv@f1+2,w
  2784  04CF  00C1               	movwf	??___ftdiv+2
  2785  04D0  3010               	movlw	16
  2786  04D1                     u3385:	
  2787  04D1  1003               	clrc
  2788  04D2  0CC1               	rrf	??___ftdiv+2,f
  2789  04D3  0CC0               	rrf	??___ftdiv+1,f
  2790  04D4  0CBF               	rrf	??___ftdiv,f
  2791  04D5  3EFF               	addlw	-1
  2792  04D6  1D03               	skipz
  2793  04D7  2CD1               	goto	u3385
  2794  04D8  083F               	movf	??___ftdiv,w
  2795  04D9  00C2               	movwf	??___ftdiv+3
  2796  04DA  0842               	movf	??___ftdiv+3,w
  2797  04DB  00C8               	movwf	___ftdiv@sign
  2798  04DC  0839               	movf	___ftdiv@f2,w
  2799  04DD  00BF               	movwf	??___ftdiv
  2800  04DE  083A               	movf	___ftdiv@f2+1,w
  2801  04DF  00C0               	movwf	??___ftdiv+1
  2802  04E0  083B               	movf	___ftdiv@f2+2,w
  2803  04E1  00C1               	movwf	??___ftdiv+2
  2804  04E2  3010               	movlw	16
  2805  04E3                     u3395:	
  2806  04E3  1003               	clrc
  2807  04E4  0CC1               	rrf	??___ftdiv+2,f
  2808  04E5  0CC0               	rrf	??___ftdiv+1,f
  2809  04E6  0CBF               	rrf	??___ftdiv,f
  2810  04E7  3EFF               	addlw	-1
  2811  04E8  1D03               	skipz
  2812  04E9  2CE3               	goto	u3395
  2813  04EA  083F               	movf	??___ftdiv,w
  2814  04EB  00C2               	movwf	??___ftdiv+3
  2815  04EC  0842               	movf	??___ftdiv+3,w
  2816  04ED  06C8               	xorwf	___ftdiv@sign,f
  2817  04EE  3080               	movlw	128
  2818  04EF  00BF               	movwf	??___ftdiv
  2819  04F0  083F               	movf	??___ftdiv,w
  2820  04F1  05C8               	andwf	___ftdiv@sign,f
  2821  04F2  17BD               	bsf	___ftdiv@f1+1,7
  2822  04F3  30FF               	movlw	255
  2823  04F4  05BC               	andwf	___ftdiv@f1,f
  2824  04F5  30FF               	movlw	255
  2825  04F6  05BD               	andwf	___ftdiv@f1+1,f
  2826  04F7  3000               	movlw	0
  2827  04F8  05BE               	andwf	___ftdiv@f1+2,f
  2828  04F9  17BA               	bsf	___ftdiv@f2+1,7
  2829  04FA  30FF               	movlw	255
  2830  04FB  05B9               	andwf	___ftdiv@f2,f
  2831  04FC  30FF               	movlw	255
  2832  04FD  05BA               	andwf	___ftdiv@f2+1,f
  2833  04FE  3000               	movlw	0
  2834  04FF  05BB               	andwf	___ftdiv@f2+2,f
  2835  0500  3018               	movlw	24
  2836  0501  00BF               	movwf	??___ftdiv
  2837  0502  083F               	movf	??___ftdiv,w
  2838  0503  00C3               	movwf	___ftdiv@cntr
  2839  0504                     l2496:	
  2840  0504  3001               	movlw	1
  2841  0505                     u3405:	
  2842  0505  1003               	clrc
  2843  0506  0DC4               	rlf	___ftdiv@f3,f
  2844  0507  0DC5               	rlf	___ftdiv@f3+1,f
  2845  0508  0DC6               	rlf	___ftdiv@f3+2,f
  2846  0509  3EFF               	addlw	-1
  2847  050A  1D03               	skipz
  2848  050B  2D05               	goto	u3405
  2849  050C  083B               	movf	___ftdiv@f2+2,w
  2850  050D  023E               	subwf	___ftdiv@f1+2,w
  2851  050E  1D03               	skipz
  2852  050F  2D16               	goto	u3415
  2853  0510  083A               	movf	___ftdiv@f2+1,w
  2854  0511  023D               	subwf	___ftdiv@f1+1,w
  2855  0512  1D03               	skipz
  2856  0513  2D16               	goto	u3415
  2857  0514  0839               	movf	___ftdiv@f2,w
  2858  0515  023C               	subwf	___ftdiv@f1,w
  2859  0516                     u3415:	
  2860  0516  1C03               	skipc
  2861  0517  2D23               	goto	l2504
  2862  0518  0839               	movf	___ftdiv@f2,w
  2863  0519  02BC               	subwf	___ftdiv@f1,f
  2864  051A  083A               	movf	___ftdiv@f2+1,w
  2865  051B  1C03               	skipc
  2866  051C  0F3A               	incfsz	___ftdiv@f2+1,w
  2867  051D  02BD               	subwf	___ftdiv@f1+1,f
  2868  051E  083B               	movf	___ftdiv@f2+2,w
  2869  051F  1C03               	skipc
  2870  0520  0A3B               	incf	___ftdiv@f2+2,w
  2871  0521  02BE               	subwf	___ftdiv@f1+2,f
  2872  0522  1444               	bsf	___ftdiv@f3,0
  2873  0523                     l2504:	
  2874  0523  3001               	movlw	1
  2875  0524                     u3425:	
  2876  0524  1003               	clrc
  2877  0525  0DBC               	rlf	___ftdiv@f1,f
  2878  0526  0DBD               	rlf	___ftdiv@f1+1,f
  2879  0527  0DBE               	rlf	___ftdiv@f1+2,f
  2880  0528  3EFF               	addlw	-1
  2881  0529  1D03               	skipz
  2882  052A  2D24               	goto	u3425
  2883  052B  3001               	movlw	1
  2884  052C  02C3               	subwf	___ftdiv@cntr,f
  2885  052D  1D03               	btfss	3,2
  2886  052E  2D04               	goto	l2496
  2887  052F  0844               	movf	___ftdiv@f3,w
  2888  0530  00A0               	movwf	___ftpack@arg
  2889  0531  0845               	movf	___ftdiv@f3+1,w
  2890  0532  00A1               	movwf	___ftpack@arg+1
  2891  0533  0846               	movf	___ftdiv@f3+2,w
  2892  0534  00A2               	movwf	___ftpack@arg+2
  2893  0535  0847               	movf	___ftdiv@exp,w
  2894  0536  00BF               	movwf	??___ftdiv
  2895  0537  083F               	movf	??___ftdiv,w
  2896  0538  00A3               	movwf	___ftpack@exp
  2897  0539  0848               	movf	___ftdiv@sign,w
  2898  053A  00C0               	movwf	??___ftdiv+1
  2899  053B  0840               	movf	??___ftdiv+1,w
  2900  053C  00A4               	movwf	___ftpack@sign
  2901  053D  120A  118A  2646   	fcall	___ftpack
  2902  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0542  0820               	movf	?___ftpack,w
  2905  0543  00B9               	movwf	?___ftdiv
  2906  0544  0821               	movf	?___ftpack+1,w
  2907  0545  00BA               	movwf	?___ftdiv+1
  2908  0546  0822               	movf	?___ftpack+2,w
  2909  0547  00BB               	movwf	?___ftdiv+2
  2910  0548  0008               	return
  2911  0549                     __end_of___ftdiv:	
  2912                           
  2913                           	psect	text7
  2914  01D3                     __ptext7:	
  2915 ;; *************** function ___ftadd *****************
  2916 ;; Defined at:
  2917 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  f1              3   41[BANK0 ] float 
  2920 ;;  f2              3   44[BANK0 ] float 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  exp1            1   53[BANK0 ] unsigned char 
  2923 ;;  exp2            1   52[BANK0 ] unsigned char 
  2924 ;;  sign            1   51[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3   41[BANK0 ] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       6       0       0       0
  2935 ;;      Locals:         0       3       0       0       0
  2936 ;;      Temps:          0       4       0       0       0
  2937 ;;      Totals:         0      13       0       0       0
  2938 ;;Total ram usage:       13 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    2
  2941 ;; This function calls:
  2942 ;;		___ftpack
  2943 ;; This function is called by:
  2944 ;;		_temp_Measurement
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function ___ftadd
  2950  01D3                     ___ftadd:	
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2954  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2955  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2956  01D5  0849               	movf	___ftadd@f1,w
  2957  01D6  00CF               	movwf	??___ftadd
  2958  01D7  084A               	movf	___ftadd@f1+1,w
  2959  01D8  00D0               	movwf	??___ftadd+1
  2960  01D9  084B               	movf	___ftadd@f1+2,w
  2961  01DA  00D1               	movwf	??___ftadd+2
  2962  01DB  1003               	clrc
  2963  01DC  0D50               	rlf	??___ftadd+1,w
  2964  01DD  0D51               	rlf	??___ftadd+2,w
  2965  01DE  00D2               	movwf	??___ftadd+3
  2966  01DF  0852               	movf	??___ftadd+3,w
  2967  01E0  00D5               	movwf	___ftadd@exp1
  2968  01E1  084C               	movf	___ftadd@f2,w
  2969  01E2  00CF               	movwf	??___ftadd
  2970  01E3  084D               	movf	___ftadd@f2+1,w
  2971  01E4  00D0               	movwf	??___ftadd+1
  2972  01E5  084E               	movf	___ftadd@f2+2,w
  2973  01E6  00D1               	movwf	??___ftadd+2
  2974  01E7  1003               	clrc
  2975  01E8  0D50               	rlf	??___ftadd+1,w
  2976  01E9  0D51               	rlf	??___ftadd+2,w
  2977  01EA  00D2               	movwf	??___ftadd+3
  2978  01EB  0852               	movf	??___ftadd+3,w
  2979  01EC  00D4               	movwf	___ftadd@exp2
  2980  01ED  0855               	movf	___ftadd@exp1,w
  2981  01EE  1903               	btfsc	3,2
  2982  01EF  29FC               	goto	l2406
  2983  01F0  0854               	movf	___ftadd@exp2,w
  2984  01F1  0255               	subwf	___ftadd@exp1,w
  2985  01F2  1803               	skipnc
  2986  01F3  2A03               	goto	l2410
  2987  01F4  0355               	decf	___ftadd@exp1,w
  2988  01F5  3AFF               	xorlw	255
  2989  01F6  0754               	addwf	___ftadd@exp2,w
  2990  01F7  00CF               	movwf	??___ftadd
  2991  01F8  3019               	movlw	25
  2992  01F9  024F               	subwf	??___ftadd,w
  2993  01FA  1C03               	skipc
  2994  01FB  2A03               	goto	l2410
  2995  01FC                     l2406:	
  2996  01FC  084C               	movf	___ftadd@f2,w
  2997  01FD  00C9               	movwf	?___ftadd
  2998  01FE  084D               	movf	___ftadd@f2+1,w
  2999  01FF  00CA               	movwf	?___ftadd+1
  3000  0200  084E               	movf	___ftadd@f2+2,w
  3001  0201  00CB               	movwf	?___ftadd+2
  3002  0202  0008               	return
  3003  0203                     l2410:	
  3004  0203  0854               	movf	___ftadd@exp2,w
  3005  0204  1903               	btfsc	3,2
  3006  0205  0008               	return
  3007  0206  0855               	movf	___ftadd@exp1,w
  3008  0207  0254               	subwf	___ftadd@exp2,w
  3009  0208  1803               	skipnc
  3010  0209  2A12               	goto	l2416
  3011  020A  0354               	decf	___ftadd@exp2,w
  3012  020B  3AFF               	xorlw	255
  3013  020C  0755               	addwf	___ftadd@exp1,w
  3014  020D  00CF               	movwf	??___ftadd
  3015  020E  3019               	movlw	25
  3016  020F  024F               	subwf	??___ftadd,w
  3017  0210  1803               	btfsc	3,0
  3018  0211  0008               	return
  3019  0212                     l2416:	
  3020  0212  3006               	movlw	6
  3021  0213  00CF               	movwf	??___ftadd
  3022  0214  084F               	movf	??___ftadd,w
  3023  0215  00D3               	movwf	___ftadd@sign
  3024  0216  1BCB               	btfsc	___ftadd@f1+2,7
  3025  0217  17D3               	bsf	___ftadd@sign,7
  3026  0218  1BCE               	btfsc	___ftadd@f2+2,7
  3027  0219  1753               	bsf	___ftadd@sign,6
  3028  021A  17CA               	bsf	___ftadd@f1+1,7
  3029  021B  30FF               	movlw	255
  3030  021C  05C9               	andwf	___ftadd@f1,f
  3031  021D  30FF               	movlw	255
  3032  021E  05CA               	andwf	___ftadd@f1+1,f
  3033  021F  3000               	movlw	0
  3034  0220  05CB               	andwf	___ftadd@f1+2,f
  3035  0221  17CD               	bsf	___ftadd@f2+1,7
  3036  0222  30FF               	movlw	255
  3037  0223  05CC               	andwf	___ftadd@f2,f
  3038  0224  30FF               	movlw	255
  3039  0225  05CD               	andwf	___ftadd@f2+1,f
  3040  0226  3000               	movlw	0
  3041  0227  05CE               	andwf	___ftadd@f2+2,f
  3042  0228  0854               	movf	___ftadd@exp2,w
  3043  0229  0255               	subwf	___ftadd@exp1,w
  3044  022A  1803               	skipnc
  3045  022B  2A52               	goto	l2438
  3046  022C                     l2428:	
  3047  022C  3001               	movlw	1
  3048  022D                     u3215:	
  3049  022D  1003               	clrc
  3050  022E  0DCC               	rlf	___ftadd@f2,f
  3051  022F  0DCD               	rlf	___ftadd@f2+1,f
  3052  0230  0DCE               	rlf	___ftadd@f2+2,f
  3053  0231  3EFF               	addlw	-1
  3054  0232  1D03               	skipz
  3055  0233  2A2D               	goto	u3215
  3056  0234  3001               	movlw	1
  3057  0235  02D4               	subwf	___ftadd@exp2,f
  3058  0236  0854               	movf	___ftadd@exp2,w
  3059  0237  0655               	xorwf	___ftadd@exp1,w
  3060  0238  1903               	skipnz
  3061  0239  2A4D               	goto	l2436
  3062  023A  3001               	movlw	1
  3063  023B  02D3               	subwf	___ftadd@sign,f
  3064  023C  0853               	movf	___ftadd@sign,w
  3065  023D  3907               	andlw	7
  3066  023E  1903               	btfsc	3,2
  3067  023F  2A4D               	goto	l2436
  3068  0240  2A2C               	goto	l2428
  3069  0241                     l2434:	
  3070  0241  3001               	movlw	1
  3071  0242                     u3245:	
  3072  0242  1003               	clrc
  3073  0243  0CCB               	rrf	___ftadd@f1+2,f
  3074  0244  0CCA               	rrf	___ftadd@f1+1,f
  3075  0245  0CC9               	rrf	___ftadd@f1,f
  3076  0246  3EFF               	addlw	-1
  3077  0247  1D03               	skipz
  3078  0248  2A42               	goto	u3245
  3079  0249  3001               	movlw	1
  3080  024A  00CF               	movwf	??___ftadd
  3081  024B  084F               	movf	??___ftadd,w
  3082  024C  07D5               	addwf	___ftadd@exp1,f
  3083  024D                     l2436:	
  3084  024D  0855               	movf	___ftadd@exp1,w
  3085  024E  0654               	xorwf	___ftadd@exp2,w
  3086  024F  1903               	btfsc	3,2
  3087  0250  2A7B               	goto	l705
  3088  0251  2A41               	goto	l2434
  3089  0252                     l2438:	
  3090  0252  0855               	movf	___ftadd@exp1,w
  3091  0253  0254               	subwf	___ftadd@exp2,w
  3092  0254  1803               	skipnc
  3093  0255  2A7B               	goto	l705
  3094  0256                     l2440:	
  3095  0256  3001               	movlw	1
  3096  0257                     u3275:	
  3097  0257  1003               	clrc
  3098  0258  0DC9               	rlf	___ftadd@f1,f
  3099  0259  0DCA               	rlf	___ftadd@f1+1,f
  3100  025A  0DCB               	rlf	___ftadd@f1+2,f
  3101  025B  3EFF               	addlw	-1
  3102  025C  1D03               	skipz
  3103  025D  2A57               	goto	u3275
  3104  025E  3001               	movlw	1
  3105  025F  02D5               	subwf	___ftadd@exp1,f
  3106  0260  0854               	movf	___ftadd@exp2,w
  3107  0261  0655               	xorwf	___ftadd@exp1,w
  3108  0262  1903               	skipnz
  3109  0263  2A77               	goto	l2448
  3110  0264  3001               	movlw	1
  3111  0265  02D3               	subwf	___ftadd@sign,f
  3112  0266  0853               	movf	___ftadd@sign,w
  3113  0267  3907               	andlw	7
  3114  0268  1903               	btfsc	3,2
  3115  0269  2A77               	goto	l2448
  3116  026A  2A56               	goto	l2440
  3117  026B                     l2446:	
  3118  026B  3001               	movlw	1
  3119  026C                     u3305:	
  3120  026C  1003               	clrc
  3121  026D  0CCE               	rrf	___ftadd@f2+2,f
  3122  026E  0CCD               	rrf	___ftadd@f2+1,f
  3123  026F  0CCC               	rrf	___ftadd@f2,f
  3124  0270  3EFF               	addlw	-1
  3125  0271  1D03               	skipz
  3126  0272  2A6C               	goto	u3305
  3127  0273  3001               	movlw	1
  3128  0274  00CF               	movwf	??___ftadd
  3129  0275  084F               	movf	??___ftadd,w
  3130  0276  07D4               	addwf	___ftadd@exp2,f
  3131  0277                     l2448:	
  3132  0277  0855               	movf	___ftadd@exp1,w
  3133  0278  0654               	xorwf	___ftadd@exp2,w
  3134  0279  1D03               	skipz
  3135  027A  2A6B               	goto	l2446
  3136  027B                     l705:	
  3137  027B  1FD3               	btfss	___ftadd@sign,7
  3138  027C  2A8D               	goto	l2452
  3139  027D  30FF               	movlw	255
  3140  027E  06C9               	xorwf	___ftadd@f1,f
  3141  027F  30FF               	movlw	255
  3142  0280  06CA               	xorwf	___ftadd@f1+1,f
  3143  0281  30FF               	movlw	255
  3144  0282  06CB               	xorwf	___ftadd@f1+2,f
  3145  0283  3001               	movlw	1
  3146  0284  07C9               	addwf	___ftadd@f1,f
  3147  0285  3000               	movlw	0
  3148  0286  1803               	skipnc
  3149  0287  3001               	movlw	1
  3150  0288  07CA               	addwf	___ftadd@f1+1,f
  3151  0289  3000               	movlw	0
  3152  028A  1803               	skipnc
  3153  028B  3001               	movlw	1
  3154  028C  07CB               	addwf	___ftadd@f1+2,f
  3155  028D                     l2452:	
  3156  028D  1F53               	btfss	___ftadd@sign,6
  3157  028E  2A9F               	goto	l2456
  3158  028F  30FF               	movlw	255
  3159  0290  06CC               	xorwf	___ftadd@f2,f
  3160  0291  30FF               	movlw	255
  3161  0292  06CD               	xorwf	___ftadd@f2+1,f
  3162  0293  30FF               	movlw	255
  3163  0294  06CE               	xorwf	___ftadd@f2+2,f
  3164  0295  3001               	movlw	1
  3165  0296  07CC               	addwf	___ftadd@f2,f
  3166  0297  3000               	movlw	0
  3167  0298  1803               	skipnc
  3168  0299  3001               	movlw	1
  3169  029A  07CD               	addwf	___ftadd@f2+1,f
  3170  029B  3000               	movlw	0
  3171  029C  1803               	skipnc
  3172  029D  3001               	movlw	1
  3173  029E  07CE               	addwf	___ftadd@f2+2,f
  3174  029F                     l2456:	
  3175  029F  01D3               	clrf	___ftadd@sign
  3176  02A0  0849               	movf	___ftadd@f1,w
  3177  02A1  07CC               	addwf	___ftadd@f2,f
  3178  02A2  084A               	movf	___ftadd@f1+1,w
  3179  02A3  1103               	clrz
  3180  02A4  1803               	skipnc
  3181  02A5  0A4A               	incf	___ftadd@f1+1,w
  3182  02A6  1D03               	btfss	3,2
  3183  02A7  07CD               	addwf	___ftadd@f2+1,f
  3184  02A8  084B               	movf	___ftadd@f1+2,w
  3185  02A9  1103               	clrz
  3186  02AA  1803               	skipnc
  3187  02AB  0A4B               	incf	___ftadd@f1+2,w
  3188  02AC  1D03               	btfss	3,2
  3189  02AD  07CE               	addwf	___ftadd@f2+2,f
  3190  02AE  1FCE               	btfss	___ftadd@f2+2,7
  3191  02AF  2AC2               	goto	l2466
  3192  02B0  30FF               	movlw	255
  3193  02B1  06CC               	xorwf	___ftadd@f2,f
  3194  02B2  30FF               	movlw	255
  3195  02B3  06CD               	xorwf	___ftadd@f2+1,f
  3196  02B4  30FF               	movlw	255
  3197  02B5  06CE               	xorwf	___ftadd@f2+2,f
  3198  02B6  3001               	movlw	1
  3199  02B7  07CC               	addwf	___ftadd@f2,f
  3200  02B8  3000               	movlw	0
  3201  02B9  1803               	skipnc
  3202  02BA  3001               	movlw	1
  3203  02BB  07CD               	addwf	___ftadd@f2+1,f
  3204  02BC  3000               	movlw	0
  3205  02BD  1803               	skipnc
  3206  02BE  3001               	movlw	1
  3207  02BF  07CE               	addwf	___ftadd@f2+2,f
  3208  02C0  01D3               	clrf	___ftadd@sign
  3209  02C1  0AD3               	incf	___ftadd@sign,f
  3210  02C2                     l2466:	
  3211  02C2  084C               	movf	___ftadd@f2,w
  3212  02C3  00A0               	movwf	___ftpack@arg
  3213  02C4  084D               	movf	___ftadd@f2+1,w
  3214  02C5  00A1               	movwf	___ftpack@arg+1
  3215  02C6  084E               	movf	___ftadd@f2+2,w
  3216  02C7  00A2               	movwf	___ftpack@arg+2
  3217  02C8  0855               	movf	___ftadd@exp1,w
  3218  02C9  00CF               	movwf	??___ftadd
  3219  02CA  084F               	movf	??___ftadd,w
  3220  02CB  00A3               	movwf	___ftpack@exp
  3221  02CC  0853               	movf	___ftadd@sign,w
  3222  02CD  00D0               	movwf	??___ftadd+1
  3223  02CE  0850               	movf	??___ftadd+1,w
  3224  02CF  00A4               	movwf	___ftpack@sign
  3225  02D0  120A  118A  2646   	fcall	___ftpack
  3226  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3227  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3228  02D5  0820               	movf	?___ftpack,w
  3229  02D6  00C9               	movwf	?___ftadd
  3230  02D7  0821               	movf	?___ftpack+1,w
  3231  02D8  00CA               	movwf	?___ftadd+1
  3232  02D9  0822               	movf	?___ftpack+2,w
  3233  02DA  00CB               	movwf	?___ftadd+2
  3234  02DB  0008               	return
  3235  02DC                     __end_of___ftadd:	
  3236                           
  3237                           	psect	text8
  3238  0646                     __ptext8:	
  3239 ;; *************** function ___ftpack *****************
  3240 ;; Defined at:
  3241 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  arg             3    0[BANK0 ] unsigned um
  3244 ;;  exp             1    3[BANK0 ] unsigned char 
  3245 ;;  sign            1    4[BANK0 ] unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  3    0[BANK0 ] float 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0       5       0       0       0
  3258 ;;      Locals:         0       0       0       0       0
  3259 ;;      Temps:          3       0       0       0       0
  3260 ;;      Totals:         3       5       0       0       0
  3261 ;;Total ram usage:        8 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		___ftadd
  3268 ;;		___ftdiv
  3269 ;;		___ftmul
  3270 ;;		___lwtoft
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function ___ftpack
  3276  0646                     ___ftpack:	
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3280  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0648  0823               	movf	___ftpack@exp,w
  3283  0649  1903               	btfsc	3,2
  3284  064A  2E50               	goto	l2314
  3285  064B  0822               	movf	___ftpack@arg+2,w
  3286  064C  0421               	iorwf	___ftpack@arg+1,w
  3287  064D  0420               	iorwf	___ftpack@arg,w
  3288  064E  1D03               	skipz
  3289  064F  2E63               	goto	l2320
  3290  0650                     l2314:	
  3291  0650  3000               	movlw	0
  3292  0651  00A0               	movwf	?___ftpack
  3293  0652  3000               	movlw	0
  3294  0653  00A1               	movwf	?___ftpack+1
  3295  0654  3000               	movlw	0
  3296  0655  00A2               	movwf	?___ftpack+2
  3297  0656  0008               	return
  3298  0657                     l2318:	
  3299  0657  3001               	movlw	1
  3300  0658  00F4               	movwf	??___ftpack
  3301  0659  0874               	movf	??___ftpack,w
  3302  065A  07A3               	addwf	___ftpack@exp,f
  3303  065B  3001               	movlw	1
  3304  065C                     u2925:	
  3305  065C  1003               	clrc
  3306  065D  0CA2               	rrf	___ftpack@arg+2,f
  3307  065E  0CA1               	rrf	___ftpack@arg+1,f
  3308  065F  0CA0               	rrf	___ftpack@arg,f
  3309  0660  3EFF               	addlw	-1
  3310  0661  1D03               	skipz
  3311  0662  2E5C               	goto	u2925
  3312  0663                     l2320:	
  3313  0663  30FE               	movlw	254
  3314  0664  0522               	andwf	___ftpack@arg+2,w
  3315  0665  1903               	btfsc	3,2
  3316  0666  2E7E               	goto	l674
  3317  0667  2E57               	goto	l2318
  3318  0668                     l2322:	
  3319  0668  3001               	movlw	1
  3320  0669  00F4               	movwf	??___ftpack
  3321  066A  0874               	movf	??___ftpack,w
  3322  066B  07A3               	addwf	___ftpack@exp,f
  3323  066C  3001               	movlw	1
  3324  066D  07A0               	addwf	___ftpack@arg,f
  3325  066E  3000               	movlw	0
  3326  066F  1803               	skipnc
  3327  0670  3001               	movlw	1
  3328  0671  07A1               	addwf	___ftpack@arg+1,f
  3329  0672  3000               	movlw	0
  3330  0673  1803               	skipnc
  3331  0674  3001               	movlw	1
  3332  0675  07A2               	addwf	___ftpack@arg+2,f
  3333  0676  3001               	movlw	1
  3334  0677                     u2945:	
  3335  0677  1003               	clrc
  3336  0678  0CA2               	rrf	___ftpack@arg+2,f
  3337  0679  0CA1               	rrf	___ftpack@arg+1,f
  3338  067A  0CA0               	rrf	___ftpack@arg,f
  3339  067B  3EFF               	addlw	-1
  3340  067C  1D03               	skipz
  3341  067D  2E77               	goto	u2945
  3342  067E                     l674:	
  3343  067E  30FF               	movlw	255
  3344  067F  0522               	andwf	___ftpack@arg+2,w
  3345  0680  1903               	btfsc	3,2
  3346  0681  2E8D               	goto	l2330
  3347  0682  2E68               	goto	l2322
  3348  0683                     l2328:	
  3349  0683  3001               	movlw	1
  3350  0684  02A3               	subwf	___ftpack@exp,f
  3351  0685  3001               	movlw	1
  3352  0686                     u2965:	
  3353  0686  1003               	clrc
  3354  0687  0DA0               	rlf	___ftpack@arg,f
  3355  0688  0DA1               	rlf	___ftpack@arg+1,f
  3356  0689  0DA2               	rlf	___ftpack@arg+2,f
  3357  068A  3EFF               	addlw	-1
  3358  068B  1D03               	skipz
  3359  068C  2E86               	goto	u2965
  3360  068D                     l2330:	
  3361  068D  1BA1               	btfsc	___ftpack@arg+1,7
  3362  068E  2E93               	goto	l681
  3363  068F  3002               	movlw	2
  3364  0690  0223               	subwf	___ftpack@exp,w
  3365  0691  1803               	skipnc
  3366  0692  2E83               	goto	l2328
  3367  0693                     l681:	
  3368  0693  1823               	btfsc	___ftpack@exp,0
  3369  0694  2E9B               	goto	l682
  3370  0695  30FF               	movlw	255
  3371  0696  05A0               	andwf	___ftpack@arg,f
  3372  0697  307F               	movlw	127
  3373  0698  05A1               	andwf	___ftpack@arg+1,f
  3374  0699  30FF               	movlw	255
  3375  069A  05A2               	andwf	___ftpack@arg+2,f
  3376  069B                     l682:	
  3377  069B  1003               	clrc
  3378  069C  0CA3               	rrf	___ftpack@exp,f
  3379  069D  0823               	movf	___ftpack@exp,w
  3380  069E  00F4               	movwf	??___ftpack
  3381  069F  01F5               	clrf	??___ftpack+1
  3382  06A0  01F6               	clrf	??___ftpack+2
  3383  06A1  3010               	movlw	16
  3384  06A2                     u3005:	
  3385  06A2  1003               	clrc
  3386  06A3  0DF4               	rlf	??___ftpack,f
  3387  06A4  0DF5               	rlf	??___ftpack+1,f
  3388  06A5  0DF6               	rlf	??___ftpack+2,f
  3389  06A6  3EFF               	addlw	-1
  3390  06A7  1D03               	skipz
  3391  06A8  2EA2               	goto	u3005
  3392  06A9  0874               	movf	??___ftpack,w
  3393  06AA  04A0               	iorwf	___ftpack@arg,f
  3394  06AB  0875               	movf	??___ftpack+1,w
  3395  06AC  04A1               	iorwf	___ftpack@arg+1,f
  3396  06AD  0876               	movf	??___ftpack+2,w
  3397  06AE  04A2               	iorwf	___ftpack@arg+2,f
  3398  06AF  0824               	movf	___ftpack@sign,w
  3399  06B0  1903               	btfsc	3,2
  3400  06B1  0008               	return
  3401  06B2  17A2               	bsf	___ftpack@arg+2,7
  3402  06B3  0008               	return
  3403  06B4                     __end_of___ftpack:	
  3404                           
  3405                           	psect	text9
  3406  0033                     __ptext9:	
  3407 ;; *************** function _sprintf *****************
  3408 ;; Defined at:
  3409 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  sp              1    wreg     PTR unsigned char 
  3412 ;;		 -> sTemperature(2), 
  3413 ;;  f               1   75[BANK0 ] PTR const unsigned char 
  3414 ;;		 -> STR_2(4), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  sp              1    8[BANK1 ] PTR unsigned char 
  3417 ;;		 -> sTemperature(2), 
  3418 ;;  tmpval          4    0        struct .
  3419 ;;  width           2    9[BANK1 ] int 
  3420 ;;  val             2    6[BANK1 ] unsigned int 
  3421 ;;  cp              2    0        PTR const unsigned char 
  3422 ;;  len             2    0        unsigned int 
  3423 ;;  c               1   11[BANK1 ] char 
  3424 ;;  flag            1    5[BANK1 ] unsigned char 
  3425 ;;  prec            1    4[BANK1 ] char 
  3426 ;;  ap              1    3[BANK1 ] PTR void [1]
  3427 ;;		 -> ?_sprintf(2), 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2   75[BANK0 ] int 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       3       0       0       0
  3438 ;;      Locals:         0       0       9       0       0
  3439 ;;      Temps:          0       0       3       0       0
  3440 ;;      Totals:         0       3      12       0       0
  3441 ;;Total ram usage:       15 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		___lwdiv
  3446 ;;		___lwmod
  3447 ;;		___wmul
  3448 ;;		_isdigit
  3449 ;; This function is called by:
  3450 ;;		_temp_Display
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _sprintf
  3456  0033                     _sprintf:	
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3460                           ;sprintf@sp stored from wreg
  3461  0033  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0034  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0035  00A8               	movwf	sprintf@sp^(0+128)
  3464                           
  3465                           ;doprnt.c: 494: va_list ap;
  3466                           ;doprnt.c: 499: signed char c;
  3467                           ;doprnt.c: 501: int width;
  3468                           ;doprnt.c: 506: signed char prec;
  3469                           ;doprnt.c: 508: unsigned char flag;
  3470                           ;doprnt.c: 523: union {
  3471                           ;doprnt.c: 524: unsigned long vd;
  3472                           ;doprnt.c: 525: double integ;
  3473                           ;doprnt.c: 526: } tmpval;
  3474                           ;doprnt.c: 528: unsigned int val;
  3475                           ;doprnt.c: 529: unsigned len;
  3476                           ;doprnt.c: 530: const char * cp;
  3477                           ;doprnt.c: 533: *ap = __va_start();
  3478  0036  306C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3479  0037  00A0               	movwf	??_sprintf^(0+128)
  3480  0038  0820               	movf	??_sprintf^(0+128),w
  3481  0039  00A3               	movwf	sprintf@ap^(0+128)
  3482  003A                     l2766:	
  3483                           ;doprnt.c: 536: while(c = *f++) {
  3484                           
  3485  003A  3001               	movlw	1
  3486  003B  1283               	bcf	3,5	;RP0=0, select bank0
  3487  003C  1303               	bcf	3,6	;RP1=0, select bank0
  3488  003D  07EB               	addwf	sprintf@f,f
  3489  003E  30FF               	movlw	-1
  3490  003F  076B               	addwf	sprintf@f,w
  3491  0040  0084               	movwf	4
  3492  0041  120A  158A  200A  120A  118A  	fcall	stringdir
  3493  0046  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0047  1303               	bcf	3,6	;RP1=0, select bank1
  3495  0048  00A0               	movwf	??_sprintf^(0+128)
  3496  0049  0820               	movf	??_sprintf^(0+128),w
  3497  004A  00AB               	movwf	sprintf@c^(0+128)
  3498  004B  082B               	movf	sprintf@c^(0+128),w
  3499  004C  1903               	btfsc	3,2
  3500  004D  29CC               	goto	l2768
  3501                           
  3502                           ;doprnt.c: 538: if(c != '%')
  3503  004E  3025               	movlw	37
  3504  004F  062B               	xorwf	sprintf@c^(0+128),w
  3505  0050  1903               	btfsc	3,2
  3506  0051  285E               	goto	l2692
  3507                           
  3508                           ;doprnt.c: 540: {
  3509                           ;doprnt.c: 541: ((*sp++ = (c)));
  3510  0052  082B               	movf	sprintf@c^(0+128),w
  3511  0053  00A0               	movwf	??_sprintf^(0+128)
  3512  0054  0828               	movf	sprintf@sp^(0+128),w
  3513  0055  0084               	movwf	4
  3514  0056  0820               	movf	??_sprintf^(0+128),w
  3515  0057  1383               	bcf	3,7	;select IRP bank0
  3516  0058  0080               	movwf	0
  3517  0059  3001               	movlw	1
  3518  005A  00A0               	movwf	??_sprintf^(0+128)
  3519  005B  0820               	movf	??_sprintf^(0+128),w
  3520  005C  07A8               	addwf	sprintf@sp^(0+128),f
  3521                           
  3522                           ;doprnt.c: 542: continue;
  3523  005D  283A               	goto	l2766
  3524  005E                     l2692:	
  3525                           
  3526                           ;doprnt.c: 543: }
  3527                           ;doprnt.c: 546: width = 0;
  3528  005E  01A9               	clrf	sprintf@width^(0+128)
  3529  005F  01AA               	clrf	(sprintf@width+1)^(0+128)
  3530                           
  3531                           ;doprnt.c: 548: flag = 0;
  3532  0060  01A5               	clrf	sprintf@flag^(0+128)
  3533                           
  3534                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3535  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0063  086B               	movf	sprintf@f,w
  3538  0064  0084               	movwf	4
  3539  0065  120A  158A  200A  120A  118A  	fcall	stringdir
  3540  006A  120A  158A  24CC  120A  118A  	fcall	_isdigit
  3541  006F  1C03               	btfss	3,0
  3542  0070  28C3               	goto	l2708
  3543                           
  3544                           ;doprnt.c: 598: width = 0;
  3545  0071  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0072  1303               	bcf	3,6	;RP1=0, select bank1
  3547  0073  01A9               	clrf	sprintf@width^(0+128)
  3548  0074  01AA               	clrf	(sprintf@width+1)^(0+128)
  3549  0075                     l2698:	
  3550                           ;doprnt.c: 599: do {
  3551                           
  3552                           
  3553                           ;doprnt.c: 600: width *= 10;
  3554  0075  300A               	movlw	10
  3555  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0078  00A0               	movwf	___wmul@multiplier
  3558  0079  3000               	movlw	0
  3559  007A  00A1               	movwf	___wmul@multiplier+1
  3560  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3561  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3562  007D  082A               	movf	(sprintf@width+1)^(0+128),w
  3563  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3564  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0080  00A3               	movwf	___wmul@multiplicand+1
  3566  0081  1683               	bsf	3,5	;RP0=1, select bank1
  3567  0082  1303               	bcf	3,6	;RP1=0, select bank1
  3568  0083  0829               	movf	sprintf@width^(0+128),w
  3569  0084  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0085  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0086  00A2               	movwf	___wmul@multiplicand
  3572  0087  120A  158A  256E  120A  118A  	fcall	___wmul
  3573  008C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  008D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  008E  0821               	movf	?___wmul+1,w
  3576  008F  1683               	bsf	3,5	;RP0=1, select bank1
  3577  0090  1303               	bcf	3,6	;RP1=0, select bank1
  3578  0091  00AA               	movwf	(sprintf@width+1)^(0+128)
  3579  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3580  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3581  0094  0820               	movf	?___wmul,w
  3582  0095  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0096  1303               	bcf	3,6	;RP1=0, select bank1
  3584  0097  00A9               	movwf	sprintf@width^(0+128)
  3585                           
  3586                           ;doprnt.c: 601: width += *f++ - '0';
  3587  0098  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0099  1303               	bcf	3,6	;RP1=0, select bank0
  3589  009A  086B               	movf	sprintf@f,w
  3590  009B  0084               	movwf	4
  3591  009C  120A  158A  200A  120A  118A  	fcall	stringdir
  3592  00A1  3ED0               	addlw	208
  3593  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  3594  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  3595  00A4  00A0               	movwf	??_sprintf^(0+128)
  3596  00A5  30FF               	movlw	255
  3597  00A6  1803               	skipnc
  3598  00A7  3000               	movlw	0
  3599  00A8  00A1               	movwf	(??_sprintf^(0+128)+1)
  3600  00A9  0820               	movf	??_sprintf^(0+128),w
  3601  00AA  07A9               	addwf	sprintf@width^(0+128),f
  3602  00AB  1803               	skipnc
  3603  00AC  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3604  00AD  0821               	movf	(??_sprintf+1)^(0+128),w
  3605  00AE  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3606  00AF  3001               	movlw	1
  3607  00B0  00A0               	movwf	??_sprintf^(0+128)
  3608  00B1  0820               	movf	??_sprintf^(0+128),w
  3609  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3610  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3611  00B4  07EB               	addwf	sprintf@f,f
  3612                           
  3613                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3614  00B5  086B               	movf	sprintf@f,w
  3615  00B6  0084               	movwf	4
  3616  00B7  120A  158A  200A  120A  118A  	fcall	stringdir
  3617  00BC  120A  158A  24CC  120A  118A  	fcall	_isdigit
  3618  00C1  1803               	btfsc	3,0
  3619  00C2  2875               	goto	l2698
  3620  00C3                     l2708:	
  3621                           ;doprnt.c: 822: }
  3622                           
  3623                           ;doprnt.c: 813: continue;
  3624                           
  3625                           ;doprnt.c: 802: default:
  3626                           
  3627                           ;doprnt.c: 698: case 'i':
  3628                           ;doprnt.c: 699: break;
  3629                           
  3630                           ;doprnt.c: 697: case 'd':
  3631                           
  3632                           ;doprnt.c: 638: goto alldone;
  3633                           
  3634                           ;doprnt.c: 637: case 0:
  3635                           
  3636                           ;doprnt.c: 608: }
  3637                           ;doprnt.c: 635: switch(c = *f++) {
  3638                           
  3639  00C3  3001               	movlw	1
  3640  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3641  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3642  00C6  07EB               	addwf	sprintf@f,f
  3643  00C7  30FF               	movlw	-1
  3644  00C8  076B               	addwf	sprintf@f,w
  3645  00C9  0084               	movwf	4
  3646  00CA  120A  158A  200A  120A  118A  	fcall	stringdir
  3647  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  3648  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  3649  00D1  00AB               	movwf	sprintf@c^(0+128)
  3650                           
  3651                           ; Switch size 1, requested type "space"
  3652                           ; Number of cases is 3, Range of values is 0 to 105
  3653                           ; switch strategies available:
  3654                           ; Name         Instructions Cycles
  3655                           ; simple_byte           10     6 (average)
  3656                           ; jumptable            260     6 (fixed)
  3657                           ;	Chosen strategy is simple_byte
  3658  00D2  3A00               	xorlw	0	; case 0
  3659  00D3  1903               	skipnz
  3660  00D4  29CC               	goto	l2768
  3661  00D5  3A64               	xorlw	100	; case 100
  3662  00D6  1903               	skipnz
  3663  00D7  28DC               	goto	l2710
  3664  00D8  3A0D               	xorlw	13	; case 105
  3665  00D9  1903               	skipnz
  3666  00DA  28DC               	goto	l2710
  3667  00DB  283A               	goto	l2766
  3668  00DC                     l2710:	
  3669                           
  3670                           ;doprnt.c: 1253: {
  3671                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3672  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3673  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  3674  00DE  0823               	movf	sprintf@ap^(0+128),w
  3675  00DF  0084               	movwf	4
  3676  00E0  1383               	bcf	3,7	;select IRP bank0
  3677  00E1  0800               	movf	0,w
  3678  00E2  00A6               	movwf	sprintf@val^(0+128)
  3679  00E3  0A84               	incf	4,f
  3680  00E4  0800               	movf	0,w
  3681  00E5  00A7               	movwf	(sprintf@val+1)^(0+128)
  3682  00E6  3002               	movlw	2
  3683  00E7  00A0               	movwf	??_sprintf^(0+128)
  3684  00E8  0820               	movf	??_sprintf^(0+128),w
  3685  00E9  07A3               	addwf	sprintf@ap^(0+128),f
  3686                           
  3687                           ;doprnt.c: 1261: if((int)val < 0) {
  3688  00EA  1FA7               	btfss	(sprintf@val+1)^(0+128),7
  3689  00EB  28F5               	goto	l2720
  3690                           
  3691                           ;doprnt.c: 1262: flag |= 0x03;
  3692  00EC  3003               	movlw	3
  3693  00ED  00A0               	movwf	??_sprintf^(0+128)
  3694  00EE  0820               	movf	??_sprintf^(0+128),w
  3695  00EF  04A5               	iorwf	sprintf@flag^(0+128),f
  3696                           
  3697                           ;doprnt.c: 1263: val = -val;
  3698  00F0  09A6               	comf	sprintf@val^(0+128),f
  3699  00F1  09A7               	comf	(sprintf@val+1)^(0+128),f
  3700  00F2  0AA6               	incf	sprintf@val^(0+128),f
  3701  00F3  1903               	skipnz
  3702  00F4  0AA7               	incf	(sprintf@val+1)^(0+128),f
  3703  00F5                     l2720:	
  3704                           
  3705                           ;doprnt.c: 1264: }
  3706                           ;doprnt.c: 1266: }
  3707                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3708  00F5  01AB               	clrf	sprintf@c^(0+128)
  3709  00F6  0AAB               	incf	sprintf@c^(0+128),f
  3710  00F7  3005               	movlw	5
  3711  00F8  062B               	xorwf	sprintf@c^(0+128),w
  3712  00F9  1903               	btfsc	3,2
  3713  00FA  291C               	goto	l2732
  3714  00FB                     l2726:	
  3715                           
  3716                           ;doprnt.c: 1306: if(val < dpowers[c])
  3717  00FB  082B               	movf	sprintf@c^(0+128),w
  3718  00FC  00A0               	movwf	??_sprintf^(0+128)
  3719  00FD  0720               	addwf	??_sprintf^(0+128),w
  3720  00FE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3721  00FF  0084               	movwf	4
  3722  0100  120A  158A  200A  120A  118A  	fcall	stringdir
  3723  0105  00A1               	movwf	(??_sprintf+1)^(0+128)
  3724  0106  120A  158A  200A  120A  118A  	fcall	stringdir
  3725  010B  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  3726  010C  0822               	movf	(??_sprintf+2)^(0+128),w
  3727  010D  0227               	subwf	(sprintf@val+1)^(0+128),w
  3728  010E  1D03               	skipz
  3729  010F  2912               	goto	u3895
  3730  0110  0821               	movf	(??_sprintf+1)^(0+128),w
  3731  0111  0226               	subwf	sprintf@val^(0+128),w
  3732  0112                     u3895:	
  3733  0112  1C03               	btfss	3,0
  3734  0113  291C               	goto	l2732
  3735                           
  3736                           ;doprnt.c: 1307: break;
  3737  0114  3001               	movlw	1
  3738  0115  00A0               	movwf	??_sprintf^(0+128)
  3739  0116  0820               	movf	??_sprintf^(0+128),w
  3740  0117  07AB               	addwf	sprintf@c^(0+128),f
  3741  0118  3005               	movlw	5
  3742  0119  062B               	xorwf	sprintf@c^(0+128),w
  3743  011A  1D03               	btfss	3,2
  3744  011B  28FB               	goto	l2726
  3745  011C                     l2732:	
  3746                           
  3747                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3748  011C  0829               	movf	sprintf@width^(0+128),w
  3749  011D  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3750  011E  1903               	btfsc	3,2
  3751  011F  292A               	goto	l418
  3752  0120  0825               	movf	sprintf@flag^(0+128),w
  3753  0121  3903               	andlw	3
  3754  0122  1903               	btfsc	3,2
  3755  0123  292A               	goto	l418
  3756                           
  3757                           ;doprnt.c: 1346: width--;
  3758  0124  30FF               	movlw	255
  3759  0125  07A9               	addwf	sprintf@width^(0+128),f
  3760  0126  1803               	skipnc
  3761  0127  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3762  0128  30FF               	movlw	255
  3763  0129  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3764  012A                     l418:	
  3765                           
  3766                           ;doprnt.c: 1381: if(width > c)
  3767  012A  082B               	movf	sprintf@c^(0+128),w
  3768  012B  00A0               	movwf	??_sprintf^(0+128)
  3769  012C  01A1               	clrf	(??_sprintf^(0+128)+1)
  3770  012D  1BA0               	btfsc	??_sprintf^(0+128),7
  3771  012E  03A1               	decf	(??_sprintf^(0+128)+1),f
  3772  012F  0821               	movf	(??_sprintf+1)^(0+128),w
  3773  0130  3A80               	xorlw	128
  3774  0131  00A2               	movwf	(??_sprintf+2)^(0+128)
  3775  0132  082A               	movf	(sprintf@width+1)^(0+128),w
  3776  0133  3A80               	xorlw	128
  3777  0134  0222               	subwf	(??_sprintf+2)^(0+128),w
  3778  0135  1D03               	skipz
  3779  0136  2939               	goto	u3935
  3780  0137  0829               	movf	sprintf@width^(0+128),w
  3781  0138  0220               	subwf	??_sprintf^(0+128),w
  3782  0139                     u3935:	
  3783  0139  1803               	skipnc
  3784  013A  2949               	goto	l2740
  3785                           
  3786                           ;doprnt.c: 1382: width -= c;
  3787  013B  1683               	bsf	3,5	;RP0=1, select bank1
  3788  013C  1303               	bcf	3,6	;RP1=0, select bank1
  3789  013D  082B               	movf	sprintf@c^(0+128),w
  3790  013E  00A0               	movwf	??_sprintf^(0+128)
  3791  013F  01A1               	clrf	(??_sprintf^(0+128)+1)
  3792  0140  1BA0               	btfsc	??_sprintf^(0+128),7
  3793  0141  03A1               	decf	(??_sprintf^(0+128)+1),f
  3794  0142  0820               	movf	??_sprintf^(0+128),w
  3795  0143  02A9               	subwf	sprintf@width^(0+128),f
  3796  0144  0821               	movf	(??_sprintf+1)^(0+128),w
  3797  0145  1C03               	skipc
  3798  0146  03AA               	decf	(sprintf@width+1)^(0+128),f
  3799  0147  02AA               	subwf	(sprintf@width+1)^(0+128),f
  3800  0148  294D               	goto	l2742
  3801  0149                     l2740:	
  3802                           
  3803                           ;doprnt.c: 1383: else
  3804                           ;doprnt.c: 1384: width = 0;
  3805  0149  1683               	bsf	3,5	;RP0=1, select bank1
  3806  014A  1303               	bcf	3,6	;RP1=0, select bank1
  3807  014B  01A9               	clrf	sprintf@width^(0+128)
  3808  014C  01AA               	clrf	(sprintf@width+1)^(0+128)
  3809  014D                     l2742:	
  3810                           
  3811                           ;doprnt.c: 1422: {
  3812                           ;doprnt.c: 1424: if(width
  3813                           ;doprnt.c: 1428: )
  3814  014D  0829               	movf	sprintf@width^(0+128),w
  3815  014E  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3816  014F  1903               	btfsc	3,2
  3817  0150  2966               	goto	l2750
  3818  0151                     l2744:	
  3819                           ;doprnt.c: 1429: do
  3820                           
  3821                           
  3822                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3823  0151  3020               	movlw	32
  3824  0152  00A0               	movwf	??_sprintf^(0+128)
  3825  0153  0828               	movf	sprintf@sp^(0+128),w
  3826  0154  0084               	movwf	4
  3827  0155  0820               	movf	??_sprintf^(0+128),w
  3828  0156  1383               	bcf	3,7	;select IRP bank0
  3829  0157  0080               	movwf	0
  3830  0158  3001               	movlw	1
  3831  0159  00A0               	movwf	??_sprintf^(0+128)
  3832  015A  0820               	movf	??_sprintf^(0+128),w
  3833  015B  07A8               	addwf	sprintf@sp^(0+128),f
  3834                           
  3835                           ;doprnt.c: 1431: while(--width);
  3836  015C  30FF               	movlw	255
  3837  015D  07A9               	addwf	sprintf@width^(0+128),f
  3838  015E  1803               	skipnc
  3839  015F  0AAA               	incf	(sprintf@width+1)^(0+128),f
  3840  0160  30FF               	movlw	255
  3841  0161  07AA               	addwf	(sprintf@width+1)^(0+128),f
  3842  0162  0829               	movf	sprintf@width^(0+128),w
  3843  0163  042A               	iorwf	(sprintf@width+1)^(0+128),w
  3844  0164  1D03               	btfss	3,2
  3845  0165  2951               	goto	l2744
  3846  0166                     l2750:	
  3847                           
  3848                           ;doprnt.c: 1438: if(flag & 0x03)
  3849  0166  0825               	movf	sprintf@flag^(0+128),w
  3850  0167  3903               	andlw	3
  3851  0168  1903               	btfsc	3,2
  3852  0169  2975               	goto	l2756
  3853                           
  3854                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3855  016A  302D               	movlw	45
  3856  016B  00A0               	movwf	??_sprintf^(0+128)
  3857  016C  0828               	movf	sprintf@sp^(0+128),w
  3858  016D  0084               	movwf	4
  3859  016E  0820               	movf	??_sprintf^(0+128),w
  3860  016F  1383               	bcf	3,7	;select IRP bank0
  3861  0170  0080               	movwf	0
  3862  0171  3001               	movlw	1
  3863  0172  00A0               	movwf	??_sprintf^(0+128)
  3864  0173  0820               	movf	??_sprintf^(0+128),w
  3865  0174  07A8               	addwf	sprintf@sp^(0+128),f
  3866  0175                     l2756:	
  3867                           
  3868                           ;doprnt.c: 1469: }
  3869                           ;doprnt.c: 1472: prec = c;
  3870  0175  082B               	movf	sprintf@c^(0+128),w
  3871  0176  00A0               	movwf	??_sprintf^(0+128)
  3872  0177  0820               	movf	??_sprintf^(0+128),w
  3873  0178  00A4               	movwf	sprintf@prec^(0+128)
  3874  0179                     l2764:	
  3875                           ;doprnt.c: 1474: while(prec--) {
  3876                           
  3877  0179  30FF               	movlw	255
  3878  017A  00A0               	movwf	??_sprintf^(0+128)
  3879  017B  0820               	movf	??_sprintf^(0+128),w
  3880  017C  07A4               	addwf	sprintf@prec^(0+128),f
  3881  017D  0A24               	incf	sprintf@prec^(0+128),w
  3882  017E  1903               	btfsc	3,2
  3883  017F  283A               	goto	l2766
  3884                           
  3885                           ;doprnt.c: 1478: {
  3886                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3887  0180  300A               	movlw	10
  3888  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0183  00A7               	movwf	___lwmod@divisor
  3891  0184  3000               	movlw	0
  3892  0185  00A8               	movwf	___lwmod@divisor+1
  3893  0186  1683               	bsf	3,5	;RP0=1, select bank1
  3894  0187  1303               	bcf	3,6	;RP1=0, select bank1
  3895  0188  0824               	movf	sprintf@prec^(0+128),w
  3896  0189  00A0               	movwf	??_sprintf^(0+128)
  3897  018A  0720               	addwf	??_sprintf^(0+128),w
  3898  018B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3899  018C  0084               	movwf	4
  3900  018D  120A  158A  200A  120A  118A  	fcall	stringdir
  3901  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0194  00A0               	movwf	___lwdiv@divisor
  3904  0195  120A  158A  200A  120A  118A  	fcall	stringdir
  3905  019A  00A1               	movwf	___lwdiv@divisor+1
  3906  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3907  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3908  019D  0827               	movf	(sprintf@val+1)^(0+128),w
  3909  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3910  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3911  01A0  00A3               	movwf	___lwdiv@dividend+1
  3912  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  3913  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  3914  01A3  0826               	movf	sprintf@val^(0+128),w
  3915  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3916  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3917  01A6  00A2               	movwf	___lwdiv@dividend
  3918  01A7  120A  158A  261E  120A  118A  	fcall	___lwdiv
  3919  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3920  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3921  01AE  0821               	movf	?___lwdiv+1,w
  3922  01AF  00AA               	movwf	___lwmod@dividend+1
  3923  01B0  0820               	movf	?___lwdiv,w
  3924  01B1  00A9               	movwf	___lwmod@dividend
  3925  01B2  120A  118A  27CB  120A  118A  	fcall	___lwmod
  3926  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3927  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3928  01B9  0827               	movf	?___lwmod,w
  3929  01BA  3E30               	addlw	48
  3930  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3931  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3932  01BD  00A1               	movwf	(??_sprintf+1)^(0+128)
  3933  01BE  0821               	movf	(??_sprintf+1)^(0+128),w
  3934  01BF  00AB               	movwf	sprintf@c^(0+128)
  3935                           
  3936                           ;doprnt.c: 1523: }
  3937                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3938  01C0  082B               	movf	sprintf@c^(0+128),w
  3939  01C1  00A0               	movwf	??_sprintf^(0+128)
  3940  01C2  0828               	movf	sprintf@sp^(0+128),w
  3941  01C3  0084               	movwf	4
  3942  01C4  0820               	movf	??_sprintf^(0+128),w
  3943  01C5  1383               	bcf	3,7	;select IRP bank0
  3944  01C6  0080               	movwf	0
  3945  01C7  3001               	movlw	1
  3946  01C8  00A0               	movwf	??_sprintf^(0+128)
  3947  01C9  0820               	movf	??_sprintf^(0+128),w
  3948  01CA  07A8               	addwf	sprintf@sp^(0+128),f
  3949  01CB  2979               	goto	l2764
  3950  01CC                     l2768:	
  3951                           ;doprnt.c: 1525: }
  3952                           ;doprnt.c: 1533: }
  3953                           ;doprnt.c: 1535: alldone:
  3954                           
  3955                           
  3956                           ;doprnt.c: 1538: *sp = 0;
  3957  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  3958  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  3959  01CE  0828               	movf	sprintf@sp^(0+128),w
  3960  01CF  0084               	movwf	4
  3961  01D0  1383               	bcf	3,7	;select IRP bank0
  3962  01D1  0180               	clrf	0
  3963  01D2  0008               	return
  3964  01D3                     __end_of_sprintf:	
  3965                           ;doprnt.c: 1540: return 0;
  3966                           ;	Return value of _sprintf is never used
  3967                           
  3968                           
  3969                           	psect	text10
  3970  0CCC                     __ptext10:	
  3971 ;; *************** function _isdigit *****************
  3972 ;; Defined at:
  3973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  c               1    wreg     unsigned char 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  c               1    5[COMMON] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;		None               void
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       0       0       0       0
  3988 ;;      Locals:         2       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         2       0       0       0       0
  3991 ;;Total ram usage:        2 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    1
  3994 ;; This function calls:
  3995 ;;		Nothing
  3996 ;; This function is called by:
  3997 ;;		_sprintf
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function _isdigit
  4003  0CCC                     _isdigit:	
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4007                           ;isdigit@c stored from wreg
  4008  0CCC  00F5               	movwf	isdigit@c
  4009  0CCD  01F4               	clrf	_isdigit$1326
  4010  0CCE  303A               	movlw	58
  4011  0CCF  0275               	subwf	isdigit@c,w
  4012  0CD0  1803               	skipnc
  4013  0CD1  2CD8               	goto	l1766
  4014  0CD2  3030               	movlw	48
  4015  0CD3  0275               	subwf	isdigit@c,w
  4016  0CD4  1C03               	skipc
  4017  0CD5  2CD8               	goto	l1766
  4018  0CD6  01F4               	clrf	_isdigit$1326
  4019  0CD7  0AF4               	incf	_isdigit$1326,f
  4020  0CD8                     l1766:	
  4021  0CD8  0C74               	rrf	_isdigit$1326,w
  4022  0CD9  0008               	return
  4023  0CDA                     __end_of_isdigit:	
  4024                           
  4025                           	psect	text11
  4026  0D6E                     __ptext11:	
  4027 ;; *************** function ___wmul *****************
  4028 ;; Defined at:
  4029 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4032 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  product         2    4[COMMON] unsigned int 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  2    0[BANK0 ] unsigned int 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         0       4       0       0       0
  4045 ;;      Locals:         2       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0
  4047 ;;      Totals:         2       4       0       0       0
  4048 ;;Total ram usage:        6 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_sprintf
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function ___wmul
  4060  0D6E                     ___wmul:	
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4064  0D6E  01F4               	clrf	___wmul@product
  4065  0D6F  01F5               	clrf	___wmul@product+1
  4066  0D70                     l2374:	
  4067  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0D72  1C20               	btfss	___wmul@multiplier,0
  4070  0D73  2D7A               	goto	l513
  4071  0D74  0822               	movf	___wmul@multiplicand,w
  4072  0D75  07F4               	addwf	___wmul@product,f
  4073  0D76  1803               	skipnc
  4074  0D77  0AF5               	incf	___wmul@product+1,f
  4075  0D78  0823               	movf	___wmul@multiplicand+1,w
  4076  0D79  07F5               	addwf	___wmul@product+1,f
  4077  0D7A                     l513:	
  4078  0D7A  3001               	movlw	1
  4079  0D7B                     u3045:	
  4080  0D7B  1003               	clrc
  4081  0D7C  0DA2               	rlf	___wmul@multiplicand,f
  4082  0D7D  0DA3               	rlf	___wmul@multiplicand+1,f
  4083  0D7E  3EFF               	addlw	-1
  4084  0D7F  1D03               	skipz
  4085  0D80  2D7B               	goto	u3045
  4086  0D81  3001               	movlw	1
  4087  0D82                     u3055:	
  4088  0D82  1003               	clrc
  4089  0D83  0CA1               	rrf	___wmul@multiplier+1,f
  4090  0D84  0CA0               	rrf	___wmul@multiplier,f
  4091  0D85  3EFF               	addlw	-1
  4092  0D86  1D03               	skipz
  4093  0D87  2D82               	goto	u3055
  4094  0D88  0820               	movf	___wmul@multiplier,w
  4095  0D89  0421               	iorwf	___wmul@multiplier+1,w
  4096  0D8A  1D03               	btfss	3,2
  4097  0D8B  2D70               	goto	l2374
  4098  0D8C  0875               	movf	___wmul@product+1,w
  4099  0D8D  00A1               	movwf	?___wmul+1
  4100  0D8E  0874               	movf	___wmul@product,w
  4101  0D8F  00A0               	movwf	?___wmul
  4102  0D90  0008               	return
  4103  0D91                     __end_of___wmul:	
  4104                           
  4105                           	psect	text12
  4106  07CB                     __ptext12:	
  4107 ;; *************** function ___lwmod *****************
  4108 ;; Defined at:
  4109 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  divisor         2    7[BANK0 ] unsigned int 
  4112 ;;  dividend        2    9[BANK0 ] unsigned int 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  counter         1    6[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    7[BANK0 ] unsigned int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       4       0       0       0
  4125 ;;      Locals:         1       0       0       0       0
  4126 ;;      Temps:          1       0       0       0       0
  4127 ;;      Totals:         2       4       0       0       0
  4128 ;;Total ram usage:        6 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_sprintf
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function ___lwmod
  4140  07CB                     ___lwmod:	
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4144  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  4145  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  4146  07CD  0827               	movf	___lwmod@divisor,w
  4147  07CE  0428               	iorwf	___lwmod@divisor+1,w
  4148  07CF  1903               	btfsc	3,2
  4149  07D0  2FFA               	goto	l2606
  4150  07D1  01F6               	clrf	___lwmod@counter
  4151  07D2  0AF6               	incf	___lwmod@counter,f
  4152  07D3                     l2596:	
  4153  07D3  1BA8               	btfsc	___lwmod@divisor+1,7
  4154  07D4  2FE1               	goto	l2598
  4155  07D5  3001               	movlw	1
  4156  07D6                     u3665:	
  4157  07D6  1003               	clrc
  4158  07D7  0DA7               	rlf	___lwmod@divisor,f
  4159  07D8  0DA8               	rlf	___lwmod@divisor+1,f
  4160  07D9  3EFF               	addlw	-1
  4161  07DA  1D03               	skipz
  4162  07DB  2FD6               	goto	u3665
  4163  07DC  3001               	movlw	1
  4164  07DD  00F5               	movwf	??___lwmod
  4165  07DE  0875               	movf	??___lwmod,w
  4166  07DF  07F6               	addwf	___lwmod@counter,f
  4167  07E0  2FD3               	goto	l2596
  4168  07E1                     l2598:	
  4169  07E1  0828               	movf	___lwmod@divisor+1,w
  4170  07E2  022A               	subwf	___lwmod@dividend+1,w
  4171  07E3  1D03               	skipz
  4172  07E4  2FE7               	goto	u3685
  4173  07E5  0827               	movf	___lwmod@divisor,w
  4174  07E6  0229               	subwf	___lwmod@dividend,w
  4175  07E7                     u3685:	
  4176  07E7  1C03               	skipc
  4177  07E8  2FEF               	goto	l2602
  4178  07E9  0827               	movf	___lwmod@divisor,w
  4179  07EA  02A9               	subwf	___lwmod@dividend,f
  4180  07EB  0828               	movf	___lwmod@divisor+1,w
  4181  07EC  1C03               	skipc
  4182  07ED  03AA               	decf	___lwmod@dividend+1,f
  4183  07EE  02AA               	subwf	___lwmod@dividend+1,f
  4184  07EF                     l2602:	
  4185  07EF  3001               	movlw	1
  4186  07F0                     u3695:	
  4187  07F0  1003               	clrc
  4188  07F1  0CA8               	rrf	___lwmod@divisor+1,f
  4189  07F2  0CA7               	rrf	___lwmod@divisor,f
  4190  07F3  3EFF               	addlw	-1
  4191  07F4  1D03               	skipz
  4192  07F5  2FF0               	goto	u3695
  4193  07F6  3001               	movlw	1
  4194  07F7  02F6               	subwf	___lwmod@counter,f
  4195  07F8  1D03               	btfss	3,2
  4196  07F9  2FE1               	goto	l2598
  4197  07FA                     l2606:	
  4198  07FA  082A               	movf	___lwmod@dividend+1,w
  4199  07FB  00A8               	movwf	?___lwmod+1
  4200  07FC  0829               	movf	___lwmod@dividend,w
  4201  07FD  00A7               	movwf	?___lwmod
  4202  07FE  0008               	return
  4203  07FF                     __end_of___lwmod:	
  4204                           
  4205                           	psect	text13
  4206  0E1E                     __ptext13:	
  4207 ;; *************** function ___lwdiv *****************
  4208 ;; Defined at:
  4209 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  divisor         2    0[BANK0 ] unsigned int 
  4212 ;;  dividend        2    2[BANK0 ] unsigned int 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  quotient        2    5[BANK0 ] unsigned int 
  4215 ;;  counter         1    4[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    0[BANK0 ] unsigned int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       4       0       0       0
  4226 ;;      Locals:         0       3       0       0       0
  4227 ;;      Temps:          1       0       0       0       0
  4228 ;;      Totals:         1       7       0       0       0
  4229 ;;Total ram usage:        8 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_temp_Measurement
  4236 ;;		_sprintf
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function ___lwdiv
  4242  0E1E                     ___lwdiv:	
  4243                           
  4244                           ;incstack = 0
  4245                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4246  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0E20  01A5               	clrf	___lwdiv@quotient
  4249  0E21  01A6               	clrf	___lwdiv@quotient+1
  4250  0E22  0820               	movf	___lwdiv@divisor,w
  4251  0E23  0421               	iorwf	___lwdiv@divisor+1,w
  4252  0E24  1903               	btfsc	3,2
  4253  0E25  2E57               	goto	l2584
  4254  0E26  01A4               	clrf	___lwdiv@counter
  4255  0E27  0AA4               	incf	___lwdiv@counter,f
  4256  0E28                     l2572:	
  4257  0E28  1BA1               	btfsc	___lwdiv@divisor+1,7
  4258  0E29  2E36               	goto	l2574
  4259  0E2A  3001               	movlw	1
  4260  0E2B                     u3595:	
  4261  0E2B  1003               	clrc
  4262  0E2C  0DA0               	rlf	___lwdiv@divisor,f
  4263  0E2D  0DA1               	rlf	___lwdiv@divisor+1,f
  4264  0E2E  3EFF               	addlw	-1
  4265  0E2F  1D03               	skipz
  4266  0E30  2E2B               	goto	u3595
  4267  0E31  3001               	movlw	1
  4268  0E32  00F4               	movwf	??___lwdiv
  4269  0E33  0874               	movf	??___lwdiv,w
  4270  0E34  07A4               	addwf	___lwdiv@counter,f
  4271  0E35  2E28               	goto	l2572
  4272  0E36                     l2574:	
  4273  0E36  3001               	movlw	1
  4274  0E37                     u3615:	
  4275  0E37  1003               	clrc
  4276  0E38  0DA5               	rlf	___lwdiv@quotient,f
  4277  0E39  0DA6               	rlf	___lwdiv@quotient+1,f
  4278  0E3A  3EFF               	addlw	-1
  4279  0E3B  1D03               	skipz
  4280  0E3C  2E37               	goto	u3615
  4281  0E3D  0821               	movf	___lwdiv@divisor+1,w
  4282  0E3E  0223               	subwf	___lwdiv@dividend+1,w
  4283  0E3F  1D03               	skipz
  4284  0E40  2E43               	goto	u3625
  4285  0E41  0820               	movf	___lwdiv@divisor,w
  4286  0E42  0222               	subwf	___lwdiv@dividend,w
  4287  0E43                     u3625:	
  4288  0E43  1C03               	skipc
  4289  0E44  2E4C               	goto	l2580
  4290  0E45  0820               	movf	___lwdiv@divisor,w
  4291  0E46  02A2               	subwf	___lwdiv@dividend,f
  4292  0E47  0821               	movf	___lwdiv@divisor+1,w
  4293  0E48  1C03               	skipc
  4294  0E49  03A3               	decf	___lwdiv@dividend+1,f
  4295  0E4A  02A3               	subwf	___lwdiv@dividend+1,f
  4296  0E4B  1425               	bsf	___lwdiv@quotient,0
  4297  0E4C                     l2580:	
  4298  0E4C  3001               	movlw	1
  4299  0E4D                     u3635:	
  4300  0E4D  1003               	clrc
  4301  0E4E  0CA1               	rrf	___lwdiv@divisor+1,f
  4302  0E4F  0CA0               	rrf	___lwdiv@divisor,f
  4303  0E50  3EFF               	addlw	-1
  4304  0E51  1D03               	skipz
  4305  0E52  2E4D               	goto	u3635
  4306  0E53  3001               	movlw	1
  4307  0E54  02A4               	subwf	___lwdiv@counter,f
  4308  0E55  1D03               	btfss	3,2
  4309  0E56  2E36               	goto	l2574
  4310  0E57                     l2584:	
  4311  0E57  0826               	movf	___lwdiv@quotient+1,w
  4312  0E58  00A1               	movwf	?___lwdiv+1
  4313  0E59  0825               	movf	___lwdiv@quotient,w
  4314  0E5A  00A0               	movwf	?___lwdiv
  4315  0E5B  0008               	return
  4316  0E5C                     __end_of___lwdiv:	
  4317                           
  4318                           	psect	text14
  4319  0EDD                     __ptext14:	
  4320 ;; *************** function _Lcd_write *****************
  4321 ;; Defined at:
  4322 ;;		line 95 in file "lcd_Config.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  string          2    3[BANK0 ] PTR unsigned char 
  4325 ;;		 -> sTemperature(2), STR_1(13), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  i               2    8[BANK0 ] int 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       2       0       0       0
  4338 ;;      Locals:         0       2       0       0       0
  4339 ;;      Temps:          0       3       0       0       0
  4340 ;;      Totals:         0       7       0       0       0
  4341 ;;Total ram usage:        7 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    3
  4344 ;; This function calls:
  4345 ;;		_Lcd_Write_Char
  4346 ;; This function is called by:
  4347 ;;		_temp_Display
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           
  4352                           ;psect for function _Lcd_write
  4353  0EDD                     _Lcd_write:	
  4354                           
  4355                           ;lcd_Config.c: 96: int i;
  4356                           ;lcd_Config.c: 97: for (i = 0; string[i] != '\0'; i++)
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _Lcd_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4360  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0EDF  01A8               	clrf	Lcd_write@i
  4363  0EE0  01A9               	clrf	Lcd_write@i+1
  4364  0EE1                     l2656:	
  4365  0EE1  0828               	movf	Lcd_write@i,w
  4366  0EE2  0723               	addwf	Lcd_write@string,w
  4367  0EE3  00A6               	movwf	??_Lcd_write+1
  4368  0EE4  0824               	movf	Lcd_write@string+1,w
  4369  0EE5  00A5               	movwf	??_Lcd_write
  4370  0EE6  1803               	skipnc
  4371  0EE7  0AA5               	incf	??_Lcd_write,f
  4372  0EE8  1BA8               	btfsc	Lcd_write@i,7
  4373  0EE9  03A5               	decf	??_Lcd_write,f
  4374  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0EEC  0825               	movf	??_Lcd_write,w
  4377  0EED  00A7               	movwf	??_Lcd_write+2
  4378  0EEE  0827               	movf	??_Lcd_write+2,w
  4379  0EEF  00FF               	movwf	127
  4380  0EF0  0826               	movf	??_Lcd_write+1,w
  4381  0EF1  0084               	movwf	4
  4382  0EF2  120A  158A  2000  120A  158A  	fcall	stringtab
  4383  0EF7  3A00               	xorlw	0
  4384  0EF8  1903               	btfsc	3,2
  4385  0EF9  0008               	return
  4386                           
  4387                           ;lcd_Config.c: 98: Lcd_Write_Char(string[i]);
  4388  0EFA  0828               	movf	Lcd_write@i,w
  4389  0EFB  0723               	addwf	Lcd_write@string,w
  4390  0EFC  00A6               	movwf	??_Lcd_write+1
  4391  0EFD  0824               	movf	Lcd_write@string+1,w
  4392  0EFE  00A5               	movwf	??_Lcd_write
  4393  0EFF  1803               	skipnc
  4394  0F00  0AA5               	incf	??_Lcd_write,f
  4395  0F01  1BA8               	btfsc	Lcd_write@i,7
  4396  0F02  03A5               	decf	??_Lcd_write,f
  4397  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0F05  0825               	movf	??_Lcd_write,w
  4400  0F06  00A7               	movwf	??_Lcd_write+2
  4401  0F07  0827               	movf	??_Lcd_write+2,w
  4402  0F08  00FF               	movwf	127
  4403  0F09  0826               	movf	??_Lcd_write+1,w
  4404  0F0A  0084               	movwf	4
  4405  0F0B  120A  158A  2000  120A  158A  	fcall	stringtab
  4406  0F10  120A  158A  25E7  120A  158A  	fcall	_Lcd_Write_Char
  4407  0F15  3001               	movlw	1
  4408  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0F18  07A8               	addwf	Lcd_write@i,f
  4411  0F19  1803               	skipnc
  4412  0F1A  0AA9               	incf	Lcd_write@i+1,f
  4413  0F1B  3000               	movlw	0
  4414  0F1C  07A9               	addwf	Lcd_write@i+1,f
  4415  0F1D  2EE1               	goto	l2656
  4416  0F1E                     __end_of_Lcd_write:	
  4417                           
  4418                           	psect	text15
  4419  0DE7                     __ptext15:	
  4420 ;; *************** function _Lcd_Write_Char *****************
  4421 ;; Defined at:
  4422 ;;		line 80 in file "lcd_Config.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  a               1    wreg     unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  a               1    2[BANK0 ] unsigned char 
  4427 ;;  y               1    1[BANK0 ] unsigned char 
  4428 ;;  temp            1    0[BANK0 ] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, pclath, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4438 ;;      Params:         0       0       0       0       0
  4439 ;;      Locals:         0       3       0       0       0
  4440 ;;      Temps:          1       0       0       0       0
  4441 ;;      Totals:         1       3       0       0       0
  4442 ;;Total ram usage:        4 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    2
  4445 ;; This function calls:
  4446 ;;		_Lcd_Port
  4447 ;; This function is called by:
  4448 ;;		_Lcd_write
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _Lcd_Write_Char
  4454  0DE7                     _Lcd_Write_Char:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4458                           ;Lcd_Write_Char@a stored from wreg
  4459  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0DE9  00A2               	movwf	Lcd_Write_Char@a
  4462                           
  4463                           ;lcd_Config.c: 81: char temp, y;
  4464                           ;lcd_Config.c: 82: temp = a & 0x0F;
  4465  0DEA  0822               	movf	Lcd_Write_Char@a,w
  4466  0DEB  390F               	andlw	15
  4467  0DEC  00F5               	movwf	??_Lcd_Write_Char
  4468  0DED  0875               	movf	??_Lcd_Write_Char,w
  4469  0DEE  00A0               	movwf	Lcd_Write_Char@temp
  4470                           
  4471                           ;lcd_Config.c: 83: y = a & 0xF0;
  4472  0DEF  0822               	movf	Lcd_Write_Char@a,w
  4473  0DF0  39F0               	andlw	240
  4474  0DF1  00F5               	movwf	??_Lcd_Write_Char
  4475  0DF2  0875               	movf	??_Lcd_Write_Char,w
  4476  0DF3  00A1               	movwf	Lcd_Write_Char@y
  4477                           
  4478                           ;lcd_Config.c: 84: PORTBbits.RB5 = 1;
  4479  0DF4  1686               	bsf	6,5	;volatile
  4480                           
  4481                           ;lcd_Config.c: 85: Lcd_Port(y >> 4);
  4482  0DF5  0821               	movf	Lcd_Write_Char@y,w
  4483  0DF6  00F5               	movwf	??_Lcd_Write_Char
  4484  0DF7  3004               	movlw	4
  4485  0DF8                     u3025:	
  4486  0DF8  1003               	clrc
  4487  0DF9  0CF5               	rrf	??_Lcd_Write_Char,f
  4488  0DFA  3EFF               	addlw	-1
  4489  0DFB  1D03               	skipz
  4490  0DFC  2DF8               	goto	u3025
  4491  0DFD  0875               	movf	??_Lcd_Write_Char,w
  4492  0DFE  120A  158A  253A  120A  158A  	fcall	_Lcd_Port
  4493                           
  4494                           ;lcd_Config.c: 86: PORTBbits.RB4 = 1;
  4495  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0E05  1606               	bsf	6,4	;volatile
  4498                           
  4499                           ;lcd_Config.c: 87: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4500  0E06  300D               	movlw	13
  4501  0E07  00F5               	movwf	??_Lcd_Write_Char
  4502  0E08                     u4007:	
  4503  0E08  0BF5               	decfsz	??_Lcd_Write_Char,f
  4504  0E09  2E08               	goto	u4007
  4505                           
  4506                           ;lcd_Config.c: 88: PORTBbits.RB4 = 0;
  4507  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0E0C  1206               	bcf	6,4	;volatile
  4510                           
  4511                           ;lcd_Config.c: 89: Lcd_Port(temp);
  4512  0E0D  0820               	movf	Lcd_Write_Char@temp,w
  4513  0E0E  120A  158A  253A  120A  158A  	fcall	_Lcd_Port
  4514                           
  4515                           ;lcd_Config.c: 90: PORTBbits.RB4 = 1;
  4516  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0E15  1606               	bsf	6,4	;volatile
  4519                           
  4520                           ;lcd_Config.c: 91: _delay((unsigned long)((40)*(4000000UL/4000000.0)));
  4521  0E16  300D               	movlw	13
  4522  0E17  00F5               	movwf	??_Lcd_Write_Char
  4523  0E18                     u4017:	
  4524  0E18  0BF5               	decfsz	??_Lcd_Write_Char,f
  4525  0E19  2E18               	goto	u4017
  4526                           
  4527                           ;lcd_Config.c: 92: PORTBbits.RB4 = 0;
  4528  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0E1C  1206               	bcf	6,4	;volatile
  4531  0E1D  0008               	return
  4532  0E1E                     __end_of_Lcd_Write_Char:	
  4533                           
  4534                           	psect	text16
  4535  0FAE                     __ptext16:	
  4536 ;; *************** function _Lcd_Set_Cursor *****************
  4537 ;; Defined at:
  4538 ;;		line 45 in file "lcd_Config.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  raw             1    wreg     unsigned char 
  4541 ;;  column          1    1[BANK0 ] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  raw             1    4[BANK0 ] unsigned char 
  4544 ;;  temp            1    7[BANK0 ] unsigned char 
  4545 ;;  y               1    6[BANK0 ] unsigned char 
  4546 ;;  z               1    5[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       1       0       0       0
  4557 ;;      Locals:         0       4       0       0       0
  4558 ;;      Temps:          0       2       0       0       0
  4559 ;;      Totals:         0       7       0       0       0
  4560 ;;Total ram usage:        7 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		_Lcd_Cmd
  4565 ;; This function is called by:
  4566 ;;		_temp_Display
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _Lcd_Set_Cursor
  4572  0FAE                     _Lcd_Set_Cursor:	
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4576                           ;Lcd_Set_Cursor@raw stored from wreg
  4577  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4579  0FB0  00A4               	movwf	Lcd_Set_Cursor@raw
  4580                           
  4581                           ;lcd_Config.c: 46: char temp, z, y;
  4582                           ;lcd_Config.c: 47: if (raw == 1) {
  4583  0FB1  0324               	decf	Lcd_Set_Cursor@raw,w
  4584  0FB2  1D03               	btfss	3,2
  4585  0FB3  2FD7               	goto	l2640
  4586                           
  4587                           ;lcd_Config.c: 48: temp = 0x80 + column - 1;
  4588  0FB4  0821               	movf	Lcd_Set_Cursor@column,w
  4589  0FB5  3E7F               	addlw	127
  4590  0FB6  00A2               	movwf	??_Lcd_Set_Cursor
  4591  0FB7  0822               	movf	??_Lcd_Set_Cursor,w
  4592  0FB8  00A7               	movwf	Lcd_Set_Cursor@temp
  4593                           
  4594                           ;lcd_Config.c: 49: z = temp >> 4;
  4595  0FB9  0827               	movf	Lcd_Set_Cursor@temp,w
  4596  0FBA  00A2               	movwf	??_Lcd_Set_Cursor
  4597  0FBB  3004               	movlw	4
  4598  0FBC                     u3745:	
  4599  0FBC  1003               	clrc
  4600  0FBD  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4601  0FBE  3EFF               	addlw	-1
  4602  0FBF  1D03               	skipz
  4603  0FC0  2FBC               	goto	u3745
  4604  0FC1  0822               	movf	??_Lcd_Set_Cursor,w
  4605  0FC2  00A3               	movwf	??_Lcd_Set_Cursor+1
  4606  0FC3  0823               	movf	??_Lcd_Set_Cursor+1,w
  4607  0FC4  00A5               	movwf	Lcd_Set_Cursor@z
  4608                           
  4609                           ;lcd_Config.c: 50: y = temp & 0x0F;
  4610  0FC5  0827               	movf	Lcd_Set_Cursor@temp,w
  4611  0FC6  390F               	andlw	15
  4612  0FC7  00A2               	movwf	??_Lcd_Set_Cursor
  4613  0FC8  0822               	movf	??_Lcd_Set_Cursor,w
  4614  0FC9  00A6               	movwf	Lcd_Set_Cursor@y
  4615                           
  4616                           ;lcd_Config.c: 51: Lcd_Cmd(z);
  4617  0FCA  0825               	movf	Lcd_Set_Cursor@z,w
  4618  0FCB  120A  158A  2554  120A  158A  	fcall	_Lcd_Cmd
  4619                           
  4620                           ;lcd_Config.c: 52: Lcd_Cmd(y);
  4621  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4623  0FD2  0826               	movf	Lcd_Set_Cursor@y,w
  4624  0FD3  120A  158A  2554   	fcall	_Lcd_Cmd
  4625                           
  4626                           ;lcd_Config.c: 53: } else if (raw == 2) {
  4627  0FD6  0008               	return
  4628  0FD7                     l2640:	
  4629  0FD7  3002               	movlw	2
  4630  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4631  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4632  0FDA  0624               	xorwf	Lcd_Set_Cursor@raw,w
  4633  0FDB  1D03               	btfss	3,2
  4634  0FDC  0008               	return
  4635                           
  4636                           ;lcd_Config.c: 54: temp = 0xC0 + column - 1;
  4637  0FDD  0821               	movf	Lcd_Set_Cursor@column,w
  4638  0FDE  3EBF               	addlw	191
  4639  0FDF  00A2               	movwf	??_Lcd_Set_Cursor
  4640  0FE0  0822               	movf	??_Lcd_Set_Cursor,w
  4641  0FE1  00A7               	movwf	Lcd_Set_Cursor@temp
  4642                           
  4643                           ;lcd_Config.c: 55: z = temp >> 4;
  4644  0FE2  0827               	movf	Lcd_Set_Cursor@temp,w
  4645  0FE3  00A2               	movwf	??_Lcd_Set_Cursor
  4646  0FE4  3004               	movlw	4
  4647  0FE5                     u3765:	
  4648  0FE5  1003               	clrc
  4649  0FE6  0CA2               	rrf	??_Lcd_Set_Cursor,f
  4650  0FE7  3EFF               	addlw	-1
  4651  0FE8  1D03               	skipz
  4652  0FE9  2FE5               	goto	u3765
  4653  0FEA  0822               	movf	??_Lcd_Set_Cursor,w
  4654  0FEB  00A3               	movwf	??_Lcd_Set_Cursor+1
  4655  0FEC  0823               	movf	??_Lcd_Set_Cursor+1,w
  4656  0FED  00A5               	movwf	Lcd_Set_Cursor@z
  4657                           
  4658                           ;lcd_Config.c: 56: y = temp & 0x0F;
  4659  0FEE  0827               	movf	Lcd_Set_Cursor@temp,w
  4660  0FEF  390F               	andlw	15
  4661  0FF0  00A2               	movwf	??_Lcd_Set_Cursor
  4662  0FF1  0822               	movf	??_Lcd_Set_Cursor,w
  4663  0FF2  00A6               	movwf	Lcd_Set_Cursor@y
  4664                           
  4665                           ;lcd_Config.c: 57: Lcd_Cmd(z);
  4666  0FF3  0825               	movf	Lcd_Set_Cursor@z,w
  4667  0FF4  120A  158A  2554  120A  158A  	fcall	_Lcd_Cmd
  4668                           
  4669                           ;lcd_Config.c: 58: Lcd_Cmd(y);
  4670  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0FFB  0826               	movf	Lcd_Set_Cursor@y,w
  4673  0FFC  120A  158A  2554   	fcall	_Lcd_Cmd
  4674  0FFF  0008               	return
  4675  1000                     __end_of_Lcd_Set_Cursor:	
  4676                           
  4677                           	psect	text17
  4678  0F63                     __ptext17:	
  4679 ;; *************** function _system_Initialize *****************
  4680 ;; Defined at:
  4681 ;;		line 10 in file "SYST_Init.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, pclath, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4695 ;;      Params:         0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0
  4698 ;;      Totals:         0       0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    4
  4702 ;; This function calls:
  4703 ;;		_ADC_Init
  4704 ;;		_Interrupt_Init
  4705 ;;		_Lcd_Init
  4706 ;;		_Oscillator_Init
  4707 ;;		_PWM_DutyCycle
  4708 ;;		_PWM_Init
  4709 ;;		_SPI_Init
  4710 ;;		_TMR0_Init
  4711 ;;		_UART_Init
  4712 ;;		_pinManager
  4713 ;; This function is called by:
  4714 ;;		_main
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _system_Initialize
  4720  0F63                     _system_Initialize:	
  4721                           
  4722                           ;SYST_Init.c: 11: Oscillator_Init();
  4723                           
  4724                           ;incstack = 0
  4725                           ; Regs used in _system_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4726  0F63  120A  158A  24A5  120A  158A  	fcall	_Oscillator_Init
  4727                           
  4728                           ;SYST_Init.c: 12: Interrupt_Init();
  4729  0F68  120A  158A  24DA  120A  158A  	fcall	_Interrupt_Init
  4730                           
  4731                           ;SYST_Init.c: 13: pinManager();
  4732  0F6D  120A  158A  25BC  120A  158A  	fcall	_pinManager
  4733                           
  4734                           ;SYST_Init.c: 14: Lcd_Init();
  4735  0F72  120A  118A  26B4  120A  158A  	fcall	_Lcd_Init
  4736                           
  4737                           ;SYST_Init.c: 15: ADC_Init();
  4738  0F77  120A  158A  2521  120A  158A  	fcall	_ADC_Init
  4739                           
  4740                           ;SYST_Init.c: 16: TMR0_Init();
  4741  0F7C  120A  158A  24E9  120A  158A  	fcall	_TMR0_Init
  4742                           
  4743                           ;SYST_Init.c: 17: PWM_Init(10000);
  4744  0F81  3000               	movlw	0
  4745  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0F84  00BC               	movwf	PWM_Init@iFrequency+3
  4748  0F85  3000               	movlw	0
  4749  0F86  00BB               	movwf	PWM_Init@iFrequency+2
  4750  0F87  3027               	movlw	39
  4751  0F88  00BA               	movwf	PWM_Init@iFrequency+1
  4752  0F89  3010               	movlw	16
  4753  0F8A  00B9               	movwf	PWM_Init@iFrequency
  4754  0F8B  120A  158A  271E  120A  158A  	fcall	_PWM_Init
  4755                           
  4756                           ;SYST_Init.c: 18: PWM_DutyCycle(70);
  4757  0F90  3000               	movlw	0
  4758  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4760  0F93  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  4761  0F94  3000               	movlw	0
  4762  0F95  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  4763  0F96  3000               	movlw	0
  4764  0F97  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  4765  0F98  3046               	movlw	70
  4766  0F99  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  4767  0F9A  120A  118A  25D7  120A  158A  	fcall	_PWM_DutyCycle
  4768                           
  4769                           ;SYST_Init.c: 19: SPI_Init();
  4770  0F9F  120A  158A  24BF  120A  158A  	fcall	_SPI_Init
  4771                           
  4772                           ;SYST_Init.c: 20: UART_Init(9600);
  4773  0FA4  3080               	movlw	128
  4774  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0FA7  00B9               	movwf	UART_Init@baudRate
  4777  0FA8  3025               	movlw	37
  4778  0FA9  00BA               	movwf	UART_Init@baudRate+1
  4779  0FAA  120A  158A  265C   	fcall	_UART_Init
  4780  0FAD  0008               	return
  4781  0FAE                     __end_of_system_Initialize:	
  4782                           
  4783                           	psect	text18
  4784  0DBC                     __ptext18:	
  4785 ;; *************** function _pinManager *****************
  4786 ;; Defined at:
  4787 ;;		line 19 in file "pin_Manager.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		status,2
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4801 ;;      Params:         0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0
  4804 ;;      Totals:         0       0       0       0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_system_Initialize
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _pinManager
  4817  0DBC                     _pinManager:	
  4818                           
  4819                           ;pin_Manager.c: 21: TRISD = 0;
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _pinManager: [status,2]
  4823  0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  4824  0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  4825  0DBE  0188               	clrf	8	;volatile
  4826                           
  4827                           ;pin_Manager.c: 23: ANSELH = 0;
  4828  0DBF  1683               	bsf	3,5	;RP0=1, select bank3
  4829  0DC0  1703               	bsf	3,6	;RP1=1, select bank3
  4830  0DC1  0189               	clrf	9	;volatile
  4831                           
  4832                           ;pin_Manager.c: 24: TRISB = 0;
  4833  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  4834  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  4835  0DC4  0186               	clrf	6	;volatile
  4836                           
  4837                           ;pin_Manager.c: 26: TRISBbits.TRISB6 = 1;
  4838  0DC5  1706               	bsf	6,6	;volatile
  4839                           
  4840                           ;pin_Manager.c: 27: TRISBbits.TRISB7 = 1;
  4841  0DC6  1786               	bsf	6,7	;volatile
  4842                           
  4843                           ;pin_Manager.c: 28: TRISCbits.TRISC2 = 0;
  4844  0DC7  1107               	bcf	7,2	;volatile
  4845                           
  4846                           ;pin_Manager.c: 30: ANSELbits.ANS1 = 0;
  4847  0DC8  1683               	bsf	3,5	;RP0=1, select bank3
  4848  0DC9  1703               	bsf	3,6	;RP1=1, select bank3
  4849  0DCA  1088               	bcf	8,1	;volatile
  4850                           
  4851                           ;pin_Manager.c: 31: ANSELbits.ANS2 = 0;
  4852  0DCB  1108               	bcf	8,2	;volatile
  4853                           
  4854                           ;pin_Manager.c: 32: ANSELbits.ANS3 = 0;
  4855  0DCC  1188               	bcf	8,3	;volatile
  4856                           
  4857                           ;pin_Manager.c: 33: ANSELbits.ANS4 = 0;
  4858  0DCD  1208               	bcf	8,4	;volatile
  4859                           
  4860                           ;pin_Manager.c: 35: TRISAbits.TRISA1 = 0;
  4861  0DCE  1683               	bsf	3,5	;RP0=1, select bank1
  4862  0DCF  1303               	bcf	3,6	;RP1=0, select bank1
  4863  0DD0  1085               	bcf	5,1	;volatile
  4864                           
  4865                           ;pin_Manager.c: 36: TRISAbits.TRISA2 = 0;
  4866  0DD1  1105               	bcf	5,2	;volatile
  4867                           
  4868                           ;pin_Manager.c: 37: TRISAbits.TRISA3 = 0;
  4869  0DD2  1185               	bcf	5,3	;volatile
  4870                           
  4871                           ;pin_Manager.c: 38: TRISAbits.TRISA4 = 0;
  4872  0DD3  1205               	bcf	5,4	;volatile
  4873                           
  4874                           ;pin_Manager.c: 40: ANSELbits.ANS0 = 1;
  4875  0DD4  1683               	bsf	3,5	;RP0=1, select bank3
  4876  0DD5  1703               	bsf	3,6	;RP1=1, select bank3
  4877  0DD6  1408               	bsf	8,0	;volatile
  4878                           
  4879                           ;pin_Manager.c: 41: ANSELbits.ANS5 = 0;
  4880  0DD7  1288               	bcf	8,5	;volatile
  4881                           
  4882                           ;pin_Manager.c: 43: TRISAbits.TRISA0 = 1;
  4883  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  4885  0DDA  1405               	bsf	5,0	;volatile
  4886                           
  4887                           ;pin_Manager.c: 45: TRISCbits.TRISC5 = 0;
  4888  0DDB  1287               	bcf	7,5	;volatile
  4889                           
  4890                           ;pin_Manager.c: 46: TRISCbits.TRISC4 = 1;
  4891  0DDC  1607               	bsf	7,4	;volatile
  4892                           
  4893                           ;pin_Manager.c: 47: TRISAbits.TRISA5 = 0;
  4894  0DDD  1285               	bcf	5,5	;volatile
  4895                           
  4896                           ;pin_Manager.c: 48: TRISCbits.TRISC3 = 0;
  4897  0DDE  1187               	bcf	7,3	;volatile
  4898                           
  4899                           ;pin_Manager.c: 51: PORTA = 0;
  4900  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0DE1  0185               	clrf	5	;volatile
  4903                           
  4904                           ;pin_Manager.c: 52: PORTB = 0;
  4905  0DE2  0186               	clrf	6	;volatile
  4906                           
  4907                           ;pin_Manager.c: 53: PORTC = 0;
  4908  0DE3  0187               	clrf	7	;volatile
  4909                           
  4910                           ;pin_Manager.c: 54: PORTD = 0;
  4911  0DE4  0188               	clrf	8	;volatile
  4912                           
  4913                           ;pin_Manager.c: 55: PORTE = 0;
  4914  0DE5  0189               	clrf	9	;volatile
  4915  0DE6  0008               	return
  4916  0DE7                     __end_of_pinManager:	
  4917                           
  4918                           	psect	text19
  4919  0E5C                     __ptext19:	
  4920 ;; *************** function _UART_Init *****************
  4921 ;; Defined at:
  4922 ;;		line 10 in file "uart_Init.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  baudRate        2   25[BANK0 ] unsigned int 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, pclath, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4936 ;;      Params:         0       2       0       0       0
  4937 ;;      Locals:         0       0       0       0       0
  4938 ;;      Temps:          0       4       0       0       0
  4939 ;;      Totals:         0       6       0       0       0
  4940 ;;Total ram usage:        6 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    2
  4943 ;; This function calls:
  4944 ;;		___lldiv
  4945 ;; This function is called by:
  4946 ;;		_system_Initialize
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function _UART_Init
  4952  0E5C                     _UART_Init:	
  4953                           
  4954                           ;uart_Init.c: 12: TRISCbits.TRISC6 = 1;
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4958  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  4960  0E5E  1707               	bsf	7,6	;volatile
  4961                           
  4962                           ;uart_Init.c: 13: TRISCbits.TRISC7 = 1;
  4963  0E5F  1787               	bsf	7,7	;volatile
  4964                           
  4965                           ;uart_Init.c: 15: TXSTAbits.TXEN = 1;
  4966  0E60  1698               	bsf	24,5	;volatile
  4967                           
  4968                           ;uart_Init.c: 16: TXSTAbits.SYNC = 0;
  4969  0E61  1218               	bcf	24,4	;volatile
  4970                           
  4971                           ;uart_Init.c: 17: TXSTAbits.TX9 = 0;
  4972  0E62  1318               	bcf	24,6	;volatile
  4973                           
  4974                           ;uart_Init.c: 18: RCSTAbits.SPEN = 1;
  4975  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0E65  1798               	bsf	24,7	;volatile
  4978                           
  4979                           ;uart_Init.c: 19: RCSTAbits.CREN = 1;
  4980  0E66  1618               	bsf	24,4	;volatile
  4981                           
  4982                           ;uart_Init.c: 20: RCSTAbits.RX9 = 0;
  4983  0E67  1318               	bcf	24,6	;volatile
  4984                           
  4985                           ;uart_Init.c: 22: TXSTAbits.BRGH = 1;
  4986  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  4988  0E6A  1518               	bsf	24,2	;volatile
  4989                           
  4990                           ;uart_Init.c: 23: BAUDCTLbits.BRG16 = 0;
  4991  0E6B  1683               	bsf	3,5	;RP0=1, select bank3
  4992  0E6C  1703               	bsf	3,6	;RP1=1, select bank3
  4993  0E6D  1187               	bcf	7,3	;volatile
  4994                           
  4995                           ;uart_Init.c: 24: SPBRG = ((4000000UL/baudRate)/16)-1;
  4996  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0E70  0839               	movf	UART_Init@baudRate,w
  4999  0E71  00AC               	movwf	___lldiv@divisor
  5000  0E72  083A               	movf	UART_Init@baudRate+1,w
  5001  0E73  00AD               	movwf	___lldiv@divisor+1
  5002  0E74  01AE               	clrf	___lldiv@divisor+2
  5003  0E75  01AF               	clrf	___lldiv@divisor+3
  5004  0E76  3000               	movlw	0
  5005  0E77  00B3               	movwf	___lldiv@dividend+3
  5006  0E78  303D               	movlw	61
  5007  0E79  00B2               	movwf	___lldiv@dividend+2
  5008  0E7A  3009               	movlw	9
  5009  0E7B  00B1               	movwf	___lldiv@dividend+1
  5010  0E7C  3000               	movlw	0
  5011  0E7D  00B0               	movwf	___lldiv@dividend
  5012  0E7E  120A  118A  2715  120A  158A  	fcall	___lldiv
  5013  0E83  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0E84  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0E85  082C               	movf	?___lldiv,w
  5016  0E86  00BB               	movwf	??_UART_Init
  5017  0E87  082D               	movf	?___lldiv+1,w
  5018  0E88  00BC               	movwf	??_UART_Init+1
  5019  0E89  082E               	movf	?___lldiv+2,w
  5020  0E8A  00BD               	movwf	??_UART_Init+2
  5021  0E8B  082F               	movf	?___lldiv+3,w
  5022  0E8C  00BE               	movwf	??_UART_Init+3
  5023  0E8D  3004               	movlw	4
  5024  0E8E                     u2595:	
  5025  0E8E  1003               	clrc
  5026  0E8F  0CBE               	rrf	??_UART_Init+3,f
  5027  0E90  0CBD               	rrf	??_UART_Init+2,f
  5028  0E91  0CBC               	rrf	??_UART_Init+1,f
  5029  0E92  0CBB               	rrf	??_UART_Init,f
  5030  0E93  3EFF               	addlw	-1
  5031  0E94  1D03               	skipz
  5032  0E95  2E8E               	goto	u2595
  5033  0E96  083B               	movf	??_UART_Init,w
  5034  0E97  3EFF               	addlw	255
  5035  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0E9A  0099               	movwf	25	;volatile
  5038  0E9B  0008               	return
  5039  0E9C                     __end_of_UART_Init:	
  5040                           
  5041                           	psect	text20
  5042  0CE9                     __ptext20:	
  5043 ;; *************** function _TMR0_Init *****************
  5044 ;; Defined at:
  5045 ;;		line 19 in file "timer_Init.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5059 ;;      Params:         0       0       0       0       0
  5060 ;;      Locals:         0       0       0       0       0
  5061 ;;      Temps:          0       0       0       0       0
  5062 ;;      Totals:         0       0       0       0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_system_Initialize
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _TMR0_Init
  5075  0CE9                     _TMR0_Init:	
  5076                           
  5077                           ;timer_Init.c: 20: INTCONbits.T0IE = 1;
  5078                           
  5079                           ;incstack = 0
  5080                           ; Regs used in _TMR0_Init: [wreg+status,2+status,0]
  5081  0CE9  168B               	bsf	11,5	;volatile
  5082                           
  5083                           ;timer_Init.c: 21: INTCONbits.T0IF = 0;
  5084  0CEA  110B               	bcf	11,2	;volatile
  5085                           
  5086                           ;timer_Init.c: 23: OPTION_REGbits.T0CS = 0;
  5087  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  5088  0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  5089  0CED  1281               	bcf	1,5	;volatile
  5090                           
  5091                           ;timer_Init.c: 24: OPTION_REGbits.PSA = 0;
  5092  0CEE  1181               	bcf	1,3	;volatile
  5093                           
  5094                           ;timer_Init.c: 25: OPTION_REGbits.PS = 0b101;
  5095  0CEF  0801               	movf	1,w	;volatile
  5096  0CF0  39F8               	andlw	-8
  5097  0CF1  3805               	iorlw	5
  5098  0CF2  0081               	movwf	1	;volatile
  5099                           
  5100                           ;timer_Init.c: 26: TMR0 = 100;
  5101  0CF3  3064               	movlw	100
  5102  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0CF6  0081               	movwf	1	;volatile
  5105  0CF7  0008               	return
  5106  0CF8                     __end_of_TMR0_Init:	
  5107                           
  5108                           	psect	text21
  5109  0CBF                     __ptext21:	
  5110 ;; *************** function _SPI_Init *****************
  5111 ;; Defined at:
  5112 ;;		line 10 in file "spi_Init.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0
  5129 ;;      Totals:         0       0       0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_system_Initialize
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function _SPI_Init
  5142  0CBF                     _SPI_Init:	
  5143                           
  5144                           ;spi_Init.c: 11: SSPCONbits.SSPEN = 1;
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  5148  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0CC1  1694               	bsf	20,5	;volatile
  5151                           
  5152                           ;spi_Init.c: 12: SSPCONbits.SSPM = 0b000;
  5153  0CC2  30F0               	movlw	-16
  5154  0CC3  0594               	andwf	20,f	;volatile
  5155                           
  5156                           ;spi_Init.c: 13: SSPCONbits.WCOL = 0;
  5157  0CC4  1394               	bcf	20,7	;volatile
  5158                           
  5159                           ;spi_Init.c: 15: PIE1bits.SSPIE = 1;
  5160  0CC5  1683               	bsf	3,5	;RP0=1, select bank1
  5161  0CC6  1303               	bcf	3,6	;RP1=0, select bank1
  5162  0CC7  158C               	bsf	12,3	;volatile
  5163                           
  5164                           ;spi_Init.c: 16: PIR1bits.SSPIF = 0;
  5165  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  5166  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  5167  0CCA  118C               	bcf	12,3	;volatile
  5168  0CCB  0008               	return
  5169  0CCC                     __end_of_SPI_Init:	
  5170                           
  5171                           	psect	text22
  5172  0F1E                     __ptext22:	
  5173 ;; *************** function _PWM_Init *****************
  5174 ;; Defined at:
  5175 ;;		line 14 in file "pwm_Init.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  iFrequency      4   25[BANK0 ] unsigned long 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       4       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          0       4       0       0       0
  5192 ;;      Totals:         0       8       0       0       0
  5193 ;;Total ram usage:        8 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    2
  5196 ;; This function calls:
  5197 ;;		___lldiv
  5198 ;; This function is called by:
  5199 ;;		_system_Initialize
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _PWM_Init
  5205  0F1E                     _PWM_Init:	
  5206                           
  5207                           ;pwm_Init.c: 15: TRISCbits.TRISC2 = 1;
  5208                           
  5209                           ;incstack = 0
  5210                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  5211  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5212  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  5213  0F20  1507               	bsf	7,2	;volatile
  5214                           
  5215                           ;pwm_Init.c: 17: PR2 = (4000000UL / (iFrequency * 4)) -1;
  5216  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0F23  0839               	movf	PWM_Init@iFrequency,w
  5219  0F24  00BD               	movwf	??_PWM_Init
  5220  0F25  083A               	movf	PWM_Init@iFrequency+1,w
  5221  0F26  00BE               	movwf	??_PWM_Init+1
  5222  0F27  083B               	movf	PWM_Init@iFrequency+2,w
  5223  0F28  00BF               	movwf	??_PWM_Init+2
  5224  0F29  083C               	movf	PWM_Init@iFrequency+3,w
  5225  0F2A  00C0               	movwf	??_PWM_Init+3
  5226  0F2B  3002               	movlw	2
  5227  0F2C                     u2565:	
  5228  0F2C  1003               	clrc
  5229  0F2D  0DBD               	rlf	??_PWM_Init,f
  5230  0F2E  0DBE               	rlf	??_PWM_Init+1,f
  5231  0F2F  0DBF               	rlf	??_PWM_Init+2,f
  5232  0F30  0DC0               	rlf	??_PWM_Init+3,f
  5233  0F31  3EFF               	addlw	-1
  5234  0F32  1D03               	skipz
  5235  0F33  2F2C               	goto	u2565
  5236  0F34  0840               	movf	??_PWM_Init+3,w
  5237  0F35  00AF               	movwf	___lldiv@divisor+3
  5238  0F36  083F               	movf	??_PWM_Init+2,w
  5239  0F37  00AE               	movwf	___lldiv@divisor+2
  5240  0F38  083E               	movf	??_PWM_Init+1,w
  5241  0F39  00AD               	movwf	___lldiv@divisor+1
  5242  0F3A  083D               	movf	??_PWM_Init,w
  5243  0F3B  00AC               	movwf	___lldiv@divisor
  5244  0F3C  3000               	movlw	0
  5245  0F3D  00B3               	movwf	___lldiv@dividend+3
  5246  0F3E  303D               	movlw	61
  5247  0F3F  00B2               	movwf	___lldiv@dividend+2
  5248  0F40  3009               	movlw	9
  5249  0F41  00B1               	movwf	___lldiv@dividend+1
  5250  0F42  3000               	movlw	0
  5251  0F43  00B0               	movwf	___lldiv@dividend
  5252  0F44  120A  118A  2715   	fcall	___lldiv
  5253  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0F49  082C               	movf	?___lldiv,w
  5256  0F4A  3EFF               	addlw	255
  5257  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  5258  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  5259  0F4D  0092               	movwf	18	;volatile
  5260                           
  5261                           ;pwm_Init.c: 18: CCP1CONbits.P1M = 0b00;
  5262  0F4E  303F               	movlw	-193
  5263  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5264  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5265  0F51  0597               	andwf	23,f	;volatile
  5266                           
  5267                           ;pwm_Init.c: 19: CCP1CONbits.CCP1M = 0b1100;
  5268  0F52  0817               	movf	23,w	;volatile
  5269  0F53  39F0               	andlw	-16
  5270  0F54  380C               	iorlw	12
  5271  0F55  0097               	movwf	23	;volatile
  5272                           
  5273                           ;pwm_Init.c: 20: CCP1CONbits.DC1B = 0b00;
  5274  0F56  30CF               	movlw	-49
  5275  0F57  0597               	andwf	23,f	;volatile
  5276                           
  5277                           ;pwm_Init.c: 21: CCPR1L = 0x00;
  5278  0F58  0195               	clrf	21	;volatile
  5279                           
  5280                           ;pwm_Init.c: 23: PIR1bits.TMR2IF = 0;
  5281  0F59  108C               	bcf	12,1	;volatile
  5282                           
  5283                           ;pwm_Init.c: 24: T2CONbits.TOUTPS = 0b0000;
  5284  0F5A  3087               	movlw	-121
  5285  0F5B  0592               	andwf	18,f	;volatile
  5286                           
  5287                           ;pwm_Init.c: 25: T2CONbits.T2CKPS = 0b00;
  5288  0F5C  30FC               	movlw	-4
  5289  0F5D  0592               	andwf	18,f	;volatile
  5290                           
  5291                           ;pwm_Init.c: 26: T2CONbits.TMR2ON = 1;
  5292  0F5E  1512               	bsf	18,2	;volatile
  5293                           
  5294                           ;pwm_Init.c: 27: TRISCbits.TRISC2 = 0;
  5295  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  5296  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  5297  0F61  1107               	bcf	7,2	;volatile
  5298  0F62  0008               	return
  5299  0F63                     __end_of_PWM_Init:	
  5300                           
  5301                           	psect	text23
  5302  05D7                     __ptext23:	
  5303 ;; *************** function _PWM_DutyCycle *****************
  5304 ;; Defined at:
  5305 ;;		line 30 in file "pwm_Init.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  iDutyCycle      4   25[BANK0 ] unsigned long 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5319 ;;      Params:         0       4       0       0       0
  5320 ;;      Locals:         0       0       0       0       0
  5321 ;;      Temps:          0       4       0       0       0
  5322 ;;      Totals:         0       8       0       0       0
  5323 ;;Total ram usage:        8 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    2
  5326 ;; This function calls:
  5327 ;;		___lldiv
  5328 ;;		___lmul
  5329 ;; This function is called by:
  5330 ;;		_system_Initialize
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _PWM_DutyCycle
  5336  05D7                     _PWM_DutyCycle:	
  5337                           
  5338                           ;pwm_Init.c: 32: iDutyCycle = (iDutyCycle * (4*(PR2 + 1)))/100;
  5339                           
  5340                           ;incstack = 0
  5341                           ; Regs used in _PWM_DutyCycle: [wreg+status,2+status,0+pclath+cstack]
  5342  05D7  3000               	movlw	0
  5343  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  5344  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  5345  05DA  00AF               	movwf	___lldiv@divisor+3
  5346  05DB  3000               	movlw	0
  5347  05DC  00AE               	movwf	___lldiv@divisor+2
  5348  05DD  3000               	movlw	0
  5349  05DE  00AD               	movwf	___lldiv@divisor+1
  5350  05DF  3064               	movlw	100
  5351  05E0  00AC               	movwf	___lldiv@divisor
  5352  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  5353  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  5354  05E3  0812               	movf	18,w	;volatile
  5355  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  5356  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  5357  05E6  00BD               	movwf	??_PWM_DutyCycle
  5358  05E7  01BE               	clrf	??_PWM_DutyCycle+1
  5359  05E8  1003               	clrc
  5360  05E9  0DBD               	rlf	??_PWM_DutyCycle,f
  5361  05EA  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5362  05EB  1003               	clrc
  5363  05EC  0DBD               	rlf	??_PWM_DutyCycle,f
  5364  05ED  0DBE               	rlf	??_PWM_DutyCycle+1,f
  5365  05EE  083D               	movf	??_PWM_DutyCycle,w
  5366  05EF  3E04               	addlw	4
  5367  05F0  00A0               	movwf	___lmul@multiplier
  5368  05F1  083E               	movf	??_PWM_DutyCycle+1,w
  5369  05F2  1803               	skipnc
  5370  05F3  3E01               	addlw	1
  5371  05F4  3E00               	addlw	0
  5372  05F5  00A1               	movwf	___lmul@multiplier+1
  5373  05F6  01A2               	clrf	___lmul@multiplier+2
  5374  05F7  1BA1               	btfsc	___lmul@multiplier+1,7
  5375  05F8  03A2               	decf	___lmul@multiplier+2,f
  5376  05F9  0822               	movf	___lmul@multiplier+2,w
  5377  05FA  00A3               	movwf	___lmul@multiplier+3
  5378  05FB  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5379  05FC  00A7               	movwf	___lmul@multiplicand+3
  5380  05FD  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5381  05FE  00A6               	movwf	___lmul@multiplicand+2
  5382  05FF  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5383  0600  00A5               	movwf	___lmul@multiplicand+1
  5384  0601  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5385  0602  00A4               	movwf	___lmul@multiplicand
  5386  0603  120A  158A  269C  120A  118A  	fcall	___lmul
  5387  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0609  1303               	bcf	3,6	;RP1=0, select bank0
  5389  060A  0823               	movf	?___lmul+3,w
  5390  060B  00B3               	movwf	___lldiv@dividend+3
  5391  060C  0822               	movf	?___lmul+2,w
  5392  060D  00B2               	movwf	___lldiv@dividend+2
  5393  060E  0821               	movf	?___lmul+1,w
  5394  060F  00B1               	movwf	___lldiv@dividend+1
  5395  0610  0820               	movf	?___lmul,w
  5396  0611  00B0               	movwf	___lldiv@dividend
  5397  0612  120A  118A  2715  120A  118A  	fcall	___lldiv
  5398  0617  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0618  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0619  082F               	movf	?___lldiv+3,w
  5401  061A  00BC               	movwf	PWM_DutyCycle@iDutyCycle+3
  5402  061B  082E               	movf	?___lldiv+2,w
  5403  061C  00BB               	movwf	PWM_DutyCycle@iDutyCycle+2
  5404  061D  082D               	movf	?___lldiv+1,w
  5405  061E  00BA               	movwf	PWM_DutyCycle@iDutyCycle+1
  5406  061F  082C               	movf	?___lldiv,w
  5407  0620  00B9               	movwf	PWM_DutyCycle@iDutyCycle
  5408                           
  5409                           ;pwm_Init.c: 33: CCP1CONbits.DC1B = (iDutyCycle<<4);
  5410  0621  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5411  0622  00BD               	movwf	??_PWM_DutyCycle
  5412  0623  3003               	movlw	3
  5413  0624                     u3715:	
  5414  0624  1003               	clrc
  5415  0625  0DBD               	rlf	??_PWM_DutyCycle,f
  5416  0626  3EFF               	addlw	-1
  5417  0627  1D03               	skipz
  5418  0628  2E24               	goto	u3715
  5419  0629  1003               	clrc
  5420  062A  0D3D               	rlf	??_PWM_DutyCycle,w
  5421  062B  00BE               	movwf	??_PWM_DutyCycle+1
  5422  062C  0EBE               	swapf	??_PWM_DutyCycle+1,f
  5423  062D  0817               	movf	23,w	;volatile
  5424  062E  063E               	xorwf	??_PWM_DutyCycle+1,w
  5425  062F  39CF               	andlw	-49
  5426  0630  063E               	xorwf	??_PWM_DutyCycle+1,w
  5427  0631  0097               	movwf	23	;volatile
  5428                           
  5429                           ;pwm_Init.c: 34: CCPR1L = (iDutyCycle >> 2);
  5430  0632  0839               	movf	PWM_DutyCycle@iDutyCycle,w
  5431  0633  00BD               	movwf	??_PWM_DutyCycle
  5432  0634  083A               	movf	PWM_DutyCycle@iDutyCycle+1,w
  5433  0635  00BE               	movwf	??_PWM_DutyCycle+1
  5434  0636  083B               	movf	PWM_DutyCycle@iDutyCycle+2,w
  5435  0637  00BF               	movwf	??_PWM_DutyCycle+2
  5436  0638  083C               	movf	PWM_DutyCycle@iDutyCycle+3,w
  5437  0639  00C0               	movwf	??_PWM_DutyCycle+3
  5438  063A  3002               	movlw	2
  5439  063B                     u3725:	
  5440  063B  1003               	clrc
  5441  063C  0CC0               	rrf	??_PWM_DutyCycle+3,f
  5442  063D  0CBF               	rrf	??_PWM_DutyCycle+2,f
  5443  063E  0CBE               	rrf	??_PWM_DutyCycle+1,f
  5444  063F  0CBD               	rrf	??_PWM_DutyCycle,f
  5445  0640  3EFF               	addlw	-1
  5446  0641  1D03               	skipz
  5447  0642  2E3B               	goto	u3725
  5448  0643  083D               	movf	??_PWM_DutyCycle,w
  5449  0644  0095               	movwf	21	;volatile
  5450  0645  0008               	return
  5451  0646                     __end_of_PWM_DutyCycle:	
  5452                           
  5453                           	psect	text24
  5454  0E9C                     __ptext24:	
  5455 ;; *************** function ___lmul *****************
  5456 ;; Defined at:
  5457 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5460 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  product         4    8[BANK0 ] unsigned long 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4    0[BANK0 ] unsigned long 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       8       0       0       0
  5473 ;;      Locals:         0       4       0       0       0
  5474 ;;      Temps:          1       0       0       0       0
  5475 ;;      Totals:         1      12       0       0       0
  5476 ;;Total ram usage:       13 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    1
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_PWM_DutyCycle
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function ___lmul
  5488  0E9C                     ___lmul:	
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5492  0E9C  3000               	movlw	0
  5493  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  5494  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  5495  0E9F  00AB               	movwf	___lmul@product+3
  5496  0EA0  3000               	movlw	0
  5497  0EA1  00AA               	movwf	___lmul@product+2
  5498  0EA2  3000               	movlw	0
  5499  0EA3  00A9               	movwf	___lmul@product+1
  5500  0EA4  3000               	movlw	0
  5501  0EA5  00A8               	movwf	___lmul@product
  5502  0EA6                     l2388:	
  5503  0EA6  1C20               	btfss	___lmul@multiplier,0
  5504  0EA7  2EBC               	goto	l2392
  5505  0EA8  0824               	movf	___lmul@multiplicand,w
  5506  0EA9  07A8               	addwf	___lmul@product,f
  5507  0EAA  0825               	movf	___lmul@multiplicand+1,w
  5508  0EAB  1103               	clrz
  5509  0EAC  1803               	skipnc
  5510  0EAD  3E01               	addlw	1
  5511  0EAE  1D03               	btfss	3,2
  5512  0EAF  07A9               	addwf	___lmul@product+1,f
  5513  0EB0  0826               	movf	___lmul@multiplicand+2,w
  5514  0EB1  1103               	clrz
  5515  0EB2  1803               	skipnc
  5516  0EB3  3E01               	addlw	1
  5517  0EB4  1D03               	btfss	3,2
  5518  0EB5  07AA               	addwf	___lmul@product+2,f
  5519  0EB6  0827               	movf	___lmul@multiplicand+3,w
  5520  0EB7  1103               	clrz
  5521  0EB8  1803               	skipnc
  5522  0EB9  3E01               	addlw	1
  5523  0EBA  1D03               	btfss	3,2
  5524  0EBB  07AB               	addwf	___lmul@product+3,f
  5525  0EBC                     l2392:	
  5526  0EBC  3001               	movlw	1
  5527  0EBD  00F4               	movwf	??___lmul
  5528  0EBE                     u3095:	
  5529  0EBE  1003               	clrc
  5530  0EBF  0DA4               	rlf	___lmul@multiplicand,f
  5531  0EC0  0DA5               	rlf	___lmul@multiplicand+1,f
  5532  0EC1  0DA6               	rlf	___lmul@multiplicand+2,f
  5533  0EC2  0DA7               	rlf	___lmul@multiplicand+3,f
  5534  0EC3  0BF4               	decfsz	??___lmul,f
  5535  0EC4  2EBE               	goto	u3095
  5536  0EC5  3001               	movlw	1
  5537  0EC6                     u3105:	
  5538  0EC6  1003               	clrc
  5539  0EC7  0CA3               	rrf	___lmul@multiplier+3,f
  5540  0EC8  0CA2               	rrf	___lmul@multiplier+2,f
  5541  0EC9  0CA1               	rrf	___lmul@multiplier+1,f
  5542  0ECA  0CA0               	rrf	___lmul@multiplier,f
  5543  0ECB  3EFF               	addlw	-1
  5544  0ECC  1D03               	skipz
  5545  0ECD  2EC6               	goto	u3105
  5546  0ECE  0823               	movf	___lmul@multiplier+3,w
  5547  0ECF  0422               	iorwf	___lmul@multiplier+2,w
  5548  0ED0  0421               	iorwf	___lmul@multiplier+1,w
  5549  0ED1  0420               	iorwf	___lmul@multiplier,w
  5550  0ED2  1D03               	skipz
  5551  0ED3  2EA6               	goto	l2388
  5552  0ED4  082B               	movf	___lmul@product+3,w
  5553  0ED5  00A3               	movwf	?___lmul+3
  5554  0ED6  082A               	movf	___lmul@product+2,w
  5555  0ED7  00A2               	movwf	?___lmul+2
  5556  0ED8  0829               	movf	___lmul@product+1,w
  5557  0ED9  00A1               	movwf	?___lmul+1
  5558  0EDA  0828               	movf	___lmul@product,w
  5559  0EDB  00A0               	movwf	?___lmul
  5560  0EDC  0008               	return
  5561  0EDD                     __end_of___lmul:	
  5562                           
  5563                           	psect	text25
  5564  0715                     __ptext25:	
  5565 ;; *************** function ___lldiv *****************
  5566 ;; Defined at:
  5567 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  divisor         4   12[BANK0 ] unsigned long 
  5570 ;;  dividend        4   16[BANK0 ] unsigned long 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  quotient        4   20[BANK0 ] unsigned long 
  5573 ;;  counter         1   24[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  4   12[BANK0 ] unsigned long 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       8       0       0       0
  5584 ;;      Locals:         0       5       0       0       0
  5585 ;;      Temps:          1       0       0       0       0
  5586 ;;      Totals:         1      13       0       0       0
  5587 ;;Total ram usage:       14 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    1
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_PWM_Init
  5594 ;;		_PWM_DutyCycle
  5595 ;;		_UART_Init
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function ___lldiv
  5601  0715                     ___lldiv:	
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5605  0715  3000               	movlw	0
  5606  0716  1283               	bcf	3,5	;RP0=0, select bank0
  5607  0717  1303               	bcf	3,6	;RP1=0, select bank0
  5608  0718  00B7               	movwf	___lldiv@quotient+3
  5609  0719  3000               	movlw	0
  5610  071A  00B6               	movwf	___lldiv@quotient+2
  5611  071B  3000               	movlw	0
  5612  071C  00B5               	movwf	___lldiv@quotient+1
  5613  071D  3000               	movlw	0
  5614  071E  00B4               	movwf	___lldiv@quotient
  5615  071F  082F               	movf	___lldiv@divisor+3,w
  5616  0720  042E               	iorwf	___lldiv@divisor+2,w
  5617  0721  042D               	iorwf	___lldiv@divisor+1,w
  5618  0722  042C               	iorwf	___lldiv@divisor,w
  5619  0723  1903               	skipnz
  5620  0724  2F6C               	goto	l2022
  5621  0725  01B8               	clrf	___lldiv@counter
  5622  0726  0AB8               	incf	___lldiv@counter,f
  5623  0727                     l2008:	
  5624  0727  1BAF               	btfsc	___lldiv@divisor+3,7
  5625  0728  2F37               	goto	l2010
  5626  0729  3001               	movlw	1
  5627  072A  00F5               	movwf	??___lldiv
  5628  072B                     u2375:	
  5629  072B  1003               	clrc
  5630  072C  0DAC               	rlf	___lldiv@divisor,f
  5631  072D  0DAD               	rlf	___lldiv@divisor+1,f
  5632  072E  0DAE               	rlf	___lldiv@divisor+2,f
  5633  072F  0DAF               	rlf	___lldiv@divisor+3,f
  5634  0730  0BF5               	decfsz	??___lldiv,f
  5635  0731  2F2B               	goto	u2375
  5636  0732  3001               	movlw	1
  5637  0733  00F5               	movwf	??___lldiv
  5638  0734  0875               	movf	??___lldiv,w
  5639  0735  07B8               	addwf	___lldiv@counter,f
  5640  0736  2F27               	goto	l2008
  5641  0737                     l2010:	
  5642  0737  3001               	movlw	1
  5643  0738  00F5               	movwf	??___lldiv
  5644  0739                     u2395:	
  5645  0739  1003               	clrc
  5646  073A  0DB4               	rlf	___lldiv@quotient,f
  5647  073B  0DB5               	rlf	___lldiv@quotient+1,f
  5648  073C  0DB6               	rlf	___lldiv@quotient+2,f
  5649  073D  0DB7               	rlf	___lldiv@quotient+3,f
  5650  073E  0BF5               	decfsz	??___lldiv,f
  5651  073F  2F39               	goto	u2395
  5652  0740  082F               	movf	___lldiv@divisor+3,w
  5653  0741  0233               	subwf	___lldiv@dividend+3,w
  5654  0742  1D03               	skipz
  5655  0743  2F4E               	goto	u2405
  5656  0744  082E               	movf	___lldiv@divisor+2,w
  5657  0745  0232               	subwf	___lldiv@dividend+2,w
  5658  0746  1D03               	skipz
  5659  0747  2F4E               	goto	u2405
  5660  0748  082D               	movf	___lldiv@divisor+1,w
  5661  0749  0231               	subwf	___lldiv@dividend+1,w
  5662  074A  1D03               	skipz
  5663  074B  2F4E               	goto	u2405
  5664  074C  082C               	movf	___lldiv@divisor,w
  5665  074D  0230               	subwf	___lldiv@dividend,w
  5666  074E                     u2405:	
  5667  074E  1C03               	skipc
  5668  074F  2F5F               	goto	l2018
  5669  0750  082C               	movf	___lldiv@divisor,w
  5670  0751  02B0               	subwf	___lldiv@dividend,f
  5671  0752  082D               	movf	___lldiv@divisor+1,w
  5672  0753  1C03               	skipc
  5673  0754  0F2D               	incfsz	___lldiv@divisor+1,w
  5674  0755  02B1               	subwf	___lldiv@dividend+1,f
  5675  0756  082E               	movf	___lldiv@divisor+2,w
  5676  0757  1C03               	skipc
  5677  0758  0F2E               	incfsz	___lldiv@divisor+2,w
  5678  0759  02B2               	subwf	___lldiv@dividend+2,f
  5679  075A  082F               	movf	___lldiv@divisor+3,w
  5680  075B  1C03               	skipc
  5681  075C  0F2F               	incfsz	___lldiv@divisor+3,w
  5682  075D  02B3               	subwf	___lldiv@dividend+3,f
  5683  075E  1434               	bsf	___lldiv@quotient,0
  5684  075F                     l2018:	
  5685  075F  3001               	movlw	1
  5686  0760                     u2415:	
  5687  0760  1003               	clrc
  5688  0761  0CAF               	rrf	___lldiv@divisor+3,f
  5689  0762  0CAE               	rrf	___lldiv@divisor+2,f
  5690  0763  0CAD               	rrf	___lldiv@divisor+1,f
  5691  0764  0CAC               	rrf	___lldiv@divisor,f
  5692  0765  3EFF               	addlw	-1
  5693  0766  1D03               	skipz
  5694  0767  2F60               	goto	u2415
  5695  0768  3001               	movlw	1
  5696  0769  02B8               	subwf	___lldiv@counter,f
  5697  076A  1D03               	btfss	3,2
  5698  076B  2F37               	goto	l2010
  5699  076C                     l2022:	
  5700  076C  0837               	movf	___lldiv@quotient+3,w
  5701  076D  00AF               	movwf	?___lldiv+3
  5702  076E  0836               	movf	___lldiv@quotient+2,w
  5703  076F  00AE               	movwf	?___lldiv+2
  5704  0770  0835               	movf	___lldiv@quotient+1,w
  5705  0771  00AD               	movwf	?___lldiv+1
  5706  0772  0834               	movf	___lldiv@quotient,w
  5707  0773  00AC               	movwf	?___lldiv
  5708  0774  0008               	return
  5709  0775                     __end_of___lldiv:	
  5710                           
  5711                           	psect	text26
  5712  0CA5                     __ptext26:	
  5713 ;; *************** function _Oscillator_Init *****************
  5714 ;; Defined at:
  5715 ;;		line 23 in file "SYST_Init.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		status,2
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5729 ;;      Params:         0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0
  5732 ;;      Totals:         0       0       0       0       0
  5733 ;;Total ram usage:        0 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_system_Initialize
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _Oscillator_Init
  5745  0CA5                     _Oscillator_Init:	
  5746                           
  5747                           ;SYST_Init.c: 24: OSCCON = 0x00;
  5748                           
  5749                           ;incstack = 0
  5750                           ; Regs used in _Oscillator_Init: [status,2]
  5751  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  5752  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  5753  0CA7  018F               	clrf	15	;volatile
  5754                           
  5755                           ;SYST_Init.c: 25: OSCTUNE = 0x00;
  5756  0CA8  0190               	clrf	16	;volatile
  5757  0CA9  0008               	return
  5758  0CAA                     __end_of_Oscillator_Init:	
  5759                           
  5760                           	psect	text27
  5761  06B4                     __ptext27:	
  5762 ;; *************** function _Lcd_Init *****************
  5763 ;; Defined at:
  5764 ;;		line 62 in file "lcd_Config.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;		None
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;		None
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5778 ;;      Params:         0       0       0       0       0
  5779 ;;      Locals:         0       0       0       0       0
  5780 ;;      Temps:          0       2       0       0       0
  5781 ;;      Totals:         0       2       0       0       0
  5782 ;;Total ram usage:        2 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    3
  5785 ;; This function calls:
  5786 ;;		_Lcd_Cmd
  5787 ;;		_Lcd_Port
  5788 ;; This function is called by:
  5789 ;;		_system_Initialize
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           
  5794                           ;psect for function _Lcd_Init
  5795  06B4                     _Lcd_Init:	
  5796                           
  5797                           ;lcd_Config.c: 63: Lcd_Port(0x00);
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5801  06B4  3000               	movlw	0
  5802  06B5  120A  158A  253A  120A  118A  	fcall	_Lcd_Port
  5803                           
  5804                           ;lcd_Config.c: 64: _delay((unsigned long)((20)*(4000000UL/4000.0)));
  5805  06BA  301A               	movlw	26
  5806  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  5807  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  5808  06BD  00A2               	movwf	??_Lcd_Init+1
  5809  06BE  30F7               	movlw	247
  5810  06BF  00A1               	movwf	??_Lcd_Init
  5811  06C0                     u4027:	
  5812  06C0  0BA1               	decfsz	??_Lcd_Init,f
  5813  06C1  2EC0               	goto	u4027
  5814  06C2  0BA2               	decfsz	??_Lcd_Init+1,f
  5815  06C3  2EC0               	goto	u4027
  5816  06C4  2EC5               	nop2
  5817                           
  5818                           ;lcd_Config.c: 65: Lcd_Cmd(0x03);
  5819  06C5  3003               	movlw	3
  5820  06C6  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5821                           
  5822                           ;lcd_Config.c: 66: _delay((unsigned long)((5)*(4000000UL/4000.0)));
  5823  06CB  3007               	movlw	7
  5824  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  5825  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  5826  06CE  00A2               	movwf	??_Lcd_Init+1
  5827  06CF  307C               	movlw	124
  5828  06D0  00A1               	movwf	??_Lcd_Init
  5829  06D1                     u4037:	
  5830  06D1  0BA1               	decfsz	??_Lcd_Init,f
  5831  06D2  2ED1               	goto	u4037
  5832  06D3  0BA2               	decfsz	??_Lcd_Init+1,f
  5833  06D4  2ED1               	goto	u4037
  5834  06D5  0000               	nop
  5835                           
  5836                           ;lcd_Config.c: 67: Lcd_Cmd(0x03);
  5837  06D6  3003               	movlw	3
  5838  06D7  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5839                           
  5840                           ;lcd_Config.c: 68: _delay((unsigned long)((11)*(4000000UL/4000.0)));
  5841  06DC  300F               	movlw	15
  5842  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  5843  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  5844  06DF  00A2               	movwf	??_Lcd_Init+1
  5845  06E0  3047               	movlw	71
  5846  06E1  00A1               	movwf	??_Lcd_Init
  5847  06E2                     u4047:	
  5848  06E2  0BA1               	decfsz	??_Lcd_Init,f
  5849  06E3  2EE2               	goto	u4047
  5850  06E4  0BA2               	decfsz	??_Lcd_Init+1,f
  5851  06E5  2EE2               	goto	u4047
  5852                           
  5853                           ;lcd_Config.c: 69: Lcd_Cmd(0x03);
  5854  06E6  3003               	movlw	3
  5855  06E7  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5856                           
  5857                           ;lcd_Config.c: 71: Lcd_Cmd(0x02);
  5858  06EC  3002               	movlw	2
  5859  06ED  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5860                           
  5861                           ;lcd_Config.c: 72: Lcd_Cmd(0x02);
  5862  06F2  3002               	movlw	2
  5863  06F3  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5864                           
  5865                           ;lcd_Config.c: 73: Lcd_Cmd(0x08);
  5866  06F8  3008               	movlw	8
  5867  06F9  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5868                           
  5869                           ;lcd_Config.c: 74: Lcd_Cmd(0x00);
  5870  06FE  3000               	movlw	0
  5871  06FF  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5872                           
  5873                           ;lcd_Config.c: 75: Lcd_Cmd(0x0C);
  5874  0704  300C               	movlw	12
  5875  0705  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5876                           
  5877                           ;lcd_Config.c: 76: Lcd_Cmd(0x00);
  5878  070A  3000               	movlw	0
  5879  070B  120A  158A  2554  120A  118A  	fcall	_Lcd_Cmd
  5880                           
  5881                           ;lcd_Config.c: 77: Lcd_Cmd(0x06);
  5882  0710  3006               	movlw	6
  5883  0711  120A  158A  2554   	fcall	_Lcd_Cmd
  5884  0714  0008               	return
  5885  0715                     __end_of_Lcd_Init:	
  5886                           
  5887                           	psect	text28
  5888  0D54                     __ptext28:	
  5889 ;; *************** function _Lcd_Cmd *****************
  5890 ;; Defined at:
  5891 ;;		line 32 in file "lcd_Config.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  a               1    wreg     unsigned char 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  a               1    0[BANK0 ] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, pclath, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5905 ;;      Params:         0       0       0       0       0
  5906 ;;      Locals:         0       1       0       0       0
  5907 ;;      Temps:          2       0       0       0       0
  5908 ;;      Totals:         2       1       0       0       0
  5909 ;;Total ram usage:        3 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    2
  5912 ;; This function calls:
  5913 ;;		_Lcd_Port
  5914 ;; This function is called by:
  5915 ;;		_Lcd_Set_Cursor
  5916 ;;		_Lcd_Init
  5917 ;;		_Lcd_Clear
  5918 ;;		_Lcd_Shift_Right
  5919 ;;		_Lcd_Shift_Left
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           
  5924                           ;psect for function _Lcd_Cmd
  5925  0D54                     _Lcd_Cmd:	
  5926                           
  5927                           ;incstack = 0
  5928                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5929                           ;Lcd_Cmd@a stored from wreg
  5930  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0D56  00A0               	movwf	Lcd_Cmd@a
  5933                           
  5934                           ;lcd_Config.c: 33: PORTBbits.RB5 = 0;
  5935  0D57  1286               	bcf	6,5	;volatile
  5936                           
  5937                           ;lcd_Config.c: 34: Lcd_Port(a);
  5938  0D58  0820               	movf	Lcd_Cmd@a,w
  5939  0D59  120A  158A  253A  120A  158A  	fcall	_Lcd_Port
  5940                           
  5941                           ;lcd_Config.c: 35: PORTBbits.RB4 = 1;
  5942  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  5943  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  5944  0D60  1606               	bsf	6,4	;volatile
  5945                           
  5946                           ;lcd_Config.c: 36: _delay((unsigned long)((4)*(4000000UL/4000.0)));
  5947  0D61  3006               	movlw	6
  5948  0D62  00F6               	movwf	??_Lcd_Cmd+1
  5949  0D63  3030               	movlw	48
  5950  0D64  00F5               	movwf	??_Lcd_Cmd
  5951  0D65                     u4057:	
  5952  0D65  0BF5               	decfsz	??_Lcd_Cmd,f
  5953  0D66  2D65               	goto	u4057
  5954  0D67  0BF6               	decfsz	??_Lcd_Cmd+1,f
  5955  0D68  2D65               	goto	u4057
  5956  0D69  0000               	nop
  5957                           
  5958                           ;lcd_Config.c: 37: PORTBbits.RB4 = 0;
  5959  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  5960  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  5961  0D6C  1206               	bcf	6,4	;volatile
  5962  0D6D  0008               	return
  5963  0D6E                     __end_of_Lcd_Cmd:	
  5964                           
  5965                           	psect	text29
  5966  0D3A                     __ptext29:	
  5967 ;; *************** function _Lcd_Port *****************
  5968 ;; Defined at:
  5969 ;;		line 10 in file "lcd_Config.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  a               1    wreg     unsigned char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  a               1    4[COMMON] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5983 ;;      Params:         0       0       0       0       0
  5984 ;;      Locals:         1       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0
  5986 ;;      Totals:         1       0       0       0       0
  5987 ;;Total ram usage:        1 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_Lcd_Cmd
  5994 ;;		_Lcd_Init
  5995 ;;		_Lcd_Write_Char
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function _Lcd_Port
  6001  0D3A                     _Lcd_Port:	
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in _Lcd_Port: [wreg]
  6005                           ;Lcd_Port@a stored from wreg
  6006  0D3A  00F4               	movwf	Lcd_Port@a
  6007                           
  6008                           ;lcd_Config.c: 11: if (a & 1)
  6009  0D3B  1C74               	btfss	Lcd_Port@a,0
  6010  0D3C  2D41               	goto	l108
  6011                           
  6012                           ;lcd_Config.c: 12: PORTBbits.RB3 = 1;
  6013  0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  6014  0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  6015  0D3F  1586               	bsf	6,3	;volatile
  6016  0D40  2D44               	goto	l109
  6017  0D41                     l108:	
  6018                           
  6019                           ;lcd_Config.c: 13: else
  6020                           ;lcd_Config.c: 14: PORTBbits.RB3 = 0;
  6021  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0D43  1186               	bcf	6,3	;volatile
  6024  0D44                     l109:	
  6025                           
  6026                           ;lcd_Config.c: 16: if (a & 2)
  6027  0D44  1CF4               	btfss	Lcd_Port@a,1
  6028  0D45  2D48               	goto	l110
  6029                           
  6030                           ;lcd_Config.c: 17: PORTBbits.RB2 = 1;
  6031  0D46  1506               	bsf	6,2	;volatile
  6032  0D47  2D49               	goto	l111
  6033  0D48                     l110:	
  6034                           
  6035                           ;lcd_Config.c: 18: else
  6036                           ;lcd_Config.c: 19: PORTBbits.RB2 = 0;
  6037  0D48  1106               	bcf	6,2	;volatile
  6038  0D49                     l111:	
  6039                           
  6040                           ;lcd_Config.c: 21: if (a & 4)
  6041  0D49  1D74               	btfss	Lcd_Port@a,2
  6042  0D4A  2D4D               	goto	l112
  6043                           
  6044                           ;lcd_Config.c: 22: PORTBbits.RB1 = 1;
  6045  0D4B  1486               	bsf	6,1	;volatile
  6046  0D4C  2D4E               	goto	l113
  6047  0D4D                     l112:	
  6048                           
  6049                           ;lcd_Config.c: 23: else
  6050                           ;lcd_Config.c: 24: PORTBbits.RB1 = 0;
  6051  0D4D  1086               	bcf	6,1	;volatile
  6052  0D4E                     l113:	
  6053                           
  6054                           ;lcd_Config.c: 26: if (a & 8)
  6055  0D4E  1DF4               	btfss	Lcd_Port@a,3
  6056  0D4F  2D52               	goto	l114
  6057                           
  6058                           ;lcd_Config.c: 27: PORTBbits.RB0 = 1;
  6059  0D50  1406               	bsf	6,0	;volatile
  6060  0D51  0008               	return
  6061  0D52                     l114:	
  6062                           
  6063                           ;lcd_Config.c: 28: else
  6064                           ;lcd_Config.c: 29: PORTBbits.RB0 = 0;
  6065  0D52  1006               	bcf	6,0	;volatile
  6066  0D53  0008               	return
  6067  0D54                     __end_of_Lcd_Port:	
  6068                           
  6069                           	psect	text30
  6070  0CDA                     __ptext30:	
  6071 ;; *************** function _Interrupt_Init *****************
  6072 ;; Defined at:
  6073 ;;		line 10 in file "interrupt_Init.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		None
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6087 ;;      Params:         0       0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0
  6090 ;;      Totals:         0       0       0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; Hardware stack levels required when called:    1
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_system_Initialize
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function _Interrupt_Init
  6103  0CDA                     _Interrupt_Init:	
  6104                           
  6105                           ;interrupt_Init.c: 12: INTCONbits.GIE = 1;
  6106                           
  6107                           ;incstack = 0
  6108                           ; Regs used in _Interrupt_Init: []
  6109  0CDA  178B               	bsf	11,7	;volatile
  6110                           
  6111                           ;interrupt_Init.c: 13: INTCONbits.PEIE = 1;
  6112  0CDB  170B               	bsf	11,6	;volatile
  6113                           
  6114                           ;interrupt_Init.c: 15: PIE1bits.ADIE = 1;
  6115  0CDC  1683               	bsf	3,5	;RP0=1, select bank1
  6116  0CDD  1303               	bcf	3,6	;RP1=0, select bank1
  6117  0CDE  170C               	bsf	12,6	;volatile
  6118                           
  6119                           ;interrupt_Init.c: 16: PIR1bits.ADIF = 0;
  6120  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  6121  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  6122  0CE1  130C               	bcf	12,6	;volatile
  6123                           
  6124                           ;interrupt_Init.c: 18: PIE1bits.RCIE = 1;
  6125  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  6126  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  6127  0CE4  168C               	bsf	12,5	;volatile
  6128                           
  6129                           ;interrupt_Init.c: 19: PIR1bits.RCIF = 0;
  6130  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0CE7  128C               	bcf	12,5	;volatile
  6133  0CE8  0008               	return
  6134  0CE9                     __end_of_Interrupt_Init:	
  6135                           
  6136                           	psect	text31
  6137  0D21                     __ptext31:	
  6138 ;; *************** function _ADC_Init *****************
  6139 ;; Defined at:
  6140 ;;		line 13 in file "adc_Init.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      void 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6154 ;;      Params:         0       0       0       0       0
  6155 ;;      Locals:         0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0
  6157 ;;      Totals:         0       0       0       0       0
  6158 ;;Total ram usage:        0 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    1
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_system_Initialize
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _ADC_Init
  6170  0D21                     _ADC_Init:	
  6171                           
  6172                           ;adc_Init.c: 14: ADCON0bits.ADCS = 0b01;
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  6176  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  6177  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0D23  081F               	movf	31,w	;volatile
  6179  0D24  393F               	andlw	-193
  6180  0D25  3840               	iorlw	64
  6181  0D26  009F               	movwf	31	;volatile
  6182                           
  6183                           ;adc_Init.c: 15: ADCON0bits.CHS = 0x0000;
  6184  0D27  30C3               	movlw	-61
  6185  0D28  059F               	andwf	31,f	;volatile
  6186                           
  6187                           ;adc_Init.c: 16: ADCON0bits.GO_DONE = GO_DONE = 0;
  6188  0D29  109F               	bcf	31,1	;volatile
  6189  0D2A  1C9F               	btfss	31,1	;volatile
  6190  0D2B  2D30               	goto	u1050
  6191  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0D2E  149F               	bsf	31,1	;volatile
  6194  0D2F  2D33               	goto	l1346
  6195  0D30                     u1050:	
  6196  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0D32  109F               	bcf	31,1	;volatile
  6199  0D33                     l1346:	
  6200                           
  6201                           ;adc_Init.c: 17: ADCON0bits.ADON = 1;
  6202  0D33  141F               	bsf	31,0	;volatile
  6203                           
  6204                           ;adc_Init.c: 19: ADCON1bits.ADFM = 1;
  6205  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  6206  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  6207  0D36  179F               	bsf	31,7	;volatile
  6208                           
  6209                           ;adc_Init.c: 20: ADCON1bits.VCFG0 = 0b00;
  6210  0D37  121F               	bcf	31,4	;volatile
  6211                           
  6212                           ;adc_Init.c: 21: ADCON1bits.VCFG1 = 0b00;
  6213  0D38  129F               	bcf	31,5	;volatile
  6214  0D39  0008               	return
  6215  0D3A                     __end_of_ADC_Init:	
  6216                           
  6217                           	psect	text32
  6218  0D91                     __ptext32:	
  6219 ;; *************** function _ISR *****************
  6220 ;; Defined at:
  6221 ;;		line 22 in file "interrupt_Init.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		None
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6235 ;;      Params:         0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0
  6237 ;;      Temps:          4       0       0       0       0
  6238 ;;      Totals:         4       0       0       0       0
  6239 ;;Total ram usage:        4 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		Interrupt level 1
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _ISR
  6250  0D91                     _ISR:	
  6251                           
  6252                           ;interrupt_Init.c: 23: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1){
  6253  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  6254  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  6255  0D93  1E8C               	btfss	12,5	;volatile
  6256  0D94  2D9A               	goto	i1l217
  6257  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0D97  1E8C               	btfss	12,5	;volatile
  6260  0D98  2D9A               	goto	i1l217
  6261                           
  6262                           ;interrupt_Init.c: 24: PIR1bits.RCIF = 0;
  6263  0D99  128C               	bcf	12,5	;volatile
  6264  0D9A                     i1l217:	
  6265                           
  6266                           ;interrupt_Init.c: 25: }
  6267                           ;interrupt_Init.c: 26: if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1) {
  6268  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  6269  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  6270  0D9C  1F0C               	btfss	12,6	;volatile
  6271  0D9D  2DA3               	goto	i1l218
  6272  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0DA0  1F0C               	btfss	12,6	;volatile
  6275  0DA1  2DA3               	goto	i1l218
  6276                           
  6277                           ;interrupt_Init.c: 27: PIR1bits.ADIF = 0;
  6278  0DA2  130C               	bcf	12,6	;volatile
  6279  0DA3                     i1l218:	
  6280                           
  6281                           ;interrupt_Init.c: 28: }
  6282                           ;interrupt_Init.c: 29: if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1) {
  6283  0DA3  1A8B               	btfsc	11,5	;volatile
  6284  0DA4  1D0B               	btfss	11,2	;volatile
  6285  0DA5  2DA7               	goto	i1l219
  6286                           
  6287                           ;interrupt_Init.c: 30: INTCONbits.T0IF = 0;
  6288  0DA6  110B               	bcf	11,2	;volatile
  6289  0DA7                     i1l219:	
  6290                           
  6291                           ;interrupt_Init.c: 31: }
  6292                           ;interrupt_Init.c: 32: if( PIE1bits.SSPIE == 1 && PIR1bits.SSPIF == 1){
  6293  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  6294  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  6295  0DA9  1D8C               	btfss	12,3	;volatile
  6296  0DAA  2DB0               	goto	i1l221
  6297  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  6298  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  6299  0DAD  1D8C               	btfss	12,3	;volatile
  6300  0DAE  2DB0               	goto	i1l221
  6301                           
  6302                           ;interrupt_Init.c: 33: PIR1bits.SSPIF = 0;
  6303  0DAF  118C               	bcf	12,3	;volatile
  6304  0DB0                     i1l221:	
  6305  0DB0  0873               	movf	??_ISR+3,w
  6306  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  6307  0DB2  00FF               	movwf	127
  6308  0DB3  0872               	movf	??_ISR+2,w
  6309  0DB4  008A               	movwf	10
  6310  0DB5  0871               	movf	??_ISR+1,w
  6311  0DB6  0084               	movwf	4
  6312  0DB7  0E70               	swapf	??_ISR^(0+-128),w
  6313  0DB8  0083               	movwf	3
  6314  0DB9  0EFE               	swapf	126,f
  6315  0DBA  0E7E               	swapf	126,w
  6316  0DBB  0009               	retfie
  6317  0DBC                     __end_of_ISR:	
  6318  007E                     btemp	set	126	;btemp
  6319  007E                     wtemp0	set	126
  6320                           
  6321                           	psect	intentry
  6322  0004                     __pintentry:	
  6323                           ;incstack = 0
  6324                           ; Regs used in _ISR: []
  6325                           
  6326  0004                     interrupt_function:	
  6327  007E                     saved_w	set	btemp
  6328  0004  00FE               	movwf	btemp
  6329  0005  0E03               	swapf	3,w
  6330  0006  00F0               	movwf	??_ISR
  6331  0007  0804               	movf	4,w
  6332  0008  00F1               	movwf	??_ISR+1
  6333  0009  080A               	movf	10,w
  6334  000A  00F2               	movwf	??_ISR+2
  6335  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6336  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6337  000D  087F               	movf	btemp+1,w
  6338  000E  00F3               	movwf	??_ISR+3
  6339  000F  120A  158A  2D91   	ljmp	_ISR


Data Sizes:
    Strings     17
    Constant    10
    Data        10
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     79      80
    BANK1            80     15      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> sTemperature(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    temp_Display@TEMP	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    Lcd_write@string	PTR unsigned char  size(2) Largest target is 13
		 -> sTemperature(BANK1[2]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_temp_Display
    _temp_Display->_sprintf
    _temp_Measurement->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _sprintf->_temp_Measurement
    ___lwmod->___lwdiv
    _Lcd_write->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _system_Initialize->_PWM_DutyCycle
    _system_Initialize->_PWM_Init
    _UART_Init->___lldiv
    _PWM_Init->___lldiv
    _PWM_DutyCycle->___lldiv
    ___lldiv->___lmul
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temp_Display
    _temp_Display->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20146
                  _system_Initialize
                       _temp_Display
 ---------------------------------------------------------------------------------
 (1) _temp_Display                                         4     4      0   17594
                                             78 BANK0      1     1      0
                                             12 BANK1      3     3      0
                     _Lcd_Set_Cursor
                          _Lcd_write
                            _sprintf
                   _temp_Measurement
 ---------------------------------------------------------------------------------
 (2) _temp_Measurement                                     7     7      0   13825
                                             68 BANK0      7     7      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2572
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             54 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3106
                                              9 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    3192
                                             25 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3957
                                             41 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2464
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2498
                                             75 BANK0      3     0      3
                                              0 BANK1     12    12      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                   _temp_Measurement (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_write                                            7     5      2     538
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     699
                                              1 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _system_Initialize                                    0     0      0    2552
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                    _Oscillator_Init
                      _PWM_DutyCycle
                           _PWM_Init
                           _SPI_Init
                          _TMR0_Init
                          _UART_Init
                         _pinManager
 ---------------------------------------------------------------------------------
 (2) _pinManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            6     4      2     632
                                             25 BANK0      6     4      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             8     4      4     632
                                             25 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle                                        8     4      4    1009
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     290
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     546
                                              5 COMMON     1     1      0
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _system_Initialize
     _ADC_Init
     _Interrupt_Init
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _Oscillator_Init
     _PWM_DutyCycle
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM_Init
       ___lldiv
         ___lmul (ARG)
     _SPI_Init
     _TMR0_Init
     _UART_Init
       ___lldiv
         ___lmul (ARG)
     _pinManager
   _temp_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_write
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _temp_Measurement (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwdiv
         ___lwtoft
           ___ftpack
     _temp_Measurement
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwdiv
       ___lwtoft
         ___ftpack

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      79      12        0.0%
ABS                  0      0      79       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 18 16:53:28 2019

          ??_Interrupt_Init 0074      __size_of_PWM_DutyCycle 006F                           pc 0002  
               __CFG_CP$OFF 0000                          fsr 0004         ___wmul@multiplicand 0022  
              ___ftadd@exp1 0055                ___ftadd@exp2 0054                 __CFG_LVP$ON 0000  
              ___ftadd@sign 0053                         l110 0D48                         l111 0D49  
                       l112 0D4D                         l113 0D4E                         l114 0D52  
                       l108 0D41                         l109 0D44                         l513 0D7A  
                       l418 012A                         l186 02EA                         l705 027B  
                       l681 0693                         l682 069B                         l674 067E  
                       l765 05BD                         _PR2 0092                __CFG_CPD$OFF 0000  
                       _ISR 0D91                         _adc 0077                         fsr0 0004  
                       indf 0000                __CFG_IESO$ON 0000                __CFG_FOSC$HS 0000  
                      ?_ISR 0070                ___ftdiv@cntr 0043                ___ftdiv@sign 0048  
                      l2010 0737                        l2022 076C                        l2008 0727  
                      l2018 075F                        l2320 0663                        l1346 0D33  
                      l2330 068D                        l2322 0668                        l2314 0650  
                      l2410 0203                        l2318 0657                        l2406 01FC  
                      l2328 0683                        l2440 0256                        l2416 0212  
                      l2504 0523                        l2602 07EF                        l2434 0241  
                      l2452 028D                        l2436 024D                        l2428 022C  
                      l2540 043B                        l2524 03EC                        l2606 07FA  
                      l2374 0D70                        l2710 00DC                        l2446 026B  
                      l2438 0252                        l2518 03D6                        l2392 0EBC  
                      l2640 0FD7                        l2720 00F5                        l2456 029F  
                      l2448 0277                        l2552 0463                        l2536 042B  
                      l2466 02C2                        l2482 04BF                        l2802 0CB9  
                      l2388 0EA6                        l2580 0E4C                        l2572 0E28  
                      l2740 0149                        l2732 011C                        l2708 00C3  
                      l2476 04A9                        l2548 0453                        l2574 0E36  
                      l1766 0CD8                        l2750 0166                        l2742 014D  
                      l2726 00FB                        l2670 0305                        l2656 0EE1  
                      l2584 0E57                        l2744 0151                        l2496 0504  
                      l2680 03BA                        l2596 07D3                        l2764 0179  
                      l2756 0175                        l2692 005E                        l2676 03A9  
                      l2598 07E1                        l2766 003A                        l1966 0563  
                      l2768 01CC                        l1992 05B2                        l1984 0595  
                      l2698 0075                        l1994 05C0                        l1986 05A5  
                      l1998 05CE                        STR_1 081A                        STR_2 0827  
                      u1050 0D30                        u3005 06A2                        u3105 0EC6  
                      u3025 0DF8                        u2305 0596                        u2405 074E  
                      u3045 0D7B                        u2415 0760                        u4007 0E08  
                      u3055 0D82                        u3215 022D                        u2335 05B4  
                      u4017 0E18                        u3305 026C                        u4027 06C0  
                      u2275 056A                        u4037 06D1                        u3245 0242  
                      u3405 0505                        u4047 06E2                        u2375 072B  
                      u3095 0EBE                        u3415 0516                        u4057 0D65  
                      u3425 0524                        u3505 043C                        u2395 0739  
                      u3275 0257                        u3515 0444                        u2565 0F2C  
                      u3615 0E37                        u3625 0E43                        u3385 04D1  
                      u3465 03F8                        u3715 0624                        u2595 0E8E  
                      u3635 0E4D                        u3395 04E3                        u3555 0464  
                      u3475 040A                        u3725 063B                        u2925 065C  
                      u3565 046C                        u3815 0303                        u3745 0FBC  
                      u3665 07D6                        u2945 0677                        u3595 0E2B  
                      u3835 03B8                        u3765 0FE5                        u3685 07E7  
                      u2965 0686                        u3695 07F0                        u3935 0139  
                      u3895 0112                        u3997 02E2                        _TMR0 0001  
              __CFG_WRT$OFF 0000               __CFG_FCMEN$ON 0000                        _main 0CB4  
              ___ftpack@arg 0020                ___ftpack@exp 0023                        btemp 007E  
          __end_of_ADC_Init 0D3A                        start 0012       _temp_Measurement$1577 0066  
           __end_of_Lcd_Cmd 0D6E               __CFG_MCLRE$ON 0000                ___ftmul@cntr 0037  
              ___ftmul@sign 0038           ??_Oscillator_Init 0074                       ??_ISR 0070  
              ___fttol@exp1 0063                ___fttol@lval 005F                       ?_main 0070  
                     _EEADR 010D             __end_of___ftadd 02DC               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 0549             __end_of___lldiv 0775             __end_of___ftmul 0491  
           __end_of___fttol 05D7             __end_of___lwdiv 0E5C                       i1l221 0DB0  
                     i1l217 0D9A                       i1l218 0DA3                       i1l219 0DA7  
           __end_of___lwmod 07FF                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009     __size_of_Lcd_Set_Cursor 0052  
                     _TRISB 0086                       _TRISD 0088                       _TXREG 0019  
       ___lmul@multiplicand 0024          __size_of_UART_Init 0040          __size_of_TMR0_Init 000F  
             _PWM_DutyCycle 05D7             __end_of_dpowers 081A             __end_of_isdigit 0CDA  
             ___ftpack@sign 0024            __end_of_SPI_Init 0CCC              __CFG_BOREN$OFF 0000  
                     pclath 000A            __end_of_PWM_Init 0F63                       status 0003  
                     wtemp0 007E             __end_of_sprintf 01D3            __end_of_Lcd_Init 0715  
          __end_of_Lcd_Port 0D54             __initialization 0015                __end_of_main 0CBF  
                    ??_main 0077               ___fttol@sign1 005E              ?_PWM_DutyCycle 0039  
        __size_of_Lcd_write 0041                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015            __end_of___ftpack 06B4  
                    _ANSELH 0189            __end_of___lwtoft 0D21                      _OSCCON 008F  
                 ??_Lcd_Cmd 0075     __size_of_Lcd_Write_Char 0037                      _SSPBUF 0013  
            __CFG_PWRTE$OFF 0000           __end_of_UART_Init 0E9C           __end_of_TMR0_Init 0CF8  
                    ___lmul 0E9C                      ___wmul 0D6E                   ??___ftadd 004F  
                 ??___ftdiv 003F                   ??___lldiv 0075                   ??___ftmul 002F  
                 ??___fttol 005A                   ??___lwdiv 0074                   ??___lwmod 0075  
     ___ftmul@f3_as_product 0034           ?_temp_Measurement 0070                   ??_isdigit 0074  
                 ?_ADC_Init 0070                      saved_w 007E          ??_temp_Measurement 0064  
                 ??_sprintf 00A0             Lcd_Set_Cursor@y 0026             Lcd_Set_Cursor@z 0025  
   __end_of__initialization 002F                  ___ftadd@f1 0049                  ___ftadd@f2 004C  
                ___ftdiv@f1 003C                  ___ftdiv@f2 0039                  ___ftdiv@f3 0044  
                ___ftmul@f1 0029                  ___ftmul@f2 002C                  ___fttol@f1 0056  
            __pcstackCOMMON 0070                __pidataBANK1 0CAA           __end_of_Lcd_write 0F1E  
                 ?_SPI_Init 0070                  ___lwtoft@c 0025                   ?_PWM_Init 0039  
            _Lcd_Set_Cursor 0FAE             ??_PWM_DutyCycle 003D              _OPTION_REGbits 0081  
                ??_ADC_Init 0074                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
              sprintf@width 00A9                  __pbssBANK0 006F                  __pbssBANK1 00B9  
           _Oscillator_Init 0CA5                  __pmaintext 0CB4                     ?___lmul 0020  
                   ?___wmul 0020                  __pintentry 0004              ___lmul@product 0028  
                 ?___ftpack 0020      __end_of_Lcd_Set_Cursor 1000                  ??_SPI_Init 0074  
                ??_PWM_Init 003D                   ?___lwtoft 0025                     _GO_DONE 00F9  
                   _OSCTUNE 0090                  ??_Lcd_Init 0021                  ??_Lcd_Port 0074  
                __stringtab 0800              _Lcd_Write_Char 0DE7                     _Lcd_Cmd 0D54  
             ?_temp_Display 0070             __size_of___lmul 0041                     ___ftadd 01D3  
                   ___ftdiv 0491                     ___lldiv 0715             __size_of___wmul 0023  
                   ___ftmul 03BE                     ___fttol 0549                     ___lwdiv 0E1E  
                   ___lwmod 07CB                  ??___ftpack 0074                   _ANSELbits 0188  
           ?_Lcd_Set_Cursor 0021                     __ptext1 0775                     __ptext2 02DC  
                   __ptext3 0D09                     __ptext4 0549                     __ptext5 03BE  
                   __ptext6 0491                     __ptext7 01D3                     __ptext8 0646  
                   __ptext9 0033                     _g_state 0079                  ??___lwtoft 0028  
                _pinManager 0DBC                __size_of_ISR 002B                     _dpowers 0810  
                 _T2CONbits 0012                     _rawData 00B9     __size_of_Interrupt_Init 000F  
                   _isdigit 0CCC     __end_of_Oscillator_Init 0CAA                     _sprintf 0033  
    __end_of_Lcd_Write_Char 0E1E        end_of_initialization 002F              ??_temp_Display 00AC  
           ___lldiv@divisor 002C            temp_Display@TEMP 006E             ___lldiv@counter 0038  
                 _RCSTAbits 0018                   Lcd_Port@a 0074                   _UART_Init 0E5C  
                 _TMR0_Init 0CE9                   _PORTAbits 0005                   _PORTBbits 0006  
                 _TRISAbits 0085                   _TRISBbits 0086                   _TRISCbits 0087  
        PWM_Init@iFrequency 0039           _system_Initialize 0F63           __size_of_ADC_Init 0019  
        ?_system_Initialize 0070             ?_Lcd_Write_Char 0070                 _CCP1CONbits 0017  
               ___ftdiv@exp 0047   __size_of_temp_Measurement 00E2                   _TXSTAbits 0098  
              _sTemperature 00BD         ??_system_Initialize 0077                 ___ftmul@exp 0033  
            __end_of___lmul 0EDD              __end_of___wmul 0D91                  ?_UART_Init 0039  
               _BAUDCTLbits 0187                  ?_TMR0_Init 0070                   _Lcd_write 0EDD  
               ?_pinManager 0070   __end_of_system_Initialize 0FAE           __size_of_SPI_Init 000D  
         __size_of_PWM_Init 0045         start_initialization 0015            ?_Oscillator_Init 0070  
               __end_of_ISR 0DBC           __size_of_Lcd_Init 0061           __size_of_Lcd_Port 001A  
                  ??___lmul 0074                    ??___wmul 0074                  init_fetch0 0CF8  
               __pdataBANK1 00AF             Lcd_Write_Char@a 0022             Lcd_Write_Char@y 0021  
             _segment_Array 00AF        __end_of_temp_Display 07CB                  ?_Lcd_write 0023  
    temp_Measurement@sample 0069              _Interrupt_Init 0CDA           __size_of___ftpack 006E  
               __pbssCOMMON 0077                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0       __end_of_PWM_DutyCycle 0646  
              _isdigit$1326 0074                    ?_Lcd_Cmd 0070                 sprintf@flag 00A5  
               sprintf@prec 00A4         __size_of_pinManager 002B            ___lwdiv@dividend 0022  
          ??_Lcd_Set_Cursor 0022                    ?___ftadd 0049                    ?___ftdiv 0039  
                  ?___lldiv 002C                    ?___ftmul 0029                    ?___fttol 0056  
                  ?___lwdiv 0020                    ?___lwmod 0027                 ??_UART_Init 003B  
    __end_of_Interrupt_Init 0CE9                 ??_TMR0_Init 0074                   __pstrings 0800  
__size_of_system_Initialize 004B                    ?_isdigit 0070             Lcd_write@string 0023  
                  _ADC_Init 0D21     PWM_DutyCycle@iDutyCycle 0039            ___lwdiv@quotient 0025  
                  ?_sprintf 006B           interrupt_function 0004              ___wmul@product 0074  
          _temp_Measurement 02DC                    _PIE1bits 008C                    Lcd_Cmd@a 0020  
                  _PIR1bits 000C           UART_Init@baudRate 0039                    _SPI_Init 0CBF  
           ?_Interrupt_Init 0070                 ??_Lcd_write 0025                  _ADCON0bits 001F  
               __stringbase 080F                  _ADCON1bits 009F                    _PWM_Init 0F1E  
         ___wmul@multiplier 0020            ??_Lcd_Write_Char 0075                    _Lcd_Init 06B4  
                  _Lcd_Port 0D3A           ___lmul@multiplier 0020        Lcd_Set_Cursor@column 0021  
          __size_of_Lcd_Cmd 001A                  _EECON1bits 018C       __size_of_temp_Display 0056  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___lldiv 0060  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
          __size_of___lwmod 0034                    ___ftpack 0646          __end_of__stringtab 0810  
              ??_pinManager 0074                    ___lwtoft 0D09                  sprintf@val 00A6  
          __size_of_isdigit 000E             ___lwdiv@divisor 0020             ___lwdiv@counter 0024  
                  __ptext10 0CCC                    __ptext11 0D6E                    __ptext20 0CE9  
                  __ptext12 07CB                    __ptext21 0CBF                    __ptext13 0E1E  
                  __ptext30 0CDA                    __ptext22 0F1E                    __ptext14 0EDD  
                  __ptext31 0D21                    __ptext23 05D7                    __ptext15 0DE7  
                  __ptext32 0D91                    __ptext24 0E9C                    __ptext16 0FAE  
                  __ptext25 0715                    __ptext17 0F63                    __ptext26 0CA5  
                  __ptext18 0DBC                    __ptext27 06B4                    __ptext19 0E5C  
                  __ptext28 0D54                    __ptext29 0D3A           __CFG_BOR4V$BOR40V 0000  
          __size_of_sprintf 01A0               __size_of_main 000B                _temp_Display 0775  
        __end_of_pinManager 0DE7                  _INTCONbits 000B                    init_ram0 0CFC  
                  isdigit@c 0075          Lcd_Write_Char@temp 0020                    intlevel1 0000  
                 sprintf@ap 00A3                   sprintf@sp 00A8    __size_of_Oscillator_Init 0005  
          ___lwmod@dividend 0029            ___lldiv@dividend 0030                   stringcode 080A  
        Lcd_Set_Cursor@temp 0027    __end_of_temp_Measurement 03BE                 _temperature 006F  
                  sprintf@c 00AB                    sprintf@f 006B            ___lldiv@quotient 0034  
           ___lwmod@divisor 0027            _segment_Variable 00BB             ___lwmod@counter 0076  
                  stringdir 080A                    stringtab 0800           Lcd_Set_Cursor@raw 0024  
                Lcd_write@i 0028                  _SSPCONbits 0014  
